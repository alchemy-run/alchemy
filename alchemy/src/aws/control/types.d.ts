// Generated by scripts/generate-aws-control-types.ts
// DO NOT EDIT THIS FILE DIRECTLY

import type { Resource } from "../../resource.js";

declare namespace AWS {
  namespace ACMPCA {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html
     */
    interface CertificateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-templatearn
       */
      TemplateArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-certificateauthorityarn
       */
      CertificateAuthorityArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-validity
       */
      Validity: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-certificatesigningrequest
       */
      CertificateSigningRequest: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-signingalgorithm
       */
      SigningAlgorithm: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-apipassthrough
       */
      ApiPassthrough?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificate.html#cfn-acmpca-certificate-validitynotbefore
       */
      ValidityNotBefore?: {};
    }
    
    
    interface Certificate extends Resource<"AWS::ACMPCA::Certificate">, CertificateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Certificate(id: string, props: CertificateProps): Promise<Certificate>;
  }
  namespace ACMPCA {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html
     */
    interface CertificateAuthorityProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-csrextensions
       */
      CsrExtensions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-revocationconfiguration
       */
      RevocationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-usagemode
       */
      UsageMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-signingalgorithm
       */
      SigningAlgorithm: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-keystoragesecuritystandard
       */
      KeyStorageSecurityStandard?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-subject
       */
      Subject: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthority.html#cfn-acmpca-certificateauthority-keyalgorithm
       */
      KeyAlgorithm: string;
    }
    
    
    interface CertificateAuthority extends Resource<"AWS::ACMPCA::CertificateAuthority">, CertificateAuthorityProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CertificateAuthority(id: string, props: CertificateAuthorityProps): Promise<CertificateAuthority>;
  }
  namespace ACMPCA {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html
     */
    interface CertificateAuthorityActivationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-certificateauthorityarn
       */
      CertificateAuthorityArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-certificatechain
       */
      CertificateChain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-certificate
       */
      Certificate: string;
    }
    
    
    interface CertificateAuthorityActivation extends Resource<"AWS::ACMPCA::CertificateAuthorityActivation">, CertificateAuthorityActivationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CertificateAuthorityActivation(id: string, props: CertificateAuthorityActivationProps): Promise<CertificateAuthorityActivation>;
  }
  namespace ACMPCA {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html
     */
    interface PermissionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-certificateauthorityarn
       */
      CertificateAuthorityArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-actions
       */
      Actions: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-sourceaccount
       */
      SourceAccount?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-principal
       */
      Principal: string;
    }
    
    
    interface Permission extends Resource<"AWS::ACMPCA::Permission">, PermissionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Permission(id: string, props: PermissionProps): Promise<Permission>;
  }
  namespace APS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-rulegroupsnamespace.html
     */
    interface RuleGroupsNamespaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-rulegroupsnamespace.html#cfn-aps-rulegroupsnamespace-data
       */
      Data: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-rulegroupsnamespace.html#cfn-aps-rulegroupsnamespace-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-rulegroupsnamespace.html#cfn-aps-rulegroupsnamespace-workspace
       */
      Workspace: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-rulegroupsnamespace.html#cfn-aps-rulegroupsnamespace-name
       */
      Name: string;
    }
    
    
    interface RuleGroupsNamespace extends Resource<"AWS::APS::RuleGroupsNamespace">, RuleGroupsNamespaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RuleGroupsNamespace(id: string, props: RuleGroupsNamespaceProps): Promise<RuleGroupsNamespace>;
  }
  namespace APS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-scraper.html
     */
    interface ScraperProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-scraper.html#cfn-aps-scraper-scrapeconfiguration
       */
      ScrapeConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-scraper.html#cfn-aps-scraper-destination
       */
      Destination: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-scraper.html#cfn-aps-scraper-alias
       */
      Alias?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-scraper.html#cfn-aps-scraper-roleconfiguration
       */
      RoleConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-scraper.html#cfn-aps-scraper-source
       */
      Source: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-scraper.html#cfn-aps-scraper-tags
       */
      Tags?: {}[];
    }
    
    
    interface Scraper extends Resource<"AWS::APS::Scraper">, ScraperProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Scraper(id: string, props: ScraperProps): Promise<Scraper>;
  }
  namespace APS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-workspace.html
     */
    interface WorkspaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-workspace.html#cfn-aps-workspace-kmskeyarn
       */
      KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-workspace.html#cfn-aps-workspace-alias
       */
      Alias?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-workspace.html#cfn-aps-workspace-loggingconfiguration
       */
      LoggingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-workspace.html#cfn-aps-workspace-workspaceconfiguration
       */
      WorkspaceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-workspace.html#cfn-aps-workspace-alertmanagerdefinition
       */
      AlertManagerDefinition?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-aps-workspace.html#cfn-aps-workspace-tags
       */
      Tags?: {}[];
    }
    
    
    interface Workspace extends Resource<"AWS::APS::Workspace">, WorkspaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Workspace(id: string, props: WorkspaceProps): Promise<Workspace>;
  }
  namespace ARCZonalShift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-arczonalshift-autoshiftobservernotificationstatus.html
     */
    interface AutoshiftObserverNotificationStatusProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-arczonalshift-autoshiftobservernotificationstatus.html#cfn-arczonalshift-autoshiftobservernotificationstatus-status
       */
      Status: string;
    }
    
    
    interface AutoshiftObserverNotificationStatus extends Resource<"AWS::ARCZonalShift::AutoshiftObserverNotificationStatus">, AutoshiftObserverNotificationStatusProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AutoshiftObserverNotificationStatus(id: string, props: AutoshiftObserverNotificationStatusProps): Promise<AutoshiftObserverNotificationStatus>;
  }
  namespace ARCZonalShift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-arczonalshift-zonalautoshiftconfiguration.html
     */
    interface ZonalAutoshiftConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-arczonalshift-zonalautoshiftconfiguration.html#cfn-arczonalshift-zonalautoshiftconfiguration-resourceidentifier
       */
      ResourceIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-arczonalshift-zonalautoshiftconfiguration.html#cfn-arczonalshift-zonalautoshiftconfiguration-zonalautoshiftstatus
       */
      ZonalAutoshiftStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-arczonalshift-zonalautoshiftconfiguration.html#cfn-arczonalshift-zonalautoshiftconfiguration-practicerunconfiguration
       */
      PracticeRunConfiguration?: {};
    }
    
    
    interface ZonalAutoshiftConfiguration extends Resource<"AWS::ARCZonalShift::ZonalAutoshiftConfiguration">, ZonalAutoshiftConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ZonalAutoshiftConfiguration(id: string, props: ZonalAutoshiftConfigurationProps): Promise<ZonalAutoshiftConfiguration>;
  }
  namespace AccessAnalyzer {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-accessanalyzer-analyzer.html
     */
    interface AnalyzerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-accessanalyzer-analyzer.html#cfn-accessanalyzer-analyzer-archiverules
       */
      ArchiveRules?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-accessanalyzer-analyzer.html#cfn-accessanalyzer-analyzer-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-accessanalyzer-analyzer.html#cfn-accessanalyzer-analyzer-analyzername
       */
      AnalyzerName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-accessanalyzer-analyzer.html#cfn-accessanalyzer-analyzer-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-accessanalyzer-analyzer.html#cfn-accessanalyzer-analyzer-analyzerconfiguration
       */
      AnalyzerConfiguration?: {};
    }
    
    
    interface Analyzer extends Resource<"AWS::AccessAnalyzer::Analyzer">, AnalyzerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Analyzer(id: string, props: AnalyzerProps): Promise<Analyzer>;
  }
  namespace AmazonMQ {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html
     */
    interface BrokerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-securitygroups
       */
      SecurityGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-datareplicationprimarybrokerarn
       */
      DataReplicationPrimaryBrokerArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-storagetype
       */
      StorageType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-configuration
       */
      Configuration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-authenticationstrategy
       */
      AuthenticationStrategy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-maintenancewindowstarttime
       */
      MaintenanceWindowStartTime?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-hostinstancetype
       */
      HostInstanceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-autominorversionupgrade
       */
      AutoMinorVersionUpgrade?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-users
       */
      Users: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-logs
       */
      Logs?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-subnetids
       */
      SubnetIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-datareplicationmode
       */
      DataReplicationMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-brokername
       */
      BrokerName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-ldapservermetadata
       */
      LdapServerMetadata?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-deploymentmode
       */
      DeploymentMode: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-enginetype
       */
      EngineType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-publiclyaccessible
       */
      PubliclyAccessible: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-encryptionoptions
       */
      EncryptionOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-tags
       */
      Tags?: {}[];
    }
    
    
    interface Broker extends Resource<"AWS::AmazonMQ::Broker">, BrokerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Broker(id: string, props: BrokerProps): Promise<Broker>;
  }
  namespace AmazonMQ {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html
     */
    interface ConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html#cfn-amazonmq-configuration-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html#cfn-amazonmq-configuration-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html#cfn-amazonmq-configuration-authenticationstrategy
       */
      AuthenticationStrategy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html#cfn-amazonmq-configuration-enginetype
       */
      EngineType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html#cfn-amazonmq-configuration-data
       */
      Data?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html#cfn-amazonmq-configuration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configuration.html#cfn-amazonmq-configuration-name
       */
      Name: string;
    }
    
    
    interface Configuration extends Resource<"AWS::AmazonMQ::Configuration">, ConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Configuration(id: string, props: ConfigurationProps): Promise<Configuration>;
  }
  namespace AmazonMQ {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configurationassociation.html
     */
    interface ConfigurationAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configurationassociation.html#cfn-amazonmq-configurationassociation-broker
       */
      Broker: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-configurationassociation.html#cfn-amazonmq-configurationassociation-configuration
       */
      Configuration: {};
    }
    
    
    interface ConfigurationAssociation extends Resource<"AWS::AmazonMQ::ConfigurationAssociation">, ConfigurationAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConfigurationAssociation(id: string, props: ConfigurationAssociationProps): Promise<ConfigurationAssociation>;
  }
  namespace Amplify {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html
     */
    interface AppProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-autobranchcreationconfig
       */
      AutoBranchCreationConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-oauthtoken
       */
      OauthToken?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-platform
       */
      Platform?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-enablebranchautodeletion
       */
      EnableBranchAutoDeletion?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-computerolearn
       */
      ComputeRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-repository
       */
      Repository?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-environmentvariables
       */
      EnvironmentVariables?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-accesstoken
       */
      AccessToken?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-buildspec
       */
      BuildSpec?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-customrules
       */
      CustomRules?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-basicauthconfig
       */
      BasicAuthConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-cacheconfig
       */
      CacheConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-customheaders
       */
      CustomHeaders?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-app.html#cfn-amplify-app-iamservicerole
       */
      IAMServiceRole?: string;
    }
    
    
    interface App extends Resource<"AWS::Amplify::App">, AppProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function App(id: string, props: AppProps): Promise<App>;
  }
  namespace Amplify {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html
     */
    interface BranchProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-enableperformancemode
       */
      EnablePerformanceMode?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-computerolearn
       */
      ComputeRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-backend
       */
      Backend?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-environmentvariables
       */
      EnvironmentVariables?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-appid
       */
      AppId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-pullrequestenvironmentname
       */
      PullRequestEnvironmentName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-enablepullrequestpreview
       */
      EnablePullRequestPreview?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-enableskewprotection
       */
      EnableSkewProtection?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-enableautobuild
       */
      EnableAutoBuild?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-buildspec
       */
      BuildSpec?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-stage
       */
      Stage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-branchname
       */
      BranchName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-basicauthconfig
       */
      BasicAuthConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-framework
       */
      Framework?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-tags
       */
      Tags?: {}[];
    }
    
    
    interface Branch extends Resource<"AWS::Amplify::Branch">, BranchProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Branch(id: string, props: BranchProps): Promise<Branch>;
  }
  namespace Amplify {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-domain.html
     */
    interface DomainProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-domain.html#cfn-amplify-domain-subdomainsettings
       */
      SubDomainSettings: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-domain.html#cfn-amplify-domain-appid
       */
      AppId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-domain.html#cfn-amplify-domain-autosubdomainiamrole
       */
      AutoSubDomainIAMRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-domain.html#cfn-amplify-domain-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-domain.html#cfn-amplify-domain-certificatesettings
       */
      CertificateSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-domain.html#cfn-amplify-domain-enableautosubdomain
       */
      EnableAutoSubDomain?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-domain.html#cfn-amplify-domain-autosubdomaincreationpatterns
       */
      AutoSubDomainCreationPatterns?: string[];
    }
    
    
    interface Domain extends Resource<"AWS::Amplify::Domain">, DomainProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Domain(id: string, props: DomainProps): Promise<Domain>;
  }
  namespace AmplifyUIBuilder {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html
     */
    interface ComponentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html#cfn-amplifyuibuilder-component-componenttype
       */
      ComponentType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html#cfn-amplifyuibuilder-component-schemaversion
       */
      SchemaVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html#cfn-amplifyuibuilder-component-environmentname
       */
      EnvironmentName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html#cfn-amplifyuibuilder-component-bindingproperties
       */
      BindingProperties?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html#cfn-amplifyuibuilder-component-sourceid
       */
      SourceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html#cfn-amplifyuibuilder-component-properties
       */
      Properties?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html#cfn-amplifyuibuilder-component-collectionproperties
       */
      CollectionProperties?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html#cfn-amplifyuibuilder-component-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html#cfn-amplifyuibuilder-component-variants
       */
      Variants?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html#cfn-amplifyuibuilder-component-appid
       */
      AppId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html#cfn-amplifyuibuilder-component-events
       */
      Events?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html#cfn-amplifyuibuilder-component-overrides
       */
      Overrides?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html#cfn-amplifyuibuilder-component-children
       */
      Children?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-component.html#cfn-amplifyuibuilder-component-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Component extends Resource<"AWS::AmplifyUIBuilder::Component">, ComponentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Component(id: string, props: ComponentProps): Promise<Component>;
  }
  namespace AmplifyUIBuilder {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-form.html
     */
    interface FormProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-form.html#cfn-amplifyuibuilder-form-formactiontype
       */
      FormActionType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-form.html#cfn-amplifyuibuilder-form-cta
       */
      Cta?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-form.html#cfn-amplifyuibuilder-form-fields
       */
      Fields?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-form.html#cfn-amplifyuibuilder-form-schemaversion
       */
      SchemaVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-form.html#cfn-amplifyuibuilder-form-appid
       */
      AppId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-form.html#cfn-amplifyuibuilder-form-environmentname
       */
      EnvironmentName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-form.html#cfn-amplifyuibuilder-form-labeldecorator
       */
      LabelDecorator?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-form.html#cfn-amplifyuibuilder-form-sectionalelements
       */
      SectionalElements?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-form.html#cfn-amplifyuibuilder-form-datatype
       */
      DataType?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-form.html#cfn-amplifyuibuilder-form-style
       */
      Style?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-form.html#cfn-amplifyuibuilder-form-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-form.html#cfn-amplifyuibuilder-form-name
       */
      Name?: string;
    }
    
    
    interface Form extends Resource<"AWS::AmplifyUIBuilder::Form">, FormProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Form(id: string, props: FormProps): Promise<Form>;
  }
  namespace AmplifyUIBuilder {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-theme.html
     */
    interface ThemeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-theme.html#cfn-amplifyuibuilder-theme-appid
       */
      AppId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-theme.html#cfn-amplifyuibuilder-theme-environmentname
       */
      EnvironmentName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-theme.html#cfn-amplifyuibuilder-theme-values
       */
      Values?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-theme.html#cfn-amplifyuibuilder-theme-overrides
       */
      Overrides?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-theme.html#cfn-amplifyuibuilder-theme-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplifyuibuilder-theme.html#cfn-amplifyuibuilder-theme-name
       */
      Name?: string;
    }
    
    
    interface Theme extends Resource<"AWS::AmplifyUIBuilder::Theme">, ThemeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Theme(id: string, props: ThemeProps): Promise<Theme>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-account.html
     */
    interface AccountProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-account.html#cfn-apigateway-account-cloudwatchrolearn
       */
      CloudWatchRoleArn?: string;
    }
    
    
    interface Account extends Resource<"AWS::ApiGateway::Account">, AccountProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Account(id: string, props: AccountProps): Promise<Account>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html
     */
    interface ApiKeyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-stagekeys
       */
      StageKeys?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-value
       */
      Value?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-customerid
       */
      CustomerId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-generatedistinctid
       */
      GenerateDistinctId?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-apikey.html#cfn-apigateway-apikey-name
       */
      Name?: string;
    }
    
    
    interface ApiKey extends Resource<"AWS::ApiGateway::ApiKey">, ApiKeyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApiKey(id: string, props: ApiKeyProps): Promise<ApiKey>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html
     */
    interface AuthorizerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-providerarns
       */
      ProviderARNs?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-authorizercredentials
       */
      AuthorizerCredentials?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-identityvalidationexpression
       */
      IdentityValidationExpression?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-authorizeruri
       */
      AuthorizerUri?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-authorizerresultttlinseconds
       */
      AuthorizerResultTtlInSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-restapiid
       */
      RestApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-identitysource
       */
      IdentitySource?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-authtype
       */
      AuthType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-name
       */
      Name: string;
    }
    
    
    interface Authorizer extends Resource<"AWS::ApiGateway::Authorizer">, AuthorizerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Authorizer(id: string, props: AuthorizerProps): Promise<Authorizer>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html
     */
    interface BasePathMappingProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html#cfn-apigateway-basepathmapping-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html#cfn-apigateway-basepathmapping-restapiid
       */
      RestApiId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html#cfn-apigateway-basepathmapping-stage
       */
      Stage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html#cfn-apigateway-basepathmapping-basepath
       */
      BasePath?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmapping.html#cfn-apigateway-basepathmapping-id
       */
      Id?: string;
    }
    
    
    interface BasePathMapping extends Resource<"AWS::ApiGateway::BasePathMapping">, BasePathMappingProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BasePathMapping(id: string, props: BasePathMappingProps): Promise<BasePathMapping>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmappingv2.html
     */
    interface BasePathMappingV2Props {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmappingv2.html#cfn-apigateway-basepathmappingv2-domainnamearn
       */
      DomainNameArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmappingv2.html#cfn-apigateway-basepathmappingv2-restapiid
       */
      RestApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmappingv2.html#cfn-apigateway-basepathmappingv2-stage
       */
      Stage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-basepathmappingv2.html#cfn-apigateway-basepathmappingv2-basepath
       */
      BasePath?: string;
    }
    
    
    interface BasePathMappingV2 extends Resource<"AWS::ApiGateway::BasePathMappingV2">, BasePathMappingV2Props {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BasePathMappingV2(id: string, props: BasePathMappingV2Props): Promise<BasePathMappingV2>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-clientcertificate.html
     */
    interface ClientCertificateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-clientcertificate.html#cfn-apigateway-clientcertificate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-clientcertificate.html#cfn-apigateway-clientcertificate-tags
       */
      Tags?: {}[];
    }
    
    
    interface ClientCertificate extends Resource<"AWS::ApiGateway::ClientCertificate">, ClientCertificateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ClientCertificate(id: string, props: ClientCertificateProps): Promise<ClientCertificate>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html
     */
    interface DeploymentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html#cfn-apigateway-deployment-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html#cfn-apigateway-deployment-stagedescription
       */
      StageDescription?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html#cfn-apigateway-deployment-stagename
       */
      StageName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html#cfn-apigateway-deployment-restapiid
       */
      RestApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-deployment.html#cfn-apigateway-deployment-deploymentcanarysettings
       */
      DeploymentCanarySettings?: {};
    }
    
    
    interface Deployment extends Resource<"AWS::ApiGateway::Deployment">, DeploymentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Deployment(id: string, props: DeploymentProps): Promise<Deployment>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationpart.html
     */
    interface DocumentationPartProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationpart.html#cfn-apigateway-documentationpart-restapiid
       */
      RestApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationpart.html#cfn-apigateway-documentationpart-properties
       */
      Properties: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationpart.html#cfn-apigateway-documentationpart-location
       */
      Location: {};
    }
    
    
    interface DocumentationPart extends Resource<"AWS::ApiGateway::DocumentationPart">, DocumentationPartProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DocumentationPart(id: string, props: DocumentationPartProps): Promise<DocumentationPart>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationversion.html
     */
    interface DocumentationVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationversion.html#cfn-apigateway-documentationversion-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationversion.html#cfn-apigateway-documentationversion-documentationversion
       */
      DocumentationVersion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-documentationversion.html#cfn-apigateway-documentationversion-restapiid
       */
      RestApiId: string;
    }
    
    
    interface DocumentationVersion extends Resource<"AWS::ApiGateway::DocumentationVersion">, DocumentationVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DocumentationVersion(id: string, props: DocumentationVersionProps): Promise<DocumentationVersion>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html
     */
    interface DomainNameProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html#cfn-apigateway-domainname-mutualtlsauthentication
       */
      MutualTlsAuthentication?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html#cfn-apigateway-domainname-ownershipverificationcertificatearn
       */
      OwnershipVerificationCertificateArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html#cfn-apigateway-domainname-domainname
       */
      DomainName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html#cfn-apigateway-domainname-securitypolicy
       */
      SecurityPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html#cfn-apigateway-domainname-endpointconfiguration
       */
      EndpointConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html#cfn-apigateway-domainname-regionalcertificatearn
       */
      RegionalCertificateArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html#cfn-apigateway-domainname-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainname.html#cfn-apigateway-domainname-certificatearn
       */
      CertificateArn?: string;
    }
    
    
    interface DomainName extends Resource<"AWS::ApiGateway::DomainName">, DomainNameProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DomainName(id: string, props: DomainNameProps): Promise<DomainName>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnameaccessassociation.html
     */
    interface DomainNameAccessAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnameaccessassociation.html#cfn-apigateway-domainnameaccessassociation-domainnamearn
       */
      DomainNameArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnameaccessassociation.html#cfn-apigateway-domainnameaccessassociation-accessassociationsource
       */
      AccessAssociationSource: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnameaccessassociation.html#cfn-apigateway-domainnameaccessassociation-accessassociationsourcetype
       */
      AccessAssociationSourceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnameaccessassociation.html#cfn-apigateway-domainnameaccessassociation-tags
       */
      Tags?: {}[];
    }
    
    
    interface DomainNameAccessAssociation extends Resource<"AWS::ApiGateway::DomainNameAccessAssociation">, DomainNameAccessAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DomainNameAccessAssociation(id: string, props: DomainNameAccessAssociationProps): Promise<DomainNameAccessAssociation>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html
     */
    interface DomainNameV2Props {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html#cfn-apigateway-domainnamev2-policy
       */
      Policy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html#cfn-apigateway-domainnamev2-domainname
       */
      DomainName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html#cfn-apigateway-domainnamev2-securitypolicy
       */
      SecurityPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html#cfn-apigateway-domainnamev2-endpointconfiguration
       */
      EndpointConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html#cfn-apigateway-domainnamev2-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html#cfn-apigateway-domainnamev2-certificatearn
       */
      CertificateArn?: string;
    }
    
    
    interface DomainNameV2 extends Resource<"AWS::ApiGateway::DomainNameV2">, DomainNameV2Props {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DomainNameV2(id: string, props: DomainNameV2Props): Promise<DomainNameV2>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html
     */
    interface GatewayResponseProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html#cfn-apigateway-gatewayresponse-responsetemplates
       */
      ResponseTemplates?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html#cfn-apigateway-gatewayresponse-responseparameters
       */
      ResponseParameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html#cfn-apigateway-gatewayresponse-restapiid
       */
      RestApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html#cfn-apigateway-gatewayresponse-statuscode
       */
      StatusCode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-gatewayresponse.html#cfn-apigateway-gatewayresponse-responsetype
       */
      ResponseType: string;
    }
    
    
    interface GatewayResponse extends Resource<"AWS::ApiGateway::GatewayResponse">, GatewayResponseProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GatewayResponse(id: string, props: GatewayResponseProps): Promise<GatewayResponse>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html
     */
    interface MethodProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-integration
       */
      Integration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-operationname
       */
      OperationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-requestmodels
       */
      RequestModels?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-restapiid
       */
      RestApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-authorizationscopes
       */
      AuthorizationScopes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-requestvalidatorid
       */
      RequestValidatorId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-requestparameters
       */
      RequestParameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-methodresponses
       */
      MethodResponses?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-authorizerid
       */
      AuthorizerId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-resourceid
       */
      ResourceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-apikeyrequired
       */
      ApiKeyRequired?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-authorizationtype
       */
      AuthorizationType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html#cfn-apigateway-method-httpmethod
       */
      HttpMethod: string;
    }
    
    
    interface Method extends Resource<"AWS::ApiGateway::Method">, MethodProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Method(id: string, props: MethodProps): Promise<Method>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html
     */
    interface ModelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html#cfn-apigateway-model-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html#cfn-apigateway-model-contenttype
       */
      ContentType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html#cfn-apigateway-model-schema
       */
      Schema?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html#cfn-apigateway-model-restapiid
       */
      RestApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html#cfn-apigateway-model-name
       */
      Name?: string;
    }
    
    
    interface Model extends Resource<"AWS::ApiGateway::Model">, ModelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Model(id: string, props: ModelProps): Promise<Model>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-requestvalidator.html
     */
    interface RequestValidatorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-requestvalidator.html#cfn-apigateway-requestvalidator-validaterequestparameters
       */
      ValidateRequestParameters?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-requestvalidator.html#cfn-apigateway-requestvalidator-restapiid
       */
      RestApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-requestvalidator.html#cfn-apigateway-requestvalidator-validaterequestbody
       */
      ValidateRequestBody?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-requestvalidator.html#cfn-apigateway-requestvalidator-name
       */
      Name?: string;
    }
    
    
    interface RequestValidator extends Resource<"AWS::ApiGateway::RequestValidator">, RequestValidatorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RequestValidator(id: string, props: RequestValidatorProps): Promise<RequestValidator>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-resource.html
     */
    interface ResourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-resource.html#cfn-apigateway-resource-parentid
       */
      ParentId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-resource.html#cfn-apigateway-resource-pathpart
       */
      PathPart: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-resource.html#cfn-apigateway-resource-restapiid
       */
      RestApiId: string;
    }
    
    
    interface Resource extends Resource<"AWS::ApiGateway::Resource">, ResourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Resource(id: string, props: ResourceProps): Promise<Resource>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html
     */
    interface RestApiProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-policy
       */
      Policy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-bodys3location
       */
      BodyS3Location?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-minimumcompressionsize
       */
      MinimumCompressionSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-parameters
       */
      Parameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-clonefrom
       */
      CloneFrom?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-mode
       */
      Mode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-disableexecuteapiendpoint
       */
      DisableExecuteApiEndpoint?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-failonwarnings
       */
      FailOnWarnings?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-binarymediatypes
       */
      BinaryMediaTypes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-apikeysourcetype
       */
      ApiKeySourceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-endpointconfiguration
       */
      EndpointConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-body
       */
      Body?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-restapi.html#cfn-apigateway-restapi-tags
       */
      Tags?: {}[];
    }
    
    
    interface RestApi extends Resource<"AWS::ApiGateway::RestApi">, RestApiProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RestApi(id: string, props: RestApiProps): Promise<RestApi>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html
     */
    interface StageProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-deploymentid
       */
      DeploymentId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-stagename
       */
      StageName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-restapiid
       */
      RestApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-canarysetting
       */
      CanarySetting?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-clientcertificateid
       */
      ClientCertificateId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-variables
       */
      Variables?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-documentationversion
       */
      DocumentationVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-tracingenabled
       */
      TracingEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-methodsettings
       */
      MethodSettings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-accesslogsetting
       */
      AccessLogSetting?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-cacheclustersize
       */
      CacheClusterSize?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-stage.html#cfn-apigateway-stage-cacheclusterenabled
       */
      CacheClusterEnabled?: boolean;
    }
    
    
    interface Stage extends Resource<"AWS::ApiGateway::Stage">, StageProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Stage(id: string, props: StageProps): Promise<Stage>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html
     */
    interface UsagePlanProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html#cfn-apigateway-usageplan-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html#cfn-apigateway-usageplan-quota
       */
      Quota?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html#cfn-apigateway-usageplan-apistages
       */
      ApiStages?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html#cfn-apigateway-usageplan-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html#cfn-apigateway-usageplan-throttle
       */
      Throttle?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplan.html#cfn-apigateway-usageplan-usageplanname
       */
      UsagePlanName?: string;
    }
    
    
    interface UsagePlan extends Resource<"AWS::ApiGateway::UsagePlan">, UsagePlanProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UsagePlan(id: string, props: UsagePlanProps): Promise<UsagePlan>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplankey.html
     */
    interface UsagePlanKeyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplankey.html#cfn-apigateway-usageplankey-keytype
       */
      KeyType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplankey.html#cfn-apigateway-usageplankey-usageplanid
       */
      UsagePlanId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-usageplankey.html#cfn-apigateway-usageplankey-keyid
       */
      KeyId: string;
    }
    
    
    interface UsagePlanKey extends Resource<"AWS::ApiGateway::UsagePlanKey">, UsagePlanKeyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UsagePlanKey(id: string, props: UsagePlanKeyProps): Promise<UsagePlanKey>;
  }
  namespace ApiGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-vpclink.html
     */
    interface VpcLinkProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-vpclink.html#cfn-apigateway-vpclink-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-vpclink.html#cfn-apigateway-vpclink-targetarns
       */
      TargetArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-vpclink.html#cfn-apigateway-vpclink-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-vpclink.html#cfn-apigateway-vpclink-name
       */
      Name: string;
    }
    
    
    interface VpcLink extends Resource<"AWS::ApiGateway::VpcLink">, VpcLinkProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VpcLink(id: string, props: VpcLinkProps): Promise<VpcLink>;
  }
  namespace ApiGatewayV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html
     */
    interface ApiProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-ipaddresstype
       */
      IpAddressType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-routeselectionexpression
       */
      RouteSelectionExpression?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-bodys3location
       */
      BodyS3Location?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-basepath
       */
      BasePath?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-failonwarnings
       */
      FailOnWarnings?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-disableexecuteapiendpoint
       */
      DisableExecuteApiEndpoint?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-disableschemavalidation
       */
      DisableSchemaValidation?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-target
       */
      Target?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-credentialsarn
       */
      CredentialsArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-corsconfiguration
       */
      CorsConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-version
       */
      Version?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-protocoltype
       */
      ProtocolType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-routekey
       */
      RouteKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-body
       */
      Body?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-api.html#cfn-apigatewayv2-api-apikeyselectionexpression
       */
      ApiKeySelectionExpression?: string;
    }
    
    
    interface Api extends Resource<"AWS::ApiGatewayV2::Api">, ApiProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Api(id: string, props: ApiProps): Promise<Api>;
  }
  namespace ApiGatewayV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apigatewaymanagedoverrides.html
     */
    interface ApiGatewayManagedOverridesProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apigatewaymanagedoverrides.html#cfn-apigatewayv2-apigatewaymanagedoverrides-integration
       */
      Integration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apigatewaymanagedoverrides.html#cfn-apigatewayv2-apigatewaymanagedoverrides-stage
       */
      Stage?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apigatewaymanagedoverrides.html#cfn-apigatewayv2-apigatewaymanagedoverrides-apiid
       */
      ApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apigatewaymanagedoverrides.html#cfn-apigatewayv2-apigatewaymanagedoverrides-route
       */
      Route?: {};
    }
    
    
    interface ApiGatewayManagedOverrides extends Resource<"AWS::ApiGatewayV2::ApiGatewayManagedOverrides">, ApiGatewayManagedOverridesProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApiGatewayManagedOverrides(id: string, props: ApiGatewayManagedOverridesProps): Promise<ApiGatewayManagedOverrides>;
  }
  namespace ApiGatewayV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apimapping.html
     */
    interface ApiMappingProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apimapping.html#cfn-apigatewayv2-apimapping-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apimapping.html#cfn-apigatewayv2-apimapping-stage
       */
      Stage: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apimapping.html#cfn-apigatewayv2-apimapping-apimappingkey
       */
      ApiMappingKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-apimapping.html#cfn-apigatewayv2-apimapping-apiid
       */
      ApiId: string;
    }
    
    
    interface ApiMapping extends Resource<"AWS::ApiGatewayV2::ApiMapping">, ApiMappingProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApiMapping(id: string, props: ApiMappingProps): Promise<ApiMapping>;
  }
  namespace ApiGatewayV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html
     */
    interface AuthorizerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-identityvalidationexpression
       */
      IdentityValidationExpression?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizeruri
       */
      AuthorizerUri?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizercredentialsarn
       */
      AuthorizerCredentialsArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizertype
       */
      AuthorizerType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-jwtconfiguration
       */
      JwtConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizerresultttlinseconds
       */
      AuthorizerResultTtlInSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-identitysource
       */
      IdentitySource?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizerpayloadformatversion
       */
      AuthorizerPayloadFormatVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-enablesimpleresponses
       */
      EnableSimpleResponses?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-apiid
       */
      ApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-name
       */
      Name: string;
    }
    
    
    interface Authorizer extends Resource<"AWS::ApiGatewayV2::Authorizer">, AuthorizerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Authorizer(id: string, props: AuthorizerProps): Promise<Authorizer>;
  }
  namespace ApiGatewayV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-deployment.html
     */
    interface DeploymentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-deployment.html#cfn-apigatewayv2-deployment-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-deployment.html#cfn-apigatewayv2-deployment-stagename
       */
      StageName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-deployment.html#cfn-apigatewayv2-deployment-apiid
       */
      ApiId: string;
    }
    
    
    interface Deployment extends Resource<"AWS::ApiGatewayV2::Deployment">, DeploymentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Deployment(id: string, props: DeploymentProps): Promise<Deployment>;
  }
  namespace ApiGatewayV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-domainname.html
     */
    interface DomainNameProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-domainname.html#cfn-apigatewayv2-domainname-mutualtlsauthentication
       */
      MutualTlsAuthentication?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-domainname.html#cfn-apigatewayv2-domainname-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-domainname.html#cfn-apigatewayv2-domainname-domainnameconfigurations
       */
      DomainNameConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-domainname.html#cfn-apigatewayv2-domainname-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface DomainName extends Resource<"AWS::ApiGatewayV2::DomainName">, DomainNameProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DomainName(id: string, props: DomainNameProps): Promise<DomainName>;
  }
  namespace ApiGatewayV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html
     */
    interface IntegrationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-templateselectionexpression
       */
      TemplateSelectionExpression?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-connectiontype
       */
      ConnectionType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-responseparameters
       */
      ResponseParameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-integrationmethod
       */
      IntegrationMethod?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-passthroughbehavior
       */
      PassthroughBehavior?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-requestparameters
       */
      RequestParameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-connectionid
       */
      ConnectionId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-integrationuri
       */
      IntegrationUri?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-payloadformatversion
       */
      PayloadFormatVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-credentialsarn
       */
      CredentialsArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-requesttemplates
       */
      RequestTemplates?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-timeoutinmillis
       */
      TimeoutInMillis?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-tlsconfig
       */
      TlsConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-contenthandlingstrategy
       */
      ContentHandlingStrategy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-integrationsubtype
       */
      IntegrationSubtype?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-apiid
       */
      ApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integration.html#cfn-apigatewayv2-integration-integrationtype
       */
      IntegrationType: string;
    }
    
    
    interface Integration extends Resource<"AWS::ApiGatewayV2::Integration">, IntegrationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Integration(id: string, props: IntegrationProps): Promise<Integration>;
  }
  namespace ApiGatewayV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html
     */
    interface IntegrationResponseProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-responsetemplates
       */
      ResponseTemplates?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-templateselectionexpression
       */
      TemplateSelectionExpression?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-responseparameters
       */
      ResponseParameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-contenthandlingstrategy
       */
      ContentHandlingStrategy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-integrationid
       */
      IntegrationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-integrationresponsekey
       */
      IntegrationResponseKey: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-apiid
       */
      ApiId: string;
    }
    
    
    interface IntegrationResponse extends Resource<"AWS::ApiGatewayV2::IntegrationResponse">, IntegrationResponseProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IntegrationResponse(id: string, props: IntegrationResponseProps): Promise<IntegrationResponse>;
  }
  namespace ApiGatewayV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-model.html
     */
    interface ModelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-model.html#cfn-apigatewayv2-model-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-model.html#cfn-apigatewayv2-model-contenttype
       */
      ContentType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-model.html#cfn-apigatewayv2-model-schema
       */
      Schema: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-model.html#cfn-apigatewayv2-model-apiid
       */
      ApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-model.html#cfn-apigatewayv2-model-name
       */
      Name: string;
    }
    
    
    interface Model extends Resource<"AWS::ApiGatewayV2::Model">, ModelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Model(id: string, props: ModelProps): Promise<Model>;
  }
  namespace ApiGatewayV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html
     */
    interface RouteProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-target
       */
      Target?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-routeresponseselectionexpression
       */
      RouteResponseSelectionExpression?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-requestmodels
       */
      RequestModels?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-operationname
       */
      OperationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-authorizerid
       */
      AuthorizerId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-authorizationscopes
       */
      AuthorizationScopes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-apikeyrequired
       */
      ApiKeyRequired?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-routekey
       */
      RouteKey: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-authorizationtype
       */
      AuthorizationType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-modelselectionexpression
       */
      ModelSelectionExpression?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-apiid
       */
      ApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-requestparameters
       */
      RequestParameters?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Route extends Resource<"AWS::ApiGatewayV2::Route">, RouteProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Route(id: string, props: RouteProps): Promise<Route>;
  }
  namespace ApiGatewayV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html
     */
    interface RouteResponseProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html#cfn-apigatewayv2-routeresponse-routeresponsekey
       */
      RouteResponseKey: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html#cfn-apigatewayv2-routeresponse-responseparameters
       */
      ResponseParameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html#cfn-apigatewayv2-routeresponse-routeid
       */
      RouteId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html#cfn-apigatewayv2-routeresponse-modelselectionexpression
       */
      ModelSelectionExpression?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html#cfn-apigatewayv2-routeresponse-apiid
       */
      ApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html#cfn-apigatewayv2-routeresponse-responsemodels
       */
      ResponseModels?: {
        [k: string]: unknown;
      };
    }
    
    
    interface RouteResponse extends Resource<"AWS::ApiGatewayV2::RouteResponse">, RouteResponseProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RouteResponse(id: string, props: RouteResponseProps): Promise<RouteResponse>;
  }
  namespace ApiGatewayV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html
     */
    interface StageProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html#cfn-apigatewayv2-stage-clientcertificateid
       */
      ClientCertificateId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html#cfn-apigatewayv2-stage-deploymentid
       */
      DeploymentId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html#cfn-apigatewayv2-stage-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html#cfn-apigatewayv2-stage-accesslogsettings
       */
      AccessLogSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html#cfn-apigatewayv2-stage-autodeploy
       */
      AutoDeploy?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html#cfn-apigatewayv2-stage-routesettings
       */
      RouteSettings?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html#cfn-apigatewayv2-stage-stagename
       */
      StageName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html#cfn-apigatewayv2-stage-stagevariables
       */
      StageVariables?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html#cfn-apigatewayv2-stage-accesspolicyid
       */
      AccessPolicyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html#cfn-apigatewayv2-stage-apiid
       */
      ApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html#cfn-apigatewayv2-stage-defaultroutesettings
       */
      DefaultRouteSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-stage.html#cfn-apigatewayv2-stage-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Stage extends Resource<"AWS::ApiGatewayV2::Stage">, StageProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Stage(id: string, props: StageProps): Promise<Stage>;
  }
  namespace ApiGatewayV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-vpclink.html
     */
    interface VpcLinkProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-vpclink.html#cfn-apigatewayv2-vpclink-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-vpclink.html#cfn-apigatewayv2-vpclink-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-vpclink.html#cfn-apigatewayv2-vpclink-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-vpclink.html#cfn-apigatewayv2-vpclink-name
       */
      Name: string;
    }
    
    
    interface VpcLink extends Resource<"AWS::ApiGatewayV2::VpcLink">, VpcLinkProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VpcLink(id: string, props: VpcLinkProps): Promise<VpcLink>;
  }
  namespace AppConfig {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-application.html#cfn-appconfig-application-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-application.html#cfn-appconfig-application-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-application.html#cfn-appconfig-application-name
       */
      Name: string;
    }
    
    
    interface Application extends Resource<"AWS::AppConfig::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace AppConfig {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html
     */
    interface ConfigurationProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html#cfn-appconfig-configurationprofile-locationuri
       */
      LocationUri: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html#cfn-appconfig-configurationprofile-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html#cfn-appconfig-configurationprofile-kmskeyidentifier
       */
      KmsKeyIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html#cfn-appconfig-configurationprofile-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html#cfn-appconfig-configurationprofile-validators
       */
      Validators?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html#cfn-appconfig-configurationprofile-retrievalrolearn
       */
      RetrievalRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html#cfn-appconfig-configurationprofile-deletionprotectioncheck
       */
      DeletionProtectionCheck?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html#cfn-appconfig-configurationprofile-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html#cfn-appconfig-configurationprofile-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-configurationprofile.html#cfn-appconfig-configurationprofile-name
       */
      Name: string;
    }
    
    
    interface ConfigurationProfile extends Resource<"AWS::AppConfig::ConfigurationProfile">, ConfigurationProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConfigurationProfile(id: string, props: ConfigurationProfileProps): Promise<ConfigurationProfile>;
  }
  namespace AppConfig {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html
     */
    interface DeploymentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-deploymentstrategyid
       */
      DeploymentStrategyId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-configurationprofileid
       */
      ConfigurationProfileId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-environmentid
       */
      EnvironmentId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-kmskeyidentifier
       */
      KmsKeyIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-configurationversion
       */
      ConfigurationVersion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-dynamicextensionparameters
       */
      DynamicExtensionParameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-tags
       */
      Tags?: {}[];
    }
    
    
    interface Deployment extends Resource<"AWS::AppConfig::Deployment">, DeploymentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Deployment(id: string, props: DeploymentProps): Promise<Deployment>;
  }
  namespace AppConfig {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deploymentstrategy.html
     */
    interface DeploymentStrategyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deploymentstrategy.html#cfn-appconfig-deploymentstrategy-replicateto
       */
      ReplicateTo: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deploymentstrategy.html#cfn-appconfig-deploymentstrategy-growthtype
       */
      GrowthType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deploymentstrategy.html#cfn-appconfig-deploymentstrategy-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deploymentstrategy.html#cfn-appconfig-deploymentstrategy-deploymentdurationinminutes
       */
      DeploymentDurationInMinutes: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deploymentstrategy.html#cfn-appconfig-deploymentstrategy-growthfactor
       */
      GrowthFactor: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deploymentstrategy.html#cfn-appconfig-deploymentstrategy-finalbaketimeinminutes
       */
      FinalBakeTimeInMinutes?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deploymentstrategy.html#cfn-appconfig-deploymentstrategy-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deploymentstrategy.html#cfn-appconfig-deploymentstrategy-name
       */
      Name: string;
    }
    
    
    interface DeploymentStrategy extends Resource<"AWS::AppConfig::DeploymentStrategy">, DeploymentStrategyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DeploymentStrategy(id: string, props: DeploymentStrategyProps): Promise<DeploymentStrategy>;
  }
  namespace AppConfig {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-environment.html
     */
    interface EnvironmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-environment.html#cfn-appconfig-environment-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-environment.html#cfn-appconfig-environment-monitors
       */
      Monitors?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-environment.html#cfn-appconfig-environment-deletionprotectioncheck
       */
      DeletionProtectionCheck?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-environment.html#cfn-appconfig-environment-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-environment.html#cfn-appconfig-environment-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-environment.html#cfn-appconfig-environment-name
       */
      Name: string;
    }
    
    
    interface Environment extends Resource<"AWS::AppConfig::Environment">, EnvironmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Environment(id: string, props: EnvironmentProps): Promise<Environment>;
  }
  namespace AppConfig {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extension.html
     */
    interface ExtensionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extension.html#cfn-appconfig-extension-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extension.html#cfn-appconfig-extension-parameters
       */
      Parameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extension.html#cfn-appconfig-extension-actions
       */
      Actions: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extension.html#cfn-appconfig-extension-latestversionnumber
       */
      LatestVersionNumber?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extension.html#cfn-appconfig-extension-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extension.html#cfn-appconfig-extension-name
       */
      Name: string;
    }
    
    
    interface Extension extends Resource<"AWS::AppConfig::Extension">, ExtensionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Extension(id: string, props: ExtensionProps): Promise<Extension>;
  }
  namespace AppConfig {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extensionassociation.html
     */
    interface ExtensionAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extensionassociation.html#cfn-appconfig-extensionassociation-resourceidentifier
       */
      ResourceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extensionassociation.html#cfn-appconfig-extensionassociation-parameters
       */
      Parameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extensionassociation.html#cfn-appconfig-extensionassociation-extensionidentifier
       */
      ExtensionIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extensionassociation.html#cfn-appconfig-extensionassociation-extensionversionnumber
       */
      ExtensionVersionNumber?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-extensionassociation.html#cfn-appconfig-extensionassociation-tags
       */
      Tags?: {}[];
    }
    
    
    interface ExtensionAssociation extends Resource<"AWS::AppConfig::ExtensionAssociation">, ExtensionAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ExtensionAssociation(id: string, props: ExtensionAssociationProps): Promise<ExtensionAssociation>;
  }
  namespace AppConfig {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-hostedconfigurationversion.html
     */
    interface HostedConfigurationVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-hostedconfigurationversion.html#cfn-appconfig-hostedconfigurationversion-configurationprofileid
       */
      ConfigurationProfileId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-hostedconfigurationversion.html#cfn-appconfig-hostedconfigurationversion-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-hostedconfigurationversion.html#cfn-appconfig-hostedconfigurationversion-contenttype
       */
      ContentType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-hostedconfigurationversion.html#cfn-appconfig-hostedconfigurationversion-latestversionnumber
       */
      LatestVersionNumber?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-hostedconfigurationversion.html#cfn-appconfig-hostedconfigurationversion-content
       */
      Content: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-hostedconfigurationversion.html#cfn-appconfig-hostedconfigurationversion-versionlabel
       */
      VersionLabel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-hostedconfigurationversion.html#cfn-appconfig-hostedconfigurationversion-applicationid
       */
      ApplicationId: string;
    }
    
    
    interface HostedConfigurationVersion extends Resource<"AWS::AppConfig::HostedConfigurationVersion">, HostedConfigurationVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function HostedConfigurationVersion(id: string, props: HostedConfigurationVersionProps): Promise<HostedConfigurationVersion>;
  }
  namespace AppFlow {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connector.html
     */
    interface ConnectorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connector.html#cfn-appflow-connector-connectorlabel
       */
      ConnectorLabel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connector.html#cfn-appflow-connector-connectorprovisioningtype
       */
      ConnectorProvisioningType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connector.html#cfn-appflow-connector-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connector.html#cfn-appflow-connector-connectorprovisioningconfig
       */
      ConnectorProvisioningConfig: {};
    }
    
    
    interface Connector extends Resource<"AWS::AppFlow::Connector">, ConnectorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Connector(id: string, props: ConnectorProps): Promise<Connector>;
  }
  namespace AppFlow {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connectorprofile.html
     */
    interface ConnectorProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connectorprofile.html#cfn-appflow-connectorprofile-connectorlabel
       */
      ConnectorLabel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connectorprofile.html#cfn-appflow-connectorprofile-connectorprofilename
       */
      ConnectorProfileName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connectorprofile.html#cfn-appflow-connectorprofile-kmsarn
       */
      KMSArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connectorprofile.html#cfn-appflow-connectorprofile-connectortype
       */
      ConnectorType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connectorprofile.html#cfn-appflow-connectorprofile-connectionmode
       */
      ConnectionMode: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-connectorprofile.html#cfn-appflow-connectorprofile-connectorprofileconfig
       */
      ConnectorProfileConfig?: {};
    }
    
    
    interface ConnectorProfile extends Resource<"AWS::AppFlow::ConnectorProfile">, ConnectorProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConnectorProfile(id: string, props: ConnectorProfileProps): Promise<ConnectorProfile>;
  }
  namespace AppFlow {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html
     */
    interface FlowProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-kmsarn
       */
      KMSArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-tasks
       */
      Tasks: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-flowname
       */
      FlowName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-triggerconfig
       */
      TriggerConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-destinationflowconfiglist
       */
      DestinationFlowConfigList: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-sourceflowconfig
       */
      SourceFlowConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-flowstatus
       */
      FlowStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-metadatacatalogconfig
       */
      MetadataCatalogConfig?: {};
    }
    
    
    interface Flow extends Resource<"AWS::AppFlow::Flow">, FlowProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Flow(id: string, props: FlowProps): Promise<Flow>;
  }
  namespace AppIntegrations {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-application.html#cfn-appintegrations-application-applicationsourceconfig
       */
      ApplicationSourceConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-application.html#cfn-appintegrations-application-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-application.html#cfn-appintegrations-application-permissions
       */
      Permissions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-application.html#cfn-appintegrations-application-namespace
       */
      Namespace: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-application.html#cfn-appintegrations-application-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-application.html#cfn-appintegrations-application-name
       */
      Name: string;
    }
    
    
    interface Application extends Resource<"AWS::AppIntegrations::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace AppIntegrations {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-dataintegration.html
     */
    interface DataIntegrationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-dataintegration.html#cfn-appintegrations-dataintegration-scheduleconfig
       */
      ScheduleConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-dataintegration.html#cfn-appintegrations-dataintegration-fileconfiguration
       */
      FileConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-dataintegration.html#cfn-appintegrations-dataintegration-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-dataintegration.html#cfn-appintegrations-dataintegration-sourceuri
       */
      SourceURI: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-dataintegration.html#cfn-appintegrations-dataintegration-objectconfiguration
       */
      ObjectConfiguration?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-dataintegration.html#cfn-appintegrations-dataintegration-kmskey
       */
      KmsKey: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-dataintegration.html#cfn-appintegrations-dataintegration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-dataintegration.html#cfn-appintegrations-dataintegration-name
       */
      Name: string;
    }
    
    
    interface DataIntegration extends Resource<"AWS::AppIntegrations::DataIntegration">, DataIntegrationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataIntegration(id: string, props: DataIntegrationProps): Promise<DataIntegration>;
  }
  namespace AppIntegrations {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-eventintegration.html
     */
    interface EventIntegrationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-eventintegration.html#cfn-appintegrations-eventintegration-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-eventintegration.html#cfn-appintegrations-eventintegration-eventbridgebus
       */
      EventBridgeBus: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-eventintegration.html#cfn-appintegrations-eventintegration-eventfilter
       */
      EventFilter: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-eventintegration.html#cfn-appintegrations-eventintegration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appintegrations-eventintegration.html#cfn-appintegrations-eventintegration-name
       */
      Name: string;
    }
    
    
    interface EventIntegration extends Resource<"AWS::AppIntegrations::EventIntegration">, EventIntegrationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventIntegration(id: string, props: EventIntegrationProps): Promise<EventIntegration>;
  }
  namespace AppMesh {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-gatewayroute.html
     */
    interface GatewayRouteProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-gatewayroute.html#cfn-appmesh-gatewayroute-meshname
       */
      MeshName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-gatewayroute.html#cfn-appmesh-gatewayroute-virtualgatewayname
       */
      VirtualGatewayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-gatewayroute.html#cfn-appmesh-gatewayroute-meshowner
       */
      MeshOwner?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-gatewayroute.html#cfn-appmesh-gatewayroute-gatewayroutename
       */
      GatewayRouteName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-gatewayroute.html#cfn-appmesh-gatewayroute-spec
       */
      Spec: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-gatewayroute.html#cfn-appmesh-gatewayroute-tags
       */
      Tags?: {}[];
    }
    
    
    interface GatewayRoute extends Resource<"AWS::AppMesh::GatewayRoute">, GatewayRouteProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GatewayRoute(id: string, props: GatewayRouteProps): Promise<GatewayRoute>;
  }
  namespace AppMesh {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-mesh.html
     */
    interface MeshProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-mesh.html#cfn-appmesh-mesh-meshname
       */
      MeshName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-mesh.html#cfn-appmesh-mesh-spec
       */
      Spec?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-mesh.html#cfn-appmesh-mesh-tags
       */
      Tags?: {}[];
    }
    
    
    interface Mesh extends Resource<"AWS::AppMesh::Mesh">, MeshProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Mesh(id: string, props: MeshProps): Promise<Mesh>;
  }
  namespace AppMesh {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-route.html
     */
    interface RouteProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-route.html#cfn-appmesh-route-meshname
       */
      MeshName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-route.html#cfn-appmesh-route-virtualroutername
       */
      VirtualRouterName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-route.html#cfn-appmesh-route-meshowner
       */
      MeshOwner?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-route.html#cfn-appmesh-route-routename
       */
      RouteName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-route.html#cfn-appmesh-route-spec
       */
      Spec: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-route.html#cfn-appmesh-route-tags
       */
      Tags?: {}[];
    }
    
    
    interface Route extends Resource<"AWS::AppMesh::Route">, RouteProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Route(id: string, props: RouteProps): Promise<Route>;
  }
  namespace AppMesh {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualgateway.html
     */
    interface VirtualGatewayProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualgateway.html#cfn-appmesh-virtualgateway-virtualgatewayname
       */
      VirtualGatewayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualgateway.html#cfn-appmesh-virtualgateway-meshname
       */
      MeshName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualgateway.html#cfn-appmesh-virtualgateway-meshowner
       */
      MeshOwner?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualgateway.html#cfn-appmesh-virtualgateway-spec
       */
      Spec: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualgateway.html#cfn-appmesh-virtualgateway-tags
       */
      Tags?: {}[];
    }
    
    
    interface VirtualGateway extends Resource<"AWS::AppMesh::VirtualGateway">, VirtualGatewayProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VirtualGateway(id: string, props: VirtualGatewayProps): Promise<VirtualGateway>;
  }
  namespace AppMesh {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualnode.html
     */
    interface VirtualNodeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualnode.html#cfn-appmesh-virtualnode-meshname
       */
      MeshName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualnode.html#cfn-appmesh-virtualnode-meshowner
       */
      MeshOwner?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualnode.html#cfn-appmesh-virtualnode-spec
       */
      Spec: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualnode.html#cfn-appmesh-virtualnode-virtualnodename
       */
      VirtualNodeName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualnode.html#cfn-appmesh-virtualnode-tags
       */
      Tags?: {}[];
    }
    
    
    interface VirtualNode extends Resource<"AWS::AppMesh::VirtualNode">, VirtualNodeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VirtualNode(id: string, props: VirtualNodeProps): Promise<VirtualNode>;
  }
  namespace AppMesh {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualrouter.html
     */
    interface VirtualRouterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualrouter.html#cfn-appmesh-virtualrouter-meshname
       */
      MeshName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualrouter.html#cfn-appmesh-virtualrouter-virtualroutername
       */
      VirtualRouterName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualrouter.html#cfn-appmesh-virtualrouter-meshowner
       */
      MeshOwner?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualrouter.html#cfn-appmesh-virtualrouter-spec
       */
      Spec: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualrouter.html#cfn-appmesh-virtualrouter-tags
       */
      Tags?: {}[];
    }
    
    
    interface VirtualRouter extends Resource<"AWS::AppMesh::VirtualRouter">, VirtualRouterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VirtualRouter(id: string, props: VirtualRouterProps): Promise<VirtualRouter>;
  }
  namespace AppMesh {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html
     */
    interface VirtualServiceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html#cfn-appmesh-virtualservice-meshname
       */
      MeshName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html#cfn-appmesh-virtualservice-meshowner
       */
      MeshOwner?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html#cfn-appmesh-virtualservice-virtualservicename
       */
      VirtualServiceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html#cfn-appmesh-virtualservice-spec
       */
      Spec: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html#cfn-appmesh-virtualservice-tags
       */
      Tags?: {}[];
    }
    
    
    interface VirtualService extends Resource<"AWS::AppMesh::VirtualService">, VirtualServiceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VirtualService(id: string, props: VirtualServiceProps): Promise<VirtualService>;
  }
  namespace AppRunner {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-autoscalingconfiguration.html
     */
    interface AutoScalingConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-autoscalingconfiguration.html#cfn-apprunner-autoscalingconfiguration-minsize
       */
      MinSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-autoscalingconfiguration.html#cfn-apprunner-autoscalingconfiguration-maxconcurrency
       */
      MaxConcurrency?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-autoscalingconfiguration.html#cfn-apprunner-autoscalingconfiguration-autoscalingconfigurationname
       */
      AutoScalingConfigurationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-autoscalingconfiguration.html#cfn-apprunner-autoscalingconfiguration-maxsize
       */
      MaxSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-autoscalingconfiguration.html#cfn-apprunner-autoscalingconfiguration-tags
       */
      Tags?: {}[];
    }
    
    
    interface AutoScalingConfiguration extends Resource<"AWS::AppRunner::AutoScalingConfiguration">, AutoScalingConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AutoScalingConfiguration(id: string, props: AutoScalingConfigurationProps): Promise<AutoScalingConfiguration>;
  }
  namespace AppRunner {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-observabilityconfiguration.html
     */
    interface ObservabilityConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-observabilityconfiguration.html#cfn-apprunner-observabilityconfiguration-traceconfiguration
       */
      TraceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-observabilityconfiguration.html#cfn-apprunner-observabilityconfiguration-observabilityconfigurationname
       */
      ObservabilityConfigurationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-observabilityconfiguration.html#cfn-apprunner-observabilityconfiguration-tags
       */
      Tags?: {}[];
    }
    
    
    interface ObservabilityConfiguration extends Resource<"AWS::AppRunner::ObservabilityConfiguration">, ObservabilityConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ObservabilityConfiguration(id: string, props: ObservabilityConfigurationProps): Promise<ObservabilityConfiguration>;
  }
  namespace AppRunner {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html
     */
    interface ServiceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-healthcheckconfiguration
       */
      HealthCheckConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-instanceconfiguration
       */
      InstanceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-encryptionconfiguration
       */
      EncryptionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-servicename
       */
      ServiceName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-observabilityconfiguration
       */
      ObservabilityConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-sourceconfiguration
       */
      SourceConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-autoscalingconfigurationarn
       */
      AutoScalingConfigurationArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-networkconfiguration
       */
      NetworkConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-tags
       */
      Tags?: {}[];
    }
    
    
    interface Service extends Resource<"AWS::AppRunner::Service">, ServiceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Service(id: string, props: ServiceProps): Promise<Service>;
  }
  namespace AppRunner {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html
     */
    interface VpcConnectorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-securitygroups
       */
      SecurityGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-subnets
       */
      Subnets: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-vpcconnectorname
       */
      VpcConnectorName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-tags
       */
      Tags?: {}[];
    }
    
    
    interface VpcConnector extends Resource<"AWS::AppRunner::VpcConnector">, VpcConnectorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VpcConnector(id: string, props: VpcConnectorProps): Promise<VpcConnector>;
  }
  namespace AppRunner {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcingressconnection.html
     */
    interface VpcIngressConnectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcingressconnection.html#cfn-apprunner-vpcingressconnection-vpcingressconnectionname
       */
      VpcIngressConnectionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcingressconnection.html#cfn-apprunner-vpcingressconnection-servicearn
       */
      ServiceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcingressconnection.html#cfn-apprunner-vpcingressconnection-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcingressconnection.html#cfn-apprunner-vpcingressconnection-ingressvpcconfiguration
       */
      IngressVpcConfiguration: {};
    }
    
    
    interface VpcIngressConnection extends Resource<"AWS::AppRunner::VpcIngressConnection">, VpcIngressConnectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VpcIngressConnection(id: string, props: VpcIngressConnectionProps): Promise<VpcIngressConnection>;
  }
  namespace AppStream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblock.html
     */
    interface AppBlockProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblock.html#cfn-appstream-appblock-setupscriptdetails
       */
      SetupScriptDetails?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblock.html#cfn-appstream-appblock-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblock.html#cfn-appstream-appblock-postsetupscriptdetails
       */
      PostSetupScriptDetails?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblock.html#cfn-appstream-appblock-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblock.html#cfn-appstream-appblock-sources3location
       */
      SourceS3Location: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblock.html#cfn-appstream-appblock-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblock.html#cfn-appstream-appblock-packagingtype
       */
      PackagingType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblock.html#cfn-appstream-appblock-name
       */
      Name: string;
    }
    
    
    interface AppBlock extends Resource<"AWS::AppStream::AppBlock">, AppBlockProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AppBlock(id: string, props: AppBlockProps): Promise<AppBlock>;
  }
  namespace AppStream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblockbuilder.html
     */
    interface AppBlockBuilderProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblockbuilder.html#cfn-appstream-appblockbuilder-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblockbuilder.html#cfn-appstream-appblockbuilder-platform
       */
      Platform: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblockbuilder.html#cfn-appstream-appblockbuilder-vpcconfig
       */
      VpcConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblockbuilder.html#cfn-appstream-appblockbuilder-appblockarns
       */
      AppBlockArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblockbuilder.html#cfn-appstream-appblockbuilder-enabledefaultinternetaccess
       */
      EnableDefaultInternetAccess?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblockbuilder.html#cfn-appstream-appblockbuilder-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblockbuilder.html#cfn-appstream-appblockbuilder-iamrolearn
       */
      IamRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblockbuilder.html#cfn-appstream-appblockbuilder-instancetype
       */
      InstanceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblockbuilder.html#cfn-appstream-appblockbuilder-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblockbuilder.html#cfn-appstream-appblockbuilder-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-appblockbuilder.html#cfn-appstream-appblockbuilder-accessendpoints
       */
      AccessEndpoints?: {}[];
    }
    
    
    interface AppBlockBuilder extends Resource<"AWS::AppStream::AppBlockBuilder">, AppBlockBuilderProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AppBlockBuilder(id: string, props: AppBlockBuilderProps): Promise<AppBlockBuilder>;
  }
  namespace AppStream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html#cfn-appstream-application-workingdirectory
       */
      WorkingDirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html#cfn-appstream-application-platforms
       */
      Platforms: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html#cfn-appstream-application-appblockarn
       */
      AppBlockArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html#cfn-appstream-application-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html#cfn-appstream-application-instancefamilies
       */
      InstanceFamilies: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html#cfn-appstream-application-attributestodelete
       */
      AttributesToDelete?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html#cfn-appstream-application-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html#cfn-appstream-application-launchpath
       */
      LaunchPath: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html#cfn-appstream-application-launchparameters
       */
      LaunchParameters?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html#cfn-appstream-application-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html#cfn-appstream-application-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-application.html#cfn-appstream-application-icons3location
       */
      IconS3Location: {};
    }
    
    
    interface Application extends Resource<"AWS::AppStream::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace AppStream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-applicationentitlementassociation.html
     */
    interface ApplicationEntitlementAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-applicationentitlementassociation.html#cfn-appstream-applicationentitlementassociation-entitlementname
       */
      EntitlementName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-applicationentitlementassociation.html#cfn-appstream-applicationentitlementassociation-applicationidentifier
       */
      ApplicationIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-applicationentitlementassociation.html#cfn-appstream-applicationentitlementassociation-stackname
       */
      StackName: string;
    }
    
    
    interface ApplicationEntitlementAssociation extends Resource<"AWS::AppStream::ApplicationEntitlementAssociation">, ApplicationEntitlementAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApplicationEntitlementAssociation(id: string, props: ApplicationEntitlementAssociationProps): Promise<ApplicationEntitlementAssociation>;
  }
  namespace AppStream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-applicationfleetassociation.html
     */
    interface ApplicationFleetAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-applicationfleetassociation.html#cfn-appstream-applicationfleetassociation-fleetname
       */
      FleetName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-applicationfleetassociation.html#cfn-appstream-applicationfleetassociation-applicationarn
       */
      ApplicationArn: string;
    }
    
    
    interface ApplicationFleetAssociation extends Resource<"AWS::AppStream::ApplicationFleetAssociation">, ApplicationFleetAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApplicationFleetAssociation(id: string, props: ApplicationFleetAssociationProps): Promise<ApplicationFleetAssociation>;
  }
  namespace AppStream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-directoryconfig.html
     */
    interface DirectoryConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-directoryconfig.html#cfn-appstream-directoryconfig-organizationalunitdistinguishednames
       */
      OrganizationalUnitDistinguishedNames: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-directoryconfig.html#cfn-appstream-directoryconfig-serviceaccountcredentials
       */
      ServiceAccountCredentials: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-directoryconfig.html#cfn-appstream-directoryconfig-certificatebasedauthproperties
       */
      CertificateBasedAuthProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-directoryconfig.html#cfn-appstream-directoryconfig-directoryname
       */
      DirectoryName: string;
    }
    
    
    interface DirectoryConfig extends Resource<"AWS::AppStream::DirectoryConfig">, DirectoryConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DirectoryConfig(id: string, props: DirectoryConfigProps): Promise<DirectoryConfig>;
  }
  namespace AppStream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-entitlement.html
     */
    interface EntitlementProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-entitlement.html#cfn-appstream-entitlement-appvisibility
       */
      AppVisibility: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-entitlement.html#cfn-appstream-entitlement-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-entitlement.html#cfn-appstream-entitlement-attributes
       */
      Attributes: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-entitlement.html#cfn-appstream-entitlement-stackname
       */
      StackName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-entitlement.html#cfn-appstream-entitlement-name
       */
      Name: string;
    }
    
    
    interface Entitlement extends Resource<"AWS::AppStream::Entitlement">, EntitlementProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Entitlement(id: string, props: EntitlementProps): Promise<Entitlement>;
  }
  namespace AppStream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html
     */
    interface FleetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-computecapacity
       */
      ComputeCapacity?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-platform
       */
      Platform?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-vpcconfig
       */
      VpcConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-fleettype
       */
      FleetType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-enabledefaultinternetaccess
       */
      EnableDefaultInternetAccess?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-domainjoininfo
       */
      DomainJoinInfo?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-sessionscripts3location
       */
      SessionScriptS3Location?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-imagename
       */
      ImageName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-maxuserdurationinseconds
       */
      MaxUserDurationInSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-idledisconnecttimeoutinseconds
       */
      IdleDisconnectTimeoutInSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-usbdevicefilterstrings
       */
      UsbDeviceFilterStrings?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-disconnecttimeoutinseconds
       */
      DisconnectTimeoutInSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-streamview
       */
      StreamView?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-iamrolearn
       */
      IamRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-maxsessionsperinstance
       */
      MaxSessionsPerInstance?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-instancetype
       */
      InstanceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-maxconcurrentsessions
       */
      MaxConcurrentSessions?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-imagearn
       */
      ImageArn?: string;
    }
    
    
    interface Fleet extends Resource<"AWS::AppStream::Fleet">, FleetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Fleet(id: string, props: FleetProps): Promise<Fleet>;
  }
  namespace AppStream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html
     */
    interface ImageBuilderProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html#cfn-appstream-imagebuilder-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html#cfn-appstream-imagebuilder-vpcconfig
       */
      VpcConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html#cfn-appstream-imagebuilder-enabledefaultinternetaccess
       */
      EnableDefaultInternetAccess?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html#cfn-appstream-imagebuilder-domainjoininfo
       */
      DomainJoinInfo?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html#cfn-appstream-imagebuilder-appstreamagentversion
       */
      AppstreamAgentVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html#cfn-appstream-imagebuilder-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html#cfn-appstream-imagebuilder-imagename
       */
      ImageName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html#cfn-appstream-imagebuilder-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html#cfn-appstream-imagebuilder-iamrolearn
       */
      IamRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html#cfn-appstream-imagebuilder-instancetype
       */
      InstanceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html#cfn-appstream-imagebuilder-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html#cfn-appstream-imagebuilder-imagearn
       */
      ImageArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-imagebuilder.html#cfn-appstream-imagebuilder-accessendpoints
       */
      AccessEndpoints?: {}[];
    }
    
    
    interface ImageBuilder extends Resource<"AWS::AppStream::ImageBuilder">, ImageBuilderProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ImageBuilder(id: string, props: ImageBuilderProps): Promise<ImageBuilder>;
  }
  namespace AppStream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html
     */
    interface StackProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-storageconnectors
       */
      StorageConnectors?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-deletestorageconnectors
       */
      DeleteStorageConnectors?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-embedhostdomains
       */
      EmbedHostDomains?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-usersettings
       */
      UserSettings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-attributestodelete
       */
      AttributesToDelete?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-redirecturl
       */
      RedirectURL?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-streamingexperiencesettings
       */
      StreamingExperienceSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-feedbackurl
       */
      FeedbackURL?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-applicationsettings
       */
      ApplicationSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-accessendpoints
       */
      AccessEndpoints?: {}[];
    }
    
    
    interface Stack extends Resource<"AWS::AppStream::Stack">, StackProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Stack(id: string, props: StackProps): Promise<Stack>;
  }
  namespace AppStream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackfleetassociation.html
     */
    interface StackFleetAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackfleetassociation.html#cfn-appstream-stackfleetassociation-fleetname
       */
      FleetName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackfleetassociation.html#cfn-appstream-stackfleetassociation-stackname
       */
      StackName: string;
    }
    
    
    interface StackFleetAssociation extends Resource<"AWS::AppStream::StackFleetAssociation">, StackFleetAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StackFleetAssociation(id: string, props: StackFleetAssociationProps): Promise<StackFleetAssociation>;
  }
  namespace AppStream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackuserassociation.html
     */
    interface StackUserAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackuserassociation.html#cfn-appstream-stackuserassociation-sendemailnotification
       */
      SendEmailNotification?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackuserassociation.html#cfn-appstream-stackuserassociation-username
       */
      UserName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackuserassociation.html#cfn-appstream-stackuserassociation-stackname
       */
      StackName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackuserassociation.html#cfn-appstream-stackuserassociation-authenticationtype
       */
      AuthenticationType: string;
    }
    
    
    interface StackUserAssociation extends Resource<"AWS::AppStream::StackUserAssociation">, StackUserAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StackUserAssociation(id: string, props: StackUserAssociationProps): Promise<StackUserAssociation>;
  }
  namespace AppStream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-user.html
     */
    interface UserProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-user.html#cfn-appstream-user-username
       */
      UserName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-user.html#cfn-appstream-user-firstname
       */
      FirstName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-user.html#cfn-appstream-user-messageaction
       */
      MessageAction?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-user.html#cfn-appstream-user-lastname
       */
      LastName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-user.html#cfn-appstream-user-authenticationtype
       */
      AuthenticationType: string;
    }
    
    
    interface User extends Resource<"AWS::AppStream::User">, UserProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function User(id: string, props: UserProps): Promise<User>;
  }
  namespace AppSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-api.html
     */
    interface ApiProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-api.html#cfn-appsync-api-ownercontact
       */
      OwnerContact?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-api.html#cfn-appsync-api-eventconfig
       */
      EventConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-api.html#cfn-appsync-api-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-api.html#cfn-appsync-api-name
       */
      Name: string;
    }
    
    
    interface Api extends Resource<"AWS::AppSync::Api">, ApiProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Api(id: string, props: ApiProps): Promise<Api>;
  }
  namespace AppSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html
     */
    interface ApiCacheProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-transitencryptionenabled
       */
      TransitEncryptionEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-healthmetricsconfig
       */
      HealthMetricsConfig?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-atrestencryptionenabled
       */
      AtRestEncryptionEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-apiid
       */
      ApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-apicachingbehavior
       */
      ApiCachingBehavior: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apicache.html#cfn-appsync-apicache-ttl
       */
      Ttl: number;
    }
    
    
    interface ApiCache extends Resource<"AWS::AppSync::ApiCache">, ApiCacheProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApiCache(id: string, props: ApiCacheProps): Promise<ApiCache>;
  }
  namespace AppSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html
     */
    interface ApiKeyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html#cfn-appsync-apikey-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html#cfn-appsync-apikey-apikeyid
       */
      ApiKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html#cfn-appsync-apikey-expires
       */
      Expires?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-apikey.html#cfn-appsync-apikey-apiid
       */
      ApiId: string;
    }
    
    
    interface ApiKey extends Resource<"AWS::AppSync::ApiKey">, ApiKeyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApiKey(id: string, props: ApiKeyProps): Promise<ApiKey>;
  }
  namespace AppSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html
     */
    interface ChannelNamespaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-subscribeauthmodes
       */
      SubscribeAuthModes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-codes3location
       */
      CodeS3Location?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-publishauthmodes
       */
      PublishAuthModes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-codehandlers
       */
      CodeHandlers?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-handlerconfigs
       */
      HandlerConfigs?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-apiid
       */
      ApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-name
       */
      Name: string;
    }
    
    
    interface ChannelNamespace extends Resource<"AWS::AppSync::ChannelNamespace">, ChannelNamespaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ChannelNamespace(id: string, props: ChannelNamespaceProps): Promise<ChannelNamespace>;
  }
  namespace AppSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html
     */
    interface DataSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-opensearchserviceconfig
       */
      OpenSearchServiceConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-servicerolearn
       */
      ServiceRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-metricsconfig
       */
      MetricsConfig?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-eventbridgeconfig
       */
      EventBridgeConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-httpconfig
       */
      HttpConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-relationaldatabaseconfig
       */
      RelationalDatabaseConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-lambdaconfig
       */
      LambdaConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-apiid
       */
      ApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-dynamodbconfig
       */
      DynamoDBConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-elasticsearchconfig
       */
      ElasticsearchConfig?: {};
    }
    
    
    interface DataSource extends Resource<"AWS::AppSync::DataSource">, DataSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataSource(id: string, props: DataSourceProps): Promise<DataSource>;
  }
  namespace AppSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-domainname.html
     */
    interface DomainNameProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-domainname.html#cfn-appsync-domainname-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-domainname.html#cfn-appsync-domainname-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-domainname.html#cfn-appsync-domainname-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-domainname.html#cfn-appsync-domainname-certificatearn
       */
      CertificateArn: string;
    }
    
    
    interface DomainName extends Resource<"AWS::AppSync::DomainName">, DomainNameProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DomainName(id: string, props: DomainNameProps): Promise<DomainName>;
  }
  namespace AppSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-domainnameapiassociation.html
     */
    interface DomainNameApiAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-domainnameapiassociation.html#cfn-appsync-domainnameapiassociation-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-domainnameapiassociation.html#cfn-appsync-domainnameapiassociation-apiid
       */
      ApiId: string;
    }
    
    
    interface DomainNameApiAssociation extends Resource<"AWS::AppSync::DomainNameApiAssociation">, DomainNameApiAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DomainNameApiAssociation(id: string, props: DomainNameApiAssociationProps): Promise<DomainNameApiAssociation>;
  }
  namespace AppSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html
     */
    interface FunctionConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-requestmappingtemplate
       */
      RequestMappingTemplate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-responsemappingtemplate
       */
      ResponseMappingTemplate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-maxbatchsize
       */
      MaxBatchSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-syncconfig
       */
      SyncConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-code
       */
      Code?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-responsemappingtemplates3location
       */
      ResponseMappingTemplateS3Location?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-runtime
       */
      Runtime?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-codes3location
       */
      CodeS3Location?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-datasourcename
       */
      DataSourceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-functionversion
       */
      FunctionVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-requestmappingtemplates3location
       */
      RequestMappingTemplateS3Location?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-apiid
       */
      ApiId: string;
    }
    
    
    interface FunctionConfiguration extends Resource<"AWS::AppSync::FunctionConfiguration">, FunctionConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FunctionConfiguration(id: string, props: FunctionConfigurationProps): Promise<FunctionConfiguration>;
  }
  namespace AppSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html
     */
    interface GraphQLApiProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-querydepthlimit
       */
      QueryDepthLimit?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-openidconnectconfig
       */
      OpenIDConnectConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-introspectionconfig
       */
      IntrospectionConfig?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-mergedapiexecutionrolearn
       */
      MergedApiExecutionRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-enhancedmetricsconfig
       */
      EnhancedMetricsConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-ownercontact
       */
      OwnerContact?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-resolvercountlimit
       */
      ResolverCountLimit?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-additionalauthenticationproviders
       */
      AdditionalAuthenticationProviders?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-environmentvariables
       */
      EnvironmentVariables?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-apitype
       */
      ApiType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-lambdaauthorizerconfig
       */
      LambdaAuthorizerConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-xrayenabled
       */
      XrayEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-visibility
       */
      Visibility?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-userpoolconfig
       */
      UserPoolConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-authenticationtype
       */
      AuthenticationType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html#cfn-appsync-graphqlapi-logconfig
       */
      LogConfig?: {};
    }
    
    
    interface GraphQLApi extends Resource<"AWS::AppSync::GraphQLApi">, GraphQLApiProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GraphQLApi(id: string, props: GraphQLApiProps): Promise<GraphQLApi>;
  }
  namespace AppSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html
     */
    interface GraphQLSchemaProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html#cfn-appsync-graphqlschema-definition
       */
      Definition?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html#cfn-appsync-graphqlschema-definitions3location
       */
      DefinitionS3Location?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html#cfn-appsync-graphqlschema-apiid
       */
      ApiId: string;
    }
    
    
    interface GraphQLSchema extends Resource<"AWS::AppSync::GraphQLSchema">, GraphQLSchemaProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GraphQLSchema(id: string, props: GraphQLSchemaProps): Promise<GraphQLSchema>;
  }
  namespace AppSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html
     */
    interface ResolverProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-typename
       */
      TypeName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-pipelineconfig
       */
      PipelineConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-requestmappingtemplate
       */
      RequestMappingTemplate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-responsemappingtemplate
       */
      ResponseMappingTemplate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-maxbatchsize
       */
      MaxBatchSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-syncconfig
       */
      SyncConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-code
       */
      Code?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-metricsconfig
       */
      MetricsConfig?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-responsemappingtemplates3location
       */
      ResponseMappingTemplateS3Location?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-runtime
       */
      Runtime?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-codes3location
       */
      CodeS3Location?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-datasourcename
       */
      DataSourceName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-kind
       */
      Kind?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-cachingconfig
       */
      CachingConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-requestmappingtemplates3location
       */
      RequestMappingTemplateS3Location?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-apiid
       */
      ApiId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-resolver.html#cfn-appsync-resolver-fieldname
       */
      FieldName: string;
    }
    
    
    interface Resolver extends Resource<"AWS::AppSync::Resolver">, ResolverProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Resolver(id: string, props: ResolverProps): Promise<Resolver>;
  }
  namespace AppSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html
     */
    interface SourceApiAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-sourceapiassociationconfig
       */
      SourceApiAssociationConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-mergedapiidentifier
       */
      MergedApiIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-sourceapiidentifier
       */
      SourceApiIdentifier?: string;
    }
    
    
    interface SourceApiAssociation extends Resource<"AWS::AppSync::SourceApiAssociation">, SourceApiAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SourceApiAssociation(id: string, props: SourceApiAssociationProps): Promise<SourceApiAssociation>;
  }
  namespace AppTest {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apptest-testcase.html
     */
    interface TestCaseProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apptest-testcase.html#cfn-apptest-testcase-steps
       */
      Steps: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apptest-testcase.html#cfn-apptest-testcase-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apptest-testcase.html#cfn-apptest-testcase-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apptest-testcase.html#cfn-apptest-testcase-name
       */
      Name: string;
    }
    
    
    interface TestCase extends Resource<"AWS::AppTest::TestCase">, TestCaseProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TestCase(id: string, props: TestCaseProps): Promise<TestCase>;
  }
  namespace ApplicationAutoScaling {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html
     */
    interface ScalableTargetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-scheduledactions
       */
      ScheduledActions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-resourceid
       */
      ResourceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-servicenamespace
       */
      ServiceNamespace: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-scalabledimension
       */
      ScalableDimension: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-suspendedstate
       */
      SuspendedState?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-mincapacity
       */
      MinCapacity: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-rolearn
       */
      RoleARN?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-maxcapacity
       */
      MaxCapacity: number;
    }
    
    
    interface ScalableTarget extends Resource<"AWS::ApplicationAutoScaling::ScalableTarget">, ScalableTargetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ScalableTarget(id: string, props: ScalableTargetProps): Promise<ScalableTarget>;
  }
  namespace ApplicationAutoScaling {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html
     */
    interface ScalingPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-policytype
       */
      PolicyType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-resourceid
       */
      ResourceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-scalingtargetid
       */
      ScalingTargetId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-policyname
       */
      PolicyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-servicenamespace
       */
      ServiceNamespace?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-scalabledimension
       */
      ScalableDimension?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-targettrackingscalingpolicyconfiguration
       */
      TargetTrackingScalingPolicyConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration
       */
      StepScalingPolicyConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html#cfn-applicationautoscaling-scalingpolicy-predictivescalingpolicyconfiguration
       */
      PredictiveScalingPolicyConfiguration?: {};
    }
    
    
    interface ScalingPolicy extends Resource<"AWS::ApplicationAutoScaling::ScalingPolicy">, ScalingPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ScalingPolicy(id: string, props: ScalingPolicyProps): Promise<ScalingPolicy>;
  }
  namespace ApplicationInsights {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html#cfn-applicationinsights-application-autoconfigurationenabled
       */
      AutoConfigurationEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html#cfn-applicationinsights-application-opsitemsnstopicarn
       */
      OpsItemSNSTopicArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html#cfn-applicationinsights-application-opscenterenabled
       */
      OpsCenterEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html#cfn-applicationinsights-application-customcomponents
       */
      CustomComponents?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html#cfn-applicationinsights-application-snsnotificationarn
       */
      SNSNotificationArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html#cfn-applicationinsights-application-attachmissingpermission
       */
      AttachMissingPermission?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html#cfn-applicationinsights-application-logpatternsets
       */
      LogPatternSets?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html#cfn-applicationinsights-application-groupingtype
       */
      GroupingType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html#cfn-applicationinsights-application-componentmonitoringsettings
       */
      ComponentMonitoringSettings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html#cfn-applicationinsights-application-cwemonitorenabled
       */
      CWEMonitorEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html#cfn-applicationinsights-application-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationinsights-application.html#cfn-applicationinsights-application-resourcegroupname
       */
      ResourceGroupName: string;
    }
    
    
    interface Application extends Resource<"AWS::ApplicationInsights::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace ApplicationSignals {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationsignals-discovery.html
     */
    interface DiscoveryProps {}
    
    
    interface Discovery extends Resource<"AWS::ApplicationSignals::Discovery">, DiscoveryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Discovery(id: string, props: DiscoveryProps): Promise<Discovery>;
  }
  namespace ApplicationSignals {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationsignals-servicelevelobjective.html
     */
    interface ServiceLevelObjectiveProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationsignals-servicelevelobjective.html#cfn-applicationsignals-servicelevelobjective-burnrateconfigurations
       */
      BurnRateConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationsignals-servicelevelobjective.html#cfn-applicationsignals-servicelevelobjective-sli
       */
      Sli?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationsignals-servicelevelobjective.html#cfn-applicationsignals-servicelevelobjective-goal
       */
      Goal?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationsignals-servicelevelobjective.html#cfn-applicationsignals-servicelevelobjective-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationsignals-servicelevelobjective.html#cfn-applicationsignals-servicelevelobjective-requestbasedsli
       */
      RequestBasedSli?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationsignals-servicelevelobjective.html#cfn-applicationsignals-servicelevelobjective-exclusionwindows
       */
      ExclusionWindows?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationsignals-servicelevelobjective.html#cfn-applicationsignals-servicelevelobjective-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationsignals-servicelevelobjective.html#cfn-applicationsignals-servicelevelobjective-name
       */
      Name: string;
    }
    
    
    interface ServiceLevelObjective extends Resource<"AWS::ApplicationSignals::ServiceLevelObjective">, ServiceLevelObjectiveProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ServiceLevelObjective(id: string, props: ServiceLevelObjectiveProps): Promise<ServiceLevelObjective>;
  }
  namespace Athena {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-capacityreservation.html
     */
    interface CapacityReservationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-capacityreservation.html#cfn-athena-capacityreservation-targetdpus
       */
      TargetDpus: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-capacityreservation.html#cfn-athena-capacityreservation-capacityassignmentconfiguration
       */
      CapacityAssignmentConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-capacityreservation.html#cfn-athena-capacityreservation-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-capacityreservation.html#cfn-athena-capacityreservation-name
       */
      Name: string;
    }
    
    
    interface CapacityReservation extends Resource<"AWS::Athena::CapacityReservation">, CapacityReservationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CapacityReservation(id: string, props: CapacityReservationProps): Promise<CapacityReservation>;
  }
  namespace Athena {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-datacatalog.html
     */
    interface DataCatalogProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-datacatalog.html#cfn-athena-datacatalog-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-datacatalog.html#cfn-athena-datacatalog-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-datacatalog.html#cfn-athena-datacatalog-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-datacatalog.html#cfn-athena-datacatalog-parameters
       */
      Parameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-datacatalog.html#cfn-athena-datacatalog-connectiontype
       */
      ConnectionType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-datacatalog.html#cfn-athena-datacatalog-error
       */
      Error?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-datacatalog.html#cfn-athena-datacatalog-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-datacatalog.html#cfn-athena-datacatalog-name
       */
      Name: string;
    }
    
    
    interface DataCatalog extends Resource<"AWS::Athena::DataCatalog">, DataCatalogProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataCatalog(id: string, props: DataCatalogProps): Promise<DataCatalog>;
  }
  namespace Athena {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html
     */
    interface NamedQueryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html#cfn-athena-namedquery-workgroup
       */
      WorkGroup?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html#cfn-athena-namedquery-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html#cfn-athena-namedquery-querystring
       */
      QueryString: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html#cfn-athena-namedquery-database
       */
      Database: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html#cfn-athena-namedquery-name
       */
      Name?: string;
    }
    
    
    interface NamedQuery extends Resource<"AWS::Athena::NamedQuery">, NamedQueryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NamedQuery(id: string, props: NamedQueryProps): Promise<NamedQuery>;
  }
  namespace Athena {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html
     */
    interface PreparedStatementProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-statementname
       */
      StatementName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-workgroup
       */
      WorkGroup: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-preparedstatement.html#cfn-athena-preparedstatement-querystatement
       */
      QueryStatement: string;
    }
    
    
    interface PreparedStatement extends Resource<"AWS::Athena::PreparedStatement">, PreparedStatementProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PreparedStatement(id: string, props: PreparedStatementProps): Promise<PreparedStatement>;
  }
  namespace Athena {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-workgroup.html
     */
    interface WorkGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-workgroup.html#cfn-athena-workgroup-recursivedeleteoption
       */
      RecursiveDeleteOption?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-workgroup.html#cfn-athena-workgroup-workgroupconfiguration
       */
      WorkGroupConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-workgroup.html#cfn-athena-workgroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-workgroup.html#cfn-athena-workgroup-state
       */
      State?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-workgroup.html#cfn-athena-workgroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-workgroup.html#cfn-athena-workgroup-name
       */
      Name: string;
    }
    
    
    interface WorkGroup extends Resource<"AWS::Athena::WorkGroup">, WorkGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WorkGroup(id: string, props: WorkGroupProps): Promise<WorkGroup>;
  }
  namespace AuditManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html
     */
    interface AssessmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-assessmentreportsdestination
       */
      AssessmentReportsDestination?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-delegations
       */
      Delegations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-scope
       */
      Scope?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-awsaccount
       */
      AwsAccount?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-roles
       */
      Roles?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-frameworkid
       */
      FrameworkId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-auditmanager-assessment.html#cfn-auditmanager-assessment-name
       */
      Name?: string;
    }
    
    
    interface Assessment extends Resource<"AWS::AuditManager::Assessment">, AssessmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Assessment(id: string, props: AssessmentProps): Promise<Assessment>;
  }
  namespace AutoScaling {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html
     */
    interface AutoScalingGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecificationlist
       */
      LifecycleHookSpecificationList?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-loadbalancernames
       */
      LoadBalancerNames?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-launchconfigurationname
       */
      LaunchConfigurationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-servicelinkedrolearn
       */
      ServiceLinkedRoleARN?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-availabilityzoneimpairmentpolicy
       */
      AvailabilityZoneImpairmentPolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-targetgrouparns
       */
      TargetGroupARNs?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-cooldown
       */
      Cooldown?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-notificationconfigurations
       */
      NotificationConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-desiredcapacity
       */
      DesiredCapacity?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-healthcheckgraceperiod
       */
      HealthCheckGracePeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-defaultinstancewarmup
       */
      DefaultInstanceWarmup?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-skipzonalshiftvalidation
       */
      SkipZonalShiftValidation?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-newinstancesprotectedfromscalein
       */
      NewInstancesProtectedFromScaleIn?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-launchtemplate
       */
      LaunchTemplate?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-mixedinstancespolicy
       */
      MixedInstancesPolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-vpczoneidentifier
       */
      VPCZoneIdentifier?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-context
       */
      Context?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-capacityrebalance
       */
      CapacityRebalance?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-instanceid
       */
      InstanceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-availabilityzones
       */
      AvailabilityZones?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-availabilityzonedistribution
       */
      AvailabilityZoneDistribution?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-metricscollection
       */
      MetricsCollection?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-instancemaintenancepolicy
       */
      InstanceMaintenancePolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-maxsize
       */
      MaxSize: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-minsize
       */
      MinSize: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-terminationpolicies
       */
      TerminationPolicies?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-autoscalinggroupname
       */
      AutoScalingGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-trafficsources
       */
      TrafficSources?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-desiredcapacitytype
       */
      DesiredCapacityType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-placementgroup
       */
      PlacementGroup?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-capacityreservationspecification
       */
      CapacityReservationSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-healthchecktype
       */
      HealthCheckType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#cfn-autoscaling-autoscalinggroup-maxinstancelifetime
       */
      MaxInstanceLifetime?: number;
    }
    
    
    interface AutoScalingGroup extends Resource<"AWS::AutoScaling::AutoScalingGroup">, AutoScalingGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AutoScalingGroup(id: string, props: AutoScalingGroupProps): Promise<AutoScalingGroup>;
  }
  namespace AutoScaling {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html
     */
    interface LaunchConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-placementtenancy
       */
      PlacementTenancy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-securitygroups
       */
      SecurityGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-launchconfigurationname
       */
      LaunchConfigurationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-metadataoptions
       */
      MetadataOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-instanceid
       */
      InstanceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-userdata
       */
      UserData?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-classiclinkvpcsecuritygroups
       */
      ClassicLinkVPCSecurityGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-blockdevicemappings
       */
      BlockDeviceMappings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-iaminstanceprofile
       */
      IamInstanceProfile?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-kernelid
       */
      KernelId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-associatepublicipaddress
       */
      AssociatePublicIpAddress?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-classiclinkvpcid
       */
      ClassicLinkVPCId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-ebsoptimized
       */
      EbsOptimized?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-keyname
       */
      KeyName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-spotprice
       */
      SpotPrice?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-imageid
       */
      ImageId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-instancetype
       */
      InstanceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-ramdiskid
       */
      RamDiskId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-instancemonitoring
       */
      InstanceMonitoring?: boolean;
    }
    
    
    interface LaunchConfiguration extends Resource<"AWS::AutoScaling::LaunchConfiguration">, LaunchConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LaunchConfiguration(id: string, props: LaunchConfigurationProps): Promise<LaunchConfiguration>;
  }
  namespace AutoScaling {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html
     */
    interface LifecycleHookProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-lifecyclehookname
       */
      LifecycleHookName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-lifecycletransition
       */
      LifecycleTransition: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-autoscalinggroupname
       */
      AutoScalingGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-heartbeattimeout
       */
      HeartbeatTimeout?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-notificationmetadata
       */
      NotificationMetadata?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-defaultresult
       */
      DefaultResult?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-notificationtargetarn
       */
      NotificationTargetARN?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-rolearn
       */
      RoleARN?: string;
    }
    
    
    interface LifecycleHook extends Resource<"AWS::AutoScaling::LifecycleHook">, LifecycleHookProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LifecycleHook(id: string, props: LifecycleHookProps): Promise<LifecycleHook>;
  }
  namespace AutoScaling {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html
     */
    interface ScalingPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-metricaggregationtype
       */
      MetricAggregationType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-policytype
       */
      PolicyType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration
       */
      PredictiveScalingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-scalingadjustment
       */
      ScalingAdjustment?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-cooldown
       */
      Cooldown?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-stepadjustments
       */
      StepAdjustments?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-autoscalinggroupname
       */
      AutoScalingGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-minadjustmentmagnitude
       */
      MinAdjustmentMagnitude?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration
       */
      TargetTrackingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-estimatedinstancewarmup
       */
      EstimatedInstanceWarmup?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-adjustmenttype
       */
      AdjustmentType?: string;
    }
    
    
    interface ScalingPolicy extends Resource<"AWS::AutoScaling::ScalingPolicy">, ScalingPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ScalingPolicy(id: string, props: ScalingPolicyProps): Promise<ScalingPolicy>;
  }
  namespace AutoScaling {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html
     */
    interface ScheduledActionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-minsize
       */
      MinSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-recurrence
       */
      Recurrence?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-timezone
       */
      TimeZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-endtime
       */
      EndTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-autoscalinggroupname
       */
      AutoScalingGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-starttime
       */
      StartTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-desiredcapacity
       */
      DesiredCapacity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-maxsize
       */
      MaxSize?: number;
    }
    
    
    interface ScheduledAction extends Resource<"AWS::AutoScaling::ScheduledAction">, ScheduledActionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ScheduledAction(id: string, props: ScheduledActionProps): Promise<ScheduledAction>;
  }
  namespace AutoScaling {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html
     */
    interface WarmPoolProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-minsize
       */
      MinSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-maxgrouppreparedcapacity
       */
      MaxGroupPreparedCapacity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-autoscalinggroupname
       */
      AutoScalingGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-poolstate
       */
      PoolState?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-instancereusepolicy
       */
      InstanceReusePolicy?: {};
    }
    
    
    interface WarmPool extends Resource<"AWS::AutoScaling::WarmPool">, WarmPoolProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WarmPool(id: string, props: WarmPoolProps): Promise<WarmPool>;
  }
  namespace AutoScalingPlans {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscalingplans-scalingplan.html
     */
    interface ScalingPlanProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscalingplans-scalingplan.html#cfn-autoscalingplans-scalingplan-applicationsource
       */
      ApplicationSource: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscalingplans-scalingplan.html#cfn-autoscalingplans-scalingplan-scalinginstructions
       */
      ScalingInstructions: {}[];
    }
    
    
    interface ScalingPlan extends Resource<"AWS::AutoScalingPlans::ScalingPlan">, ScalingPlanProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ScalingPlan(id: string, props: ScalingPlanProps): Promise<ScalingPlan>;
  }
  namespace B2BI {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-capability.html
     */
    interface CapabilityProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-capability.html#cfn-b2bi-capability-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-capability.html#cfn-b2bi-capability-configuration
       */
      Configuration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-capability.html#cfn-b2bi-capability-instructionsdocuments
       */
      InstructionsDocuments?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-capability.html#cfn-b2bi-capability-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-capability.html#cfn-b2bi-capability-name
       */
      Name: string;
    }
    
    
    interface Capability extends Resource<"AWS::B2BI::Capability">, CapabilityProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Capability(id: string, props: CapabilityProps): Promise<Capability>;
  }
  namespace B2BI {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-partnership.html
     */
    interface PartnershipProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-partnership.html#cfn-b2bi-partnership-profileid
       */
      ProfileId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-partnership.html#cfn-b2bi-partnership-email
       */
      Email: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-partnership.html#cfn-b2bi-partnership-capabilities
       */
      Capabilities: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-partnership.html#cfn-b2bi-partnership-phone
       */
      Phone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-partnership.html#cfn-b2bi-partnership-capabilityoptions
       */
      CapabilityOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-partnership.html#cfn-b2bi-partnership-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-partnership.html#cfn-b2bi-partnership-name
       */
      Name: string;
    }
    
    
    interface Partnership extends Resource<"AWS::B2BI::Partnership">, PartnershipProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Partnership(id: string, props: PartnershipProps): Promise<Partnership>;
  }
  namespace B2BI {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-profile.html
     */
    interface ProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-profile.html#cfn-b2bi-profile-logging
       */
      Logging: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-profile.html#cfn-b2bi-profile-email
       */
      Email?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-profile.html#cfn-b2bi-profile-businessname
       */
      BusinessName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-profile.html#cfn-b2bi-profile-phone
       */
      Phone: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-profile.html#cfn-b2bi-profile-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-profile.html#cfn-b2bi-profile-name
       */
      Name: string;
    }
    
    
    interface Profile extends Resource<"AWS::B2BI::Profile">, ProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Profile(id: string, props: ProfileProps): Promise<Profile>;
  }
  namespace B2BI {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html
     */
    interface TransformerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html#cfn-b2bi-transformer-status
       */
      Status: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html#cfn-b2bi-transformer-mapping
       */
      Mapping?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html#cfn-b2bi-transformer-inputconversion
       */
      InputConversion?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html#cfn-b2bi-transformer-sampledocuments
       */
      SampleDocuments?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html#cfn-b2bi-transformer-outputconversion
       */
      OutputConversion?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html#cfn-b2bi-transformer-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html#cfn-b2bi-transformer-name
       */
      Name: string;
    }
    
    
    interface Transformer extends Resource<"AWS::B2BI::Transformer">, TransformerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Transformer(id: string, props: TransformerProps): Promise<Transformer>;
  }
  namespace BCMDataExports {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bcmdataexports-export.html
     */
    interface ExportProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bcmdataexports-export.html#cfn-bcmdataexports-export-export
       */
      Export: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bcmdataexports-export.html#cfn-bcmdataexports-export-tags
       */
      Tags?: {}[];
    }
    
    
    interface Export extends Resource<"AWS::BCMDataExports::Export">, ExportProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Export(id: string, props: ExportProps): Promise<Export>;
  }
  namespace Backup {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html
     */
    interface BackupPlanProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html#cfn-backup-backupplan-backupplan
       */
      BackupPlan: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html#cfn-backup-backupplan-backupplantags
       */
      BackupPlanTags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface BackupPlan extends Resource<"AWS::Backup::BackupPlan">, BackupPlanProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BackupPlan(id: string, props: BackupPlanProps): Promise<BackupPlan>;
  }
  namespace Backup {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html
     */
    interface BackupSelectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html#cfn-backup-backupselection-backupselection
       */
      BackupSelection: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html#cfn-backup-backupselection-backupplanid
       */
      BackupPlanId: string;
    }
    
    
    interface BackupSelection extends Resource<"AWS::Backup::BackupSelection">, BackupSelectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BackupSelection(id: string, props: BackupSelectionProps): Promise<BackupSelection>;
  }
  namespace Backup {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html
     */
    interface BackupVaultProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaulttags
       */
      BackupVaultTags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaultname
       */
      BackupVaultName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-encryptionkeyarn
       */
      EncryptionKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-lockconfiguration
       */
      LockConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-notifications
       */
      Notifications?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-accesspolicy
       */
      AccessPolicy?: {
        [k: string]: unknown;
      };
    }
    
    
    interface BackupVault extends Resource<"AWS::Backup::BackupVault">, BackupVaultProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BackupVault(id: string, props: BackupVaultProps): Promise<BackupVault>;
  }
  namespace Backup {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html
     */
    interface FrameworkProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworkcontrols
       */
      FrameworkControls: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworkname
       */
      FrameworkName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworktags
       */
      FrameworkTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworkdescription
       */
      FrameworkDescription?: string;
    }
    
    
    interface Framework extends Resource<"AWS::Backup::Framework">, FrameworkProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Framework(id: string, props: FrameworkProps): Promise<Framework>;
  }
  namespace Backup {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html
     */
    interface LogicallyAirGappedBackupVaultProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html#cfn-backup-logicallyairgappedbackupvault-backupvaulttags
       */
      BackupVaultTags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html#cfn-backup-logicallyairgappedbackupvault-backupvaultname
       */
      BackupVaultName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html#cfn-backup-logicallyairgappedbackupvault-maxretentiondays
       */
      MaxRetentionDays: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html#cfn-backup-logicallyairgappedbackupvault-minretentiondays
       */
      MinRetentionDays: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html#cfn-backup-logicallyairgappedbackupvault-notifications
       */
      Notifications?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html#cfn-backup-logicallyairgappedbackupvault-accesspolicy
       */
      AccessPolicy?: {
        [k: string]: unknown;
      };
    }
    
    
    interface LogicallyAirGappedBackupVault extends Resource<"AWS::Backup::LogicallyAirGappedBackupVault">, LogicallyAirGappedBackupVaultProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LogicallyAirGappedBackupVault(id: string, props: LogicallyAirGappedBackupVaultProps): Promise<LogicallyAirGappedBackupVault>;
  }
  namespace Backup {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html
     */
    interface ReportPlanProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportsetting
       */
      ReportSetting: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportplandescription
       */
      ReportPlanDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportplanname
       */
      ReportPlanName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportdeliverychannel
       */
      ReportDeliveryChannel: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportplantags
       */
      ReportPlanTags?: {}[];
    }
    
    
    interface ReportPlan extends Resource<"AWS::Backup::ReportPlan">, ReportPlanProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReportPlan(id: string, props: ReportPlanProps): Promise<ReportPlan>;
  }
  namespace Backup {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingplan.html
     */
    interface RestoreTestingPlanProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingplan.html#cfn-backup-restoretestingplan-scheduleexpression
       */
      ScheduleExpression: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingplan.html#cfn-backup-restoretestingplan-startwindowhours
       */
      StartWindowHours?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingplan.html#cfn-backup-restoretestingplan-recoverypointselection
       */
      RecoveryPointSelection: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingplan.html#cfn-backup-restoretestingplan-restoretestingplanname
       */
      RestoreTestingPlanName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingplan.html#cfn-backup-restoretestingplan-scheduleexpressiontimezone
       */
      ScheduleExpressionTimezone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingplan.html#cfn-backup-restoretestingplan-tags
       */
      Tags?: {}[];
    }
    
    
    interface RestoreTestingPlan extends Resource<"AWS::Backup::RestoreTestingPlan">, RestoreTestingPlanProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RestoreTestingPlan(id: string, props: RestoreTestingPlanProps): Promise<RestoreTestingPlan>;
  }
  namespace Backup {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingselection.html
     */
    interface RestoreTestingSelectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingselection.html#cfn-backup-restoretestingselection-protectedresourceconditions
       */
      ProtectedResourceConditions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingselection.html#cfn-backup-restoretestingselection-protectedresourcetype
       */
      ProtectedResourceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingselection.html#cfn-backup-restoretestingselection-restoremetadataoverrides
       */
      RestoreMetadataOverrides?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingselection.html#cfn-backup-restoretestingselection-restoretestingselectionname
       */
      RestoreTestingSelectionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingselection.html#cfn-backup-restoretestingselection-protectedresourcearns
       */
      ProtectedResourceArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingselection.html#cfn-backup-restoretestingselection-restoretestingplanname
       */
      RestoreTestingPlanName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingselection.html#cfn-backup-restoretestingselection-iamrolearn
       */
      IamRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-restoretestingselection.html#cfn-backup-restoretestingselection-validationwindowhours
       */
      ValidationWindowHours?: number;
    }
    
    
    interface RestoreTestingSelection extends Resource<"AWS::Backup::RestoreTestingSelection">, RestoreTestingSelectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RestoreTestingSelection(id: string, props: RestoreTestingSelectionProps): Promise<RestoreTestingSelection>;
  }
  namespace BackupGateway {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backupgateway-hypervisor.html
     */
    interface HypervisorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backupgateway-hypervisor.html#cfn-backupgateway-hypervisor-kmskeyarn
       */
      KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backupgateway-hypervisor.html#cfn-backupgateway-hypervisor-username
       */
      Username?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backupgateway-hypervisor.html#cfn-backupgateway-hypervisor-host
       */
      Host?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backupgateway-hypervisor.html#cfn-backupgateway-hypervisor-loggrouparn
       */
      LogGroupArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backupgateway-hypervisor.html#cfn-backupgateway-hypervisor-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backupgateway-hypervisor.html#cfn-backupgateway-hypervisor-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backupgateway-hypervisor.html#cfn-backupgateway-hypervisor-password
       */
      Password?: string;
    }
    
    
    interface Hypervisor extends Resource<"AWS::BackupGateway::Hypervisor">, HypervisorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Hypervisor(id: string, props: HypervisorProps): Promise<Hypervisor>;
  }
  namespace Batch {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html
     */
    interface ComputeEnvironmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-context
       */
      Context?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-unmanagedvcpus
       */
      UnmanagedvCpus?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-replacecomputeenvironment
       */
      ReplaceComputeEnvironment?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-servicerole
       */
      ServiceRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-updatepolicy
       */
      UpdatePolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-eksconfiguration
       */
      EksConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-computeenvironmentname
       */
      ComputeEnvironmentName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-computeresources
       */
      ComputeResources?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-state
       */
      State?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface ComputeEnvironment extends Resource<"AWS::Batch::ComputeEnvironment">, ComputeEnvironmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ComputeEnvironment(id: string, props: ComputeEnvironmentProps): Promise<ComputeEnvironment>;
  }
  namespace Batch {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-consumableresource.html
     */
    interface ConsumableResourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-consumableresource.html#cfn-batch-consumableresource-totalquantity
       */
      TotalQuantity: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-consumableresource.html#cfn-batch-consumableresource-consumableresourcename
       */
      ConsumableResourceName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-consumableresource.html#cfn-batch-consumableresource-resourcetype
       */
      ResourceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-consumableresource.html#cfn-batch-consumableresource-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface ConsumableResource extends Resource<"AWS::Batch::ConsumableResource">, ConsumableResourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConsumableResource(id: string, props: ConsumableResourceProps): Promise<ConsumableResource>;
  }
  namespace Batch {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html
     */
    interface JobDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-parameters
       */
      Parameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-timeout
       */
      Timeout?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-jobdefinitionname
       */
      JobDefinitionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-propagatetags
       */
      PropagateTags?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-platformcapabilities
       */
      PlatformCapabilities?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-eksproperties
       */
      EksProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-consumableresourceproperties
       */
      ConsumableResourceProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-nodeproperties
       */
      NodeProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-schedulingpriority
       */
      SchedulingPriority?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-containerproperties
       */
      ContainerProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-ecsproperties
       */
      EcsProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-retrystrategy
       */
      RetryStrategy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface JobDefinition extends Resource<"AWS::Batch::JobDefinition">, JobDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function JobDefinition(id: string, props: JobDefinitionProps): Promise<JobDefinition>;
  }
  namespace Batch {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobqueue.html
     */
    interface JobQueueProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobqueue.html#cfn-batch-jobqueue-computeenvironmentorder
       */
      ComputeEnvironmentOrder: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobqueue.html#cfn-batch-jobqueue-priority
       */
      Priority: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobqueue.html#cfn-batch-jobqueue-state
       */
      State?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobqueue.html#cfn-batch-jobqueue-schedulingpolicyarn
       */
      SchedulingPolicyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobqueue.html#cfn-batch-jobqueue-jobstatetimelimitactions
       */
      JobStateTimeLimitActions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobqueue.html#cfn-batch-jobqueue-jobqueuename
       */
      JobQueueName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobqueue.html#cfn-batch-jobqueue-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface JobQueue extends Resource<"AWS::Batch::JobQueue">, JobQueueProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function JobQueue(id: string, props: JobQueueProps): Promise<JobQueue>;
  }
  namespace Batch {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-schedulingpolicy.html
     */
    interface SchedulingPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-schedulingpolicy.html#cfn-batch-schedulingpolicy-fairsharepolicy
       */
      FairsharePolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-schedulingpolicy.html#cfn-batch-schedulingpolicy-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-schedulingpolicy.html#cfn-batch-schedulingpolicy-name
       */
      Name?: string;
    }
    
    
    interface SchedulingPolicy extends Resource<"AWS::Batch::SchedulingPolicy">, SchedulingPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SchedulingPolicy(id: string, props: SchedulingPolicyProps): Promise<SchedulingPolicy>;
  }
  namespace Bedrock {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html
     */
    interface AgentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-agentcollaborators
       */
      AgentCollaborators?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-skipresourceinusecheckondelete
       */
      SkipResourceInUseCheckOnDelete?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-guardrailconfiguration
       */
      GuardrailConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-promptoverrideconfiguration
       */
      PromptOverrideConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-memoryconfiguration
       */
      MemoryConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-agentcollaboration
       */
      AgentCollaboration?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-instruction
       */
      Instruction?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-customorchestration
       */
      CustomOrchestration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-testaliastags
       */
      TestAliasTags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-agentresourcerolearn
       */
      AgentResourceRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-orchestrationtype
       */
      OrchestrationType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-idlesessionttlinseconds
       */
      IdleSessionTTLInSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-foundationmodel
       */
      FoundationModel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-customerencryptionkeyarn
       */
      CustomerEncryptionKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-agentname
       */
      AgentName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-knowledgebases
       */
      KnowledgeBases?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-actiongroups
       */
      ActionGroups?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-autoprepare
       */
      AutoPrepare?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agent.html#cfn-bedrock-agent-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Agent extends Resource<"AWS::Bedrock::Agent">, AgentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Agent(id: string, props: AgentProps): Promise<Agent>;
  }
  namespace Bedrock {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agentalias.html
     */
    interface AgentAliasProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agentalias.html#cfn-bedrock-agentalias-agentaliasname
       */
      AgentAliasName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agentalias.html#cfn-bedrock-agentalias-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agentalias.html#cfn-bedrock-agentalias-routingconfiguration
       */
      RoutingConfiguration?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agentalias.html#cfn-bedrock-agentalias-agentid
       */
      AgentId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-agentalias.html#cfn-bedrock-agentalias-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface AgentAlias extends Resource<"AWS::Bedrock::AgentAlias">, AgentAliasProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AgentAlias(id: string, props: AgentAliasProps): Promise<AgentAlias>;
  }
  namespace Bedrock {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-applicationinferenceprofile.html
     */
    interface ApplicationInferenceProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-applicationinferenceprofile.html#cfn-bedrock-applicationinferenceprofile-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-applicationinferenceprofile.html#cfn-bedrock-applicationinferenceprofile-inferenceprofilename
       */
      InferenceProfileName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-applicationinferenceprofile.html#cfn-bedrock-applicationinferenceprofile-modelsource
       */
      ModelSource?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-applicationinferenceprofile.html#cfn-bedrock-applicationinferenceprofile-tags
       */
      Tags?: {}[];
    }
    
    
    interface ApplicationInferenceProfile extends Resource<"AWS::Bedrock::ApplicationInferenceProfile">, ApplicationInferenceProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApplicationInferenceProfile(id: string, props: ApplicationInferenceProfileProps): Promise<ApplicationInferenceProfile>;
  }
  namespace Bedrock {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-blueprint.html
     */
    interface BlueprintProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-blueprint.html#cfn-bedrock-blueprint-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-blueprint.html#cfn-bedrock-blueprint-blueprintname
       */
      BlueprintName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-blueprint.html#cfn-bedrock-blueprint-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-blueprint.html#cfn-bedrock-blueprint-schema
       */
      Schema: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-blueprint.html#cfn-bedrock-blueprint-kmsencryptioncontext
       */
      KmsEncryptionContext?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-blueprint.html#cfn-bedrock-blueprint-tags
       */
      Tags?: {}[];
    }
    
    
    interface Blueprint extends Resource<"AWS::Bedrock::Blueprint">, BlueprintProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Blueprint(id: string, props: BlueprintProps): Promise<Blueprint>;
  }
  namespace Bedrock {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-dataautomationproject.html
     */
    interface DataAutomationProjectProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-dataautomationproject.html#cfn-bedrock-dataautomationproject-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-dataautomationproject.html#cfn-bedrock-dataautomationproject-projectname
       */
      ProjectName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-dataautomationproject.html#cfn-bedrock-dataautomationproject-standardoutputconfiguration
       */
      StandardOutputConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-dataautomationproject.html#cfn-bedrock-dataautomationproject-overrideconfiguration
       */
      OverrideConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-dataautomationproject.html#cfn-bedrock-dataautomationproject-kmsencryptioncontext
       */
      KmsEncryptionContext?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-dataautomationproject.html#cfn-bedrock-dataautomationproject-customoutputconfiguration
       */
      CustomOutputConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-dataautomationproject.html#cfn-bedrock-dataautomationproject-projectdescription
       */
      ProjectDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-dataautomationproject.html#cfn-bedrock-dataautomationproject-tags
       */
      Tags?: {}[];
    }
    
    
    interface DataAutomationProject extends Resource<"AWS::Bedrock::DataAutomationProject">, DataAutomationProjectProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataAutomationProject(id: string, props: DataAutomationProjectProps): Promise<DataAutomationProject>;
  }
  namespace Bedrock {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-datasource.html
     */
    interface DataSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-datasource.html#cfn-bedrock-datasource-datadeletionpolicy
       */
      DataDeletionPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-datasource.html#cfn-bedrock-datasource-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-datasource.html#cfn-bedrock-datasource-knowledgebaseid
       */
      KnowledgeBaseId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-datasource.html#cfn-bedrock-datasource-serversideencryptionconfiguration
       */
      ServerSideEncryptionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-datasource.html#cfn-bedrock-datasource-vectoringestionconfiguration
       */
      VectorIngestionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-datasource.html#cfn-bedrock-datasource-datasourceconfiguration
       */
      DataSourceConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-datasource.html#cfn-bedrock-datasource-name
       */
      Name: string;
    }
    
    
    interface DataSource extends Resource<"AWS::Bedrock::DataSource">, DataSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataSource(id: string, props: DataSourceProps): Promise<DataSource>;
  }
  namespace Bedrock {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html
     */
    interface FlowProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-testaliastags
       */
      TestAliasTags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-executionrolearn
       */
      ExecutionRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-definitionstring
       */
      DefinitionString?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-definition
       */
      Definition?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-definitionsubstitutions
       */
      DefinitionSubstitutions?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-customerencryptionkeyarn
       */
      CustomerEncryptionKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-definitions3location
       */
      DefinitionS3Location?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-name
       */
      Name: string;
    }
    
    
    interface Flow extends Resource<"AWS::Bedrock::Flow">, FlowProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Flow(id: string, props: FlowProps): Promise<Flow>;
  }
  namespace Bedrock {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flowalias.html
     */
    interface FlowAliasProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flowalias.html#cfn-bedrock-flowalias-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flowalias.html#cfn-bedrock-flowalias-routingconfiguration
       */
      RoutingConfiguration: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flowalias.html#cfn-bedrock-flowalias-flowarn
       */
      FlowArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flowalias.html#cfn-bedrock-flowalias-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flowalias.html#cfn-bedrock-flowalias-name
       */
      Name: string;
    }
    
    
    interface FlowAlias extends Resource<"AWS::Bedrock::FlowAlias">, FlowAliasProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FlowAlias(id: string, props: FlowAliasProps): Promise<FlowAlias>;
  }
  namespace Bedrock {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flowversion.html
     */
    interface FlowVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flowversion.html#cfn-bedrock-flowversion-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flowversion.html#cfn-bedrock-flowversion-flowarn
       */
      FlowArn: string;
    }
    
    
    interface FlowVersion extends Resource<"AWS::Bedrock::FlowVersion">, FlowVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FlowVersion(id: string, props: FlowVersionProps): Promise<FlowVersion>;
  }
  namespace Bedrock {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrail.html
     */
    interface GuardrailProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrail.html#cfn-bedrock-guardrail-topicpolicyconfig
       */
      TopicPolicyConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrail.html#cfn-bedrock-guardrail-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrail.html#cfn-bedrock-guardrail-wordpolicyconfig
       */
      WordPolicyConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrail.html#cfn-bedrock-guardrail-contextualgroundingpolicyconfig
       */
      ContextualGroundingPolicyConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrail.html#cfn-bedrock-guardrail-kmskeyarn
       */
      KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrail.html#cfn-bedrock-guardrail-blockedinputmessaging
       */
      BlockedInputMessaging: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrail.html#cfn-bedrock-guardrail-blockedoutputsmessaging
       */
      BlockedOutputsMessaging: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrail.html#cfn-bedrock-guardrail-sensitiveinformationpolicyconfig
       */
      SensitiveInformationPolicyConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrail.html#cfn-bedrock-guardrail-contentpolicyconfig
       */
      ContentPolicyConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrail.html#cfn-bedrock-guardrail-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrail.html#cfn-bedrock-guardrail-name
       */
      Name: string;
    }
    
    
    interface Guardrail extends Resource<"AWS::Bedrock::Guardrail">, GuardrailProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Guardrail(id: string, props: GuardrailProps): Promise<Guardrail>;
  }
  namespace Bedrock {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrailversion.html
     */
    interface GuardrailVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrailversion.html#cfn-bedrock-guardrailversion-guardrailidentifier
       */
      GuardrailIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-guardrailversion.html#cfn-bedrock-guardrailversion-description
       */
      Description?: string;
    }
    
    
    interface GuardrailVersion extends Resource<"AWS::Bedrock::GuardrailVersion">, GuardrailVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GuardrailVersion(id: string, props: GuardrailVersionProps): Promise<GuardrailVersion>;
  }
  namespace Bedrock {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-knowledgebase.html
     */
    interface KnowledgeBaseProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-knowledgebase.html#cfn-bedrock-knowledgebase-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-knowledgebase.html#cfn-bedrock-knowledgebase-knowledgebaseconfiguration
       */
      KnowledgeBaseConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-knowledgebase.html#cfn-bedrock-knowledgebase-storageconfiguration
       */
      StorageConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-knowledgebase.html#cfn-bedrock-knowledgebase-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-knowledgebase.html#cfn-bedrock-knowledgebase-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-knowledgebase.html#cfn-bedrock-knowledgebase-name
       */
      Name: string;
    }
    
    
    interface KnowledgeBase extends Resource<"AWS::Bedrock::KnowledgeBase">, KnowledgeBaseProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function KnowledgeBase(id: string, props: KnowledgeBaseProps): Promise<KnowledgeBase>;
  }
  namespace Bedrock {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-prompt.html
     */
    interface PromptProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-prompt.html#cfn-bedrock-prompt-variants
       */
      Variants?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-prompt.html#cfn-bedrock-prompt-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-prompt.html#cfn-bedrock-prompt-customerencryptionkeyarn
       */
      CustomerEncryptionKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-prompt.html#cfn-bedrock-prompt-defaultvariant
       */
      DefaultVariant?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-prompt.html#cfn-bedrock-prompt-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-prompt.html#cfn-bedrock-prompt-name
       */
      Name: string;
    }
    
    
    interface Prompt extends Resource<"AWS::Bedrock::Prompt">, PromptProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Prompt(id: string, props: PromptProps): Promise<Prompt>;
  }
  namespace Bedrock {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-promptversion.html
     */
    interface PromptVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-promptversion.html#cfn-bedrock-promptversion-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-promptversion.html#cfn-bedrock-promptversion-promptarn
       */
      PromptArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-promptversion.html#cfn-bedrock-promptversion-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface PromptVersion extends Resource<"AWS::Bedrock::PromptVersion">, PromptVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PromptVersion(id: string, props: PromptVersionProps): Promise<PromptVersion>;
  }
  namespace BillingConductor {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-billinggroup.html
     */
    interface BillingGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-billinggroup.html#cfn-billingconductor-billinggroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-billinggroup.html#cfn-billingconductor-billinggroup-primaryaccountid
       */
      PrimaryAccountId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-billinggroup.html#cfn-billingconductor-billinggroup-computationpreference
       */
      ComputationPreference: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-billinggroup.html#cfn-billingconductor-billinggroup-accountgrouping
       */
      AccountGrouping: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-billinggroup.html#cfn-billingconductor-billinggroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-billinggroup.html#cfn-billingconductor-billinggroup-name
       */
      Name: string;
    }
    
    
    interface BillingGroup extends Resource<"AWS::BillingConductor::BillingGroup">, BillingGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BillingGroup(id: string, props: BillingGroupProps): Promise<BillingGroup>;
  }
  namespace BillingConductor {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-customlineitem.html
     */
    interface CustomLineItemProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-customlineitem.html#cfn-billingconductor-customlineitem-billingperiodrange
       */
      BillingPeriodRange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-customlineitem.html#cfn-billingconductor-customlineitem-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-customlineitem.html#cfn-billingconductor-customlineitem-accountid
       */
      AccountId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-customlineitem.html#cfn-billingconductor-customlineitem-billinggrouparn
       */
      BillingGroupArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-customlineitem.html#cfn-billingconductor-customlineitem-customlineitemchargedetails
       */
      CustomLineItemChargeDetails?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-customlineitem.html#cfn-billingconductor-customlineitem-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-customlineitem.html#cfn-billingconductor-customlineitem-name
       */
      Name: string;
    }
    
    
    interface CustomLineItem extends Resource<"AWS::BillingConductor::CustomLineItem">, CustomLineItemProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CustomLineItem(id: string, props: CustomLineItemProps): Promise<CustomLineItem>;
  }
  namespace BillingConductor {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingplan.html
     */
    interface PricingPlanProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingplan.html#cfn-billingconductor-pricingplan-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingplan.html#cfn-billingconductor-pricingplan-pricingrulearns
       */
      PricingRuleArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingplan.html#cfn-billingconductor-pricingplan-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingplan.html#cfn-billingconductor-pricingplan-name
       */
      Name: string;
    }
    
    
    interface PricingPlan extends Resource<"AWS::BillingConductor::PricingPlan">, PricingPlanProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PricingPlan(id: string, props: PricingPlanProps): Promise<PricingPlan>;
  }
  namespace BillingConductor {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingrule.html
     */
    interface PricingRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingrule.html#cfn-billingconductor-pricingrule-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingrule.html#cfn-billingconductor-pricingrule-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingrule.html#cfn-billingconductor-pricingrule-scope
       */
      Scope: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingrule.html#cfn-billingconductor-pricingrule-service
       */
      Service?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingrule.html#cfn-billingconductor-pricingrule-modifierpercentage
       */
      ModifierPercentage?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingrule.html#cfn-billingconductor-pricingrule-operation
       */
      Operation?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingrule.html#cfn-billingconductor-pricingrule-tiering
       */
      Tiering?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingrule.html#cfn-billingconductor-pricingrule-billingentity
       */
      BillingEntity?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingrule.html#cfn-billingconductor-pricingrule-usagetype
       */
      UsageType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingrule.html#cfn-billingconductor-pricingrule-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-billingconductor-pricingrule.html#cfn-billingconductor-pricingrule-name
       */
      Name: string;
    }
    
    
    interface PricingRule extends Resource<"AWS::BillingConductor::PricingRule">, PricingRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PricingRule(id: string, props: PricingRuleProps): Promise<PricingRule>;
  }
  namespace Budgets {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budget.html
     */
    interface BudgetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budget.html#cfn-budgets-budget-notificationswithsubscribers
       */
      NotificationsWithSubscribers?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budget.html#cfn-budgets-budget-resourcetags
       */
      ResourceTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budget.html#cfn-budgets-budget-budget
       */
      Budget: {};
    }
    
    
    interface Budget extends Resource<"AWS::Budgets::Budget">, BudgetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Budget(id: string, props: BudgetProps): Promise<Budget>;
  }
  namespace Budgets {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budgetsaction.html
     */
    interface BudgetsActionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budgetsaction.html#cfn-budgets-budgetsaction-executionrolearn
       */
      ExecutionRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budgetsaction.html#cfn-budgets-budgetsaction-actiontype
       */
      ActionType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budgetsaction.html#cfn-budgets-budgetsaction-resourcetags
       */
      ResourceTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budgetsaction.html#cfn-budgets-budgetsaction-notificationtype
       */
      NotificationType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budgetsaction.html#cfn-budgets-budgetsaction-actionthreshold
       */
      ActionThreshold: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budgetsaction.html#cfn-budgets-budgetsaction-definition
       */
      Definition: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budgetsaction.html#cfn-budgets-budgetsaction-approvalmodel
       */
      ApprovalModel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budgetsaction.html#cfn-budgets-budgetsaction-subscribers
       */
      Subscribers: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-budgets-budgetsaction.html#cfn-budgets-budgetsaction-budgetname
       */
      BudgetName: string;
    }
    
    
    interface BudgetsAction extends Resource<"AWS::Budgets::BudgetsAction">, BudgetsActionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BudgetsAction(id: string, props: BudgetsActionProps): Promise<BudgetsAction>;
  }
  namespace CE {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalymonitor.html
     */
    interface AnomalyMonitorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalymonitor.html#cfn-ce-anomalymonitor-monitortype
       */
      MonitorType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalymonitor.html#cfn-ce-anomalymonitor-resourcetags
       */
      ResourceTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalymonitor.html#cfn-ce-anomalymonitor-monitorname
       */
      MonitorName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalymonitor.html#cfn-ce-anomalymonitor-monitorspecification
       */
      MonitorSpecification?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalymonitor.html#cfn-ce-anomalymonitor-monitordimension
       */
      MonitorDimension?: string;
    }
    
    
    interface AnomalyMonitor extends Resource<"AWS::CE::AnomalyMonitor">, AnomalyMonitorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AnomalyMonitor(id: string, props: AnomalyMonitorProps): Promise<AnomalyMonitor>;
  }
  namespace CE {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html
     */
    interface AnomalySubscriptionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html#cfn-ce-anomalysubscription-monitorarnlist
       */
      MonitorArnList: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html#cfn-ce-anomalysubscription-resourcetags
       */
      ResourceTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html#cfn-ce-anomalysubscription-frequency
       */
      Frequency: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html#cfn-ce-anomalysubscription-subscriptionname
       */
      SubscriptionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html#cfn-ce-anomalysubscription-subscribers
       */
      Subscribers: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html#cfn-ce-anomalysubscription-threshold
       */
      Threshold?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html#cfn-ce-anomalysubscription-thresholdexpression
       */
      ThresholdExpression?: string;
    }
    
    
    interface AnomalySubscription extends Resource<"AWS::CE::AnomalySubscription">, AnomalySubscriptionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AnomalySubscription(id: string, props: AnomalySubscriptionProps): Promise<AnomalySubscription>;
  }
  namespace CE {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-costcategory.html
     */
    interface CostCategoryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-costcategory.html#cfn-ce-costcategory-defaultvalue
       */
      DefaultValue?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-costcategory.html#cfn-ce-costcategory-splitchargerules
       */
      SplitChargeRules?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-costcategory.html#cfn-ce-costcategory-ruleversion
       */
      RuleVersion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-costcategory.html#cfn-ce-costcategory-rules
       */
      Rules: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-costcategory.html#cfn-ce-costcategory-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-costcategory.html#cfn-ce-costcategory-name
       */
      Name: string;
    }
    
    
    interface CostCategory extends Resource<"AWS::CE::CostCategory">, CostCategoryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CostCategory(id: string, props: CostCategoryProps): Promise<CostCategory>;
  }
  namespace CUR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html
     */
    interface ReportDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html#cfn-cur-reportdefinition-additionalartifacts
       */
      AdditionalArtifacts?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html#cfn-cur-reportdefinition-reportname
       */
      ReportName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html#cfn-cur-reportdefinition-compression
       */
      Compression: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html#cfn-cur-reportdefinition-format
       */
      Format: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html#cfn-cur-reportdefinition-refreshclosedreports
       */
      RefreshClosedReports: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html#cfn-cur-reportdefinition-s3bucket
       */
      S3Bucket: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html#cfn-cur-reportdefinition-reportversioning
       */
      ReportVersioning: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html#cfn-cur-reportdefinition-s3region
       */
      S3Region: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html#cfn-cur-reportdefinition-timeunit
       */
      TimeUnit: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html#cfn-cur-reportdefinition-billingviewarn
       */
      BillingViewArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html#cfn-cur-reportdefinition-s3prefix
       */
      S3Prefix: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cur-reportdefinition.html#cfn-cur-reportdefinition-additionalschemaelements
       */
      AdditionalSchemaElements?: string[];
    }
    
    
    interface ReportDefinition extends Resource<"AWS::CUR::ReportDefinition">, ReportDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReportDefinition(id: string, props: ReportDefinitionProps): Promise<ReportDefinition>;
  }
  namespace Cassandra {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html
     */
    interface KeyspaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html#cfn-cassandra-keyspace-clientsidetimestampsenabled
       */
      ClientSideTimestampsEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html#cfn-cassandra-keyspace-keyspacename
       */
      KeyspaceName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html#cfn-cassandra-keyspace-replicationspecification
       */
      ReplicationSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html#cfn-cassandra-keyspace-tags
       */
      Tags?: {}[];
    }
    
    
    interface Keyspace extends Resource<"AWS::Cassandra::Keyspace">, KeyspaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Keyspace(id: string, props: KeyspaceProps): Promise<Keyspace>;
  }
  namespace Cassandra {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html
     */
    interface TableProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-replicaspecifications
       */
      ReplicaSpecifications?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-clusteringkeycolumns
       */
      ClusteringKeyColumns?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-keyspacename
       */
      KeyspaceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-encryptionspecification
       */
      EncryptionSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tablename
       */
      TableName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-pointintimerecoveryenabled
       */
      PointInTimeRecoveryEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-autoscalingspecifications
       */
      AutoScalingSpecifications?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-clientsidetimestampsenabled
       */
      ClientSideTimestampsEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-partitionkeycolumns
       */
      PartitionKeyColumns: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-billingmode
       */
      BillingMode?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-defaulttimetolive
       */
      DefaultTimeToLive?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-regularcolumns
       */
      RegularColumns?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tags
       */
      Tags?: {}[];
    }
    
    
    interface Table extends Resource<"AWS::Cassandra::Table">, TableProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Table(id: string, props: TableProps): Promise<Table>;
  }
  namespace Cassandra {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-type.html
     */
    interface TypeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-type.html#cfn-cassandra-type-typename
       */
      TypeName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-type.html#cfn-cassandra-type-fields
       */
      Fields: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-type.html#cfn-cassandra-type-keyspacename
       */
      KeyspaceName: string;
    }
    
    
    interface Type extends Resource<"AWS::Cassandra::Type">, TypeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Type(id: string, props: TypeProps): Promise<Type>;
  }
  namespace CertificateManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-account.html
     */
    interface AccountProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-account.html#cfn-certificatemanager-account-expiryeventsconfiguration
       */
      ExpiryEventsConfiguration: {};
    }
    
    
    interface Account extends Resource<"AWS::CertificateManager::Account">, AccountProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Account(id: string, props: AccountProps): Promise<Account>;
  }
  namespace CertificateManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html
     */
    interface CertificateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-certificateauthorityarn
       */
      CertificateAuthorityArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-certificatetransparencyloggingpreference
       */
      CertificateTransparencyLoggingPreference?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-domainvalidationoptions
       */
      DomainValidationOptions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-keyalgorithm
       */
      KeyAlgorithm?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-subjectalternativenames
       */
      SubjectAlternativeNames?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html#cfn-certificatemanager-certificate-validationmethod
       */
      ValidationMethod?: string;
    }
    
    
    interface Certificate extends Resource<"AWS::CertificateManager::Certificate">, CertificateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Certificate(id: string, props: CertificateProps): Promise<Certificate>;
  }
  namespace Chatbot {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-customaction.html
     */
    interface CustomActionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-customaction.html#cfn-chatbot-customaction-actionname
       */
      ActionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-customaction.html#cfn-chatbot-customaction-aliasname
       */
      AliasName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-customaction.html#cfn-chatbot-customaction-definition
       */
      Definition: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-customaction.html#cfn-chatbot-customaction-attachments
       */
      Attachments?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-customaction.html#cfn-chatbot-customaction-tags
       */
      Tags?: {}[];
    }
    
    
    interface CustomAction extends Resource<"AWS::Chatbot::CustomAction">, CustomActionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CustomAction(id: string, props: CustomActionProps): Promise<CustomAction>;
  }
  namespace Chatbot {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-microsoftteamschannelconfiguration.html
     */
    interface MicrosoftTeamsChannelConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-microsoftteamschannelconfiguration.html#cfn-chatbot-microsoftteamschannelconfiguration-userrolerequired
       */
      UserRoleRequired?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-microsoftteamschannelconfiguration.html#cfn-chatbot-microsoftteamschannelconfiguration-logginglevel
       */
      LoggingLevel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-microsoftteamschannelconfiguration.html#cfn-chatbot-microsoftteamschannelconfiguration-teamschannelname
       */
      TeamsChannelName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-microsoftteamschannelconfiguration.html#cfn-chatbot-microsoftteamschannelconfiguration-customizationresourcearns
       */
      CustomizationResourceArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-microsoftteamschannelconfiguration.html#cfn-chatbot-microsoftteamschannelconfiguration-snstopicarns
       */
      SnsTopicArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-microsoftteamschannelconfiguration.html#cfn-chatbot-microsoftteamschannelconfiguration-guardrailpolicies
       */
      GuardrailPolicies?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-microsoftteamschannelconfiguration.html#cfn-chatbot-microsoftteamschannelconfiguration-iamrolearn
       */
      IamRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-microsoftteamschannelconfiguration.html#cfn-chatbot-microsoftteamschannelconfiguration-teamid
       */
      TeamId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-microsoftteamschannelconfiguration.html#cfn-chatbot-microsoftteamschannelconfiguration-configurationname
       */
      ConfigurationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-microsoftteamschannelconfiguration.html#cfn-chatbot-microsoftteamschannelconfiguration-teamstenantid
       */
      TeamsTenantId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-microsoftteamschannelconfiguration.html#cfn-chatbot-microsoftteamschannelconfiguration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-microsoftteamschannelconfiguration.html#cfn-chatbot-microsoftteamschannelconfiguration-teamschannelid
       */
      TeamsChannelId: string;
    }
    
    
    interface MicrosoftTeamsChannelConfiguration extends Resource<"AWS::Chatbot::MicrosoftTeamsChannelConfiguration">, MicrosoftTeamsChannelConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MicrosoftTeamsChannelConfiguration(id: string, props: MicrosoftTeamsChannelConfigurationProps): Promise<MicrosoftTeamsChannelConfiguration>;
  }
  namespace Chatbot {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html
     */
    interface SlackChannelConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-userrolerequired
       */
      UserRoleRequired?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-logginglevel
       */
      LoggingLevel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-customizationresourcearns
       */
      CustomizationResourceArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-snstopicarns
       */
      SnsTopicArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-guardrailpolicies
       */
      GuardrailPolicies?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-slackworkspaceid
       */
      SlackWorkspaceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-slackchannelid
       */
      SlackChannelId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-iamrolearn
       */
      IamRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-configurationname
       */
      ConfigurationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-tags
       */
      Tags?: {}[];
    }
    
    
    interface SlackChannelConfiguration extends Resource<"AWS::Chatbot::SlackChannelConfiguration">, SlackChannelConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SlackChannelConfiguration(id: string, props: SlackChannelConfigurationProps): Promise<SlackChannelConfiguration>;
  }
  namespace CleanRooms {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-analysistemplate.html
     */
    interface AnalysisTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-analysistemplate.html#cfn-cleanrooms-analysistemplate-membershipidentifier
       */
      MembershipIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-analysistemplate.html#cfn-cleanrooms-analysistemplate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-analysistemplate.html#cfn-cleanrooms-analysistemplate-format
       */
      Format: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-analysistemplate.html#cfn-cleanrooms-analysistemplate-sourcemetadata
       */
      SourceMetadata?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-analysistemplate.html#cfn-cleanrooms-analysistemplate-analysisparameters
       */
      AnalysisParameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-analysistemplate.html#cfn-cleanrooms-analysistemplate-schema
       */
      Schema?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-analysistemplate.html#cfn-cleanrooms-analysistemplate-source
       */
      Source: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-analysistemplate.html#cfn-cleanrooms-analysistemplate-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-analysistemplate.html#cfn-cleanrooms-analysistemplate-name
       */
      Name: string;
    }
    
    
    interface AnalysisTemplate extends Resource<"AWS::CleanRooms::AnalysisTemplate">, AnalysisTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AnalysisTemplate(id: string, props: AnalysisTemplateProps): Promise<AnalysisTemplate>;
  }
  namespace CleanRooms {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html
     */
    interface CollaborationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html#cfn-cleanrooms-collaboration-analyticsengine
       */
      AnalyticsEngine?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html#cfn-cleanrooms-collaboration-joblogstatus
       */
      JobLogStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html#cfn-cleanrooms-collaboration-creatordisplayname
       */
      CreatorDisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html#cfn-cleanrooms-collaboration-creatormemberabilities
       */
      CreatorMemberAbilities: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html#cfn-cleanrooms-collaboration-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html#cfn-cleanrooms-collaboration-querylogstatus
       */
      QueryLogStatus: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html#cfn-cleanrooms-collaboration-creatorpaymentconfiguration
       */
      CreatorPaymentConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html#cfn-cleanrooms-collaboration-dataencryptionmetadata
       */
      DataEncryptionMetadata?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html#cfn-cleanrooms-collaboration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html#cfn-cleanrooms-collaboration-members
       */
      Members: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html#cfn-cleanrooms-collaboration-creatormlmemberabilities
       */
      CreatorMLMemberAbilities?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html#cfn-cleanrooms-collaboration-name
       */
      Name: string;
    }
    
    
    interface Collaboration extends Resource<"AWS::CleanRooms::Collaboration">, CollaborationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Collaboration(id: string, props: CollaborationProps): Promise<Collaboration>;
  }
  namespace CleanRooms {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html
     */
    interface ConfiguredTableProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-selectedanalysismethods
       */
      SelectedAnalysisMethods?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-analysismethod
       */
      AnalysisMethod: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-tablereference
       */
      TableReference: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-analysisrules
       */
      AnalysisRules?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-allowedcolumns
       */
      AllowedColumns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-name
       */
      Name: string;
    }
    
    
    interface ConfiguredTable extends Resource<"AWS::CleanRooms::ConfiguredTable">, ConfiguredTableProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConfiguredTable(id: string, props: ConfiguredTableProps): Promise<ConfiguredTable>;
  }
  namespace CleanRooms {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtableassociation.html
     */
    interface ConfiguredTableAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtableassociation.html#cfn-cleanrooms-configuredtableassociation-membershipidentifier
       */
      MembershipIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtableassociation.html#cfn-cleanrooms-configuredtableassociation-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtableassociation.html#cfn-cleanrooms-configuredtableassociation-configuredtableassociationanalysisrules
       */
      ConfiguredTableAssociationAnalysisRules?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtableassociation.html#cfn-cleanrooms-configuredtableassociation-configuredtableidentifier
       */
      ConfiguredTableIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtableassociation.html#cfn-cleanrooms-configuredtableassociation-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtableassociation.html#cfn-cleanrooms-configuredtableassociation-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtableassociation.html#cfn-cleanrooms-configuredtableassociation-name
       */
      Name: string;
    }
    
    
    interface ConfiguredTableAssociation extends Resource<"AWS::CleanRooms::ConfiguredTableAssociation">, ConfiguredTableAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConfiguredTableAssociation(id: string, props: ConfiguredTableAssociationProps): Promise<ConfiguredTableAssociation>;
  }
  namespace CleanRooms {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idmappingtable.html
     */
    interface IdMappingTableProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idmappingtable.html#cfn-cleanrooms-idmappingtable-membershipidentifier
       */
      MembershipIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idmappingtable.html#cfn-cleanrooms-idmappingtable-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idmappingtable.html#cfn-cleanrooms-idmappingtable-kmskeyarn
       */
      KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idmappingtable.html#cfn-cleanrooms-idmappingtable-inputreferenceconfig
       */
      InputReferenceConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idmappingtable.html#cfn-cleanrooms-idmappingtable-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idmappingtable.html#cfn-cleanrooms-idmappingtable-name
       */
      Name: string;
    }
    
    
    interface IdMappingTable extends Resource<"AWS::CleanRooms::IdMappingTable">, IdMappingTableProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IdMappingTable(id: string, props: IdMappingTableProps): Promise<IdMappingTable>;
  }
  namespace CleanRooms {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idnamespaceassociation.html
     */
    interface IdNamespaceAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idnamespaceassociation.html#cfn-cleanrooms-idnamespaceassociation-idmappingconfig
       */
      IdMappingConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idnamespaceassociation.html#cfn-cleanrooms-idnamespaceassociation-membershipidentifier
       */
      MembershipIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idnamespaceassociation.html#cfn-cleanrooms-idnamespaceassociation-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idnamespaceassociation.html#cfn-cleanrooms-idnamespaceassociation-inputreferenceconfig
       */
      InputReferenceConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idnamespaceassociation.html#cfn-cleanrooms-idnamespaceassociation-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-idnamespaceassociation.html#cfn-cleanrooms-idnamespaceassociation-name
       */
      Name: string;
    }
    
    
    interface IdNamespaceAssociation extends Resource<"AWS::CleanRooms::IdNamespaceAssociation">, IdNamespaceAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IdNamespaceAssociation(id: string, props: IdNamespaceAssociationProps): Promise<IdNamespaceAssociation>;
  }
  namespace CleanRooms {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-membership.html
     */
    interface MembershipProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-membership.html#cfn-cleanrooms-membership-collaborationidentifier
       */
      CollaborationIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-membership.html#cfn-cleanrooms-membership-joblogstatus
       */
      JobLogStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-membership.html#cfn-cleanrooms-membership-defaultresultconfiguration
       */
      DefaultResultConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-membership.html#cfn-cleanrooms-membership-querylogstatus
       */
      QueryLogStatus: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-membership.html#cfn-cleanrooms-membership-defaultjobresultconfiguration
       */
      DefaultJobResultConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-membership.html#cfn-cleanrooms-membership-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-membership.html#cfn-cleanrooms-membership-paymentconfiguration
       */
      PaymentConfiguration?: {};
    }
    
    
    interface Membership extends Resource<"AWS::CleanRooms::Membership">, MembershipProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Membership(id: string, props: MembershipProps): Promise<Membership>;
  }
  namespace CleanRooms {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-privacybudgettemplate.html
     */
    interface PrivacyBudgetTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-privacybudgettemplate.html#cfn-cleanrooms-privacybudgettemplate-privacybudgettype
       */
      PrivacyBudgetType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-privacybudgettemplate.html#cfn-cleanrooms-privacybudgettemplate-membershipidentifier
       */
      MembershipIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-privacybudgettemplate.html#cfn-cleanrooms-privacybudgettemplate-parameters
       */
      Parameters: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-privacybudgettemplate.html#cfn-cleanrooms-privacybudgettemplate-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-privacybudgettemplate.html#cfn-cleanrooms-privacybudgettemplate-autorefresh
       */
      AutoRefresh: string;
    }
    
    
    interface PrivacyBudgetTemplate extends Resource<"AWS::CleanRooms::PrivacyBudgetTemplate">, PrivacyBudgetTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PrivacyBudgetTemplate(id: string, props: PrivacyBudgetTemplateProps): Promise<PrivacyBudgetTemplate>;
  }
  namespace CleanRoomsML {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanroomsml-trainingdataset.html
     */
    interface TrainingDatasetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanroomsml-trainingdataset.html#cfn-cleanroomsml-trainingdataset-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanroomsml-trainingdataset.html#cfn-cleanroomsml-trainingdataset-trainingdata
       */
      TrainingData: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanroomsml-trainingdataset.html#cfn-cleanroomsml-trainingdataset-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanroomsml-trainingdataset.html#cfn-cleanroomsml-trainingdataset-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanroomsml-trainingdataset.html#cfn-cleanroomsml-trainingdataset-name
       */
      Name: string;
    }
    
    
    interface TrainingDataset extends Resource<"AWS::CleanRoomsML::TrainingDataset">, TrainingDatasetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TrainingDataset(id: string, props: TrainingDatasetProps): Promise<TrainingDataset>;
  }
  namespace Cloud9 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html
     */
    interface EnvironmentEC2Props {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html#cfn-cloud9-environmentec2-repositories
       */
      Repositories?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html#cfn-cloud9-environmentec2-ownerarn
       */
      OwnerArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html#cfn-cloud9-environmentec2-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html#cfn-cloud9-environmentec2-connectiontype
       */
      ConnectionType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html#cfn-cloud9-environmentec2-automaticstoptimeminutes
       */
      AutomaticStopTimeMinutes?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html#cfn-cloud9-environmentec2-imageid
       */
      ImageId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html#cfn-cloud9-environmentec2-subnetid
       */
      SubnetId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html#cfn-cloud9-environmentec2-instancetype
       */
      InstanceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html#cfn-cloud9-environmentec2-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloud9-environmentec2.html#cfn-cloud9-environmentec2-name
       */
      Name?: string;
    }
    
    
    interface EnvironmentEC2 extends Resource<"AWS::Cloud9::EnvironmentEC2">, EnvironmentEC2Props {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EnvironmentEC2(id: string, props: EnvironmentEC2Props): Promise<EnvironmentEC2>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html
     */
    interface CustomResourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html#cfn-customresource-servicetimeout
       */
      ServiceTimeout?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html#cfn-customresource-servicetoken
       */
      ServiceToken: string;
    }
    
    
    interface CustomResource extends Resource<"AWS::CloudFormation::CustomResource">, CustomResourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CustomResource(id: string, props: CustomResourceProps): Promise<CustomResource>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-guardhook.html
     */
    interface GuardHookProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-guardhook.html#cfn-cloudformation-guardhook-options
       */
      Options?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-guardhook.html#cfn-cloudformation-guardhook-rulelocation
       */
      RuleLocation: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-guardhook.html#cfn-cloudformation-guardhook-hookstatus
       */
      HookStatus: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-guardhook.html#cfn-cloudformation-guardhook-alias
       */
      Alias: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-guardhook.html#cfn-cloudformation-guardhook-stackfilters
       */
      StackFilters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-guardhook.html#cfn-cloudformation-guardhook-targetoperations
       */
      TargetOperations: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-guardhook.html#cfn-cloudformation-guardhook-targetfilters
       */
      TargetFilters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-guardhook.html#cfn-cloudformation-guardhook-logbucket
       */
      LogBucket?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-guardhook.html#cfn-cloudformation-guardhook-executionrole
       */
      ExecutionRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-guardhook.html#cfn-cloudformation-guardhook-failuremode
       */
      FailureMode: string;
    }
    
    
    interface GuardHook extends Resource<"AWS::CloudFormation::GuardHook">, GuardHookProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GuardHook(id: string, props: GuardHookProps): Promise<GuardHook>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html
     */
    interface HookDefaultVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html#cfn-cloudformation-hookdefaultversion-versionid
       */
      VersionId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html#cfn-cloudformation-hookdefaultversion-typename
       */
      TypeName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookdefaultversion.html#cfn-cloudformation-hookdefaultversion-typeversionarn
       */
      TypeVersionArn?: string;
    }
    
    
    interface HookDefaultVersion extends Resource<"AWS::CloudFormation::HookDefaultVersion">, HookDefaultVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function HookDefaultVersion(id: string, props: HookDefaultVersionProps): Promise<HookDefaultVersion>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html
     */
    interface HookTypeConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html#cfn-cloudformation-hooktypeconfig-typename
       */
      TypeName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html#cfn-cloudformation-hooktypeconfig-configuration
       */
      Configuration: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html#cfn-cloudformation-hooktypeconfig-typearn
       */
      TypeArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hooktypeconfig.html#cfn-cloudformation-hooktypeconfig-configurationalias
       */
      ConfigurationAlias?: string;
    }
    
    
    interface HookTypeConfig extends Resource<"AWS::CloudFormation::HookTypeConfig">, HookTypeConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function HookTypeConfig(id: string, props: HookTypeConfigProps): Promise<HookTypeConfig>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html
     */
    interface HookVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html#cfn-cloudformation-hookversion-executionrolearn
       */
      ExecutionRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html#cfn-cloudformation-hookversion-typename
       */
      TypeName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html#cfn-cloudformation-hookversion-loggingconfig
       */
      LoggingConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-hookversion.html#cfn-cloudformation-hookversion-schemahandlerpackage
       */
      SchemaHandlerPackage: string;
    }
    
    
    interface HookVersion extends Resource<"AWS::CloudFormation::HookVersion">, HookVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function HookVersion(id: string, props: HookVersionProps): Promise<HookVersion>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-lambdahook.html
     */
    interface LambdaHookProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-lambdahook.html#cfn-cloudformation-lambdahook-hookstatus
       */
      HookStatus: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-lambdahook.html#cfn-cloudformation-lambdahook-alias
       */
      Alias: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-lambdahook.html#cfn-cloudformation-lambdahook-stackfilters
       */
      StackFilters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-lambdahook.html#cfn-cloudformation-lambdahook-targetoperations
       */
      TargetOperations: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-lambdahook.html#cfn-cloudformation-lambdahook-targetfilters
       */
      TargetFilters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-lambdahook.html#cfn-cloudformation-lambdahook-lambdafunction
       */
      LambdaFunction: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-lambdahook.html#cfn-cloudformation-lambdahook-executionrole
       */
      ExecutionRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-lambdahook.html#cfn-cloudformation-lambdahook-failuremode
       */
      FailureMode: string;
    }
    
    
    interface LambdaHook extends Resource<"AWS::CloudFormation::LambdaHook">, LambdaHookProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LambdaHook(id: string, props: LambdaHookProps): Promise<LambdaHook>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html
     */
    interface MacroProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-functionname
       */
      FunctionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-loggroupname
       */
      LogGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-logrolearn
       */
      LogRoleARN?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-macro.html#cfn-cloudformation-macro-name
       */
      Name: string;
    }
    
    
    interface Macro extends Resource<"AWS::CloudFormation::Macro">, MacroProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Macro(id: string, props: MacroProps): Promise<Macro>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html
     */
    interface ModuleDefaultVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html#cfn-cloudformation-moduledefaultversion-versionid
       */
      VersionId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html#cfn-cloudformation-moduledefaultversion-modulename
       */
      ModuleName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduledefaultversion.html#cfn-cloudformation-moduledefaultversion-arn
       */
      Arn?: string;
    }
    
    
    interface ModuleDefaultVersion extends Resource<"AWS::CloudFormation::ModuleDefaultVersion">, ModuleDefaultVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ModuleDefaultVersion(id: string, props: ModuleDefaultVersionProps): Promise<ModuleDefaultVersion>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduleversion.html
     */
    interface ModuleVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduleversion.html#cfn-cloudformation-moduleversion-modulepackage
       */
      ModulePackage: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-moduleversion.html#cfn-cloudformation-moduleversion-modulename
       */
      ModuleName: string;
    }
    
    
    interface ModuleVersion extends Resource<"AWS::CloudFormation::ModuleVersion">, ModuleVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ModuleVersion(id: string, props: ModuleVersionProps): Promise<ModuleVersion>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html
     */
    interface PublicTypeVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-typename
       */
      TypeName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-logdeliverybucket
       */
      LogDeliveryBucket?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-publicversionnumber
       */
      PublicVersionNumber?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-arn
       */
      Arn?: string;
    }
    
    
    interface PublicTypeVersion extends Resource<"AWS::CloudFormation::PublicTypeVersion">, PublicTypeVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PublicTypeVersion(id: string, props: PublicTypeVersionProps): Promise<PublicTypeVersion>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publisher.html
     */
    interface PublisherProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publisher.html#cfn-cloudformation-publisher-accepttermsandconditions
       */
      AcceptTermsAndConditions: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publisher.html#cfn-cloudformation-publisher-connectionarn
       */
      ConnectionArn?: string;
    }
    
    
    interface Publisher extends Resource<"AWS::CloudFormation::Publisher">, PublisherProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Publisher(id: string, props: PublisherProps): Promise<Publisher>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html
     */
    interface ResourceDefaultVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html#cfn-cloudformation-resourcedefaultversion-versionid
       */
      VersionId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html#cfn-cloudformation-resourcedefaultversion-typename
       */
      TypeName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourcedefaultversion.html#cfn-cloudformation-resourcedefaultversion-typeversionarn
       */
      TypeVersionArn?: string;
    }
    
    
    interface ResourceDefaultVersion extends Resource<"AWS::CloudFormation::ResourceDefaultVersion">, ResourceDefaultVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceDefaultVersion(id: string, props: ResourceDefaultVersionProps): Promise<ResourceDefaultVersion>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html
     */
    interface ResourceVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-executionrolearn
       */
      ExecutionRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-typename
       */
      TypeName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-loggingconfig
       */
      LoggingConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-resourceversion.html#cfn-cloudformation-resourceversion-schemahandlerpackage
       */
      SchemaHandlerPackage: string;
    }
    
    
    interface ResourceVersion extends Resource<"AWS::CloudFormation::ResourceVersion">, ResourceVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceVersion(id: string, props: ResourceVersionProps): Promise<ResourceVersion>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html
     */
    interface StackProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-notificationarns
       */
      NotificationARNs?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-parameters
       */
      Parameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-templateurl
       */
      TemplateURL: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html#cfn-cloudformation-stack-timeoutinminutes
       */
      TimeoutInMinutes?: number;
    }
    
    
    interface Stack extends Resource<"AWS::CloudFormation::Stack">, StackProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Stack(id: string, props: StackProps): Promise<Stack>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html
     */
    interface StackSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-parameters
       */
      Parameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-stackinstancesgroup
       */
      StackInstancesGroup?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-templatebody
       */
      TemplateBody?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-stacksetname
       */
      StackSetName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-callas
       */
      CallAs?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-operationpreferences
       */
      OperationPreferences?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-templateurl
       */
      TemplateURL?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-autodeployment
       */
      AutoDeployment?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-capabilities
       */
      Capabilities?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-permissionmodel
       */
      PermissionModel: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-administrationrolearn
       */
      AdministrationRoleARN?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-executionrolename
       */
      ExecutionRoleName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-managedexecution
       */
      ManagedExecution?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-tags
       */
      Tags?: {}[];
    }
    
    
    interface StackSet extends Resource<"AWS::CloudFormation::StackSet">, StackSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StackSet(id: string, props: StackSetProps): Promise<StackSet>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html
     */
    interface TypeActivationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-majorversion
       */
      MajorVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-executionrolearn
       */
      ExecutionRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-typename
       */
      TypeName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-publictypearn
       */
      PublicTypeArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-autoupdate
       */
      AutoUpdate?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-loggingconfig
       */
      LoggingConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-publisherid
       */
      PublisherId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-versionbump
       */
      VersionBump?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-typenamealias
       */
      TypeNameAlias?: string;
    }
    
    
    interface TypeActivation extends Resource<"AWS::CloudFormation::TypeActivation">, TypeActivationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TypeActivation(id: string, props: TypeActivationProps): Promise<TypeActivation>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html
     */
    interface WaitConditionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-count
       */
      Count?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-handle
       */
      Handle?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-timeout
       */
      Timeout?: string;
    }
    
    
    interface WaitCondition extends Resource<"AWS::CloudFormation::WaitCondition">, WaitConditionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WaitCondition(id: string, props: WaitConditionProps): Promise<WaitCondition>;
  }
  namespace CloudFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitconditionhandle.html
     */
    interface WaitConditionHandleProps {}
    
    
    interface WaitConditionHandle extends Resource<"AWS::CloudFormation::WaitConditionHandle">, WaitConditionHandleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WaitConditionHandle(id: string, props: WaitConditionHandleProps): Promise<WaitConditionHandle>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-anycastiplist.html
     */
    interface AnycastIpListProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-anycastiplist.html#cfn-cloudfront-anycastiplist-ipcount
       */
      IpCount: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-anycastiplist.html#cfn-cloudfront-anycastiplist-tags
       */
      Tags?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-anycastiplist.html#cfn-cloudfront-anycastiplist-name
       */
      Name: string;
    }
    
    
    interface AnycastIpList extends Resource<"AWS::CloudFront::AnycastIpList">, AnycastIpListProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AnycastIpList(id: string, props: AnycastIpListProps): Promise<AnycastIpList>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cachepolicy.html
     */
    interface CachePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cachepolicy.html#cfn-cloudfront-cachepolicy-cachepolicyconfig
       */
      CachePolicyConfig: {};
    }
    
    
    interface CachePolicy extends Resource<"AWS::CloudFront::CachePolicy">, CachePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CachePolicy(id: string, props: CachePolicyProps): Promise<CachePolicy>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html
     */
    interface CloudFrontOriginAccessIdentityProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-cloudfrontoriginaccessidentity.html#cfn-cloudfront-cloudfrontoriginaccessidentity-cloudfrontoriginaccessidentityconfig
       */
      CloudFrontOriginAccessIdentityConfig: {};
    }
    
    
    interface CloudFrontOriginAccessIdentity extends Resource<"AWS::CloudFront::CloudFrontOriginAccessIdentity">, CloudFrontOriginAccessIdentityProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CloudFrontOriginAccessIdentity(id: string, props: CloudFrontOriginAccessIdentityProps): Promise<CloudFrontOriginAccessIdentity>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-connectiongroup.html
     */
    interface ConnectionGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-connectiongroup.html#cfn-cloudfront-connectiongroup-ipv6enabled
       */
      Ipv6Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-connectiongroup.html#cfn-cloudfront-connectiongroup-anycastiplistid
       */
      AnycastIpListId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-connectiongroup.html#cfn-cloudfront-connectiongroup-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-connectiongroup.html#cfn-cloudfront-connectiongroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-connectiongroup.html#cfn-cloudfront-connectiongroup-name
       */
      Name: string;
    }
    
    
    interface ConnectionGroup extends Resource<"AWS::CloudFront::ConnectionGroup">, ConnectionGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConnectionGroup(id: string, props: ConnectionGroupProps): Promise<ConnectionGroup>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-continuousdeploymentpolicy.html
     */
    interface ContinuousDeploymentPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-continuousdeploymentpolicy.html#cfn-cloudfront-continuousdeploymentpolicy-continuousdeploymentpolicyconfig
       */
      ContinuousDeploymentPolicyConfig: {};
    }
    
    
    interface ContinuousDeploymentPolicy extends Resource<"AWS::CloudFront::ContinuousDeploymentPolicy">, ContinuousDeploymentPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ContinuousDeploymentPolicy(id: string, props: ContinuousDeploymentPolicyProps): Promise<ContinuousDeploymentPolicy>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html
     */
    interface DistributionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html#cfn-cloudfront-distribution-distributionconfig
       */
      DistributionConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distribution.html#cfn-cloudfront-distribution-tags
       */
      Tags?: {}[];
    }
    
    
    interface Distribution extends Resource<"AWS::CloudFront::Distribution">, DistributionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Distribution(id: string, props: DistributionProps): Promise<Distribution>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distributiontenant.html
     */
    interface DistributionTenantProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distributiontenant.html#cfn-cloudfront-distributiontenant-domains
       */
      Domains: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distributiontenant.html#cfn-cloudfront-distributiontenant-parameters
       */
      Parameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distributiontenant.html#cfn-cloudfront-distributiontenant-customizations
       */
      Customizations?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distributiontenant.html#cfn-cloudfront-distributiontenant-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distributiontenant.html#cfn-cloudfront-distributiontenant-managedcertificaterequest
       */
      ManagedCertificateRequest?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distributiontenant.html#cfn-cloudfront-distributiontenant-distributionid
       */
      DistributionId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distributiontenant.html#cfn-cloudfront-distributiontenant-connectiongroupid
       */
      ConnectionGroupId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distributiontenant.html#cfn-cloudfront-distributiontenant-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-distributiontenant.html#cfn-cloudfront-distributiontenant-name
       */
      Name: string;
    }
    
    
    interface DistributionTenant extends Resource<"AWS::CloudFront::DistributionTenant">, DistributionTenantProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DistributionTenant(id: string, props: DistributionTenantProps): Promise<DistributionTenant>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html
     */
    interface FunctionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functionconfig
       */
      FunctionConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functionmetadata
       */
      FunctionMetadata?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-autopublish
       */
      AutoPublish?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functioncode
       */
      FunctionCode: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-name
       */
      Name: string;
    }
    
    
    interface Function extends Resource<"AWS::CloudFront::Function">, FunctionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Function(id: string, props: FunctionProps): Promise<Function>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keygroup.html
     */
    interface KeyGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keygroup.html#cfn-cloudfront-keygroup-keygroupconfig
       */
      KeyGroupConfig: {};
    }
    
    
    interface KeyGroup extends Resource<"AWS::CloudFront::KeyGroup">, KeyGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function KeyGroup(id: string, props: KeyGroupProps): Promise<KeyGroup>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keyvaluestore.html
     */
    interface KeyValueStoreProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keyvaluestore.html#cfn-cloudfront-keyvaluestore-comment
       */
      Comment?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keyvaluestore.html#cfn-cloudfront-keyvaluestore-importsource
       */
      ImportSource?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-keyvaluestore.html#cfn-cloudfront-keyvaluestore-name
       */
      Name: string;
    }
    
    
    interface KeyValueStore extends Resource<"AWS::CloudFront::KeyValueStore">, KeyValueStoreProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function KeyValueStore(id: string, props: KeyValueStoreProps): Promise<KeyValueStore>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-monitoringsubscription.html
     */
    interface MonitoringSubscriptionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-monitoringsubscription.html#cfn-cloudfront-monitoringsubscription-monitoringsubscription
       */
      MonitoringSubscription: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-monitoringsubscription.html#cfn-cloudfront-monitoringsubscription-distributionid
       */
      DistributionId: string;
    }
    
    
    interface MonitoringSubscription extends Resource<"AWS::CloudFront::MonitoringSubscription">, MonitoringSubscriptionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MonitoringSubscription(id: string, props: MonitoringSubscriptionProps): Promise<MonitoringSubscription>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originaccesscontrol.html
     */
    interface OriginAccessControlProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originaccesscontrol.html#cfn-cloudfront-originaccesscontrol-originaccesscontrolconfig
       */
      OriginAccessControlConfig: {};
    }
    
    
    interface OriginAccessControl extends Resource<"AWS::CloudFront::OriginAccessControl">, OriginAccessControlProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function OriginAccessControl(id: string, props: OriginAccessControlProps): Promise<OriginAccessControl>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originrequestpolicy.html
     */
    interface OriginRequestPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originrequestpolicy.html#cfn-cloudfront-originrequestpolicy-originrequestpolicyconfig
       */
      OriginRequestPolicyConfig: {};
    }
    
    
    interface OriginRequestPolicy extends Resource<"AWS::CloudFront::OriginRequestPolicy">, OriginRequestPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function OriginRequestPolicy(id: string, props: OriginRequestPolicyProps): Promise<OriginRequestPolicy>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-publickey.html
     */
    interface PublicKeyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-publickey.html#cfn-cloudfront-publickey-publickeyconfig
       */
      PublicKeyConfig: {};
    }
    
    
    interface PublicKey extends Resource<"AWS::CloudFront::PublicKey">, PublicKeyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PublicKey(id: string, props: PublicKeyProps): Promise<PublicKey>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html
     */
    interface RealtimeLogConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-fields
       */
      Fields: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-endpoints
       */
      EndPoints: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-samplingrate
       */
      SamplingRate: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-name
       */
      Name: string;
    }
    
    
    interface RealtimeLogConfig extends Resource<"AWS::CloudFront::RealtimeLogConfig">, RealtimeLogConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RealtimeLogConfig(id: string, props: RealtimeLogConfigProps): Promise<RealtimeLogConfig>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-responseheaderspolicy.html
     */
    interface ResponseHeadersPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-responseheaderspolicy.html#cfn-cloudfront-responseheaderspolicy-responseheaderspolicyconfig
       */
      ResponseHeadersPolicyConfig: {};
    }
    
    
    interface ResponseHeadersPolicy extends Resource<"AWS::CloudFront::ResponseHeadersPolicy">, ResponseHeadersPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResponseHeadersPolicy(id: string, props: ResponseHeadersPolicyProps): Promise<ResponseHeadersPolicy>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html
     */
    interface StreamingDistributionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html#cfn-cloudfront-streamingdistribution-streamingdistributionconfig
       */
      StreamingDistributionConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-streamingdistribution.html#cfn-cloudfront-streamingdistribution-tags
       */
      Tags: {}[];
    }
    
    
    interface StreamingDistribution extends Resource<"AWS::CloudFront::StreamingDistribution">, StreamingDistributionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StreamingDistribution(id: string, props: StreamingDistributionProps): Promise<StreamingDistribution>;
  }
  namespace CloudFront {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-vpcorigin.html
     */
    interface VpcOriginProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-vpcorigin.html#cfn-cloudfront-vpcorigin-vpcoriginendpointconfig
       */
      VpcOriginEndpointConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-vpcorigin.html#cfn-cloudfront-vpcorigin-tags
       */
      Tags?: {}[];
    }
    
    
    interface VpcOrigin extends Resource<"AWS::CloudFront::VpcOrigin">, VpcOriginProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VpcOrigin(id: string, props: VpcOriginProps): Promise<VpcOrigin>;
  }
  namespace CloudTrail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-channel.html
     */
    interface ChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-channel.html#cfn-cloudtrail-channel-destinations
       */
      Destinations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-channel.html#cfn-cloudtrail-channel-source
       */
      Source?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-channel.html#cfn-cloudtrail-channel-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-channel.html#cfn-cloudtrail-channel-name
       */
      Name?: string;
    }
    
    
    interface Channel extends Resource<"AWS::CloudTrail::Channel">, ChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Channel(id: string, props: ChannelProps): Promise<Channel>;
  }
  namespace CloudTrail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-dashboard.html
     */
    interface DashboardProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-dashboard.html#cfn-cloudtrail-dashboard-widgets
       */
      Widgets?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-dashboard.html#cfn-cloudtrail-dashboard-terminationprotectionenabled
       */
      TerminationProtectionEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-dashboard.html#cfn-cloudtrail-dashboard-refreshschedule
       */
      RefreshSchedule?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-dashboard.html#cfn-cloudtrail-dashboard-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-dashboard.html#cfn-cloudtrail-dashboard-name
       */
      Name?: string;
    }
    
    
    interface Dashboard extends Resource<"AWS::CloudTrail::Dashboard">, DashboardProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Dashboard(id: string, props: DashboardProps): Promise<Dashboard>;
  }
  namespace CloudTrail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html
     */
    interface EventDataStoreProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-advancedeventselectors
       */
      AdvancedEventSelectors?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-terminationprotectionenabled
       */
      TerminationProtectionEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-multiregionenabled
       */
      MultiRegionEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-retentionperiod
       */
      RetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-federationenabled
       */
      FederationEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-ingestionenabled
       */
      IngestionEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-insightselectors
       */
      InsightSelectors?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-organizationenabled
       */
      OrganizationEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-federationrolearn
       */
      FederationRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-insightsdestination
       */
      InsightsDestination?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-billingmode
       */
      BillingMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-tags
       */
      Tags?: {}[];
    }
    
    
    interface EventDataStore extends Resource<"AWS::CloudTrail::EventDataStore">, EventDataStoreProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventDataStore(id: string, props: EventDataStoreProps): Promise<EventDataStore>;
  }
  namespace CloudTrail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-resourcepolicy.html
     */
    interface ResourcePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-resourcepolicy.html#cfn-cloudtrail-resourcepolicy-resourcearn
       */
      ResourceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-resourcepolicy.html#cfn-cloudtrail-resourcepolicy-resourcepolicy
       */
      ResourcePolicy: {
        [k: string]: unknown;
      };
    }
    
    
    interface ResourcePolicy extends Resource<"AWS::CloudTrail::ResourcePolicy">, ResourcePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourcePolicy(id: string, props: ResourcePolicyProps): Promise<ResourcePolicy>;
  }
  namespace CloudTrail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html
     */
    interface TrailProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-includeglobalserviceevents
       */
      IncludeGlobalServiceEvents?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-eventselectors
       */
      EventSelectors?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-kmskeyid
       */
      KMSKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-cloudwatchlogsrolearn
       */
      CloudWatchLogsRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-s3keyprefix
       */
      S3KeyPrefix?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-advancedeventselectors
       */
      AdvancedEventSelectors?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-trailname
       */
      TrailName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-isorganizationtrail
       */
      IsOrganizationTrail?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-insightselectors
       */
      InsightSelectors?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-cloudwatchlogsloggrouparn
       */
      CloudWatchLogsLogGroupArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-snstopicname
       */
      SnsTopicName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-ismultiregiontrail
       */
      IsMultiRegionTrail?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-s3bucketname
       */
      S3BucketName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-enablelogfilevalidation
       */
      EnableLogFileValidation?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-islogging
       */
      IsLogging: boolean;
    }
    
    
    interface Trail extends Resource<"AWS::CloudTrail::Trail">, TrailProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Trail(id: string, props: TrailProps): Promise<Trail>;
  }
  namespace CloudWatch {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html
     */
    interface AlarmProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-thresholdmetricid
       */
      ThresholdMetricId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-evaluatelowsamplecountpercentile
       */
      EvaluateLowSampleCountPercentile?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-extendedstatistic
       */
      ExtendedStatistic?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-comparisonoperator
       */
      ComparisonOperator: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-treatmissingdata
       */
      TreatMissingData?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-dimensions
       */
      Dimensions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-period
       */
      Period?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-evaluationperiods
       */
      EvaluationPeriods: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-unit
       */
      Unit?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-namespace
       */
      Namespace?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-okactions
       */
      OKActions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-alarmactions
       */
      AlarmActions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-metricname
       */
      MetricName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-actionsenabled
       */
      ActionsEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-metrics
       */
      Metrics?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-alarmdescription
       */
      AlarmDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-alarmname
       */
      AlarmName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-statistic
       */
      Statistic?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-insufficientdataactions
       */
      InsufficientDataActions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-datapointstoalarm
       */
      DatapointsToAlarm?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html#cfn-cloudwatch-alarm-threshold
       */
      Threshold?: number;
    }
    
    
    interface Alarm extends Resource<"AWS::CloudWatch::Alarm">, AlarmProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Alarm(id: string, props: AlarmProps): Promise<Alarm>;
  }
  namespace CloudWatch {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html
     */
    interface AnomalyDetectorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-metriccharacteristics
       */
      MetricCharacteristics?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-metricname
       */
      MetricName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-stat
       */
      Stat?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-configuration
       */
      Configuration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-metricmathanomalydetector
       */
      MetricMathAnomalyDetector?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-dimensions
       */
      Dimensions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-namespace
       */
      Namespace?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-singlemetricanomalydetector
       */
      SingleMetricAnomalyDetector?: {};
    }
    
    
    interface AnomalyDetector extends Resource<"AWS::CloudWatch::AnomalyDetector">, AnomalyDetectorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AnomalyDetector(id: string, props: AnomalyDetectorProps): Promise<AnomalyDetector>;
  }
  namespace CloudWatch {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html
     */
    interface CompositeAlarmProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmactions
       */
      AlarmActions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionssuppressorwaitperiod
       */
      ActionsSuppressorWaitPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionsenabled
       */
      ActionsEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmname
       */
      AlarmName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmdescription
       */
      AlarmDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionssuppressor
       */
      ActionsSuppressor?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmrule
       */
      AlarmRule: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-insufficientdataactions
       */
      InsufficientDataActions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-okactions
       */
      OKActions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionssuppressorextensionperiod
       */
      ActionsSuppressorExtensionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-tags
       */
      Tags?: {}[];
    }
    
    
    interface CompositeAlarm extends Resource<"AWS::CloudWatch::CompositeAlarm">, CompositeAlarmProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CompositeAlarm(id: string, props: CompositeAlarmProps): Promise<CompositeAlarm>;
  }
  namespace CloudWatch {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html
     */
    interface DashboardProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html#cfn-cloudwatch-dashboard-dashboardname
       */
      DashboardName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-dashboard.html#cfn-cloudwatch-dashboard-dashboardbody
       */
      DashboardBody: string;
    }
    
    
    interface Dashboard extends Resource<"AWS::CloudWatch::Dashboard">, DashboardProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Dashboard(id: string, props: DashboardProps): Promise<Dashboard>;
  }
  namespace CloudWatch {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html
     */
    interface InsightRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-rulestate
       */
      RuleState: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-rulebody
       */
      RuleBody: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-rulename
       */
      RuleName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-tags
       */
      Tags?: {};
    }
    
    
    interface InsightRule extends Resource<"AWS::CloudWatch::InsightRule">, InsightRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InsightRule(id: string, props: InsightRuleProps): Promise<InsightRule>;
  }
  namespace CloudWatch {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-metricstream.html
     */
    interface MetricStreamProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-metricstream.html#cfn-cloudwatch-metricstream-statisticsconfigurations
       */
      StatisticsConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-metricstream.html#cfn-cloudwatch-metricstream-firehosearn
       */
      FirehoseArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-metricstream.html#cfn-cloudwatch-metricstream-includelinkedaccountsmetrics
       */
      IncludeLinkedAccountsMetrics?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-metricstream.html#cfn-cloudwatch-metricstream-includefilters
       */
      IncludeFilters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-metricstream.html#cfn-cloudwatch-metricstream-outputformat
       */
      OutputFormat: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-metricstream.html#cfn-cloudwatch-metricstream-excludefilters
       */
      ExcludeFilters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-metricstream.html#cfn-cloudwatch-metricstream-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-metricstream.html#cfn-cloudwatch-metricstream-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-metricstream.html#cfn-cloudwatch-metricstream-name
       */
      Name?: string;
    }
    
    
    interface MetricStream extends Resource<"AWS::CloudWatch::MetricStream">, MetricStreamProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MetricStream(id: string, props: MetricStreamProps): Promise<MetricStream>;
  }
  namespace CodeArtifact {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-domain.html
     */
    interface DomainProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-domain.html#cfn-codeartifact-domain-permissionspolicydocument
       */
      PermissionsPolicyDocument?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-domain.html#cfn-codeartifact-domain-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-domain.html#cfn-codeartifact-domain-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-domain.html#cfn-codeartifact-domain-encryptionkey
       */
      EncryptionKey?: string;
    }
    
    
    interface Domain extends Resource<"AWS::CodeArtifact::Domain">, DomainProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Domain(id: string, props: DomainProps): Promise<Domain>;
  }
  namespace CodeArtifact {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-packagegroup.html
     */
    interface PackageGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-packagegroup.html#cfn-codeartifact-packagegroup-pattern
       */
      Pattern: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-packagegroup.html#cfn-codeartifact-packagegroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-packagegroup.html#cfn-codeartifact-packagegroup-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-packagegroup.html#cfn-codeartifact-packagegroup-originconfiguration
       */
      OriginConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-packagegroup.html#cfn-codeartifact-packagegroup-contactinfo
       */
      ContactInfo?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-packagegroup.html#cfn-codeartifact-packagegroup-domainowner
       */
      DomainOwner?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-packagegroup.html#cfn-codeartifact-packagegroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface PackageGroup extends Resource<"AWS::CodeArtifact::PackageGroup">, PackageGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PackageGroup(id: string, props: PackageGroupProps): Promise<PackageGroup>;
  }
  namespace CodeArtifact {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html
     */
    interface RepositoryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-permissionspolicydocument
       */
      PermissionsPolicyDocument?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-upstreams
       */
      Upstreams?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-repositoryname
       */
      RepositoryName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-externalconnections
       */
      ExternalConnections?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-domainowner
       */
      DomainOwner?: string;
    }
    
    
    interface Repository extends Resource<"AWS::CodeArtifact::Repository">, RepositoryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Repository(id: string, props: RepositoryProps): Promise<Repository>;
  }
  namespace CodeBuild {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-fleet.html
     */
    interface FleetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-fleet.html#cfn-codebuild-fleet-fleetservicerole
       */
      FleetServiceRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-fleet.html#cfn-codebuild-fleet-environmenttype
       */
      EnvironmentType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-fleet.html#cfn-codebuild-fleet-overflowbehavior
       */
      OverflowBehavior?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-fleet.html#cfn-codebuild-fleet-imageid
       */
      ImageId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-fleet.html#cfn-codebuild-fleet-scalingconfiguration
       */
      ScalingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-fleet.html#cfn-codebuild-fleet-basecapacity
       */
      BaseCapacity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-fleet.html#cfn-codebuild-fleet-fleetproxyconfiguration
       */
      FleetProxyConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-fleet.html#cfn-codebuild-fleet-computeconfiguration
       */
      ComputeConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-fleet.html#cfn-codebuild-fleet-computetype
       */
      ComputeType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-fleet.html#cfn-codebuild-fleet-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-fleet.html#cfn-codebuild-fleet-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-fleet.html#cfn-codebuild-fleet-fleetvpcconfig
       */
      FleetVpcConfig?: {};
    }
    
    
    interface Fleet extends Resource<"AWS::CodeBuild::Fleet">, FleetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Fleet(id: string, props: FleetProps): Promise<Fleet>;
  }
  namespace CodeBuild {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html
     */
    interface ProjectProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-resourceaccessrole
       */
      ResourceAccessRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-vpcconfig
       */
      VpcConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-secondarysources
       */
      SecondarySources?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-encryptionkey
       */
      EncryptionKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-secondaryartifacts
       */
      SecondaryArtifacts?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-source
       */
      Source: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-logsconfig
       */
      LogsConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-servicerole
       */
      ServiceRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-queuedtimeoutinminutes
       */
      QueuedTimeoutInMinutes?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-secondarysourceversions
       */
      SecondarySourceVersions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-autoretrylimit
       */
      AutoRetryLimit?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-sourceversion
       */
      SourceVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-triggers
       */
      Triggers?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-artifacts
       */
      Artifacts: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-badgeenabled
       */
      BadgeEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-filesystemlocations
       */
      FileSystemLocations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-environment
       */
      Environment: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-concurrentbuildlimit
       */
      ConcurrentBuildLimit?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-visibility
       */
      Visibility?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-buildbatchconfig
       */
      BuildBatchConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-timeoutinminutes
       */
      TimeoutInMinutes?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-cache
       */
      Cache?: {};
    }
    
    
    interface Project extends Resource<"AWS::CodeBuild::Project">, ProjectProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Project(id: string, props: ProjectProps): Promise<Project>;
  }
  namespace CodeBuild {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html
     */
    interface ReportGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-exportconfig
       */
      ExportConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-deletereports
       */
      DeleteReports?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-name
       */
      Name?: string;
    }
    
    
    interface ReportGroup extends Resource<"AWS::CodeBuild::ReportGroup">, ReportGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReportGroup(id: string, props: ReportGroupProps): Promise<ReportGroup>;
  }
  namespace CodeBuild {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html
     */
    interface SourceCredentialProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html#cfn-codebuild-sourcecredential-servertype
       */
      ServerType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html#cfn-codebuild-sourcecredential-username
       */
      Username?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html#cfn-codebuild-sourcecredential-token
       */
      Token: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html#cfn-codebuild-sourcecredential-authtype
       */
      AuthType: string;
    }
    
    
    interface SourceCredential extends Resource<"AWS::CodeBuild::SourceCredential">, SourceCredentialProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SourceCredential(id: string, props: SourceCredentialProps): Promise<SourceCredential>;
  }
  namespace CodeCommit {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html
     */
    interface RepositoryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositoryname
       */
      RepositoryName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-triggers
       */
      Triggers?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-code
       */
      Code?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositorydescription
       */
      RepositoryDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-tags
       */
      Tags?: {}[];
    }
    
    
    interface Repository extends Resource<"AWS::CodeCommit::Repository">, RepositoryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Repository(id: string, props: RepositoryProps): Promise<Repository>;
  }
  namespace CodeConnections {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeconnections-connection.html
     */
    interface ConnectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeconnections-connection.html#cfn-codeconnections-connection-connectionname
       */
      ConnectionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeconnections-connection.html#cfn-codeconnections-connection-hostarn
       */
      HostArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeconnections-connection.html#cfn-codeconnections-connection-providertype
       */
      ProviderType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeconnections-connection.html#cfn-codeconnections-connection-tags
       */
      Tags?: {}[];
    }
    
    
    interface Connection extends Resource<"AWS::CodeConnections::Connection">, ConnectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Connection(id: string, props: ConnectionProps): Promise<Connection>;
  }
  namespace CodeDeploy {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html#cfn-codedeploy-application-applicationname
       */
      ApplicationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html#cfn-codedeploy-application-computeplatform
       */
      ComputePlatform?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html#cfn-codedeploy-application-tags
       */
      Tags?: {}[];
    }
    
    
    interface Application extends Resource<"AWS::CodeDeploy::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace CodeDeploy {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html
     */
    interface DeploymentConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-computeplatform
       */
      ComputePlatform?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-zonalconfig
       */
      ZonalConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-deploymentconfigname
       */
      DeploymentConfigName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-trafficroutingconfig
       */
      TrafficRoutingConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-minimumhealthyhosts
       */
      MinimumHealthyHosts?: {};
    }
    
    
    interface DeploymentConfig extends Resource<"AWS::CodeDeploy::DeploymentConfig">, DeploymentConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DeploymentConfig(id: string, props: DeploymentConfigProps): Promise<DeploymentConfig>;
  }
  namespace CodeDeploy {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html
     */
    interface DeploymentGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-alarmconfiguration
       */
      AlarmConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-applicationname
       */
      ApplicationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-autorollbackconfiguration
       */
      AutoRollbackConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-autoscalinggroups
       */
      AutoScalingGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-bluegreendeploymentconfiguration
       */
      BlueGreenDeploymentConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deployment
       */
      Deployment?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentconfigname
       */
      DeploymentConfigName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentgroupname
       */
      DeploymentGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentstyle
       */
      DeploymentStyle?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ecsservices
       */
      ECSServices?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ec2tagfilters
       */
      Ec2TagFilters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ec2tagset
       */
      Ec2TagSet?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-loadbalancerinfo
       */
      LoadBalancerInfo?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-onpremisesinstancetagfilters
       */
      OnPremisesInstanceTagFilters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-onpremisestagset
       */
      OnPremisesTagSet?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-outdatedinstancesstrategy
       */
      OutdatedInstancesStrategy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-servicerolearn
       */
      ServiceRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-terminationhookenabled
       */
      TerminationHookEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-triggerconfigurations
       */
      TriggerConfigurations?: {}[];
    }
    
    
    interface DeploymentGroup extends Resource<"AWS::CodeDeploy::DeploymentGroup">, DeploymentGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DeploymentGroup(id: string, props: DeploymentGroupProps): Promise<DeploymentGroup>;
  }
  namespace CodeGuruProfiler {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html
     */
    interface ProfilingGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-anomalydetectionnotificationconfiguration
       */
      AnomalyDetectionNotificationConfiguration?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-agentpermissions
       */
      AgentPermissions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-computeplatform
       */
      ComputePlatform?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-profilinggroupname
       */
      ProfilingGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeguruprofiler-profilinggroup.html#cfn-codeguruprofiler-profilinggroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface ProfilingGroup extends Resource<"AWS::CodeGuruProfiler::ProfilingGroup">, ProfilingGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ProfilingGroup(id: string, props: ProfilingGroupProps): Promise<ProfilingGroup>;
  }
  namespace CodeGuruReviewer {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codegurureviewer-repositoryassociation.html
     */
    interface RepositoryAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codegurureviewer-repositoryassociation.html#cfn-codegurureviewer-repositoryassociation-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codegurureviewer-repositoryassociation.html#cfn-codegurureviewer-repositoryassociation-owner
       */
      Owner?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codegurureviewer-repositoryassociation.html#cfn-codegurureviewer-repositoryassociation-bucketname
       */
      BucketName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codegurureviewer-repositoryassociation.html#cfn-codegurureviewer-repositoryassociation-connectionarn
       */
      ConnectionArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codegurureviewer-repositoryassociation.html#cfn-codegurureviewer-repositoryassociation-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codegurureviewer-repositoryassociation.html#cfn-codegurureviewer-repositoryassociation-name
       */
      Name: string;
    }
    
    
    interface RepositoryAssociation extends Resource<"AWS::CodeGuruReviewer::RepositoryAssociation">, RepositoryAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RepositoryAssociation(id: string, props: RepositoryAssociationProps): Promise<RepositoryAssociation>;
  }
  namespace CodePipeline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html
     */
    interface CustomActionTypeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-category
       */
      Category: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-inputartifactdetails
       */
      InputArtifactDetails: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-version
       */
      Version: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-outputartifactdetails
       */
      OutputArtifactDetails: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-configurationproperties
       */
      ConfigurationProperties?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-settings
       */
      Settings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-provider
       */
      Provider: string;
    }
    
    
    interface CustomActionType extends Resource<"AWS::CodePipeline::CustomActionType">, CustomActionTypeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CustomActionType(id: string, props: CustomActionTypeProps): Promise<CustomActionType>;
  }
  namespace CodePipeline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html
     */
    interface PipelineProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-variables
       */
      Variables?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-artifactstores
       */
      ArtifactStores?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-artifactstore
       */
      ArtifactStore?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-disableinboundstagetransitions
       */
      DisableInboundStageTransitions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-stages
       */
      Stages: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-pipelinetype
       */
      PipelineType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-executionmode
       */
      ExecutionMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-restartexecutiononupdate
       */
      RestartExecutionOnUpdate?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-triggers
       */
      Triggers?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-name
       */
      Name?: string;
    }
    
    
    interface Pipeline extends Resource<"AWS::CodePipeline::Pipeline">, PipelineProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Pipeline(id: string, props: PipelineProps): Promise<Pipeline>;
  }
  namespace CodePipeline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html
     */
    interface WebhookProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-authenticationconfiguration
       */
      AuthenticationConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-filters
       */
      Filters: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-authentication
       */
      Authentication: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-targetpipeline
       */
      TargetPipeline: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-targetaction
       */
      TargetAction: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-targetpipelineversion
       */
      TargetPipelineVersion: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-registerwiththirdparty
       */
      RegisterWithThirdParty?: boolean;
    }
    
    
    interface Webhook extends Resource<"AWS::CodePipeline::Webhook">, WebhookProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Webhook(id: string, props: WebhookProps): Promise<Webhook>;
  }
  namespace CodeStar {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html
     */
    interface GitHubRepositoryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-enableissues
       */
      EnableIssues?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-connectionarn
       */
      ConnectionArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryname
       */
      RepositoryName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryaccesstoken
       */
      RepositoryAccessToken?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryowner
       */
      RepositoryOwner: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-isprivate
       */
      IsPrivate?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-code
       */
      Code?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositorydescription
       */
      RepositoryDescription?: string;
    }
    
    
    interface GitHubRepository extends Resource<"AWS::CodeStar::GitHubRepository">, GitHubRepositoryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GitHubRepository(id: string, props: GitHubRepositoryProps): Promise<GitHubRepository>;
  }
  namespace CodeStarConnections {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-connection.html
     */
    interface ConnectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-connection.html#cfn-codestarconnections-connection-connectionname
       */
      ConnectionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-connection.html#cfn-codestarconnections-connection-hostarn
       */
      HostArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-connection.html#cfn-codestarconnections-connection-providertype
       */
      ProviderType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-connection.html#cfn-codestarconnections-connection-tags
       */
      Tags?: {}[];
    }
    
    
    interface Connection extends Resource<"AWS::CodeStarConnections::Connection">, ConnectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Connection(id: string, props: ConnectionProps): Promise<Connection>;
  }
  namespace CodeStarConnections {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-repositorylink.html
     */
    interface RepositoryLinkProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-repositorylink.html#cfn-codestarconnections-repositorylink-ownerid
       */
      OwnerId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-repositorylink.html#cfn-codestarconnections-repositorylink-encryptionkeyarn
       */
      EncryptionKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-repositorylink.html#cfn-codestarconnections-repositorylink-connectionarn
       */
      ConnectionArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-repositorylink.html#cfn-codestarconnections-repositorylink-repositoryname
       */
      RepositoryName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-repositorylink.html#cfn-codestarconnections-repositorylink-tags
       */
      Tags?: {}[];
    }
    
    
    interface RepositoryLink extends Resource<"AWS::CodeStarConnections::RepositoryLink">, RepositoryLinkProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RepositoryLink(id: string, props: RepositoryLinkProps): Promise<RepositoryLink>;
  }
  namespace CodeStarConnections {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-syncconfiguration.html
     */
    interface SyncConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-syncconfiguration.html#cfn-codestarconnections-syncconfiguration-configfile
       */
      ConfigFile: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-syncconfiguration.html#cfn-codestarconnections-syncconfiguration-resourcename
       */
      ResourceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-syncconfiguration.html#cfn-codestarconnections-syncconfiguration-branch
       */
      Branch: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-syncconfiguration.html#cfn-codestarconnections-syncconfiguration-synctype
       */
      SyncType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-syncconfiguration.html#cfn-codestarconnections-syncconfiguration-triggerresourceupdateon
       */
      TriggerResourceUpdateOn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-syncconfiguration.html#cfn-codestarconnections-syncconfiguration-repositorylinkid
       */
      RepositoryLinkId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-syncconfiguration.html#cfn-codestarconnections-syncconfiguration-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-syncconfiguration.html#cfn-codestarconnections-syncconfiguration-publishdeploymentstatus
       */
      PublishDeploymentStatus?: string;
    }
    
    
    interface SyncConfiguration extends Resource<"AWS::CodeStarConnections::SyncConfiguration">, SyncConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SyncConfiguration(id: string, props: SyncConfigurationProps): Promise<SyncConfiguration>;
  }
  namespace CodeStarNotifications {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html
     */
    interface NotificationRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-eventtypeids
       */
      EventTypeIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-createdby
       */
      CreatedBy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-detailtype
       */
      DetailType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-resource
       */
      Resource: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-eventtypeid
       */
      EventTypeId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-targetaddress
       */
      TargetAddress?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-targets
       */
      Targets: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-name
       */
      Name: string;
    }
    
    
    interface NotificationRule extends Resource<"AWS::CodeStarNotifications::NotificationRule">, NotificationRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NotificationRule(id: string, props: NotificationRuleProps): Promise<NotificationRule>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html
     */
    interface IdentityPoolProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-pushsync
       */
      PushSync?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoidentityproviders
       */
      CognitoIdentityProviders?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoevents
       */
      CognitoEvents?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-developerprovidername
       */
      DeveloperProviderName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitostreams
       */
      CognitoStreams?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-identitypoolname
       */
      IdentityPoolName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-supportedloginproviders
       */
      SupportedLoginProviders?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-allowunauthenticatedidentities
       */
      AllowUnauthenticatedIdentities: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-identitypooltags
       */
      IdentityPoolTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-samlproviderarns
       */
      SamlProviderARNs?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-openidconnectproviderarns
       */
      OpenIdConnectProviderARNs?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-allowclassicflow
       */
      AllowClassicFlow?: boolean;
    }
    
    
    interface IdentityPool extends Resource<"AWS::Cognito::IdentityPool">, IdentityPoolProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IdentityPool(id: string, props: IdentityPoolProps): Promise<IdentityPool>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolprincipaltag.html
     */
    interface IdentityPoolPrincipalTagProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolprincipaltag.html#cfn-cognito-identitypoolprincipaltag-principaltags
       */
      PrincipalTags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolprincipaltag.html#cfn-cognito-identitypoolprincipaltag-usedefaults
       */
      UseDefaults?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolprincipaltag.html#cfn-cognito-identitypoolprincipaltag-identityprovidername
       */
      IdentityProviderName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolprincipaltag.html#cfn-cognito-identitypoolprincipaltag-identitypoolid
       */
      IdentityPoolId: string;
    }
    
    
    interface IdentityPoolPrincipalTag extends Resource<"AWS::Cognito::IdentityPoolPrincipalTag">, IdentityPoolPrincipalTagProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IdentityPoolPrincipalTag(id: string, props: IdentityPoolPrincipalTagProps): Promise<IdentityPoolPrincipalTag>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html
     */
    interface IdentityPoolRoleAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html#cfn-cognito-identitypoolroleattachment-rolemappings
       */
      RoleMappings?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html#cfn-cognito-identitypoolroleattachment-identitypoolid
       */
      IdentityPoolId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html#cfn-cognito-identitypoolroleattachment-roles
       */
      Roles?: {
        [k: string]: unknown;
      };
    }
    
    
    interface IdentityPoolRoleAttachment extends Resource<"AWS::Cognito::IdentityPoolRoleAttachment">, IdentityPoolRoleAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IdentityPoolRoleAttachment(id: string, props: IdentityPoolRoleAttachmentProps): Promise<IdentityPoolRoleAttachment>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-logdeliveryconfiguration.html
     */
    interface LogDeliveryConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-logdeliveryconfiguration.html#cfn-cognito-logdeliveryconfiguration-userpoolid
       */
      UserPoolId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-logdeliveryconfiguration.html#cfn-cognito-logdeliveryconfiguration-logconfigurations
       */
      LogConfigurations?: {}[];
    }
    
    
    interface LogDeliveryConfiguration extends Resource<"AWS::Cognito::LogDeliveryConfiguration">, LogDeliveryConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LogDeliveryConfiguration(id: string, props: LogDeliveryConfigurationProps): Promise<LogDeliveryConfiguration>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-managedloginbranding.html
     */
    interface ManagedLoginBrandingProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-managedloginbranding.html#cfn-cognito-managedloginbranding-userpoolid
       */
      UserPoolId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-managedloginbranding.html#cfn-cognito-managedloginbranding-usecognitoprovidedvalues
       */
      UseCognitoProvidedValues?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-managedloginbranding.html#cfn-cognito-managedloginbranding-assets
       */
      Assets?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-managedloginbranding.html#cfn-cognito-managedloginbranding-clientid
       */
      ClientId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-managedloginbranding.html#cfn-cognito-managedloginbranding-settings
       */
      Settings?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-managedloginbranding.html#cfn-cognito-managedloginbranding-returnmergedresources
       */
      ReturnMergedResources?: boolean;
    }
    
    
    interface ManagedLoginBranding extends Resource<"AWS::Cognito::ManagedLoginBranding">, ManagedLoginBrandingProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ManagedLoginBranding(id: string, props: ManagedLoginBrandingProps): Promise<ManagedLoginBranding>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html
     */
    interface UserPoolProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-userpooltags
       */
      UserPoolTags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-policies
       */
      Policies?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-schema
       */
      Schema?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-admincreateuserconfig
       */
      AdminCreateUserConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-userpooltier
       */
      UserPoolTier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-usernameconfiguration
       */
      UsernameConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-userpoolname
       */
      UserPoolName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-smsverificationmessage
       */
      SmsVerificationMessage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-userattributeupdatesettings
       */
      UserAttributeUpdateSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-emailconfiguration
       */
      EmailConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-smsconfiguration
       */
      SmsConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-emailverificationsubject
       */
      EmailVerificationSubject?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-webauthnrelyingpartyid
       */
      WebAuthnRelyingPartyID?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-emailauthenticationsubject
       */
      EmailAuthenticationSubject?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-accountrecoverysetting
       */
      AccountRecoverySetting?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-verificationmessagetemplate
       */
      VerificationMessageTemplate?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-mfaconfiguration
       */
      MfaConfiguration?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-deletionprotection
       */
      DeletionProtection?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-smsauthenticationmessage
       */
      SmsAuthenticationMessage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-webauthnuserverification
       */
      WebAuthnUserVerification?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-userpooladdons
       */
      UserPoolAddOns?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-emailauthenticationmessage
       */
      EmailAuthenticationMessage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-aliasattributes
       */
      AliasAttributes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-enabledmfas
       */
      EnabledMfas?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-lambdaconfig
       */
      LambdaConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-usernameattributes
       */
      UsernameAttributes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-autoverifiedattributes
       */
      AutoVerifiedAttributes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-deviceconfiguration
       */
      DeviceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html#cfn-cognito-userpool-emailverificationmessage
       */
      EmailVerificationMessage?: string;
    }
    
    
    interface UserPool extends Resource<"AWS::Cognito::UserPool">, UserPoolProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserPool(id: string, props: UserPoolProps): Promise<UserPool>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html
     */
    interface UserPoolClientProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-analyticsconfiguration
       */
      AnalyticsConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-generatesecret
       */
      GenerateSecret?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-callbackurls
       */
      CallbackURLs?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-enablepropagateadditionalusercontextdata
       */
      EnablePropagateAdditionalUserContextData?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-idtokenvalidity
       */
      IdTokenValidity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-authsessionvalidity
       */
      AuthSessionValidity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-refreshtokenrotation
       */
      RefreshTokenRotation?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-allowedoauthscopes
       */
      AllowedOAuthScopes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-tokenvalidityunits
       */
      TokenValidityUnits?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-readattributes
       */
      ReadAttributes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-allowedoauthflowsuserpoolclient
       */
      AllowedOAuthFlowsUserPoolClient?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-defaultredirecturi
       */
      DefaultRedirectURI?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-supportedidentityproviders
       */
      SupportedIdentityProviders?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-clientname
       */
      ClientName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-userpoolid
       */
      UserPoolId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-allowedoauthflows
       */
      AllowedOAuthFlows?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-explicitauthflows
       */
      ExplicitAuthFlows?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-logouturls
       */
      LogoutURLs?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-accesstokenvalidity
       */
      AccessTokenValidity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-refreshtokenvalidity
       */
      RefreshTokenValidity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-writeattributes
       */
      WriteAttributes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-preventuserexistenceerrors
       */
      PreventUserExistenceErrors?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolclient.html#cfn-cognito-userpoolclient-enabletokenrevocation
       */
      EnableTokenRevocation?: boolean;
    }
    
    
    interface UserPoolClient extends Resource<"AWS::Cognito::UserPoolClient">, UserPoolClientProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserPoolClient(id: string, props: UserPoolClientProps): Promise<UserPoolClient>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html
     */
    interface UserPoolDomainProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html#cfn-cognito-userpooldomain-userpoolid
       */
      UserPoolId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html#cfn-cognito-userpooldomain-customdomainconfig
       */
      CustomDomainConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html#cfn-cognito-userpooldomain-domain
       */
      Domain: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooldomain.html#cfn-cognito-userpooldomain-managedloginversion
       */
      ManagedLoginVersion?: number;
    }
    
    
    interface UserPoolDomain extends Resource<"AWS::Cognito::UserPoolDomain">, UserPoolDomainProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserPoolDomain(id: string, props: UserPoolDomainProps): Promise<UserPoolDomain>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html
     */
    interface UserPoolGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-groupname
       */
      GroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-userpoolid
       */
      UserPoolId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-precedence
       */
      Precedence?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-rolearn
       */
      RoleArn?: string;
    }
    
    
    interface UserPoolGroup extends Resource<"AWS::Cognito::UserPoolGroup">, UserPoolGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserPoolGroup(id: string, props: UserPoolGroupProps): Promise<UserPoolGroup>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html
     */
    interface UserPoolIdentityProviderProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-providername
       */
      ProviderName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-userpoolid
       */
      UserPoolId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-attributemapping
       */
      AttributeMapping?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-providerdetails
       */
      ProviderDetails: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-providertype
       */
      ProviderType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-idpidentifiers
       */
      IdpIdentifiers?: string[];
    }
    
    
    interface UserPoolIdentityProvider extends Resource<"AWS::Cognito::UserPoolIdentityProvider">, UserPoolIdentityProviderProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserPoolIdentityProvider(id: string, props: UserPoolIdentityProviderProps): Promise<UserPoolIdentityProvider>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html
     */
    interface UserPoolResourceServerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html#cfn-cognito-userpoolresourceserver-userpoolid
       */
      UserPoolId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html#cfn-cognito-userpoolresourceserver-identifier
       */
      Identifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html#cfn-cognito-userpoolresourceserver-scopes
       */
      Scopes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolresourceserver.html#cfn-cognito-userpoolresourceserver-name
       */
      Name: string;
    }
    
    
    interface UserPoolResourceServer extends Resource<"AWS::Cognito::UserPoolResourceServer">, UserPoolResourceServerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserPoolResourceServer(id: string, props: UserPoolResourceServerProps): Promise<UserPoolResourceServer>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html
     */
    interface UserPoolRiskConfigurationAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-compromisedcredentialsriskconfiguration
       */
      CompromisedCredentialsRiskConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-userpoolid
       */
      UserPoolId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-clientid
       */
      ClientId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-accounttakeoverriskconfiguration
       */
      AccountTakeoverRiskConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolriskconfigurationattachment.html#cfn-cognito-userpoolriskconfigurationattachment-riskexceptionconfiguration
       */
      RiskExceptionConfiguration?: {};
    }
    
    
    interface UserPoolRiskConfigurationAttachment extends Resource<"AWS::Cognito::UserPoolRiskConfigurationAttachment">, UserPoolRiskConfigurationAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserPoolRiskConfigurationAttachment(id: string, props: UserPoolRiskConfigurationAttachmentProps): Promise<UserPoolRiskConfigurationAttachment>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html
     */
    interface UserPoolUICustomizationAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html#cfn-cognito-userpooluicustomizationattachment-css
       */
      CSS?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html#cfn-cognito-userpooluicustomizationattachment-userpoolid
       */
      UserPoolId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html#cfn-cognito-userpooluicustomizationattachment-clientid
       */
      ClientId: string;
    }
    
    
    interface UserPoolUICustomizationAttachment extends Resource<"AWS::Cognito::UserPoolUICustomizationAttachment">, UserPoolUICustomizationAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserPoolUICustomizationAttachment(id: string, props: UserPoolUICustomizationAttachmentProps): Promise<UserPoolUICustomizationAttachment>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html
     */
    interface UserPoolUserProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-validationdata
       */
      ValidationData?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-userpoolid
       */
      UserPoolId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-username
       */
      Username?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-messageaction
       */
      MessageAction?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-clientmetadata
       */
      ClientMetadata?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-desireddeliverymediums
       */
      DesiredDeliveryMediums?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-forcealiascreation
       */
      ForceAliasCreation?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluser.html#cfn-cognito-userpooluser-userattributes
       */
      UserAttributes?: {}[];
    }
    
    
    interface UserPoolUser extends Resource<"AWS::Cognito::UserPoolUser">, UserPoolUserProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserPoolUser(id: string, props: UserPoolUserProps): Promise<UserPoolUser>;
  }
  namespace Cognito {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html
     */
    interface UserPoolUserToGroupAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-groupname
       */
      GroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-userpoolid
       */
      UserPoolId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-username
       */
      Username: string;
    }
    
    
    interface UserPoolUserToGroupAttachment extends Resource<"AWS::Cognito::UserPoolUserToGroupAttachment">, UserPoolUserToGroupAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserPoolUserToGroupAttachment(id: string, props: UserPoolUserToGroupAttachmentProps): Promise<UserPoolUserToGroupAttachment>;
  }
  namespace Comprehend {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-documentclassifier.html
     */
    interface DocumentClassifierProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-documentclassifier.html#cfn-comprehend-documentclassifier-languagecode
       */
      LanguageCode: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-documentclassifier.html#cfn-comprehend-documentclassifier-dataaccessrolearn
       */
      DataAccessRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-documentclassifier.html#cfn-comprehend-documentclassifier-outputdataconfig
       */
      OutputDataConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-documentclassifier.html#cfn-comprehend-documentclassifier-vpcconfig
       */
      VpcConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-documentclassifier.html#cfn-comprehend-documentclassifier-documentclassifiername
       */
      DocumentClassifierName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-documentclassifier.html#cfn-comprehend-documentclassifier-mode
       */
      Mode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-documentclassifier.html#cfn-comprehend-documentclassifier-volumekmskeyid
       */
      VolumeKmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-documentclassifier.html#cfn-comprehend-documentclassifier-modelkmskeyid
       */
      ModelKmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-documentclassifier.html#cfn-comprehend-documentclassifier-versionname
       */
      VersionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-documentclassifier.html#cfn-comprehend-documentclassifier-modelpolicy
       */
      ModelPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-documentclassifier.html#cfn-comprehend-documentclassifier-inputdataconfig
       */
      InputDataConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-documentclassifier.html#cfn-comprehend-documentclassifier-tags
       */
      Tags?: {}[];
    }
    
    
    interface DocumentClassifier extends Resource<"AWS::Comprehend::DocumentClassifier">, DocumentClassifierProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DocumentClassifier(id: string, props: DocumentClassifierProps): Promise<DocumentClassifier>;
  }
  namespace Comprehend {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html
     */
    interface FlywheelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-datalakes3uri
       */
      DataLakeS3Uri: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-dataaccessrolearn
       */
      DataAccessRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-flywheelname
       */
      FlywheelName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-modeltype
       */
      ModelType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-taskconfig
       */
      TaskConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-activemodelarn
       */
      ActiveModelArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-datasecurityconfig
       */
      DataSecurityConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-tags
       */
      Tags?: {}[];
    }
    
    
    interface Flywheel extends Resource<"AWS::Comprehend::Flywheel">, FlywheelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Flywheel(id: string, props: FlywheelProps): Promise<Flywheel>;
  }
  namespace Config {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html
     */
    interface AggregationAuthorizationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html#cfn-config-aggregationauthorization-authorizedaccountid
       */
      AuthorizedAccountId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html#cfn-config-aggregationauthorization-authorizedawsregion
       */
      AuthorizedAwsRegion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-aggregationauthorization.html#cfn-config-aggregationauthorization-tags
       */
      Tags?: {}[];
    }
    
    
    interface AggregationAuthorization extends Resource<"AWS::Config::AggregationAuthorization">, AggregationAuthorizationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AggregationAuthorization(id: string, props: AggregationAuthorizationProps): Promise<AggregationAuthorization>;
  }
  namespace Config {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html
     */
    interface ConfigRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-evaluationmodes
       */
      EvaluationModes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-scope
       */
      Scope?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-compliance
       */
      Compliance?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-configrulename
       */
      ConfigRuleName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-maximumexecutionfrequency
       */
      MaximumExecutionFrequency?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-source
       */
      Source: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-inputparameters
       */
      InputParameters?: {
        [k: string]: unknown;
      };
    }
    
    
    interface ConfigRule extends Resource<"AWS::Config::ConfigRule">, ConfigRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConfigRule(id: string, props: ConfigRuleProps): Promise<ConfigRule>;
  }
  namespace Config {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html
     */
    interface ConfigurationAggregatorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-accountaggregationsources
       */
      AccountAggregationSources?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-configurationaggregatorname
       */
      ConfigurationAggregatorName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-organizationaggregationsource
       */
      OrganizationAggregationSource?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationaggregator.html#cfn-config-configurationaggregator-tags
       */
      Tags?: {}[];
    }
    
    
    interface ConfigurationAggregator extends Resource<"AWS::Config::ConfigurationAggregator">, ConfigurationAggregatorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConfigurationAggregator(id: string, props: ConfigurationAggregatorProps): Promise<ConfigurationAggregator>;
  }
  namespace Config {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html
     */
    interface ConfigurationRecorderProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-recordinggroup
       */
      RecordingGroup?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-recordingmode
       */
      RecordingMode?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-rolearn
       */
      RoleARN: string;
    }
    
    
    interface ConfigurationRecorder extends Resource<"AWS::Config::ConfigurationRecorder">, ConfigurationRecorderProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConfigurationRecorder(id: string, props: ConfigurationRecorderProps): Promise<ConfigurationRecorder>;
  }
  namespace Config {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html
     */
    interface ConformancePackProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-conformancepackinputparameters
       */
      ConformancePackInputParameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-templatessmdocumentdetails
       */
      TemplateSSMDocumentDetails?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-deliverys3bucket
       */
      DeliveryS3Bucket?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-conformancepackname
       */
      ConformancePackName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-deliverys3keyprefix
       */
      DeliveryS3KeyPrefix?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-templatebody
       */
      TemplateBody?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-templates3uri
       */
      TemplateS3Uri?: string;
    }
    
    
    interface ConformancePack extends Resource<"AWS::Config::ConformancePack">, ConformancePackProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConformancePack(id: string, props: ConformancePackProps): Promise<ConformancePack>;
  }
  namespace Config {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html
     */
    interface DeliveryChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-configsnapshotdeliveryproperties
       */
      ConfigSnapshotDeliveryProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-s3bucketname
       */
      S3BucketName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-s3keyprefix
       */
      S3KeyPrefix?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-s3kmskeyarn
       */
      S3KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-deliverychannel.html#cfn-config-deliverychannel-snstopicarn
       */
      SnsTopicARN?: string;
    }
    
    
    interface DeliveryChannel extends Resource<"AWS::Config::DeliveryChannel">, DeliveryChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DeliveryChannel(id: string, props: DeliveryChannelProps): Promise<DeliveryChannel>;
  }
  namespace Config {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html
     */
    interface OrganizationConfigRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html#cfn-config-organizationconfigrule-organizationmanagedrulemetadata
       */
      OrganizationManagedRuleMetadata?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html#cfn-config-organizationconfigrule-organizationconfigrulename
       */
      OrganizationConfigRuleName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html#cfn-config-organizationconfigrule-organizationcustomrulemetadata
       */
      OrganizationCustomRuleMetadata?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html#cfn-config-organizationconfigrule-excludedaccounts
       */
      ExcludedAccounts?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconfigrule.html#cfn-config-organizationconfigrule-organizationcustompolicyrulemetadata
       */
      OrganizationCustomPolicyRuleMetadata?: {};
    }
    
    
    interface OrganizationConfigRule extends Resource<"AWS::Config::OrganizationConfigRule">, OrganizationConfigRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function OrganizationConfigRule(id: string, props: OrganizationConfigRuleProps): Promise<OrganizationConfigRule>;
  }
  namespace Config {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html
     */
    interface OrganizationConformancePackProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-conformancepackinputparameters
       */
      ConformancePackInputParameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-deliverys3bucket
       */
      DeliveryS3Bucket?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-excludedaccounts
       */
      ExcludedAccounts?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-deliverys3keyprefix
       */
      DeliveryS3KeyPrefix?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-templatebody
       */
      TemplateBody?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-organizationconformancepackname
       */
      OrganizationConformancePackName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-organizationconformancepack.html#cfn-config-organizationconformancepack-templates3uri
       */
      TemplateS3Uri?: string;
    }
    
    
    interface OrganizationConformancePack extends Resource<"AWS::Config::OrganizationConformancePack">, OrganizationConformancePackProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function OrganizationConformancePack(id: string, props: OrganizationConformancePackProps): Promise<OrganizationConformancePack>;
  }
  namespace Config {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html
     */
    interface RemediationConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-targetversion
       */
      TargetVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-executioncontrols
       */
      ExecutionControls?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-parameters
       */
      Parameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-targettype
       */
      TargetType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-configrulename
       */
      ConfigRuleName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-resourcetype
       */
      ResourceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-retryattemptseconds
       */
      RetryAttemptSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-maximumautomaticattempts
       */
      MaximumAutomaticAttempts?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-targetid
       */
      TargetId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-automatic
       */
      Automatic?: boolean;
    }
    
    
    interface RemediationConfiguration extends Resource<"AWS::Config::RemediationConfiguration">, RemediationConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RemediationConfiguration(id: string, props: RemediationConfigurationProps): Promise<RemediationConfiguration>;
  }
  namespace Config {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html
     */
    interface StoredQueryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html#cfn-config-storedquery-querydescription
       */
      QueryDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html#cfn-config-storedquery-queryexpression
       */
      QueryExpression: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html#cfn-config-storedquery-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-storedquery.html#cfn-config-storedquery-queryname
       */
      QueryName: string;
    }
    
    
    interface StoredQuery extends Resource<"AWS::Config::StoredQuery">, StoredQueryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StoredQuery(id: string, props: StoredQueryProps): Promise<StoredQuery>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-agentstatus.html
     */
    interface AgentStatusProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-agentstatus.html#cfn-connect-agentstatus-resetordernumber
       */
      ResetOrderNumber?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-agentstatus.html#cfn-connect-agentstatus-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-agentstatus.html#cfn-connect-agentstatus-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-agentstatus.html#cfn-connect-agentstatus-displayorder
       */
      DisplayOrder?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-agentstatus.html#cfn-connect-agentstatus-state
       */
      State: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-agentstatus.html#cfn-connect-agentstatus-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-agentstatus.html#cfn-connect-agentstatus-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-agentstatus.html#cfn-connect-agentstatus-name
       */
      Name: string;
    }
    
    
    interface AgentStatus extends Resource<"AWS::Connect::AgentStatus">, AgentStatusProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AgentStatus(id: string, props: AgentStatusProps): Promise<AgentStatus>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-approvedorigin.html
     */
    interface ApprovedOriginProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-approvedorigin.html#cfn-connect-approvedorigin-origin
       */
      Origin: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-approvedorigin.html#cfn-connect-approvedorigin-instanceid
       */
      InstanceId: string;
    }
    
    
    interface ApprovedOrigin extends Resource<"AWS::Connect::ApprovedOrigin">, ApprovedOriginProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApprovedOrigin(id: string, props: ApprovedOriginProps): Promise<ApprovedOrigin>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html
     */
    interface ContactFlowProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-content
       */
      Content: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-state
       */
      State?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflow.html#cfn-connect-contactflow-name
       */
      Name: string;
    }
    
    
    interface ContactFlow extends Resource<"AWS::Connect::ContactFlow">, ContactFlowProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ContactFlow(id: string, props: ContactFlowProps): Promise<ContactFlow>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html
     */
    interface ContactFlowModuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-content
       */
      Content: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-state
       */
      State?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowmodule.html#cfn-connect-contactflowmodule-name
       */
      Name: string;
    }
    
    
    interface ContactFlowModule extends Resource<"AWS::Connect::ContactFlowModule">, ContactFlowModuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ContactFlowModule(id: string, props: ContactFlowModuleProps): Promise<ContactFlowModule>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowversion.html
     */
    interface ContactFlowVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowversion.html#cfn-connect-contactflowversion-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-contactflowversion.html#cfn-connect-contactflowversion-contactflowid
       */
      ContactFlowId: string;
    }
    
    
    interface ContactFlowVersion extends Resource<"AWS::Connect::ContactFlowVersion">, ContactFlowVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ContactFlowVersion(id: string, props: ContactFlowVersionProps): Promise<ContactFlowVersion>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-emailaddress.html
     */
    interface EmailAddressProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-emailaddress.html#cfn-connect-emailaddress-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-emailaddress.html#cfn-connect-emailaddress-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-emailaddress.html#cfn-connect-emailaddress-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-emailaddress.html#cfn-connect-emailaddress-emailaddress
       */
      EmailAddress: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-emailaddress.html#cfn-connect-emailaddress-tags
       */
      Tags?: {}[];
    }
    
    
    interface EmailAddress extends Resource<"AWS::Connect::EmailAddress">, EmailAddressProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EmailAddress(id: string, props: EmailAddressProps): Promise<EmailAddress>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-evaluationform.html
     */
    interface EvaluationFormProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-evaluationform.html#cfn-connect-evaluationform-scoringstrategy
       */
      ScoringStrategy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-evaluationform.html#cfn-connect-evaluationform-status
       */
      Status: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-evaluationform.html#cfn-connect-evaluationform-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-evaluationform.html#cfn-connect-evaluationform-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-evaluationform.html#cfn-connect-evaluationform-title
       */
      Title: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-evaluationform.html#cfn-connect-evaluationform-items
       */
      Items: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-evaluationform.html#cfn-connect-evaluationform-tags
       */
      Tags?: {}[];
    }
    
    
    interface EvaluationForm extends Resource<"AWS::Connect::EvaluationForm">, EvaluationFormProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EvaluationForm(id: string, props: EvaluationFormProps): Promise<EvaluationForm>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html
     */
    interface HoursOfOperationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-timezone
       */
      TimeZone: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-config
       */
      Config: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-hoursofoperationoverrides
       */
      HoursOfOperationOverrides?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-hoursofoperation.html#cfn-connect-hoursofoperation-name
       */
      Name: string;
    }
    
    
    interface HoursOfOperation extends Resource<"AWS::Connect::HoursOfOperation">, HoursOfOperationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function HoursOfOperation(id: string, props: HoursOfOperationProps): Promise<HoursOfOperation>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instance.html
     */
    interface InstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instance.html#cfn-connect-instance-directoryid
       */
      DirectoryId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instance.html#cfn-connect-instance-identitymanagementtype
       */
      IdentityManagementType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instance.html#cfn-connect-instance-instancealias
       */
      InstanceAlias?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instance.html#cfn-connect-instance-attributes
       */
      Attributes: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instance.html#cfn-connect-instance-tags
       */
      Tags?: {}[];
    }
    
    
    interface Instance extends Resource<"AWS::Connect::Instance">, InstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Instance(id: string, props: InstanceProps): Promise<Instance>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instancestorageconfig.html
     */
    interface InstanceStorageConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instancestorageconfig.html#cfn-connect-instancestorageconfig-kinesisstreamconfig
       */
      KinesisStreamConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instancestorageconfig.html#cfn-connect-instancestorageconfig-s3config
       */
      S3Config?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instancestorageconfig.html#cfn-connect-instancestorageconfig-storagetype
       */
      StorageType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instancestorageconfig.html#cfn-connect-instancestorageconfig-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instancestorageconfig.html#cfn-connect-instancestorageconfig-resourcetype
       */
      ResourceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instancestorageconfig.html#cfn-connect-instancestorageconfig-kinesisvideostreamconfig
       */
      KinesisVideoStreamConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instancestorageconfig.html#cfn-connect-instancestorageconfig-kinesisfirehoseconfig
       */
      KinesisFirehoseConfig?: {};
    }
    
    
    interface InstanceStorageConfig extends Resource<"AWS::Connect::InstanceStorageConfig">, InstanceStorageConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InstanceStorageConfig(id: string, props: InstanceStorageConfigProps): Promise<InstanceStorageConfig>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-integrationassociation.html
     */
    interface IntegrationAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-integrationassociation.html#cfn-connect-integrationassociation-integrationarn
       */
      IntegrationArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-integrationassociation.html#cfn-connect-integrationassociation-instanceid
       */
      InstanceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-integrationassociation.html#cfn-connect-integrationassociation-integrationtype
       */
      IntegrationType: string;
    }
    
    
    interface IntegrationAssociation extends Resource<"AWS::Connect::IntegrationAssociation">, IntegrationAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IntegrationAssociation(id: string, props: IntegrationAssociationProps): Promise<IntegrationAssociation>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-phonenumber.html
     */
    interface PhoneNumberProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-phonenumber.html#cfn-connect-phonenumber-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-phonenumber.html#cfn-connect-phonenumber-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-phonenumber.html#cfn-connect-phonenumber-targetarn
       */
      TargetArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-phonenumber.html#cfn-connect-phonenumber-prefix
       */
      Prefix?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-phonenumber.html#cfn-connect-phonenumber-countrycode
       */
      CountryCode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-phonenumber.html#cfn-connect-phonenumber-sourcephonenumberarn
       */
      SourcePhoneNumberArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-phonenumber.html#cfn-connect-phonenumber-tags
       */
      Tags?: {}[];
    }
    
    
    interface PhoneNumber extends Resource<"AWS::Connect::PhoneNumber">, PhoneNumberProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PhoneNumber(id: string, props: PhoneNumberProps): Promise<PhoneNumber>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-predefinedattribute.html
     */
    interface PredefinedAttributeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-predefinedattribute.html#cfn-connect-predefinedattribute-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-predefinedattribute.html#cfn-connect-predefinedattribute-values
       */
      Values: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-predefinedattribute.html#cfn-connect-predefinedattribute-name
       */
      Name: string;
    }
    
    
    interface PredefinedAttribute extends Resource<"AWS::Connect::PredefinedAttribute">, PredefinedAttributeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PredefinedAttribute(id: string, props: PredefinedAttributeProps): Promise<PredefinedAttribute>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-prompt.html
     */
    interface PromptProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-prompt.html#cfn-connect-prompt-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-prompt.html#cfn-connect-prompt-s3uri
       */
      S3Uri?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-prompt.html#cfn-connect-prompt-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-prompt.html#cfn-connect-prompt-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-prompt.html#cfn-connect-prompt-name
       */
      Name: string;
    }
    
    
    interface Prompt extends Resource<"AWS::Connect::Prompt">, PromptProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Prompt(id: string, props: PromptProps): Promise<Prompt>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-queue.html
     */
    interface QueueProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-queue.html#cfn-connect-queue-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-queue.html#cfn-connect-queue-hoursofoperationarn
       */
      HoursOfOperationArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-queue.html#cfn-connect-queue-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-queue.html#cfn-connect-queue-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-queue.html#cfn-connect-queue-outboundemailconfig
       */
      OutboundEmailConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-queue.html#cfn-connect-queue-quickconnectarns
       */
      QuickConnectArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-queue.html#cfn-connect-queue-outboundcallerconfig
       */
      OutboundCallerConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-queue.html#cfn-connect-queue-maxcontacts
       */
      MaxContacts?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-queue.html#cfn-connect-queue-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-queue.html#cfn-connect-queue-name
       */
      Name: string;
    }
    
    
    interface Queue extends Resource<"AWS::Connect::Queue">, QueueProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Queue(id: string, props: QueueProps): Promise<Queue>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html
     */
    interface QuickConnectProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-quickconnectconfig
       */
      QuickConnectConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-name
       */
      Name: string;
    }
    
    
    interface QuickConnect extends Resource<"AWS::Connect::QuickConnect">, QuickConnectProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function QuickConnect(id: string, props: QuickConnectProps): Promise<QuickConnect>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-routingprofile.html
     */
    interface RoutingProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-routingprofile.html#cfn-connect-routingprofile-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-routingprofile.html#cfn-connect-routingprofile-mediaconcurrencies
       */
      MediaConcurrencies: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-routingprofile.html#cfn-connect-routingprofile-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-routingprofile.html#cfn-connect-routingprofile-agentavailabilitytimer
       */
      AgentAvailabilityTimer?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-routingprofile.html#cfn-connect-routingprofile-queueconfigs
       */
      QueueConfigs?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-routingprofile.html#cfn-connect-routingprofile-defaultoutboundqueuearn
       */
      DefaultOutboundQueueArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-routingprofile.html#cfn-connect-routingprofile-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-routingprofile.html#cfn-connect-routingprofile-name
       */
      Name: string;
    }
    
    
    interface RoutingProfile extends Resource<"AWS::Connect::RoutingProfile">, RoutingProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RoutingProfile(id: string, props: RoutingProfileProps): Promise<RoutingProfile>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-rule.html
     */
    interface RuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-rule.html#cfn-connect-rule-function
       */
      Function: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-rule.html#cfn-connect-rule-triggereventsource
       */
      TriggerEventSource: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-rule.html#cfn-connect-rule-actions
       */
      Actions: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-rule.html#cfn-connect-rule-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-rule.html#cfn-connect-rule-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-rule.html#cfn-connect-rule-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-rule.html#cfn-connect-rule-publishstatus
       */
      PublishStatus: string;
    }
    
    
    interface Rule extends Resource<"AWS::Connect::Rule">, RuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Rule(id: string, props: RuleProps): Promise<Rule>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securitykey.html
     */
    interface SecurityKeyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securitykey.html#cfn-connect-securitykey-instanceid
       */
      InstanceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securitykey.html#cfn-connect-securitykey-key
       */
      Key: string;
    }
    
    
    interface SecurityKey extends Resource<"AWS::Connect::SecurityKey">, SecurityKeyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecurityKey(id: string, props: SecurityKeyProps): Promise<SecurityKey>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securityprofile.html
     */
    interface SecurityProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securityprofile.html#cfn-connect-securityprofile-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securityprofile.html#cfn-connect-securityprofile-allowedaccesscontroltags
       */
      AllowedAccessControlTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securityprofile.html#cfn-connect-securityprofile-applications
       */
      Applications?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securityprofile.html#cfn-connect-securityprofile-allowedaccesscontrolhierarchygroupid
       */
      AllowedAccessControlHierarchyGroupId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securityprofile.html#cfn-connect-securityprofile-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securityprofile.html#cfn-connect-securityprofile-permissions
       */
      Permissions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securityprofile.html#cfn-connect-securityprofile-securityprofilename
       */
      SecurityProfileName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securityprofile.html#cfn-connect-securityprofile-tagrestrictedresources
       */
      TagRestrictedResources?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securityprofile.html#cfn-connect-securityprofile-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-securityprofile.html#cfn-connect-securityprofile-hierarchyrestrictedresources
       */
      HierarchyRestrictedResources?: string[];
    }
    
    
    interface SecurityProfile extends Resource<"AWS::Connect::SecurityProfile">, SecurityProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecurityProfile(id: string, props: SecurityProfileProps): Promise<SecurityProfile>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-tasktemplate.html
     */
    interface TaskTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-tasktemplate.html#cfn-connect-tasktemplate-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-tasktemplate.html#cfn-connect-tasktemplate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-tasktemplate.html#cfn-connect-tasktemplate-constraints
       */
      Constraints?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-tasktemplate.html#cfn-connect-tasktemplate-defaults
       */
      Defaults?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-tasktemplate.html#cfn-connect-tasktemplate-fields
       */
      Fields?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-tasktemplate.html#cfn-connect-tasktemplate-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-tasktemplate.html#cfn-connect-tasktemplate-contactflowarn
       */
      ContactFlowArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-tasktemplate.html#cfn-connect-tasktemplate-clienttoken
       */
      ClientToken?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-tasktemplate.html#cfn-connect-tasktemplate-selfassigncontactflowarn
       */
      SelfAssignContactFlowArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-tasktemplate.html#cfn-connect-tasktemplate-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-tasktemplate.html#cfn-connect-tasktemplate-name
       */
      Name?: string;
    }
    
    
    interface TaskTemplate extends Resource<"AWS::Connect::TaskTemplate">, TaskTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TaskTemplate(id: string, props: TaskTemplateProps): Promise<TaskTemplate>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-trafficdistributiongroup.html
     */
    interface TrafficDistributionGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-trafficdistributiongroup.html#cfn-connect-trafficdistributiongroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-trafficdistributiongroup.html#cfn-connect-trafficdistributiongroup-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-trafficdistributiongroup.html#cfn-connect-trafficdistributiongroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-trafficdistributiongroup.html#cfn-connect-trafficdistributiongroup-name
       */
      Name: string;
    }
    
    
    interface TrafficDistributionGroup extends Resource<"AWS::Connect::TrafficDistributionGroup">, TrafficDistributionGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TrafficDistributionGroup(id: string, props: TrafficDistributionGroupProps): Promise<TrafficDistributionGroup>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html
     */
    interface UserProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-routingprofilearn
       */
      RoutingProfileArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-username
       */
      Username: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-phoneconfig
       */
      PhoneConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-directoryuserid
       */
      DirectoryUserId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-identityinfo
       */
      IdentityInfo?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-hierarchygrouparn
       */
      HierarchyGroupArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-securityprofilearns
       */
      SecurityProfileArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-userproficiencies
       */
      UserProficiencies?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-password
       */
      Password?: string;
    }
    
    
    interface User extends Resource<"AWS::Connect::User">, UserProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function User(id: string, props: UserProps): Promise<User>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html
     */
    interface UserHierarchyGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html#cfn-connect-userhierarchygroup-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html#cfn-connect-userhierarchygroup-parentgrouparn
       */
      ParentGroupArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html#cfn-connect-userhierarchygroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchygroup.html#cfn-connect-userhierarchygroup-name
       */
      Name: string;
    }
    
    
    interface UserHierarchyGroup extends Resource<"AWS::Connect::UserHierarchyGroup">, UserHierarchyGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserHierarchyGroup(id: string, props: UserHierarchyGroupProps): Promise<UserHierarchyGroup>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchystructure.html
     */
    interface UserHierarchyStructureProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchystructure.html#cfn-connect-userhierarchystructure-userhierarchystructure
       */
      UserHierarchyStructure?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-userhierarchystructure.html#cfn-connect-userhierarchystructure-instancearn
       */
      InstanceArn: string;
    }
    
    
    interface UserHierarchyStructure extends Resource<"AWS::Connect::UserHierarchyStructure">, UserHierarchyStructureProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserHierarchyStructure(id: string, props: UserHierarchyStructureProps): Promise<UserHierarchyStructure>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html
     */
    interface ViewProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html#cfn-connect-view-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html#cfn-connect-view-actions
       */
      Actions: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html#cfn-connect-view-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html#cfn-connect-view-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html#cfn-connect-view-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html#cfn-connect-view-template
       */
      Template: {
        [k: string]: unknown;
      };
    }
    
    
    interface View extends Resource<"AWS::Connect::View">, ViewProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function View(id: string, props: ViewProps): Promise<View>;
  }
  namespace Connect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-viewversion.html
     */
    interface ViewVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-viewversion.html#cfn-connect-viewversion-viewarn
       */
      ViewArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-viewversion.html#cfn-connect-viewversion-versiondescription
       */
      VersionDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-viewversion.html#cfn-connect-viewversion-viewcontentsha256
       */
      ViewContentSha256?: string;
    }
    
    
    interface ViewVersion extends Resource<"AWS::Connect::ViewVersion">, ViewVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ViewVersion(id: string, props: ViewVersionProps): Promise<ViewVersion>;
  }
  namespace ConnectCampaigns {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaigns-campaign.html
     */
    interface CampaignProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaigns-campaign.html#cfn-connectcampaigns-campaign-outboundcallconfig
       */
      OutboundCallConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaigns-campaign.html#cfn-connectcampaigns-campaign-connectinstancearn
       */
      ConnectInstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaigns-campaign.html#cfn-connectcampaigns-campaign-dialerconfig
       */
      DialerConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaigns-campaign.html#cfn-connectcampaigns-campaign-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaigns-campaign.html#cfn-connectcampaigns-campaign-name
       */
      Name: string;
    }
    
    
    interface Campaign extends Resource<"AWS::ConnectCampaigns::Campaign">, CampaignProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Campaign(id: string, props: CampaignProps): Promise<Campaign>;
  }
  namespace ConnectCampaignsV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html
     */
    interface CampaignProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-communicationlimitsoverride
       */
      CommunicationLimitsOverride?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-channelsubtypeconfig
       */
      ChannelSubtypeConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-connectcampaignflowarn
       */
      ConnectCampaignFlowArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-schedule
       */
      Schedule?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-communicationtimeconfig
       */
      CommunicationTimeConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-connectinstanceid
       */
      ConnectInstanceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-source
       */
      Source?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-name
       */
      Name: string;
    }
    
    
    interface Campaign extends Resource<"AWS::ConnectCampaignsV2::Campaign">, CampaignProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Campaign(id: string, props: CampaignProps): Promise<Campaign>;
  }
  namespace ControlTower {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledbaseline.html
     */
    interface EnabledBaselineProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledbaseline.html#cfn-controltower-enabledbaseline-baselineversion
       */
      BaselineVersion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledbaseline.html#cfn-controltower-enabledbaseline-parameters
       */
      Parameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledbaseline.html#cfn-controltower-enabledbaseline-baselineidentifier
       */
      BaselineIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledbaseline.html#cfn-controltower-enabledbaseline-targetidentifier
       */
      TargetIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledbaseline.html#cfn-controltower-enabledbaseline-tags
       */
      Tags?: {}[];
    }
    
    
    interface EnabledBaseline extends Resource<"AWS::ControlTower::EnabledBaseline">, EnabledBaselineProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EnabledBaseline(id: string, props: EnabledBaselineProps): Promise<EnabledBaseline>;
  }
  namespace ControlTower {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledcontrol.html
     */
    interface EnabledControlProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledcontrol.html#cfn-controltower-enabledcontrol-parameters
       */
      Parameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledcontrol.html#cfn-controltower-enabledcontrol-controlidentifier
       */
      ControlIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledcontrol.html#cfn-controltower-enabledcontrol-targetidentifier
       */
      TargetIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledcontrol.html#cfn-controltower-enabledcontrol-tags
       */
      Tags?: {}[];
    }
    
    
    interface EnabledControl extends Resource<"AWS::ControlTower::EnabledControl">, EnabledControlProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EnabledControl(id: string, props: EnabledControlProps): Promise<EnabledControl>;
  }
  namespace ControlTower {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-landingzone.html
     */
    interface LandingZoneProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-landingzone.html#cfn-controltower-landingzone-version
       */
      Version: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-landingzone.html#cfn-controltower-landingzone-manifest
       */
      Manifest: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-landingzone.html#cfn-controltower-landingzone-tags
       */
      Tags?: {}[];
    }
    
    
    interface LandingZone extends Resource<"AWS::ControlTower::LandingZone">, LandingZoneProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LandingZone(id: string, props: LandingZoneProps): Promise<LandingZone>;
  }
  namespace CustomerProfiles {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-calculatedattributedefinition.html
     */
    interface CalculatedAttributeDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-calculatedattributedefinition.html#cfn-customerprofiles-calculatedattributedefinition-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-calculatedattributedefinition.html#cfn-customerprofiles-calculatedattributedefinition-attributedetails
       */
      AttributeDetails: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-calculatedattributedefinition.html#cfn-customerprofiles-calculatedattributedefinition-statistic
       */
      Statistic: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-calculatedattributedefinition.html#cfn-customerprofiles-calculatedattributedefinition-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-calculatedattributedefinition.html#cfn-customerprofiles-calculatedattributedefinition-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-calculatedattributedefinition.html#cfn-customerprofiles-calculatedattributedefinition-calculatedattributename
       */
      CalculatedAttributeName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-calculatedattributedefinition.html#cfn-customerprofiles-calculatedattributedefinition-conditions
       */
      Conditions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-calculatedattributedefinition.html#cfn-customerprofiles-calculatedattributedefinition-tags
       */
      Tags?: {}[];
    }
    
    
    interface CalculatedAttributeDefinition extends Resource<"AWS::CustomerProfiles::CalculatedAttributeDefinition">, CalculatedAttributeDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CalculatedAttributeDefinition(id: string, props: CalculatedAttributeDefinitionProps): Promise<CalculatedAttributeDefinition>;
  }
  namespace CustomerProfiles {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-domain.html
     */
    interface DomainProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-domain.html#cfn-customerprofiles-domain-matching
       */
      Matching?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-domain.html#cfn-customerprofiles-domain-defaultexpirationdays
       */
      DefaultExpirationDays: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-domain.html#cfn-customerprofiles-domain-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-domain.html#cfn-customerprofiles-domain-deadletterqueueurl
       */
      DeadLetterQueueUrl?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-domain.html#cfn-customerprofiles-domain-defaultencryptionkey
       */
      DefaultEncryptionKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-domain.html#cfn-customerprofiles-domain-rulebasedmatching
       */
      RuleBasedMatching?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-domain.html#cfn-customerprofiles-domain-tags
       */
      Tags?: {}[];
    }
    
    
    interface Domain extends Resource<"AWS::CustomerProfiles::Domain">, DomainProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Domain(id: string, props: DomainProps): Promise<Domain>;
  }
  namespace CustomerProfiles {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventstream.html
     */
    interface EventStreamProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventstream.html#cfn-customerprofiles-eventstream-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventstream.html#cfn-customerprofiles-eventstream-eventstreamname
       */
      EventStreamName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventstream.html#cfn-customerprofiles-eventstream-uri
       */
      Uri: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventstream.html#cfn-customerprofiles-eventstream-tags
       */
      Tags?: {}[];
    }
    
    
    interface EventStream extends Resource<"AWS::CustomerProfiles::EventStream">, EventStreamProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventStream(id: string, props: EventStreamProps): Promise<EventStream>;
  }
  namespace CustomerProfiles {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventtrigger.html
     */
    interface EventTriggerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventtrigger.html#cfn-customerprofiles-eventtrigger-eventtriggerlimits
       */
      EventTriggerLimits?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventtrigger.html#cfn-customerprofiles-eventtrigger-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventtrigger.html#cfn-customerprofiles-eventtrigger-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventtrigger.html#cfn-customerprofiles-eventtrigger-objecttypename
       */
      ObjectTypeName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventtrigger.html#cfn-customerprofiles-eventtrigger-segmentfilter
       */
      SegmentFilter?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventtrigger.html#cfn-customerprofiles-eventtrigger-eventtriggerconditions
       */
      EventTriggerConditions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventtrigger.html#cfn-customerprofiles-eventtrigger-eventtriggername
       */
      EventTriggerName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-eventtrigger.html#cfn-customerprofiles-eventtrigger-tags
       */
      Tags?: {}[];
    }
    
    
    interface EventTrigger extends Resource<"AWS::CustomerProfiles::EventTrigger">, EventTriggerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventTrigger(id: string, props: EventTriggerProps): Promise<EventTrigger>;
  }
  namespace CustomerProfiles {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-integration.html
     */
    interface IntegrationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-integration.html#cfn-customerprofiles-integration-eventtriggernames
       */
      EventTriggerNames?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-integration.html#cfn-customerprofiles-integration-objecttypenames
       */
      ObjectTypeNames?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-integration.html#cfn-customerprofiles-integration-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-integration.html#cfn-customerprofiles-integration-objecttypename
       */
      ObjectTypeName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-integration.html#cfn-customerprofiles-integration-uri
       */
      Uri?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-integration.html#cfn-customerprofiles-integration-flowdefinition
       */
      FlowDefinition?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-integration.html#cfn-customerprofiles-integration-tags
       */
      Tags?: {}[];
    }
    
    
    interface Integration extends Resource<"AWS::CustomerProfiles::Integration">, IntegrationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Integration(id: string, props: IntegrationProps): Promise<Integration>;
  }
  namespace CustomerProfiles {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html
     */
    interface ObjectTypeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html#cfn-customerprofiles-objecttype-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html#cfn-customerprofiles-objecttype-fields
       */
      Fields?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html#cfn-customerprofiles-objecttype-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html#cfn-customerprofiles-objecttype-allowprofilecreation
       */
      AllowProfileCreation?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html#cfn-customerprofiles-objecttype-objecttypename
       */
      ObjectTypeName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html#cfn-customerprofiles-objecttype-keys
       */
      Keys?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html#cfn-customerprofiles-objecttype-sourcelastupdatedtimestampformat
       */
      SourceLastUpdatedTimestampFormat?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html#cfn-customerprofiles-objecttype-encryptionkey
       */
      EncryptionKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html#cfn-customerprofiles-objecttype-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html#cfn-customerprofiles-objecttype-templateid
       */
      TemplateId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-objecttype.html#cfn-customerprofiles-objecttype-expirationdays
       */
      ExpirationDays?: number;
    }
    
    
    interface ObjectType extends Resource<"AWS::CustomerProfiles::ObjectType">, ObjectTypeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ObjectType(id: string, props: ObjectTypeProps): Promise<ObjectType>;
  }
  namespace CustomerProfiles {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-segmentdefinition.html
     */
    interface SegmentDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-segmentdefinition.html#cfn-customerprofiles-segmentdefinition-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-segmentdefinition.html#cfn-customerprofiles-segmentdefinition-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-segmentdefinition.html#cfn-customerprofiles-segmentdefinition-segmentgroups
       */
      SegmentGroups: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-segmentdefinition.html#cfn-customerprofiles-segmentdefinition-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-segmentdefinition.html#cfn-customerprofiles-segmentdefinition-segmentdefinitionname
       */
      SegmentDefinitionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-customerprofiles-segmentdefinition.html#cfn-customerprofiles-segmentdefinition-tags
       */
      Tags?: {}[];
    }
    
    
    interface SegmentDefinition extends Resource<"AWS::CustomerProfiles::SegmentDefinition">, SegmentDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SegmentDefinition(id: string, props: SegmentDefinitionProps): Promise<SegmentDefinition>;
  }
  namespace DAX {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html
     */
    interface ClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-ssespecification
       */
      SSESpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-replicationfactor
       */
      ReplicationFactor: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-parametergroupname
       */
      ParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-availabilityzones
       */
      AvailabilityZones?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-iamrolearn
       */
      IAMRoleARN: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-subnetgroupname
       */
      SubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-clusterendpointencryptiontype
       */
      ClusterEndpointEncryptionType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-notificationtopicarn
       */
      NotificationTopicARN?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-nodetype
       */
      NodeType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-clustername
       */
      ClusterName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Cluster extends Resource<"AWS::DAX::Cluster">, ClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Cluster(id: string, props: ClusterProps): Promise<Cluster>;
  }
  namespace DAX {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html
     */
    interface ParameterGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html#cfn-dax-parametergroup-parameternamevalues
       */
      ParameterNameValues?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html#cfn-dax-parametergroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-parametergroup.html#cfn-dax-parametergroup-parametergroupname
       */
      ParameterGroupName?: string;
    }
    
    
    interface ParameterGroup extends Resource<"AWS::DAX::ParameterGroup">, ParameterGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ParameterGroup(id: string, props: ParameterGroupProps): Promise<ParameterGroup>;
  }
  namespace DAX {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html
     */
    interface SubnetGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html#cfn-dax-subnetgroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html#cfn-dax-subnetgroup-subnetgroupname
       */
      SubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-subnetgroup.html#cfn-dax-subnetgroup-subnetids
       */
      SubnetIds: string[];
    }
    
    
    interface SubnetGroup extends Resource<"AWS::DAX::SubnetGroup">, SubnetGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SubnetGroup(id: string, props: SubnetGroupProps): Promise<SubnetGroup>;
  }
  namespace DLM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html
     */
    interface LifecyclePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html#cfn-dlm-lifecyclepolicy-executionrolearn
       */
      ExecutionRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html#cfn-dlm-lifecyclepolicy-defaultpolicy
       */
      DefaultPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html#cfn-dlm-lifecyclepolicy-createinterval
       */
      CreateInterval?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html#cfn-dlm-lifecyclepolicy-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html#cfn-dlm-lifecyclepolicy-extenddeletion
       */
      ExtendDeletion?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html#cfn-dlm-lifecyclepolicy-exclusions
       */
      Exclusions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html#cfn-dlm-lifecyclepolicy-state
       */
      State?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html#cfn-dlm-lifecyclepolicy-crossregioncopytargets
       */
      CrossRegionCopyTargets?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html#cfn-dlm-lifecyclepolicy-policydetails
       */
      PolicyDetails?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html#cfn-dlm-lifecyclepolicy-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html#cfn-dlm-lifecyclepolicy-retaininterval
       */
      RetainInterval?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dlm-lifecyclepolicy.html#cfn-dlm-lifecyclepolicy-copytags
       */
      CopyTags?: boolean;
    }
    
    
    interface LifecyclePolicy extends Resource<"AWS::DLM::LifecyclePolicy">, LifecyclePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LifecyclePolicy(id: string, props: LifecyclePolicyProps): Promise<LifecyclePolicy>;
  }
  namespace DMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html
     */
    interface CertificateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html#cfn-dms-certificate-certificateidentifier
       */
      CertificateIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html#cfn-dms-certificate-certificatepem
       */
      CertificatePem?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html#cfn-dms-certificate-certificatewallet
       */
      CertificateWallet?: string;
    }
    
    
    interface Certificate extends Resource<"AWS::DMS::Certificate">, CertificateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Certificate(id: string, props: CertificateProps): Promise<Certificate>;
  }
  namespace DMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-datamigration.html
     */
    interface DataMigrationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-datamigration.html#cfn-dms-datamigration-datamigrationtype
       */
      DataMigrationType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-datamigration.html#cfn-dms-datamigration-datamigrationsettings
       */
      DataMigrationSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-datamigration.html#cfn-dms-datamigration-datamigrationname
       */
      DataMigrationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-datamigration.html#cfn-dms-datamigration-migrationprojectidentifier
       */
      MigrationProjectIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-datamigration.html#cfn-dms-datamigration-sourcedatasettings
       */
      SourceDataSettings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-datamigration.html#cfn-dms-datamigration-serviceaccessrolearn
       */
      ServiceAccessRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-datamigration.html#cfn-dms-datamigration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-datamigration.html#cfn-dms-datamigration-datamigrationidentifier
       */
      DataMigrationIdentifier?: string;
    }
    
    
    interface DataMigration extends Resource<"AWS::DMS::DataMigration">, DataMigrationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataMigration(id: string, props: DataMigrationProps): Promise<DataMigration>;
  }
  namespace DMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-dataprovider.html
     */
    interface DataProviderProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-dataprovider.html#cfn-dms-dataprovider-dataprovidername
       */
      DataProviderName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-dataprovider.html#cfn-dms-dataprovider-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-dataprovider.html#cfn-dms-dataprovider-exactsettings
       */
      ExactSettings?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-dataprovider.html#cfn-dms-dataprovider-engine
       */
      Engine: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-dataprovider.html#cfn-dms-dataprovider-settings
       */
      Settings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-dataprovider.html#cfn-dms-dataprovider-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-dataprovider.html#cfn-dms-dataprovider-dataprovideridentifier
       */
      DataProviderIdentifier?: string;
    }
    
    
    interface DataProvider extends Resource<"AWS::DMS::DataProvider">, DataProviderProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataProvider(id: string, props: DataProviderProps): Promise<DataProvider>;
  }
  namespace DMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html
     */
    interface EndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-sybasesettings
       */
      SybaseSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-redissettings
       */
      RedisSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-oraclesettings
       */
      OracleSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-kafkasettings
       */
      KafkaSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-port
       */
      Port?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-mysqlsettings
       */
      MySqlSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-s3settings
       */
      S3Settings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-resourceidentifier
       */
      ResourceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-kinesissettings
       */
      KinesisSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-sslmode
       */
      SslMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-redshiftsettings
       */
      RedshiftSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-endpointtype
       */
      EndpointType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-password
       */
      Password?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-mongodbsettings
       */
      MongoDbSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-ibmdb2settings
       */
      IbmDb2Settings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-databasename
       */
      DatabaseName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-neptunesettings
       */
      NeptuneSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-elasticsearchsettings
       */
      ElasticsearchSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-enginename
       */
      EngineName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-docdbsettings
       */
      DocDbSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-dynamodbsettings
       */
      DynamoDbSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-username
       */
      Username?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-microsoftsqlserversettings
       */
      MicrosoftSqlServerSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-gcpmysqlsettings
       */
      GcpMySQLSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-servername
       */
      ServerName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-extraconnectionattributes
       */
      ExtraConnectionAttributes?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-endpointidentifier
       */
      EndpointIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-certificatearn
       */
      CertificateArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-postgresqlsettings
       */
      PostgreSqlSettings?: {};
    }
    
    
    interface Endpoint extends Resource<"AWS::DMS::Endpoint">, EndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Endpoint(id: string, props: EndpointProps): Promise<Endpoint>;
  }
  namespace DMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html
     */
    interface EventSubscriptionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-sourcetype
       */
      SourceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-eventcategories
       */
      EventCategories?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-subscriptionname
       */
      SubscriptionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-snstopicarn
       */
      SnsTopicArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-sourceids
       */
      SourceIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-tags
       */
      Tags?: {}[];
    }
    
    
    interface EventSubscription extends Resource<"AWS::DMS::EventSubscription">, EventSubscriptionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventSubscription(id: string, props: EventSubscriptionProps): Promise<EventSubscription>;
  }
  namespace DMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html
     */
    interface InstanceProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-subnetgroupidentifier
       */
      SubnetGroupIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-instanceprofilename
       */
      InstanceProfileName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-kmskeyarn
       */
      KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-networktype
       */
      NetworkType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-availabilityzone
       */
      AvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-publiclyaccessible
       */
      PubliclyAccessible?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-vpcsecuritygroups
       */
      VpcSecurityGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-instanceprofileidentifier
       */
      InstanceProfileIdentifier?: string;
    }
    
    
    interface InstanceProfile extends Resource<"AWS::DMS::InstanceProfile">, InstanceProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InstanceProfile(id: string, props: InstanceProfileProps): Promise<InstanceProfile>;
  }
  namespace DMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-migrationproject.html
     */
    interface MigrationProjectProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-migrationproject.html#cfn-dms-migrationproject-targetdataproviderdescriptors
       */
      TargetDataProviderDescriptors?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-migrationproject.html#cfn-dms-migrationproject-migrationprojectname
       */
      MigrationProjectName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-migrationproject.html#cfn-dms-migrationproject-instanceprofilename
       */
      InstanceProfileName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-migrationproject.html#cfn-dms-migrationproject-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-migrationproject.html#cfn-dms-migrationproject-migrationprojectidentifier
       */
      MigrationProjectIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-migrationproject.html#cfn-dms-migrationproject-sourcedataproviderdescriptors
       */
      SourceDataProviderDescriptors?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-migrationproject.html#cfn-dms-migrationproject-transformationrules
       */
      TransformationRules?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-migrationproject.html#cfn-dms-migrationproject-schemaconversionapplicationattributes
       */
      SchemaConversionApplicationAttributes?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-migrationproject.html#cfn-dms-migrationproject-instanceprofilearn
       */
      InstanceProfileArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-migrationproject.html#cfn-dms-migrationproject-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-migrationproject.html#cfn-dms-migrationproject-instanceprofileidentifier
       */
      InstanceProfileIdentifier?: string;
    }
    
    
    interface MigrationProject extends Resource<"AWS::DMS::MigrationProject">, MigrationProjectProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MigrationProject(id: string, props: MigrationProjectProps): Promise<MigrationProject>;
  }
  namespace DMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationconfig.html
     */
    interface ReplicationConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationconfig.html#cfn-dms-replicationconfig-replicationsettings
       */
      ReplicationSettings?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationconfig.html#cfn-dms-replicationconfig-resourceidentifier
       */
      ResourceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationconfig.html#cfn-dms-replicationconfig-replicationconfigidentifier
       */
      ReplicationConfigIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationconfig.html#cfn-dms-replicationconfig-computeconfig
       */
      ComputeConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationconfig.html#cfn-dms-replicationconfig-replicationtype
       */
      ReplicationType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationconfig.html#cfn-dms-replicationconfig-tablemappings
       */
      TableMappings: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationconfig.html#cfn-dms-replicationconfig-sourceendpointarn
       */
      SourceEndpointArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationconfig.html#cfn-dms-replicationconfig-supplementalsettings
       */
      SupplementalSettings?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationconfig.html#cfn-dms-replicationconfig-targetendpointarn
       */
      TargetEndpointArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationconfig.html#cfn-dms-replicationconfig-tags
       */
      Tags?: {}[];
    }
    
    
    interface ReplicationConfig extends Resource<"AWS::DMS::ReplicationConfig">, ReplicationConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReplicationConfig(id: string, props: ReplicationConfigProps): Promise<ReplicationConfig>;
  }
  namespace DMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html
     */
    interface ReplicationInstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-dnsnameservers
       */
      DnsNameServers?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-replicationinstanceidentifier
       */
      ReplicationInstanceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-availabilityzone
       */
      AvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-autominorversionupgrade
       */
      AutoMinorVersionUpgrade?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-replicationsubnetgroupidentifier
       */
      ReplicationSubnetGroupIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-allocatedstorage
       */
      AllocatedStorage?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-resourceidentifier
       */
      ResourceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-vpcsecuritygroupids
       */
      VpcSecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-networktype
       */
      NetworkType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-allowmajorversionupgrade
       */
      AllowMajorVersionUpgrade?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-replicationinstanceclass
       */
      ReplicationInstanceClass: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-publiclyaccessible
       */
      PubliclyAccessible?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-multiaz
       */
      MultiAZ?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-tags
       */
      Tags?: {}[];
    }
    
    
    interface ReplicationInstance extends Resource<"AWS::DMS::ReplicationInstance">, ReplicationInstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReplicationInstance(id: string, props: ReplicationInstanceProps): Promise<ReplicationInstance>;
  }
  namespace DMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html
     */
    interface ReplicationSubnetGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html#cfn-dms-replicationsubnetgroup-replicationsubnetgroupdescription
       */
      ReplicationSubnetGroupDescription: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html#cfn-dms-replicationsubnetgroup-replicationsubnetgroupidentifier
       */
      ReplicationSubnetGroupIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html#cfn-dms-replicationsubnetgroup-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html#cfn-dms-replicationsubnetgroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface ReplicationSubnetGroup extends Resource<"AWS::DMS::ReplicationSubnetGroup">, ReplicationSubnetGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReplicationSubnetGroup(id: string, props: ReplicationSubnetGroupProps): Promise<ReplicationSubnetGroup>;
  }
  namespace DMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html
     */
    interface ReplicationTaskProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-replicationtasksettings
       */
      ReplicationTaskSettings?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-cdcstartposition
       */
      CdcStartPosition?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-cdcstopposition
       */
      CdcStopPosition?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-migrationtype
       */
      MigrationType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-targetendpointarn
       */
      TargetEndpointArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-replicationinstancearn
       */
      ReplicationInstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-taskdata
       */
      TaskData?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-cdcstarttime
       */
      CdcStartTime?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-resourceidentifier
       */
      ResourceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-tablemappings
       */
      TableMappings: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-replicationtaskidentifier
       */
      ReplicationTaskIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-sourceendpointarn
       */
      SourceEndpointArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-tags
       */
      Tags?: {}[];
    }
    
    
    interface ReplicationTask extends Resource<"AWS::DMS::ReplicationTask">, ReplicationTaskProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReplicationTask(id: string, props: ReplicationTaskProps): Promise<ReplicationTask>;
  }
  namespace DSQL {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dsql-cluster.html
     */
    interface ClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dsql-cluster.html#cfn-dsql-cluster-deletionprotectionenabled
       */
      DeletionProtectionEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dsql-cluster.html#cfn-dsql-cluster-tags
       */
      Tags?: {}[];
    }
    
    
    interface Cluster extends Resource<"AWS::DSQL::Cluster">, ClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Cluster(id: string, props: ClusterProps): Promise<Cluster>;
  }
  namespace DataBrew {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-dataset.html
     */
    interface DatasetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-dataset.html#cfn-databrew-dataset-input
       */
      Input: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-dataset.html#cfn-databrew-dataset-format
       */
      Format?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-dataset.html#cfn-databrew-dataset-formatoptions
       */
      FormatOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-dataset.html#cfn-databrew-dataset-source
       */
      Source?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-dataset.html#cfn-databrew-dataset-pathoptions
       */
      PathOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-dataset.html#cfn-databrew-dataset-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-dataset.html#cfn-databrew-dataset-name
       */
      Name: string;
    }
    
    
    interface Dataset extends Resource<"AWS::DataBrew::Dataset">, DatasetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Dataset(id: string, props: DatasetProps): Promise<Dataset>;
  }
  namespace DataBrew {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html
     */
    interface JobProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-maxretries
       */
      MaxRetries?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-projectname
       */
      ProjectName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-recipe
       */
      Recipe?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-encryptionkeyarn
       */
      EncryptionKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-logsubscription
       */
      LogSubscription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-timeout
       */
      Timeout?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-databaseoutputs
       */
      DatabaseOutputs?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-outputlocation
       */
      OutputLocation?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-datasetname
       */
      DatasetName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-profileconfiguration
       */
      ProfileConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-outputs
       */
      Outputs?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-validationconfigurations
       */
      ValidationConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-jobsample
       */
      JobSample?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-encryptionmode
       */
      EncryptionMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-maxcapacity
       */
      MaxCapacity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-datacatalogoutputs
       */
      DataCatalogOutputs?: {}[];
    }
    
    
    interface Job extends Resource<"AWS::DataBrew::Job">, JobProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Job(id: string, props: JobProps): Promise<Job>;
  }
  namespace DataBrew {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-project.html
     */
    interface ProjectProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-project.html#cfn-databrew-project-recipename
       */
      RecipeName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-project.html#cfn-databrew-project-datasetname
       */
      DatasetName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-project.html#cfn-databrew-project-sample
       */
      Sample?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-project.html#cfn-databrew-project-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-project.html#cfn-databrew-project-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-project.html#cfn-databrew-project-name
       */
      Name: string;
    }
    
    
    interface Project extends Resource<"AWS::DataBrew::Project">, ProjectProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Project(id: string, props: ProjectProps): Promise<Project>;
  }
  namespace DataBrew {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-recipe.html
     */
    interface RecipeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-recipe.html#cfn-databrew-recipe-steps
       */
      Steps: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-recipe.html#cfn-databrew-recipe-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-recipe.html#cfn-databrew-recipe-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-recipe.html#cfn-databrew-recipe-name
       */
      Name: string;
    }
    
    
    interface Recipe extends Resource<"AWS::DataBrew::Recipe">, RecipeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Recipe(id: string, props: RecipeProps): Promise<Recipe>;
  }
  namespace DataBrew {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-ruleset.html
     */
    interface RulesetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-ruleset.html#cfn-databrew-ruleset-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-ruleset.html#cfn-databrew-ruleset-targetarn
       */
      TargetArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-ruleset.html#cfn-databrew-ruleset-rules
       */
      Rules: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-ruleset.html#cfn-databrew-ruleset-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-ruleset.html#cfn-databrew-ruleset-name
       */
      Name: string;
    }
    
    
    interface Ruleset extends Resource<"AWS::DataBrew::Ruleset">, RulesetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Ruleset(id: string, props: RulesetProps): Promise<Ruleset>;
  }
  namespace DataBrew {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-schedule.html
     */
    interface ScheduleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-schedule.html#cfn-databrew-schedule-jobnames
       */
      JobNames?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-schedule.html#cfn-databrew-schedule-cronexpression
       */
      CronExpression: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-schedule.html#cfn-databrew-schedule-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-schedule.html#cfn-databrew-schedule-name
       */
      Name: string;
    }
    
    
    interface Schedule extends Resource<"AWS::DataBrew::Schedule">, ScheduleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Schedule(id: string, props: ScheduleProps): Promise<Schedule>;
  }
  namespace DataPipeline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datapipeline-pipeline.html
     */
    interface PipelineProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datapipeline-pipeline.html#cfn-datapipeline-pipeline-pipelinetags
       */
      PipelineTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datapipeline-pipeline.html#cfn-datapipeline-pipeline-parameterobjects
       */
      ParameterObjects?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datapipeline-pipeline.html#cfn-datapipeline-pipeline-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datapipeline-pipeline.html#cfn-datapipeline-pipeline-activate
       */
      Activate?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datapipeline-pipeline.html#cfn-datapipeline-pipeline-pipelineobjects
       */
      PipelineObjects?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datapipeline-pipeline.html#cfn-datapipeline-pipeline-parametervalues
       */
      ParameterValues?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datapipeline-pipeline.html#cfn-datapipeline-pipeline-name
       */
      Name: string;
    }
    
    
    interface Pipeline extends Resource<"AWS::DataPipeline::Pipeline">, PipelineProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Pipeline(id: string, props: PipelineProps): Promise<Pipeline>;
  }
  namespace DataSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-agent.html
     */
    interface AgentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-agent.html#cfn-datasync-agent-subnetarns
       */
      SubnetArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-agent.html#cfn-datasync-agent-agentname
       */
      AgentName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-agent.html#cfn-datasync-agent-vpcendpointid
       */
      VpcEndpointId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-agent.html#cfn-datasync-agent-activationkey
       */
      ActivationKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-agent.html#cfn-datasync-agent-securitygrouparns
       */
      SecurityGroupArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-agent.html#cfn-datasync-agent-tags
       */
      Tags?: {}[];
    }
    
    
    interface Agent extends Resource<"AWS::DataSync::Agent">, AgentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Agent(id: string, props: AgentProps): Promise<Agent>;
  }
  namespace DataSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationazureblob.html
     */
    interface LocationAzureBlobProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationazureblob.html#cfn-datasync-locationazureblob-azureaccesstier
       */
      AzureAccessTier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationazureblob.html#cfn-datasync-locationazureblob-subdirectory
       */
      Subdirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationazureblob.html#cfn-datasync-locationazureblob-azureblobsasconfiguration
       */
      AzureBlobSasConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationazureblob.html#cfn-datasync-locationazureblob-azureblobtype
       */
      AzureBlobType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationazureblob.html#cfn-datasync-locationazureblob-azureblobcontainerurl
       */
      AzureBlobContainerUrl?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationazureblob.html#cfn-datasync-locationazureblob-agentarns
       */
      AgentArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationazureblob.html#cfn-datasync-locationazureblob-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationazureblob.html#cfn-datasync-locationazureblob-azureblobauthenticationtype
       */
      AzureBlobAuthenticationType: string;
    }
    
    
    interface LocationAzureBlob extends Resource<"AWS::DataSync::LocationAzureBlob">, LocationAzureBlobProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocationAzureBlob(id: string, props: LocationAzureBlobProps): Promise<LocationAzureBlob>;
  }
  namespace DataSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html
     */
    interface LocationEFSProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-efsfilesystemarn
       */
      EfsFilesystemArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-ec2config
       */
      Ec2Config: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-accesspointarn
       */
      AccessPointArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-subdirectory
       */
      Subdirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-intransitencryption
       */
      InTransitEncryption?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-filesystemaccessrolearn
       */
      FileSystemAccessRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationefs.html#cfn-datasync-locationefs-tags
       */
      Tags?: {}[];
    }
    
    
    interface LocationEFS extends Resource<"AWS::DataSync::LocationEFS">, LocationEFSProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocationEFS(id: string, props: LocationEFSProps): Promise<LocationEFS>;
  }
  namespace DataSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxlustre.html
     */
    interface LocationFSxLustreProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxlustre.html#cfn-datasync-locationfsxlustre-subdirectory
       */
      Subdirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxlustre.html#cfn-datasync-locationfsxlustre-fsxfilesystemarn
       */
      FsxFilesystemArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxlustre.html#cfn-datasync-locationfsxlustre-securitygrouparns
       */
      SecurityGroupArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxlustre.html#cfn-datasync-locationfsxlustre-tags
       */
      Tags?: {}[];
    }
    
    
    interface LocationFSxLustre extends Resource<"AWS::DataSync::LocationFSxLustre">, LocationFSxLustreProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocationFSxLustre(id: string, props: LocationFSxLustreProps): Promise<LocationFSxLustre>;
  }
  namespace DataSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxontap.html
     */
    interface LocationFSxONTAPProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxontap.html#cfn-datasync-locationfsxontap-storagevirtualmachinearn
       */
      StorageVirtualMachineArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxontap.html#cfn-datasync-locationfsxontap-subdirectory
       */
      Subdirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxontap.html#cfn-datasync-locationfsxontap-protocol
       */
      Protocol?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxontap.html#cfn-datasync-locationfsxontap-securitygrouparns
       */
      SecurityGroupArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxontap.html#cfn-datasync-locationfsxontap-tags
       */
      Tags?: {}[];
    }
    
    
    interface LocationFSxONTAP extends Resource<"AWS::DataSync::LocationFSxONTAP">, LocationFSxONTAPProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocationFSxONTAP(id: string, props: LocationFSxONTAPProps): Promise<LocationFSxONTAP>;
  }
  namespace DataSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxopenzfs.html
     */
    interface LocationFSxOpenZFSProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxopenzfs.html#cfn-datasync-locationfsxopenzfs-subdirectory
       */
      Subdirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxopenzfs.html#cfn-datasync-locationfsxopenzfs-fsxfilesystemarn
       */
      FsxFilesystemArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxopenzfs.html#cfn-datasync-locationfsxopenzfs-protocol
       */
      Protocol: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxopenzfs.html#cfn-datasync-locationfsxopenzfs-securitygrouparns
       */
      SecurityGroupArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxopenzfs.html#cfn-datasync-locationfsxopenzfs-tags
       */
      Tags?: {}[];
    }
    
    
    interface LocationFSxOpenZFS extends Resource<"AWS::DataSync::LocationFSxOpenZFS">, LocationFSxOpenZFSProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocationFSxOpenZFS(id: string, props: LocationFSxOpenZFSProps): Promise<LocationFSxOpenZFS>;
  }
  namespace DataSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxwindows.html
     */
    interface LocationFSxWindowsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxwindows.html#cfn-datasync-locationfsxwindows-user
       */
      User: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxwindows.html#cfn-datasync-locationfsxwindows-subdirectory
       */
      Subdirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxwindows.html#cfn-datasync-locationfsxwindows-fsxfilesystemarn
       */
      FsxFilesystemArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxwindows.html#cfn-datasync-locationfsxwindows-domain
       */
      Domain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxwindows.html#cfn-datasync-locationfsxwindows-securitygrouparns
       */
      SecurityGroupArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxwindows.html#cfn-datasync-locationfsxwindows-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationfsxwindows.html#cfn-datasync-locationfsxwindows-password
       */
      Password?: string;
    }
    
    
    interface LocationFSxWindows extends Resource<"AWS::DataSync::LocationFSxWindows">, LocationFSxWindowsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocationFSxWindows(id: string, props: LocationFSxWindowsProps): Promise<LocationFSxWindows>;
  }
  namespace DataSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html
     */
    interface LocationHDFSProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html#cfn-datasync-locationhdfs-kmskeyprovideruri
       */
      KmsKeyProviderUri?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html#cfn-datasync-locationhdfs-qopconfiguration
       */
      QopConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html#cfn-datasync-locationhdfs-kerberosprincipal
       */
      KerberosPrincipal?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html#cfn-datasync-locationhdfs-simpleuser
       */
      SimpleUser?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html#cfn-datasync-locationhdfs-replicationfactor
       */
      ReplicationFactor?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html#cfn-datasync-locationhdfs-kerberoskeytab
       */
      KerberosKeytab?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html#cfn-datasync-locationhdfs-namenodes
       */
      NameNodes: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html#cfn-datasync-locationhdfs-subdirectory
       */
      Subdirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html#cfn-datasync-locationhdfs-kerberoskrb5conf
       */
      KerberosKrb5Conf?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html#cfn-datasync-locationhdfs-blocksize
       */
      BlockSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html#cfn-datasync-locationhdfs-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html#cfn-datasync-locationhdfs-agentarns
       */
      AgentArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationhdfs.html#cfn-datasync-locationhdfs-authenticationtype
       */
      AuthenticationType: string;
    }
    
    
    interface LocationHDFS extends Resource<"AWS::DataSync::LocationHDFS">, LocationHDFSProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocationHDFS(id: string, props: LocationHDFSProps): Promise<LocationHDFS>;
  }
  namespace DataSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationnfs.html
     */
    interface LocationNFSProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationnfs.html#cfn-datasync-locationnfs-subdirectory
       */
      Subdirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationnfs.html#cfn-datasync-locationnfs-serverhostname
       */
      ServerHostname?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationnfs.html#cfn-datasync-locationnfs-mountoptions
       */
      MountOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationnfs.html#cfn-datasync-locationnfs-onpremconfig
       */
      OnPremConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationnfs.html#cfn-datasync-locationnfs-tags
       */
      Tags?: {}[];
    }
    
    
    interface LocationNFS extends Resource<"AWS::DataSync::LocationNFS">, LocationNFSProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocationNFS(id: string, props: LocationNFSProps): Promise<LocationNFS>;
  }
  namespace DataSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html
     */
    interface LocationObjectStorageProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-servercertificate
       */
      ServerCertificate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-secretkey
       */
      SecretKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-bucketname
       */
      BucketName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-subdirectory
       */
      Subdirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-serverhostname
       */
      ServerHostname?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-accesskey
       */
      AccessKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-serverprotocol
       */
      ServerProtocol?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-agentarns
       */
      AgentArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-serverport
       */
      ServerPort?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-tags
       */
      Tags?: {}[];
    }
    
    
    interface LocationObjectStorage extends Resource<"AWS::DataSync::LocationObjectStorage">, LocationObjectStorageProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocationObjectStorage(id: string, props: LocationObjectStorageProps): Promise<LocationObjectStorage>;
  }
  namespace DataSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locations3.html
     */
    interface LocationS3Props {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locations3.html#cfn-datasync-locations3-s3storageclass
       */
      S3StorageClass?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locations3.html#cfn-datasync-locations3-s3config
       */
      S3Config: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locations3.html#cfn-datasync-locations3-subdirectory
       */
      Subdirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locations3.html#cfn-datasync-locations3-s3bucketarn
       */
      S3BucketArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locations3.html#cfn-datasync-locations3-tags
       */
      Tags?: {}[];
    }
    
    
    interface LocationS3 extends Resource<"AWS::DataSync::LocationS3">, LocationS3Props {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocationS3(id: string, props: LocationS3Props): Promise<LocationS3>;
  }
  namespace DataSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html
     */
    interface LocationSMBProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html#cfn-datasync-locationsmb-kerberosprincipal
       */
      KerberosPrincipal?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html#cfn-datasync-locationsmb-user
       */
      User?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html#cfn-datasync-locationsmb-kerberoskeytab
       */
      KerberosKeytab?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html#cfn-datasync-locationsmb-subdirectory
       */
      Subdirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html#cfn-datasync-locationsmb-serverhostname
       */
      ServerHostname?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html#cfn-datasync-locationsmb-kerberoskrb5conf
       */
      KerberosKrb5Conf?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html#cfn-datasync-locationsmb-domain
       */
      Domain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html#cfn-datasync-locationsmb-dnsipaddresses
       */
      DnsIpAddresses?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html#cfn-datasync-locationsmb-mountoptions
       */
      MountOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html#cfn-datasync-locationsmb-agentarns
       */
      AgentArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html#cfn-datasync-locationsmb-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html#cfn-datasync-locationsmb-password
       */
      Password?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationsmb.html#cfn-datasync-locationsmb-authenticationtype
       */
      AuthenticationType?: string;
    }
    
    
    interface LocationSMB extends Resource<"AWS::DataSync::LocationSMB">, LocationSMBProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocationSMB(id: string, props: LocationSMBProps): Promise<LocationSMB>;
  }
  namespace DataSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-storagesystem.html
     */
    interface StorageSystemProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-storagesystem.html#cfn-datasync-storagesystem-servercredentials
       */
      ServerCredentials?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-storagesystem.html#cfn-datasync-storagesystem-serverconfiguration
       */
      ServerConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-storagesystem.html#cfn-datasync-storagesystem-cloudwatchloggrouparn
       */
      CloudWatchLogGroupArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-storagesystem.html#cfn-datasync-storagesystem-systemtype
       */
      SystemType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-storagesystem.html#cfn-datasync-storagesystem-agentarns
       */
      AgentArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-storagesystem.html#cfn-datasync-storagesystem-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-storagesystem.html#cfn-datasync-storagesystem-name
       */
      Name?: string;
    }
    
    
    interface StorageSystem extends Resource<"AWS::DataSync::StorageSystem">, StorageSystemProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StorageSystem(id: string, props: StorageSystemProps): Promise<StorageSystem>;
  }
  namespace DataSync {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html
     */
    interface TaskProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-includes
       */
      Includes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-destinationlocationarn
       */
      DestinationLocationArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-options
       */
      Options?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-schedule
       */
      Schedule?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-cloudwatchloggrouparn
       */
      CloudWatchLogGroupArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-sourcelocationarn
       */
      SourceLocationArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-taskreportconfig
       */
      TaskReportConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-excludes
       */
      Excludes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-taskmode
       */
      TaskMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-manifestconfig
       */
      ManifestConfig?: {};
    }
    
    
    interface Task extends Resource<"AWS::DataSync::Task">, TaskProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Task(id: string, props: TaskProps): Promise<Task>;
  }
  namespace DataZone {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-connection.html
     */
    interface ConnectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-connection.html#cfn-datazone-connection-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-connection.html#cfn-datazone-connection-environmentidentifier
       */
      EnvironmentIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-connection.html#cfn-datazone-connection-props
       */
      Props?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-connection.html#cfn-datazone-connection-awslocation
       */
      AwsLocation?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-connection.html#cfn-datazone-connection-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-connection.html#cfn-datazone-connection-domainidentifier
       */
      DomainIdentifier: string;
    }
    
    
    interface Connection extends Resource<"AWS::DataZone::Connection">, ConnectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Connection(id: string, props: ConnectionProps): Promise<Connection>;
  }
  namespace DataZone {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html
     */
    interface DataSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html#cfn-datazone-datasource-projectidentifier
       */
      ProjectIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html#cfn-datazone-datasource-publishonimport
       */
      PublishOnImport?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html#cfn-datazone-datasource-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html#cfn-datazone-datasource-environmentidentifier
       */
      EnvironmentIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html#cfn-datazone-datasource-configuration
       */
      Configuration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html#cfn-datazone-datasource-assetformsinput
       */
      AssetFormsInput?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html#cfn-datazone-datasource-recommendation
       */
      Recommendation?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html#cfn-datazone-datasource-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html#cfn-datazone-datasource-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html#cfn-datazone-datasource-enablesetting
       */
      EnableSetting?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html#cfn-datazone-datasource-connectionidentifier
       */
      ConnectionIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html#cfn-datazone-datasource-schedule
       */
      Schedule?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-datasource.html#cfn-datazone-datasource-domainidentifier
       */
      DomainIdentifier: string;
    }
    
    
    interface DataSource extends Resource<"AWS::DataZone::DataSource">, DataSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataSource(id: string, props: DataSourceProps): Promise<DataSource>;
  }
  namespace DataZone {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-domain.html
     */
    interface DomainProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-domain.html#cfn-datazone-domain-domainexecutionrole
       */
      DomainExecutionRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-domain.html#cfn-datazone-domain-kmskeyidentifier
       */
      KmsKeyIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-domain.html#cfn-datazone-domain-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-domain.html#cfn-datazone-domain-servicerole
       */
      ServiceRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-domain.html#cfn-datazone-domain-domainversion
       */
      DomainVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-domain.html#cfn-datazone-domain-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-domain.html#cfn-datazone-domain-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-domain.html#cfn-datazone-domain-singlesignon
       */
      SingleSignOn?: {};
    }
    
    
    interface Domain extends Resource<"AWS::DataZone::Domain">, DomainProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Domain(id: string, props: DomainProps): Promise<Domain>;
  }
  namespace DataZone {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environment.html
     */
    interface EnvironmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environment.html#cfn-datazone-environment-projectidentifier
       */
      ProjectIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environment.html#cfn-datazone-environment-environmentaccountregion
       */
      EnvironmentAccountRegion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environment.html#cfn-datazone-environment-userparameters
       */
      UserParameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environment.html#cfn-datazone-environment-environmentrolearn
       */
      EnvironmentRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environment.html#cfn-datazone-environment-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environment.html#cfn-datazone-environment-environmentprofileidentifier
       */
      EnvironmentProfileIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environment.html#cfn-datazone-environment-glossaryterms
       */
      GlossaryTerms?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environment.html#cfn-datazone-environment-environmentaccountidentifier
       */
      EnvironmentAccountIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environment.html#cfn-datazone-environment-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environment.html#cfn-datazone-environment-domainidentifier
       */
      DomainIdentifier: string;
    }
    
    
    interface Environment extends Resource<"AWS::DataZone::Environment">, EnvironmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Environment(id: string, props: EnvironmentProps): Promise<Environment>;
  }
  namespace DataZone {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentactions.html
     */
    interface EnvironmentActionsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentactions.html#cfn-datazone-environmentactions-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentactions.html#cfn-datazone-environmentactions-environmentidentifier
       */
      EnvironmentIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentactions.html#cfn-datazone-environmentactions-identifier
       */
      Identifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentactions.html#cfn-datazone-environmentactions-parameters
       */
      Parameters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentactions.html#cfn-datazone-environmentactions-domainidentifier
       */
      DomainIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentactions.html#cfn-datazone-environmentactions-name
       */
      Name: string;
    }
    
    
    interface EnvironmentActions extends Resource<"AWS::DataZone::EnvironmentActions">, EnvironmentActionsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EnvironmentActions(id: string, props: EnvironmentActionsProps): Promise<EnvironmentActions>;
  }
  namespace DataZone {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentblueprintconfiguration.html
     */
    interface EnvironmentBlueprintConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentblueprintconfiguration.html#cfn-datazone-environmentblueprintconfiguration-regionalparameters
       */
      RegionalParameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentblueprintconfiguration.html#cfn-datazone-environmentblueprintconfiguration-provisioningrolearn
       */
      ProvisioningRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentblueprintconfiguration.html#cfn-datazone-environmentblueprintconfiguration-enabledregions
       */
      EnabledRegions: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentblueprintconfiguration.html#cfn-datazone-environmentblueprintconfiguration-environmentblueprintidentifier
       */
      EnvironmentBlueprintIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentblueprintconfiguration.html#cfn-datazone-environmentblueprintconfiguration-domainidentifier
       */
      DomainIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentblueprintconfiguration.html#cfn-datazone-environmentblueprintconfiguration-manageaccessrolearn
       */
      ManageAccessRoleArn?: string;
    }
    
    
    interface EnvironmentBlueprintConfiguration extends Resource<"AWS::DataZone::EnvironmentBlueprintConfiguration">, EnvironmentBlueprintConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EnvironmentBlueprintConfiguration(id: string, props: EnvironmentBlueprintConfigurationProps): Promise<EnvironmentBlueprintConfiguration>;
  }
  namespace DataZone {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentprofile.html
     */
    interface EnvironmentProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentprofile.html#cfn-datazone-environmentprofile-projectidentifier
       */
      ProjectIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentprofile.html#cfn-datazone-environmentprofile-userparameters
       */
      UserParameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentprofile.html#cfn-datazone-environmentprofile-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentprofile.html#cfn-datazone-environmentprofile-awsaccountregion
       */
      AwsAccountRegion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentprofile.html#cfn-datazone-environmentprofile-awsaccountid
       */
      AwsAccountId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentprofile.html#cfn-datazone-environmentprofile-environmentblueprintidentifier
       */
      EnvironmentBlueprintIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentprofile.html#cfn-datazone-environmentprofile-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-environmentprofile.html#cfn-datazone-environmentprofile-domainidentifier
       */
      DomainIdentifier: string;
    }
    
    
    interface EnvironmentProfile extends Resource<"AWS::DataZone::EnvironmentProfile">, EnvironmentProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EnvironmentProfile(id: string, props: EnvironmentProfileProps): Promise<EnvironmentProfile>;
  }
  namespace DataZone {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-groupprofile.html
     */
    interface GroupProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-groupprofile.html#cfn-datazone-groupprofile-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-groupprofile.html#cfn-datazone-groupprofile-domainidentifier
       */
      DomainIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-groupprofile.html#cfn-datazone-groupprofile-groupidentifier
       */
      GroupIdentifier: string;
    }
    
    
    interface GroupProfile extends Resource<"AWS::DataZone::GroupProfile">, GroupProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GroupProfile(id: string, props: GroupProfileProps): Promise<GroupProfile>;
  }
  namespace DataZone {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-project.html
     */
    interface ProjectProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-project.html#cfn-datazone-project-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-project.html#cfn-datazone-project-glossaryterms
       */
      GlossaryTerms?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-project.html#cfn-datazone-project-domainidentifier
       */
      DomainIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-project.html#cfn-datazone-project-name
       */
      Name: string;
    }
    
    
    interface Project extends Resource<"AWS::DataZone::Project">, ProjectProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Project(id: string, props: ProjectProps): Promise<Project>;
  }
  namespace DataZone {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-projectmembership.html
     */
    interface ProjectMembershipProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-projectmembership.html#cfn-datazone-projectmembership-projectidentifier
       */
      ProjectIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-projectmembership.html#cfn-datazone-projectmembership-designation
       */
      Designation: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-projectmembership.html#cfn-datazone-projectmembership-member
       */
      Member: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-projectmembership.html#cfn-datazone-projectmembership-domainidentifier
       */
      DomainIdentifier: string;
    }
    
    
    interface ProjectMembership extends Resource<"AWS::DataZone::ProjectMembership">, ProjectMembershipProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ProjectMembership(id: string, props: ProjectMembershipProps): Promise<ProjectMembership>;
  }
  namespace DataZone {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html
     */
    interface SubscriptionTargetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-environmentidentifier
       */
      EnvironmentIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-manageaccessrole
       */
      ManageAccessRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-subscriptiontargetconfig
       */
      SubscriptionTargetConfig: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-applicableassettypes
       */
      ApplicableAssetTypes: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-authorizedprincipals
       */
      AuthorizedPrincipals: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-provider
       */
      Provider?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-domainidentifier
       */
      DomainIdentifier: string;
    }
    
    
    interface SubscriptionTarget extends Resource<"AWS::DataZone::SubscriptionTarget">, SubscriptionTargetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SubscriptionTarget(id: string, props: SubscriptionTargetProps): Promise<SubscriptionTarget>;
  }
  namespace DataZone {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-userprofile.html
     */
    interface UserProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-userprofile.html#cfn-datazone-userprofile-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-userprofile.html#cfn-datazone-userprofile-useridentifier
       */
      UserIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-userprofile.html#cfn-datazone-userprofile-usertype
       */
      UserType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-userprofile.html#cfn-datazone-userprofile-domainidentifier
       */
      DomainIdentifier: string;
    }
    
    
    interface UserProfile extends Resource<"AWS::DataZone::UserProfile">, UserProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserProfile(id: string, props: UserProfileProps): Promise<UserProfile>;
  }
  namespace Deadline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-farm.html
     */
    interface FarmProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-farm.html#cfn-deadline-farm-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-farm.html#cfn-deadline-farm-kmskeyarn
       */
      KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-farm.html#cfn-deadline-farm-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-farm.html#cfn-deadline-farm-tags
       */
      Tags?: {}[];
    }
    
    
    interface Farm extends Resource<"AWS::Deadline::Farm">, FarmProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Farm(id: string, props: FarmProps): Promise<Farm>;
  }
  namespace Deadline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-fleet.html
     */
    interface FleetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-fleet.html#cfn-deadline-fleet-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-fleet.html#cfn-deadline-fleet-configuration
       */
      Configuration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-fleet.html#cfn-deadline-fleet-maxworkercount
       */
      MaxWorkerCount: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-fleet.html#cfn-deadline-fleet-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-fleet.html#cfn-deadline-fleet-minworkercount
       */
      MinWorkerCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-fleet.html#cfn-deadline-fleet-farmid
       */
      FarmId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-fleet.html#cfn-deadline-fleet-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-fleet.html#cfn-deadline-fleet-tags
       */
      Tags?: {}[];
    }
    
    
    interface Fleet extends Resource<"AWS::Deadline::Fleet">, FleetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Fleet(id: string, props: FleetProps): Promise<Fleet>;
  }
  namespace Deadline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-licenseendpoint.html
     */
    interface LicenseEndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-licenseendpoint.html#cfn-deadline-licenseendpoint-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-licenseendpoint.html#cfn-deadline-licenseendpoint-securitygroupids
       */
      SecurityGroupIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-licenseendpoint.html#cfn-deadline-licenseendpoint-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-licenseendpoint.html#cfn-deadline-licenseendpoint-tags
       */
      Tags?: {}[];
    }
    
    
    interface LicenseEndpoint extends Resource<"AWS::Deadline::LicenseEndpoint">, LicenseEndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LicenseEndpoint(id: string, props: LicenseEndpointProps): Promise<LicenseEndpoint>;
  }
  namespace Deadline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-limit.html
     */
    interface LimitProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-limit.html#cfn-deadline-limit-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-limit.html#cfn-deadline-limit-amountrequirementname
       */
      AmountRequirementName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-limit.html#cfn-deadline-limit-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-limit.html#cfn-deadline-limit-maxcount
       */
      MaxCount: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-limit.html#cfn-deadline-limit-farmid
       */
      FarmId: string;
    }
    
    
    interface Limit extends Resource<"AWS::Deadline::Limit">, LimitProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Limit(id: string, props: LimitProps): Promise<Limit>;
  }
  namespace Deadline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-meteredproduct.html
     */
    interface MeteredProductProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-meteredproduct.html#cfn-deadline-meteredproduct-licenseendpointid
       */
      LicenseEndpointId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-meteredproduct.html#cfn-deadline-meteredproduct-productid
       */
      ProductId?: string;
    }
    
    
    interface MeteredProduct extends Resource<"AWS::Deadline::MeteredProduct">, MeteredProductProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MeteredProduct(id: string, props: MeteredProductProps): Promise<MeteredProduct>;
  }
  namespace Deadline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-monitor.html
     */
    interface MonitorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-monitor.html#cfn-deadline-monitor-identitycenterinstancearn
       */
      IdentityCenterInstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-monitor.html#cfn-deadline-monitor-subdomain
       */
      Subdomain: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-monitor.html#cfn-deadline-monitor-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-monitor.html#cfn-deadline-monitor-rolearn
       */
      RoleArn: string;
    }
    
    
    interface Monitor extends Resource<"AWS::Deadline::Monitor">, MonitorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Monitor(id: string, props: MonitorProps): Promise<Monitor>;
  }
  namespace Deadline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queue.html
     */
    interface QueueProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queue.html#cfn-deadline-queue-jobrunasuser
       */
      JobRunAsUser?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queue.html#cfn-deadline-queue-allowedstorageprofileids
       */
      AllowedStorageProfileIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queue.html#cfn-deadline-queue-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queue.html#cfn-deadline-queue-jobattachmentsettings
       */
      JobAttachmentSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queue.html#cfn-deadline-queue-defaultbudgetaction
       */
      DefaultBudgetAction?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queue.html#cfn-deadline-queue-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queue.html#cfn-deadline-queue-requiredfilesystemlocationnames
       */
      RequiredFileSystemLocationNames?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queue.html#cfn-deadline-queue-farmid
       */
      FarmId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queue.html#cfn-deadline-queue-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queue.html#cfn-deadline-queue-tags
       */
      Tags?: {}[];
    }
    
    
    interface Queue extends Resource<"AWS::Deadline::Queue">, QueueProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Queue(id: string, props: QueueProps): Promise<Queue>;
  }
  namespace Deadline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queueenvironment.html
     */
    interface QueueEnvironmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queueenvironment.html#cfn-deadline-queueenvironment-priority
       */
      Priority: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queueenvironment.html#cfn-deadline-queueenvironment-queueid
       */
      QueueId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queueenvironment.html#cfn-deadline-queueenvironment-templatetype
       */
      TemplateType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queueenvironment.html#cfn-deadline-queueenvironment-farmid
       */
      FarmId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queueenvironment.html#cfn-deadline-queueenvironment-template
       */
      Template: string;
    }
    
    
    interface QueueEnvironment extends Resource<"AWS::Deadline::QueueEnvironment">, QueueEnvironmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function QueueEnvironment(id: string, props: QueueEnvironmentProps): Promise<QueueEnvironment>;
  }
  namespace Deadline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queuefleetassociation.html
     */
    interface QueueFleetAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queuefleetassociation.html#cfn-deadline-queuefleetassociation-fleetid
       */
      FleetId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queuefleetassociation.html#cfn-deadline-queuefleetassociation-queueid
       */
      QueueId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queuefleetassociation.html#cfn-deadline-queuefleetassociation-farmid
       */
      FarmId: string;
    }
    
    
    interface QueueFleetAssociation extends Resource<"AWS::Deadline::QueueFleetAssociation">, QueueFleetAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function QueueFleetAssociation(id: string, props: QueueFleetAssociationProps): Promise<QueueFleetAssociation>;
  }
  namespace Deadline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queuelimitassociation.html
     */
    interface QueueLimitAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queuelimitassociation.html#cfn-deadline-queuelimitassociation-limitid
       */
      LimitId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queuelimitassociation.html#cfn-deadline-queuelimitassociation-queueid
       */
      QueueId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-queuelimitassociation.html#cfn-deadline-queuelimitassociation-farmid
       */
      FarmId: string;
    }
    
    
    interface QueueLimitAssociation extends Resource<"AWS::Deadline::QueueLimitAssociation">, QueueLimitAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function QueueLimitAssociation(id: string, props: QueueLimitAssociationProps): Promise<QueueLimitAssociation>;
  }
  namespace Deadline {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-storageprofile.html
     */
    interface StorageProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-storageprofile.html#cfn-deadline-storageprofile-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-storageprofile.html#cfn-deadline-storageprofile-filesystemlocations
       */
      FileSystemLocations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-storageprofile.html#cfn-deadline-storageprofile-farmid
       */
      FarmId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-storageprofile.html#cfn-deadline-storageprofile-osfamily
       */
      OsFamily: string;
    }
    
    
    interface StorageProfile extends Resource<"AWS::Deadline::StorageProfile">, StorageProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StorageProfile(id: string, props: StorageProfileProps): Promise<StorageProfile>;
  }
  namespace Detective {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-graph.html
     */
    interface GraphProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-graph.html#cfn-detective-graph-autoenablemembers
       */
      AutoEnableMembers?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-graph.html#cfn-detective-graph-tags
       */
      Tags?: {}[];
    }
    
    
    interface Graph extends Resource<"AWS::Detective::Graph">, GraphProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Graph(id: string, props: GraphProps): Promise<Graph>;
  }
  namespace Detective {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-memberinvitation.html
     */
    interface MemberInvitationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-memberinvitation.html#cfn-detective-memberinvitation-memberid
       */
      MemberId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-memberinvitation.html#cfn-detective-memberinvitation-message
       */
      Message?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-memberinvitation.html#cfn-detective-memberinvitation-grapharn
       */
      GraphArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-memberinvitation.html#cfn-detective-memberinvitation-disableemailnotification
       */
      DisableEmailNotification?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-memberinvitation.html#cfn-detective-memberinvitation-memberemailaddress
       */
      MemberEmailAddress: string;
    }
    
    
    interface MemberInvitation extends Resource<"AWS::Detective::MemberInvitation">, MemberInvitationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MemberInvitation(id: string, props: MemberInvitationProps): Promise<MemberInvitation>;
  }
  namespace Detective {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-organizationadmin.html
     */
    interface OrganizationAdminProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-detective-organizationadmin.html#cfn-detective-organizationadmin-accountid
       */
      AccountId: string;
    }
    
    
    interface OrganizationAdmin extends Resource<"AWS::Detective::OrganizationAdmin">, OrganizationAdminProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function OrganizationAdmin(id: string, props: OrganizationAdminProps): Promise<OrganizationAdmin>;
  }
  namespace DevOpsGuru {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-loganomalydetectionintegration.html
     */
    interface LogAnomalyDetectionIntegrationProps {}
    
    
    interface LogAnomalyDetectionIntegration extends Resource<"AWS::DevOpsGuru::LogAnomalyDetectionIntegration">, LogAnomalyDetectionIntegrationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LogAnomalyDetectionIntegration(id: string, props: LogAnomalyDetectionIntegrationProps): Promise<LogAnomalyDetectionIntegration>;
  }
  namespace DevOpsGuru {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-notificationchannel.html
     */
    interface NotificationChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-notificationchannel.html#cfn-devopsguru-notificationchannel-config
       */
      Config: {};
    }
    
    
    interface NotificationChannel extends Resource<"AWS::DevOpsGuru::NotificationChannel">, NotificationChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NotificationChannel(id: string, props: NotificationChannelProps): Promise<NotificationChannel>;
  }
  namespace DevOpsGuru {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-resourcecollection.html
     */
    interface ResourceCollectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-resourcecollection.html#cfn-devopsguru-resourcecollection-resourcecollectionfilter
       */
      ResourceCollectionFilter: {};
    }
    
    
    interface ResourceCollection extends Resource<"AWS::DevOpsGuru::ResourceCollection">, ResourceCollectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceCollection(id: string, props: ResourceCollectionProps): Promise<ResourceCollection>;
  }
  namespace DirectoryService {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html
     */
    interface MicrosoftADProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html#cfn-directoryservice-microsoftad-createalias
       */
      CreateAlias?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html#cfn-directoryservice-microsoftad-edition
       */
      Edition?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html#cfn-directoryservice-microsoftad-enablesso
       */
      EnableSso?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html#cfn-directoryservice-microsoftad-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html#cfn-directoryservice-microsoftad-password
       */
      Password: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html#cfn-directoryservice-microsoftad-shortname
       */
      ShortName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html#cfn-directoryservice-microsoftad-vpcsettings
       */
      VpcSettings: {};
    }
    
    
    interface MicrosoftAD extends Resource<"AWS::DirectoryService::MicrosoftAD">, MicrosoftADProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MicrosoftAD(id: string, props: MicrosoftADProps): Promise<MicrosoftAD>;
  }
  namespace DirectoryService {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-simplead.html
     */
    interface SimpleADProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-simplead.html#cfn-directoryservice-simplead-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-simplead.html#cfn-directoryservice-simplead-vpcsettings
       */
      VpcSettings: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-simplead.html#cfn-directoryservice-simplead-size
       */
      Size: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-simplead.html#cfn-directoryservice-simplead-createalias
       */
      CreateAlias?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-simplead.html#cfn-directoryservice-simplead-enablesso
       */
      EnableSso?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-simplead.html#cfn-directoryservice-simplead-shortname
       */
      ShortName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-simplead.html#cfn-directoryservice-simplead-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-simplead.html#cfn-directoryservice-simplead-password
       */
      Password?: string;
    }
    
    
    interface SimpleAD extends Resource<"AWS::DirectoryService::SimpleAD">, SimpleADProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SimpleAD(id: string, props: SimpleADProps): Promise<SimpleAD>;
  }
  namespace DocDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html
     */
    interface DBClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-storageencrypted
       */
      StorageEncrypted?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-restoretotime
       */
      RestoreToTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-snapshotidentifier
       */
      SnapshotIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-port
       */
      Port?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbclusteridentifier
       */
      DBClusterIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-preferredbackupwindow
       */
      PreferredBackupWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-rotatemasteruserpassword
       */
      RotateMasterUserPassword?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-vpcsecuritygroupids
       */
      VpcSecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-copytagstosnapshot
       */
      CopyTagsToSnapshot?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-restoretype
       */
      RestoreType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-storagetype
       */
      StorageType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-availabilityzones
       */
      AvailabilityZones?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-serverlessv2scalingconfiguration
       */
      ServerlessV2ScalingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-masterusersecretkmskeyid
       */
      MasterUserSecretKmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbsubnetgroupname
       */
      DBSubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-deletionprotection
       */
      DeletionProtection?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-uselatestrestorabletime
       */
      UseLatestRestorableTime?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-managemasteruserpassword
       */
      ManageMasterUserPassword?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-masteruserpassword
       */
      MasterUserPassword?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-sourcedbclusteridentifier
       */
      SourceDBClusterIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-masterusername
       */
      MasterUsername?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbclusterparametergroupname
       */
      DBClusterParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-backupretentionperiod
       */
      BackupRetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-enablecloudwatchlogsexports
       */
      EnableCloudwatchLogsExports?: string[];
    }
    
    
    interface DBCluster extends Resource<"AWS::DocDB::DBCluster">, DBClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBCluster(id: string, props: DBClusterProps): Promise<DBCluster>;
  }
  namespace DocDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html
     */
    interface DBClusterParameterGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-parameters
       */
      Parameters: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-family
       */
      Family: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-name
       */
      Name?: string;
    }
    
    
    interface DBClusterParameterGroup extends Resource<"AWS::DocDB::DBClusterParameterGroup">, DBClusterParameterGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBClusterParameterGroup(id: string, props: DBClusterParameterGroupProps): Promise<DBClusterParameterGroup>;
  }
  namespace DocDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html
     */
    interface DBInstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-cacertificateidentifier
       */
      CACertificateIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-certificaterotationrestart
       */
      CertificateRotationRestart?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbinstanceclass
       */
      DBInstanceClass: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbclusteridentifier
       */
      DBClusterIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-availabilityzone
       */
      AvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-enableperformanceinsights
       */
      EnablePerformanceInsights?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-autominorversionupgrade
       */
      AutoMinorVersionUpgrade?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbinstanceidentifier
       */
      DBInstanceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-tags
       */
      Tags?: {}[];
    }
    
    
    interface DBInstance extends Resource<"AWS::DocDB::DBInstance">, DBInstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBInstance(id: string, props: DBInstanceProps): Promise<DBInstance>;
  }
  namespace DocDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html
     */
    interface DBSubnetGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupname
       */
      DBSubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupdescription
       */
      DBSubnetGroupDescription: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface DBSubnetGroup extends Resource<"AWS::DocDB::DBSubnetGroup">, DBSubnetGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBSubnetGroup(id: string, props: DBSubnetGroupProps): Promise<DBSubnetGroup>;
  }
  namespace DocDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-eventsubscription.html
     */
    interface EventSubscriptionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-eventsubscription.html#cfn-docdb-eventsubscription-sourcetype
       */
      SourceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-eventsubscription.html#cfn-docdb-eventsubscription-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-eventsubscription.html#cfn-docdb-eventsubscription-eventcategories
       */
      EventCategories?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-eventsubscription.html#cfn-docdb-eventsubscription-subscriptionname
       */
      SubscriptionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-eventsubscription.html#cfn-docdb-eventsubscription-snstopicarn
       */
      SnsTopicArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-eventsubscription.html#cfn-docdb-eventsubscription-sourceids
       */
      SourceIds?: string[];
    }
    
    
    interface EventSubscription extends Resource<"AWS::DocDB::EventSubscription">, EventSubscriptionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventSubscription(id: string, props: EventSubscriptionProps): Promise<EventSubscription>;
  }
  namespace DocDBElastic {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html
     */
    interface ClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html#cfn-docdbelastic-cluster-adminusername
       */
      AdminUserName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html#cfn-docdbelastic-cluster-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html#cfn-docdbelastic-cluster-adminuserpassword
       */
      AdminUserPassword?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html#cfn-docdbelastic-cluster-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html#cfn-docdbelastic-cluster-shardinstancecount
       */
      ShardInstanceCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html#cfn-docdbelastic-cluster-subnetids
       */
      SubnetIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html#cfn-docdbelastic-cluster-preferredbackupwindow
       */
      PreferredBackupWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html#cfn-docdbelastic-cluster-shardcount
       */
      ShardCount: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html#cfn-docdbelastic-cluster-shardcapacity
       */
      ShardCapacity: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html#cfn-docdbelastic-cluster-vpcsecuritygroupids
       */
      VpcSecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html#cfn-docdbelastic-cluster-clustername
       */
      ClusterName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html#cfn-docdbelastic-cluster-backupretentionperiod
       */
      BackupRetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html#cfn-docdbelastic-cluster-authtype
       */
      AuthType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdbelastic-cluster.html#cfn-docdbelastic-cluster-tags
       */
      Tags?: {}[];
    }
    
    
    interface Cluster extends Resource<"AWS::DocDBElastic::Cluster">, ClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Cluster(id: string, props: ClusterProps): Promise<Cluster>;
  }
  namespace DynamoDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html
     */
    interface GlobalTableProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-ssespecification
       */
      SSESpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-streamspecification
       */
      StreamSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-warmthroughput
       */
      WarmThroughput?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-replicas
       */
      Replicas: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-writeprovisionedthroughputsettings
       */
      WriteProvisionedThroughputSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-writeondemandthroughputsettings
       */
      WriteOnDemandThroughputSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-tablename
       */
      TableName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-attributedefinitions
       */
      AttributeDefinitions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-billingmode
       */
      BillingMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-globalsecondaryindexes
       */
      GlobalSecondaryIndexes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-keyschema
       */
      KeySchema: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-localsecondaryindexes
       */
      LocalSecondaryIndexes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-timetolivespecification
       */
      TimeToLiveSpecification?: {};
    }
    
    
    interface GlobalTable extends Resource<"AWS::DynamoDB::GlobalTable">, GlobalTableProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GlobalTable(id: string, props: GlobalTableProps): Promise<GlobalTable>;
  }
  namespace DynamoDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html
     */
    interface TableProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-ondemandthroughput
       */
      OnDemandThroughput?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-ssespecification
       */
      SSESpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-kinesisstreamspecification
       */
      KinesisStreamSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-streamspecification
       */
      StreamSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-contributorinsightsspecification
       */
      ContributorInsightsSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-importsourcespecification
       */
      ImportSourceSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-pointintimerecoveryspecification
       */
      PointInTimeRecoverySpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-provisionedthroughput
       */
      ProvisionedThroughput?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-warmthroughput
       */
      WarmThroughput?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-tablename
       */
      TableName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-attributedefinitions
       */
      AttributeDefinitions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-billingmode
       */
      BillingMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-globalsecondaryindexes
       */
      GlobalSecondaryIndexes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-resourcepolicy
       */
      ResourcePolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-keyschema
       */
      KeySchema: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-localsecondaryindexes
       */
      LocalSecondaryIndexes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-deletionprotectionenabled
       */
      DeletionProtectionEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-tableclass
       */
      TableClass?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-timetolivespecification
       */
      TimeToLiveSpecification?: {};
    }
    
    
    interface Table extends Resource<"AWS::DynamoDB::Table">, TableProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Table(id: string, props: TableProps): Promise<Table>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html
     */
    interface CapacityReservationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tenancy
       */
      Tenancy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddatetype
       */
      EndDateType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tagspecifications
       */
      TagSpecifications?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-unusedreservationbillingownerid
       */
      UnusedReservationBillingOwnerId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-availabilityzoneid
       */
      AvailabilityZoneId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-availabilityzone
       */
      AvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddate
       */
      EndDate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ebsoptimized
       */
      EbsOptimized?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-outpostarn
       */
      OutPostArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancecount
       */
      InstanceCount: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-placementgrouparn
       */
      PlacementGroupArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instanceplatform
       */
      InstancePlatform: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancetype
       */
      InstanceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ephemeralstorage
       */
      EphemeralStorage?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancematchcriteria
       */
      InstanceMatchCriteria?: string;
    }
    
    
    interface CapacityReservation extends Resource<"AWS::EC2::CapacityReservation">, CapacityReservationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CapacityReservation(id: string, props: CapacityReservationProps): Promise<CapacityReservation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html
     */
    interface CapacityReservationFleetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tenancy
       */
      Tenancy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-totaltargetcapacity
       */
      TotalTargetCapacity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-allocationstrategy
       */
      AllocationStrategy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tagspecifications
       */
      TagSpecifications?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-noremoveenddate
       */
      NoRemoveEndDate?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancetypespecifications
       */
      InstanceTypeSpecifications?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-removeenddate
       */
      RemoveEndDate?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancematchcriteria
       */
      InstanceMatchCriteria?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-enddate
       */
      EndDate?: string;
    }
    
    
    interface CapacityReservationFleet extends Resource<"AWS::EC2::CapacityReservationFleet">, CapacityReservationFleetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CapacityReservationFleet(id: string, props: CapacityReservationFleetProps): Promise<CapacityReservationFleet>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html
     */
    interface CarrierGatewayProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html#cfn-ec2-carriergateway-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-carriergateway.html#cfn-ec2-carriergateway-tags
       */
      Tags?: {}[];
    }
    
    
    interface CarrierGateway extends Resource<"AWS::EC2::CarrierGateway">, CarrierGatewayProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CarrierGateway(id: string, props: CarrierGatewayProps): Promise<CarrierGateway>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html
     */
    interface ClientVpnAuthorizationRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-clientvpnendpointid
       */
      ClientVpnEndpointId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-accessgroupid
       */
      AccessGroupId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-targetnetworkcidr
       */
      TargetNetworkCidr: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnauthorizationrule.html#cfn-ec2-clientvpnauthorizationrule-authorizeallgroups
       */
      AuthorizeAllGroups?: boolean;
    }
    
    
    interface ClientVpnAuthorizationRule extends Resource<"AWS::EC2::ClientVpnAuthorizationRule">, ClientVpnAuthorizationRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ClientVpnAuthorizationRule(id: string, props: ClientVpnAuthorizationRuleProps): Promise<ClientVpnAuthorizationRule>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html
     */
    interface ClientVpnEndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientcidrblock
       */
      ClientCidrBlock: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientconnectoptions
       */
      ClientConnectOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientrouteenforcementoptions
       */
      ClientRouteEnforcementOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-tagspecifications
       */
      TagSpecifications?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-authenticationoptions
       */
      AuthenticationOptions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-servercertificatearn
       */
      ServerCertificateArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-sessiontimeouthours
       */
      SessionTimeoutHours?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-dnsservers
       */
      DnsServers?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-disconnectonsessiontimeout
       */
      DisconnectOnSessionTimeout?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-connectionlogoptions
       */
      ConnectionLogOptions: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-splittunnel
       */
      SplitTunnel?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-clientloginbanneroptions
       */
      ClientLoginBannerOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-vpcid
       */
      VpcId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-selfserviceportal
       */
      SelfServicePortal?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-transportprotocol
       */
      TransportProtocol?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnendpoint.html#cfn-ec2-clientvpnendpoint-vpnport
       */
      VpnPort?: number;
    }
    
    
    interface ClientVpnEndpoint extends Resource<"AWS::EC2::ClientVpnEndpoint">, ClientVpnEndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ClientVpnEndpoint(id: string, props: ClientVpnEndpointProps): Promise<ClientVpnEndpoint>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html
     */
    interface ClientVpnRouteProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-clientvpnendpointid
       */
      ClientVpnEndpointId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-targetvpcsubnetid
       */
      TargetVpcSubnetId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpnroute.html#cfn-ec2-clientvpnroute-destinationcidrblock
       */
      DestinationCidrBlock: string;
    }
    
    
    interface ClientVpnRoute extends Resource<"AWS::EC2::ClientVpnRoute">, ClientVpnRouteProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ClientVpnRoute(id: string, props: ClientVpnRouteProps): Promise<ClientVpnRoute>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html
     */
    interface ClientVpnTargetNetworkAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-clientvpnendpointid
       */
      ClientVpnEndpointId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-clientvpntargetnetworkassociation.html#cfn-ec2-clientvpntargetnetworkassociation-subnetid
       */
      SubnetId: string;
    }
    
    
    interface ClientVpnTargetNetworkAssociation extends Resource<"AWS::EC2::ClientVpnTargetNetworkAssociation">, ClientVpnTargetNetworkAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ClientVpnTargetNetworkAssociation(id: string, props: ClientVpnTargetNetworkAssociationProps): Promise<ClientVpnTargetNetworkAssociation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html
     */
    interface CustomerGatewayProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html#cfn-ec2-customergateway-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html#cfn-ec2-customergateway-ipaddress
       */
      IpAddress: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html#cfn-ec2-customergateway-bgpasnextended
       */
      BgpAsnExtended?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html#cfn-ec2-customergateway-bgpasn
       */
      BgpAsn?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html#cfn-ec2-customergateway-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html#cfn-ec2-customergateway-certificatearn
       */
      CertificateArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html#cfn-ec2-customergateway-devicename
       */
      DeviceName?: string;
    }
    
    
    interface CustomerGateway extends Resource<"AWS::EC2::CustomerGateway">, CustomerGatewayProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CustomerGateway(id: string, props: CustomerGatewayProps): Promise<CustomerGateway>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html
     */
    interface DHCPOptionsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnameservers
       */
      NetbiosNameServers?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-ntpservers
       */
      NtpServers?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainname
       */
      DomainName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-ipv6addresspreferredleasetime
       */
      Ipv6AddressPreferredLeaseTime?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnodetype
       */
      NetbiosNodeType?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainnameservers
       */
      DomainNameServers?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-tags
       */
      Tags?: {}[];
    }
    
    
    interface DHCPOptions extends Resource<"AWS::EC2::DHCPOptions">, DHCPOptionsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DHCPOptions(id: string, props: DHCPOptionsProps): Promise<DHCPOptions>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html
     */
    interface EC2FleetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-context
       */
      Context?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-targetcapacityspecification
       */
      TargetCapacitySpecification: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-ondemandoptions
       */
      OnDemandOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-excesscapacityterminationpolicy
       */
      ExcessCapacityTerminationPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-tagspecifications
       */
      TagSpecifications?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-spotoptions
       */
      SpotOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validfrom
       */
      ValidFrom?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-replaceunhealthyinstances
       */
      ReplaceUnhealthyInstances?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-launchtemplateconfigs
       */
      LaunchTemplateConfigs: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-terminateinstanceswithexpiration
       */
      TerminateInstancesWithExpiration?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validuntil
       */
      ValidUntil?: string;
    }
    
    
    interface EC2Fleet extends Resource<"AWS::EC2::EC2Fleet">, EC2FleetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EC2Fleet(id: string, props: EC2FleetProps): Promise<EC2Fleet>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eip.html
     */
    interface EIPProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eip.html#cfn-ec2-eip-address
       */
      Address?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eip.html#cfn-ec2-eip-instanceid
       */
      InstanceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eip.html#cfn-ec2-eip-ipampoolid
       */
      IpamPoolId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eip.html#cfn-ec2-eip-publicipv4pool
       */
      PublicIpv4Pool?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eip.html#cfn-ec2-eip-transferaddress
       */
      TransferAddress?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eip.html#cfn-ec2-eip-domain
       */
      Domain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eip.html#cfn-ec2-eip-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eip.html#cfn-ec2-eip-networkbordergroup
       */
      NetworkBorderGroup?: string;
    }
    
    
    interface EIP extends Resource<"AWS::EC2::EIP">, EIPProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EIP(id: string, props: EIPProps): Promise<EIP>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eipassociation.html
     */
    interface EIPAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eipassociation.html#cfn-ec2-eipassociation-privateipaddress
       */
      PrivateIpAddress?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eipassociation.html#cfn-ec2-eipassociation-instanceid
       */
      InstanceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eipassociation.html#cfn-ec2-eipassociation-allocationid
       */
      AllocationId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-eipassociation.html#cfn-ec2-eipassociation-networkinterfaceid
       */
      NetworkInterfaceId?: string;
    }
    
    
    interface EIPAssociation extends Resource<"AWS::EC2::EIPAssociation">, EIPAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EIPAssociation(id: string, props: EIPAssociationProps): Promise<EIPAssociation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html
     */
    interface EgressOnlyInternetGatewayProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html#cfn-ec2-egressonlyinternetgateway-vpcid
       */
      VpcId: string;
    }
    
    
    interface EgressOnlyInternetGateway extends Resource<"AWS::EC2::EgressOnlyInternetGateway">, EgressOnlyInternetGatewayProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EgressOnlyInternetGateway(id: string, props: EgressOnlyInternetGatewayProps): Promise<EgressOnlyInternetGateway>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html
     */
    interface EnclaveCertificateIamRoleAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html#cfn-ec2-enclavecertificateiamroleassociation-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-enclavecertificateiamroleassociation.html#cfn-ec2-enclavecertificateiamroleassociation-certificatearn
       */
      CertificateArn: string;
    }
    
    
    interface EnclaveCertificateIamRoleAssociation extends Resource<"AWS::EC2::EnclaveCertificateIamRoleAssociation">, EnclaveCertificateIamRoleAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EnclaveCertificateIamRoleAssociation(id: string, props: EnclaveCertificateIamRoleAssociationProps): Promise<EnclaveCertificateIamRoleAssociation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html
     */
    interface FlowLogProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logformat
       */
      LogFormat?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourceid
       */
      ResourceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-maxaggregationinterval
       */
      MaxAggregationInterval?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-destinationoptions
       */
      DestinationOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourcetype
       */
      ResourceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-delivercrossaccountrole
       */
      DeliverCrossAccountRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestination
       */
      LogDestination?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-loggroupname
       */
      LogGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-deliverlogspermissionarn
       */
      DeliverLogsPermissionArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestinationtype
       */
      LogDestinationType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-traffictype
       */
      TrafficType?: string;
    }
    
    
    interface FlowLog extends Resource<"AWS::EC2::FlowLog">, FlowLogProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FlowLog(id: string, props: FlowLogProps): Promise<FlowLog>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html
     */
    interface GatewayRouteTableAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html#cfn-ec2-gatewayroutetableassociation-routetableid
       */
      RouteTableId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-gatewayroutetableassociation.html#cfn-ec2-gatewayroutetableassociation-gatewayid
       */
      GatewayId: string;
    }
    
    
    interface GatewayRouteTableAssociation extends Resource<"AWS::EC2::GatewayRouteTableAssociation">, GatewayRouteTableAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GatewayRouteTableAssociation(id: string, props: GatewayRouteTableAssociationProps): Promise<GatewayRouteTableAssociation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html
     */
    interface HostProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-hostrecovery
       */
      HostRecovery?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancefamily
       */
      InstanceFamily?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-autoplacement
       */
      AutoPlacement?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-outpostarn
       */
      OutpostArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-hostmaintenance
       */
      HostMaintenance?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-availabilityzone
       */
      AvailabilityZone: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancetype
       */
      InstanceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-assetid
       */
      AssetId?: string;
    }
    
    
    interface Host extends Resource<"AWS::EC2::Host">, HostProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Host(id: string, props: HostProps): Promise<Host>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html
     */
    interface IPAMProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-defaultresourcediscoveryorganizationalunitexclusions
       */
      DefaultResourceDiscoveryOrganizationalUnitExclusions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-tier
       */
      Tier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-enableprivategua
       */
      EnablePrivateGua?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-operatingregions
       */
      OperatingRegions?: {}[];
    }
    
    
    interface IPAM extends Resource<"AWS::EC2::IPAM">, IPAMProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IPAM(id: string, props: IPAMProps): Promise<IPAM>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html
     */
    interface IPAMAllocationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-cidr
       */
      Cidr?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-netmasklength
       */
      NetmaskLength?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamallocation.html#cfn-ec2-ipamallocation-ipampoolid
       */
      IpamPoolId: string;
    }
    
    
    interface IPAMAllocation extends Resource<"AWS::EC2::IPAMAllocation">, IPAMAllocationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IPAMAllocation(id: string, props: IPAMAllocationProps): Promise<IPAMAllocation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html
     */
    interface IPAMPoolProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-awsservice
       */
      AwsService?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-locale
       */
      Locale?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-publicipsource
       */
      PublicIpSource?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-sourceresource
       */
      SourceResource?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-sourceipampoolid
       */
      SourceIpamPoolId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationminnetmasklength
       */
      AllocationMinNetmaskLength?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-ipamscopeid
       */
      IpamScopeId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-provisionedcidrs
       */
      ProvisionedCidrs?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationmaxnetmasklength
       */
      AllocationMaxNetmaskLength?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationdefaultnetmasklength
       */
      AllocationDefaultNetmaskLength?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-autoimport
       */
      AutoImport?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-addressfamily
       */
      AddressFamily: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationresourcetags
       */
      AllocationResourceTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-publiclyadvertisable
       */
      PubliclyAdvertisable?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-tags
       */
      Tags?: {}[];
    }
    
    
    interface IPAMPool extends Resource<"AWS::EC2::IPAMPool">, IPAMPoolProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IPAMPool(id: string, props: IPAMPoolProps): Promise<IPAMPool>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampoolcidr.html
     */
    interface IPAMPoolCidrProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampoolcidr.html#cfn-ec2-ipampoolcidr-cidr
       */
      Cidr?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampoolcidr.html#cfn-ec2-ipampoolcidr-netmasklength
       */
      NetmaskLength?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampoolcidr.html#cfn-ec2-ipampoolcidr-ipampoolid
       */
      IpamPoolId: string;
    }
    
    
    interface IPAMPoolCidr extends Resource<"AWS::EC2::IPAMPoolCidr">, IPAMPoolCidrProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IPAMPoolCidr(id: string, props: IPAMPoolCidrProps): Promise<IPAMPoolCidr>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscovery.html
     */
    interface IPAMResourceDiscoveryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscovery.html#cfn-ec2-ipamresourcediscovery-organizationalunitexclusions
       */
      OrganizationalUnitExclusions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscovery.html#cfn-ec2-ipamresourcediscovery-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscovery.html#cfn-ec2-ipamresourcediscovery-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscovery.html#cfn-ec2-ipamresourcediscovery-operatingregions
       */
      OperatingRegions?: {}[];
    }
    
    
    interface IPAMResourceDiscovery extends Resource<"AWS::EC2::IPAMResourceDiscovery">, IPAMResourceDiscoveryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IPAMResourceDiscovery(id: string, props: IPAMResourceDiscoveryProps): Promise<IPAMResourceDiscovery>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscoveryassociation.html
     */
    interface IPAMResourceDiscoveryAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscoveryassociation.html#cfn-ec2-ipamresourcediscoveryassociation-ipamid
       */
      IpamId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscoveryassociation.html#cfn-ec2-ipamresourcediscoveryassociation-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscoveryassociation.html#cfn-ec2-ipamresourcediscoveryassociation-ipamresourcediscoveryid
       */
      IpamResourceDiscoveryId: string;
    }
    
    
    interface IPAMResourceDiscoveryAssociation extends Resource<"AWS::EC2::IPAMResourceDiscoveryAssociation">, IPAMResourceDiscoveryAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IPAMResourceDiscoveryAssociation(id: string, props: IPAMResourceDiscoveryAssociationProps): Promise<IPAMResourceDiscoveryAssociation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html
     */
    interface IPAMScopeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-ipamid
       */
      IpamId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamscope.html#cfn-ec2-ipamscope-tags
       */
      Tags?: {}[];
    }
    
    
    interface IPAMScope extends Resource<"AWS::EC2::IPAMScope">, IPAMScopeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IPAMScope(id: string, props: IPAMScopeProps): Promise<IPAMScope>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html
     */
    interface InstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-tenancy
       */
      Tenancy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-securitygroups
       */
      SecurityGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-privateipaddress
       */
      PrivateIpAddress?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-userdata
       */
      UserData?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-blockdevicemappings
       */
      BlockDeviceMappings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-iaminstanceprofile
       */
      IamInstanceProfile?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-ipv6addresses
       */
      Ipv6Addresses?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-kernelid
       */
      KernelId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-subnetid
       */
      SubnetId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-ebsoptimized
       */
      EbsOptimized?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-propagatetagstovolumeoncreation
       */
      PropagateTagsToVolumeOnCreation?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-elasticgpuspecifications
       */
      ElasticGpuSpecifications?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-elasticinferenceaccelerators
       */
      ElasticInferenceAccelerators?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-volumes
       */
      Volumes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-ipv6addresscount
       */
      Ipv6AddressCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-launchtemplate
       */
      LaunchTemplate?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-enclaveoptions
       */
      EnclaveOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-networkinterfaces
       */
      NetworkInterfaces?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-imageid
       */
      ImageId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-instancetype
       */
      InstanceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-monitoring
       */
      Monitoring?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-additionalinfo
       */
      AdditionalInfo?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-hibernationoptions
       */
      HibernationOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-licensespecifications
       */
      LicenseSpecifications?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-instanceinitiatedshutdownbehavior
       */
      InstanceInitiatedShutdownBehavior?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-cpuoptions
       */
      CpuOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-availabilityzone
       */
      AvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-privatednsnameoptions
       */
      PrivateDnsNameOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-hostid
       */
      HostId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-hostresourcegrouparn
       */
      HostResourceGroupArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-disableapitermination
       */
      DisableApiTermination?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-keyname
       */
      KeyName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-ramdiskid
       */
      RamdiskId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-sourcedestcheck
       */
      SourceDestCheck?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-placementgroupname
       */
      PlacementGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-ssmassociations
       */
      SsmAssociations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-affinity
       */
      Affinity?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-creditspecification
       */
      CreditSpecification?: {};
    }
    
    
    interface Instance extends Resource<"AWS::EC2::Instance">, InstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Instance(id: string, props: InstanceProps): Promise<Instance>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instanceconnectendpoint.html
     */
    interface InstanceConnectEndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instanceconnectendpoint.html#cfn-ec2-instanceconnectendpoint-preserveclientip
       */
      PreserveClientIp?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instanceconnectendpoint.html#cfn-ec2-instanceconnectendpoint-subnetid
       */
      SubnetId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instanceconnectendpoint.html#cfn-ec2-instanceconnectendpoint-clienttoken
       */
      ClientToken?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instanceconnectendpoint.html#cfn-ec2-instanceconnectendpoint-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instanceconnectendpoint.html#cfn-ec2-instanceconnectendpoint-tags
       */
      Tags?: {}[];
    }
    
    
    interface InstanceConnectEndpoint extends Resource<"AWS::EC2::InstanceConnectEndpoint">, InstanceConnectEndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InstanceConnectEndpoint(id: string, props: InstanceConnectEndpointProps): Promise<InstanceConnectEndpoint>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html
     */
    interface InternetGatewayProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html#cfn-ec2-internetgateway-tags
       */
      Tags?: {}[];
    }
    
    
    interface InternetGateway extends Resource<"AWS::EC2::InternetGateway">, InternetGatewayProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InternetGateway(id: string, props: InternetGatewayProps): Promise<InternetGateway>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-keypair.html
     */
    interface KeyPairProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-keypair.html#cfn-ec2-keypair-keyname
       */
      KeyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-keypair.html#cfn-ec2-keypair-keytype
       */
      KeyType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-keypair.html#cfn-ec2-keypair-keyformat
       */
      KeyFormat?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-keypair.html#cfn-ec2-keypair-publickeymaterial
       */
      PublicKeyMaterial?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-keypair.html#cfn-ec2-keypair-tags
       */
      Tags?: {}[];
    }
    
    
    interface KeyPair extends Resource<"AWS::EC2::KeyPair">, KeyPairProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function KeyPair(id: string, props: KeyPairProps): Promise<KeyPair>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html
     */
    interface LaunchTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatename
       */
      LaunchTemplateName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatedata
       */
      LaunchTemplateData: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-versiondescription
       */
      VersionDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-tagspecifications
       */
      TagSpecifications?: {}[];
    }
    
    
    interface LaunchTemplate extends Resource<"AWS::EC2::LaunchTemplate">, LaunchTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LaunchTemplate(id: string, props: LaunchTemplateProps): Promise<LaunchTemplate>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html
     */
    interface LocalGatewayRouteProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayroutetableid
       */
      LocalGatewayRouteTableId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-destinationcidrblock
       */
      DestinationCidrBlock: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-networkinterfaceid
       */
      NetworkInterfaceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayvirtualinterfacegroupid
       */
      LocalGatewayVirtualInterfaceGroupId?: string;
    }
    
    
    interface LocalGatewayRoute extends Resource<"AWS::EC2::LocalGatewayRoute">, LocalGatewayRouteProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocalGatewayRoute(id: string, props: LocalGatewayRouteProps): Promise<LocalGatewayRoute>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetable.html
     */
    interface LocalGatewayRouteTableProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetable.html#cfn-ec2-localgatewayroutetable-localgatewayid
       */
      LocalGatewayId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetable.html#cfn-ec2-localgatewayroutetable-mode
       */
      Mode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetable.html#cfn-ec2-localgatewayroutetable-tags
       */
      Tags?: {}[];
    }
    
    
    interface LocalGatewayRouteTable extends Resource<"AWS::EC2::LocalGatewayRouteTable">, LocalGatewayRouteTableProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocalGatewayRouteTable(id: string, props: LocalGatewayRouteTableProps): Promise<LocalGatewayRouteTable>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html
     */
    interface LocalGatewayRouteTableVPCAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-localgatewayroutetableid
       */
      LocalGatewayRouteTableId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevpcassociation.html#cfn-ec2-localgatewayroutetablevpcassociation-tags
       */
      Tags?: {}[];
    }
    
    
    interface LocalGatewayRouteTableVPCAssociation extends Resource<"AWS::EC2::LocalGatewayRouteTableVPCAssociation">, LocalGatewayRouteTableVPCAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocalGatewayRouteTableVPCAssociation(id: string, props: LocalGatewayRouteTableVPCAssociationProps): Promise<LocalGatewayRouteTableVPCAssociation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevirtualinterfacegroupassociation.html
     */
    interface LocalGatewayRouteTableVirtualInterfaceGroupAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevirtualinterfacegroupassociation.html#cfn-ec2-localgatewayroutetablevirtualinterfacegroupassociation-localgatewayroutetableid
       */
      LocalGatewayRouteTableId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevirtualinterfacegroupassociation.html#cfn-ec2-localgatewayroutetablevirtualinterfacegroupassociation-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetablevirtualinterfacegroupassociation.html#cfn-ec2-localgatewayroutetablevirtualinterfacegroupassociation-localgatewayvirtualinterfacegroupid
       */
      LocalGatewayVirtualInterfaceGroupId: string;
    }
    
    
    interface LocalGatewayRouteTableVirtualInterfaceGroupAssociation extends Resource<"AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation">, LocalGatewayRouteTableVirtualInterfaceGroupAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LocalGatewayRouteTableVirtualInterfaceGroupAssociation(id: string, props: LocalGatewayRouteTableVirtualInterfaceGroupAssociationProps): Promise<LocalGatewayRouteTableVirtualInterfaceGroupAssociation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html
     */
    interface NatGatewayProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-secondaryallocationids
       */
      SecondaryAllocationIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-privateipaddress
       */
      PrivateIpAddress?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-connectivitytype
       */
      ConnectivityType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-secondaryprivateipaddresses
       */
      SecondaryPrivateIpAddresses?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-secondaryprivateipaddresscount
       */
      SecondaryPrivateIpAddressCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-allocationid
       */
      AllocationId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-subnetid
       */
      SubnetId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-maxdraindurationseconds
       */
      MaxDrainDurationSeconds?: number;
    }
    
    
    interface NatGateway extends Resource<"AWS::EC2::NatGateway">, NatGatewayProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NatGateway(id: string, props: NatGatewayProps): Promise<NatGateway>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html
     */
    interface NetworkAclProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html#cfn-ec2-networkacl-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkacl.html#cfn-ec2-networkacl-tags
       */
      Tags?: {}[];
    }
    
    
    interface NetworkAcl extends Resource<"AWS::EC2::NetworkAcl">, NetworkAclProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NetworkAcl(id: string, props: NetworkAclProps): Promise<NetworkAcl>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html
     */
    interface NetworkAclEntryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-portrange
       */
      PortRange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-networkaclid
       */
      NetworkAclId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-ruleaction
       */
      RuleAction: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-cidrblock
       */
      CidrBlock?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-egress
       */
      Egress?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-rulenumber
       */
      RuleNumber: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-ipv6cidrblock
       */
      Ipv6CidrBlock?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-protocol
       */
      Protocol: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkaclentry.html#cfn-ec2-networkaclentry-icmp
       */
      Icmp?: {};
    }
    
    
    interface NetworkAclEntry extends Resource<"AWS::EC2::NetworkAclEntry">, NetworkAclEntryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NetworkAclEntry(id: string, props: NetworkAclEntryProps): Promise<NetworkAclEntry>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html
     */
    interface NetworkInsightsAccessScopeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-excludepaths
       */
      ExcludePaths?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-matchpaths
       */
      MatchPaths?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscope.html#cfn-ec2-networkinsightsaccessscope-tags
       */
      Tags?: {}[];
    }
    
    
    interface NetworkInsightsAccessScope extends Resource<"AWS::EC2::NetworkInsightsAccessScope">, NetworkInsightsAccessScopeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NetworkInsightsAccessScope(id: string, props: NetworkInsightsAccessScopeProps): Promise<NetworkInsightsAccessScope>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html
     */
    interface NetworkInsightsAccessScopeAnalysisProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html#cfn-ec2-networkinsightsaccessscopeanalysis-networkinsightsaccessscopeid
       */
      NetworkInsightsAccessScopeId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsaccessscopeanalysis.html#cfn-ec2-networkinsightsaccessscopeanalysis-tags
       */
      Tags?: {}[];
    }
    
    
    interface NetworkInsightsAccessScopeAnalysis extends Resource<"AWS::EC2::NetworkInsightsAccessScopeAnalysis">, NetworkInsightsAccessScopeAnalysisProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NetworkInsightsAccessScopeAnalysis(id: string, props: NetworkInsightsAccessScopeAnalysisProps): Promise<NetworkInsightsAccessScopeAnalysis>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html
     */
    interface NetworkInsightsAnalysisProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-networkinsightspathid
       */
      NetworkInsightsPathId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-filterinarns
       */
      FilterInArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-additionalaccounts
       */
      AdditionalAccounts?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-tags
       */
      Tags?: {}[];
    }
    
    
    interface NetworkInsightsAnalysis extends Resource<"AWS::EC2::NetworkInsightsAnalysis">, NetworkInsightsAnalysisProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NetworkInsightsAnalysis(id: string, props: NetworkInsightsAnalysisProps): Promise<NetworkInsightsAnalysis>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html
     */
    interface NetworkInsightsPathProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destination
       */
      Destination?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destinationip
       */
      DestinationIp?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-sourceip
       */
      SourceIp?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-filteratdestination
       */
      FilterAtDestination?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-filteratsource
       */
      FilterAtSource?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-protocol
       */
      Protocol: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-destinationport
       */
      DestinationPort?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-source
       */
      Source: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightspath.html#cfn-ec2-networkinsightspath-tags
       */
      Tags?: {}[];
    }
    
    
    interface NetworkInsightsPath extends Resource<"AWS::EC2::NetworkInsightsPath">, NetworkInsightsPathProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NetworkInsightsPath(id: string, props: NetworkInsightsPathProps): Promise<NetworkInsightsPath>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html
     */
    interface NetworkInterfaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-privateipaddress
       */
      PrivateIpAddress?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-privateipaddresses
       */
      PrivateIpAddresses?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-secondaryprivateipaddresscount
       */
      SecondaryPrivateIpAddressCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-ipv6prefixcount
       */
      Ipv6PrefixCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-ipv4prefixes
       */
      Ipv4Prefixes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-ipv4prefixcount
       */
      Ipv4PrefixCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-groupset
       */
      GroupSet?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-ipv6addresses
       */
      Ipv6Addresses?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-ipv6prefixes
       */
      Ipv6Prefixes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-subnetid
       */
      SubnetId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-sourcedestcheck
       */
      SourceDestCheck?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-interfacetype
       */
      InterfaceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-ipv6addresscount
       */
      Ipv6AddressCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterface.html#cfn-ec2-networkinterface-connectiontrackingspecification
       */
      ConnectionTrackingSpecification?: {};
    }
    
    
    interface NetworkInterface extends Resource<"AWS::EC2::NetworkInterface">, NetworkInterfaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NetworkInterface(id: string, props: NetworkInterfaceProps): Promise<NetworkInterface>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfaceattachment.html
     */
    interface NetworkInterfaceAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfaceattachment.html#cfn-ec2-networkinterfaceattachment-enasrdspecification
       */
      EnaSrdSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfaceattachment.html#cfn-ec2-networkinterfaceattachment-instanceid
       */
      InstanceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfaceattachment.html#cfn-ec2-networkinterfaceattachment-deviceindex
       */
      DeviceIndex: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfaceattachment.html#cfn-ec2-networkinterfaceattachment-networkinterfaceid
       */
      NetworkInterfaceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfaceattachment.html#cfn-ec2-networkinterfaceattachment-deleteontermination
       */
      DeleteOnTermination?: boolean;
    }
    
    
    interface NetworkInterfaceAttachment extends Resource<"AWS::EC2::NetworkInterfaceAttachment">, NetworkInterfaceAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NetworkInterfaceAttachment(id: string, props: NetworkInterfaceAttachmentProps): Promise<NetworkInterfaceAttachment>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html
     */
    interface NetworkInterfacePermissionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-awsaccountid
       */
      AwsAccountId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-networkinterfaceid
       */
      NetworkInterfaceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-permission
       */
      Permission: string;
    }
    
    
    interface NetworkInterfacePermission extends Resource<"AWS::EC2::NetworkInterfacePermission">, NetworkInterfacePermissionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NetworkInterfacePermission(id: string, props: NetworkInterfacePermissionProps): Promise<NetworkInterfacePermission>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkperformancemetricsubscription.html
     */
    interface NetworkPerformanceMetricSubscriptionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkperformancemetricsubscription.html#cfn-ec2-networkperformancemetricsubscription-destination
       */
      Destination: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkperformancemetricsubscription.html#cfn-ec2-networkperformancemetricsubscription-statistic
       */
      Statistic: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkperformancemetricsubscription.html#cfn-ec2-networkperformancemetricsubscription-metric
       */
      Metric: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkperformancemetricsubscription.html#cfn-ec2-networkperformancemetricsubscription-source
       */
      Source: string;
    }
    
    
    interface NetworkPerformanceMetricSubscription extends Resource<"AWS::EC2::NetworkPerformanceMetricSubscription">, NetworkPerformanceMetricSubscriptionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NetworkPerformanceMetricSubscription(id: string, props: NetworkPerformanceMetricSubscriptionProps): Promise<NetworkPerformanceMetricSubscription>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html
     */
    interface PlacementGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-spreadlevel
       */
      SpreadLevel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-strategy
       */
      Strategy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-partitioncount
       */
      PartitionCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface PlacementGroup extends Resource<"AWS::EC2::PlacementGroup">, PlacementGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PlacementGroup(id: string, props: PlacementGroupProps): Promise<PlacementGroup>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html
     */
    interface PrefixListProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-maxentries
       */
      MaxEntries?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-prefixlistname
       */
      PrefixListName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-entries
       */
      Entries?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-addressfamily
       */
      AddressFamily: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-prefixlist.html#cfn-ec2-prefixlist-tags
       */
      Tags?: {}[];
    }
    
    
    interface PrefixList extends Resource<"AWS::EC2::PrefixList">, PrefixListProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PrefixList(id: string, props: PrefixListProps): Promise<PrefixList>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
     */
    interface RouteProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationipv6cidrblock
       */
      DestinationIpv6CidrBlock?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-routetableid
       */
      RouteTableId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-instanceid
       */
      InstanceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-localgatewayid
       */
      LocalGatewayId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-carriergatewayid
       */
      CarrierGatewayId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationcidrblock
       */
      DestinationCidrBlock?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-gatewayid
       */
      GatewayId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-networkinterfaceid
       */
      NetworkInterfaceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcendpointid
       */
      VpcEndpointId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-corenetworkarn
       */
      CoreNetworkArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-transitgatewayid
       */
      TransitGatewayId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcpeeringconnectionid
       */
      VpcPeeringConnectionId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-egressonlyinternetgatewayid
       */
      EgressOnlyInternetGatewayId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationprefixlistid
       */
      DestinationPrefixListId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-natgatewayid
       */
      NatGatewayId?: string;
    }
    
    
    interface Route extends Resource<"AWS::EC2::Route">, RouteProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Route(id: string, props: RouteProps): Promise<Route>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserver.html
     */
    interface RouteServerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserver.html#cfn-ec2-routeserver-persistroutes
       */
      PersistRoutes?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserver.html#cfn-ec2-routeserver-snsnotificationsenabled
       */
      SnsNotificationsEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserver.html#cfn-ec2-routeserver-persistroutesduration
       */
      PersistRoutesDuration?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserver.html#cfn-ec2-routeserver-amazonsideasn
       */
      AmazonSideAsn: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserver.html#cfn-ec2-routeserver-tags
       */
      Tags?: {}[];
    }
    
    
    interface RouteServer extends Resource<"AWS::EC2::RouteServer">, RouteServerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RouteServer(id: string, props: RouteServerProps): Promise<RouteServer>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverassociation.html
     */
    interface RouteServerAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverassociation.html#cfn-ec2-routeserverassociation-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverassociation.html#cfn-ec2-routeserverassociation-routeserverid
       */
      RouteServerId: string;
    }
    
    
    interface RouteServerAssociation extends Resource<"AWS::EC2::RouteServerAssociation">, RouteServerAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RouteServerAssociation(id: string, props: RouteServerAssociationProps): Promise<RouteServerAssociation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverendpoint.html
     */
    interface RouteServerEndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverendpoint.html#cfn-ec2-routeserverendpoint-subnetid
       */
      SubnetId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverendpoint.html#cfn-ec2-routeserverendpoint-routeserverid
       */
      RouteServerId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverendpoint.html#cfn-ec2-routeserverendpoint-tags
       */
      Tags?: {}[];
    }
    
    
    interface RouteServerEndpoint extends Resource<"AWS::EC2::RouteServerEndpoint">, RouteServerEndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RouteServerEndpoint(id: string, props: RouteServerEndpointProps): Promise<RouteServerEndpoint>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverpeer.html
     */
    interface RouteServerPeerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverpeer.html#cfn-ec2-routeserverpeer-peeraddress
       */
      PeerAddress: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverpeer.html#cfn-ec2-routeserverpeer-bgpoptions
       */
      BgpOptions: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverpeer.html#cfn-ec2-routeserverpeer-routeserverendpointid
       */
      RouteServerEndpointId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverpeer.html#cfn-ec2-routeserverpeer-tags
       */
      Tags?: {}[];
    }
    
    
    interface RouteServerPeer extends Resource<"AWS::EC2::RouteServerPeer">, RouteServerPeerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RouteServerPeer(id: string, props: RouteServerPeerProps): Promise<RouteServerPeer>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverpropagation.html
     */
    interface RouteServerPropagationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverpropagation.html#cfn-ec2-routeserverpropagation-routetableid
       */
      RouteTableId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routeserverpropagation.html#cfn-ec2-routeserverpropagation-routeserverid
       */
      RouteServerId: string;
    }
    
    
    interface RouteServerPropagation extends Resource<"AWS::EC2::RouteServerPropagation">, RouteServerPropagationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RouteServerPropagation(id: string, props: RouteServerPropagationProps): Promise<RouteServerPropagation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html
     */
    interface RouteTableProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html#cfn-ec2-routetable-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-routetable.html#cfn-ec2-routetable-tags
       */
      Tags?: {}[];
    }
    
    
    interface RouteTable extends Resource<"AWS::EC2::RouteTable">, RouteTableProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RouteTable(id: string, props: RouteTableProps): Promise<RouteTable>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html
     */
    interface SecurityGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html#cfn-ec2-securitygroup-groupdescription
       */
      GroupDescription: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html#cfn-ec2-securitygroup-groupname
       */
      GroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html#cfn-ec2-securitygroup-vpcid
       */
      VpcId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html#cfn-ec2-securitygroup-securitygroupingress
       */
      SecurityGroupIngress?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html#cfn-ec2-securitygroup-securitygroupegress
       */
      SecurityGroupEgress?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html#cfn-ec2-securitygroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface SecurityGroup extends Resource<"AWS::EC2::SecurityGroup">, SecurityGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecurityGroup(id: string, props: SecurityGroupProps): Promise<SecurityGroup>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupegress.html
     */
    interface SecurityGroupEgressProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupegress.html#cfn-ec2-securitygroupegress-cidrip
       */
      CidrIp?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupegress.html#cfn-ec2-securitygroupegress-cidripv6
       */
      CidrIpv6?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupegress.html#cfn-ec2-securitygroupegress-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupegress.html#cfn-ec2-securitygroupegress-fromport
       */
      FromPort?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupegress.html#cfn-ec2-securitygroupegress-toport
       */
      ToPort?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupegress.html#cfn-ec2-securitygroupegress-ipprotocol
       */
      IpProtocol: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupegress.html#cfn-ec2-securitygroupegress-destinationsecuritygroupid
       */
      DestinationSecurityGroupId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupegress.html#cfn-ec2-securitygroupegress-destinationprefixlistid
       */
      DestinationPrefixListId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupegress.html#cfn-ec2-securitygroupegress-groupid
       */
      GroupId: string;
    }
    
    
    interface SecurityGroupEgress extends Resource<"AWS::EC2::SecurityGroupEgress">, SecurityGroupEgressProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecurityGroupEgress(id: string, props: SecurityGroupEgressProps): Promise<SecurityGroupEgress>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupingress.html
     */
    interface SecurityGroupIngressProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupingress.html#cfn-ec2-securitygroupingress-groupname
       */
      GroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupingress.html#cfn-ec2-securitygroupingress-cidrip
       */
      CidrIp?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupingress.html#cfn-ec2-securitygroupingress-cidripv6
       */
      CidrIpv6?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupingress.html#cfn-ec2-securitygroupingress-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupingress.html#cfn-ec2-securitygroupingress-fromport
       */
      FromPort?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupingress.html#cfn-ec2-securitygroupingress-sourcesecuritygroupname
       */
      SourceSecurityGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupingress.html#cfn-ec2-securitygroupingress-toport
       */
      ToPort?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupingress.html#cfn-ec2-securitygroupingress-sourcesecuritygroupownerid
       */
      SourceSecurityGroupOwnerId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupingress.html#cfn-ec2-securitygroupingress-ipprotocol
       */
      IpProtocol: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupingress.html#cfn-ec2-securitygroupingress-sourcesecuritygroupid
       */
      SourceSecurityGroupId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupingress.html#cfn-ec2-securitygroupingress-sourceprefixlistid
       */
      SourcePrefixListId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupingress.html#cfn-ec2-securitygroupingress-groupid
       */
      GroupId?: string;
    }
    
    
    interface SecurityGroupIngress extends Resource<"AWS::EC2::SecurityGroupIngress">, SecurityGroupIngressProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecurityGroupIngress(id: string, props: SecurityGroupIngressProps): Promise<SecurityGroupIngress>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupvpcassociation.html
     */
    interface SecurityGroupVpcAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupvpcassociation.html#cfn-ec2-securitygroupvpcassociation-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupvpcassociation.html#cfn-ec2-securitygroupvpcassociation-groupid
       */
      GroupId: string;
    }
    
    
    interface SecurityGroupVpcAssociation extends Resource<"AWS::EC2::SecurityGroupVpcAssociation">, SecurityGroupVpcAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecurityGroupVpcAssociation(id: string, props: SecurityGroupVpcAssociationProps): Promise<SecurityGroupVpcAssociation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-snapshotblockpublicaccess.html
     */
    interface SnapshotBlockPublicAccessProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-snapshotblockpublicaccess.html#cfn-ec2-snapshotblockpublicaccess-state
       */
      State: string;
    }
    
    
    interface SnapshotBlockPublicAccess extends Resource<"AWS::EC2::SnapshotBlockPublicAccess">, SnapshotBlockPublicAccessProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SnapshotBlockPublicAccess(id: string, props: SnapshotBlockPublicAccessProps): Promise<SnapshotBlockPublicAccess>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html
     */
    interface SpotFleetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata
       */
      SpotFleetRequestConfigData: {};
    }
    
    
    interface SpotFleet extends Resource<"AWS::EC2::SpotFleet">, SpotFleetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SpotFleet(id: string, props: SpotFleetProps): Promise<SpotFleet>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
     */
    interface SubnetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-mappubliciponlaunch
       */
      MapPublicIpOnLaunch?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-enabledns64
       */
      EnableDns64?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzoneid
       */
      AvailabilityZoneId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-outpostarn
       */
      OutpostArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzone
       */
      AvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-cidrblock
       */
      CidrBlock?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-enablelniatdeviceindex
       */
      EnableLniAtDeviceIndex?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6netmasklength
       */
      Ipv6NetmaskLength?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6ipampoolid
       */
      Ipv6IpamPoolId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-assignipv6addressoncreation
       */
      AssignIpv6AddressOnCreation?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv4netmasklength
       */
      Ipv4NetmaskLength?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-privatednsnameoptionsonlaunch
       */
      PrivateDnsNameOptionsOnLaunch?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv4ipampoolid
       */
      Ipv4IpamPoolId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6native
       */
      Ipv6Native?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6cidrblock
       */
      Ipv6CidrBlock?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-tags
       */
      Tags?: {}[];
    }
    
    
    interface Subnet extends Resource<"AWS::EC2::Subnet">, SubnetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Subnet(id: string, props: SubnetProps): Promise<Subnet>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html
     */
    interface SubnetCidrBlockProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-ipv6netmasklength
       */
      Ipv6NetmaskLength?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-ipv6ipampoolid
       */
      Ipv6IpamPoolId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-subnetid
       */
      SubnetId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-ipv6cidrblock
       */
      Ipv6CidrBlock?: string;
    }
    
    
    interface SubnetCidrBlock extends Resource<"AWS::EC2::SubnetCidrBlock">, SubnetCidrBlockProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SubnetCidrBlock(id: string, props: SubnetCidrBlockProps): Promise<SubnetCidrBlock>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetnetworkaclassociation.html
     */
    interface SubnetNetworkAclAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetnetworkaclassociation.html#cfn-ec2-subnetnetworkaclassociation-networkaclid
       */
      NetworkAclId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetnetworkaclassociation.html#cfn-ec2-subnetnetworkaclassociation-subnetid
       */
      SubnetId: string;
    }
    
    
    interface SubnetNetworkAclAssociation extends Resource<"AWS::EC2::SubnetNetworkAclAssociation">, SubnetNetworkAclAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SubnetNetworkAclAssociation(id: string, props: SubnetNetworkAclAssociationProps): Promise<SubnetNetworkAclAssociation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html
     */
    interface SubnetRouteTableAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html#cfn-ec2-subnetroutetableassociation-routetableid
       */
      RouteTableId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetroutetableassociation.html#cfn-ec2-subnetroutetableassociation-subnetid
       */
      SubnetId: string;
    }
    
    
    interface SubnetRouteTableAssociation extends Resource<"AWS::EC2::SubnetRouteTableAssociation">, SubnetRouteTableAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SubnetRouteTableAssociation(id: string, props: SubnetRouteTableAssociationProps): Promise<SubnetRouteTableAssociation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html
     */
    interface TrafficMirrorFilterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-networkservices
       */
      NetworkServices?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilter.html#cfn-ec2-trafficmirrorfilter-tags
       */
      Tags?: {}[];
    }
    
    
    interface TrafficMirrorFilter extends Resource<"AWS::EC2::TrafficMirrorFilter">, TrafficMirrorFilterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TrafficMirrorFilter(id: string, props: TrafficMirrorFilterProps): Promise<TrafficMirrorFilter>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html
     */
    interface TrafficMirrorFilterRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationportrange
       */
      DestinationPortRange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourceportrange
       */
      SourcePortRange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-ruleaction
       */
      RuleAction: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourcecidrblock
       */
      SourceCidrBlock: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-rulenumber
       */
      RuleNumber: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationcidrblock
       */
      DestinationCidrBlock: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficmirrorfilterid
       */
      TrafficMirrorFilterId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficdirection
       */
      TrafficDirection: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-protocol
       */
      Protocol?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-tags
       */
      Tags?: {}[];
    }
    
    
    interface TrafficMirrorFilterRule extends Resource<"AWS::EC2::TrafficMirrorFilterRule">, TrafficMirrorFilterRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TrafficMirrorFilterRule(id: string, props: TrafficMirrorFilterRuleProps): Promise<TrafficMirrorFilterRule>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html
     */
    interface TrafficMirrorSessionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-trafficmirrortargetid
       */
      TrafficMirrorTargetId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-sessionnumber
       */
      SessionNumber: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-virtualnetworkid
       */
      VirtualNetworkId?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-packetlength
       */
      PacketLength?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-networkinterfaceid
       */
      NetworkInterfaceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-trafficmirrorfilterid
       */
      TrafficMirrorFilterId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorsession.html#cfn-ec2-trafficmirrorsession-tags
       */
      Tags?: {}[];
    }
    
    
    interface TrafficMirrorSession extends Resource<"AWS::EC2::TrafficMirrorSession">, TrafficMirrorSessionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TrafficMirrorSession(id: string, props: TrafficMirrorSessionProps): Promise<TrafficMirrorSession>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html
     */
    interface TrafficMirrorTargetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-networkloadbalancerarn
       */
      NetworkLoadBalancerArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-networkinterfaceid
       */
      NetworkInterfaceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-gatewayloadbalancerendpointid
       */
      GatewayLoadBalancerEndpointId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrortarget.html#cfn-ec2-trafficmirrortarget-tags
       */
      Tags?: {}[];
    }
    
    
    interface TrafficMirrorTarget extends Resource<"AWS::EC2::TrafficMirrorTarget">, TrafficMirrorTargetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TrafficMirrorTarget(id: string, props: TrafficMirrorTargetProps): Promise<TrafficMirrorTarget>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html
     */
    interface TransitGatewayProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-associationdefaultroutetableid
       */
      AssociationDefaultRouteTableId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-autoacceptsharedattachments
       */
      AutoAcceptSharedAttachments?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetablepropagation
       */
      DefaultRouteTablePropagation?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-transitgatewaycidrblocks
       */
      TransitGatewayCidrBlocks?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-propagationdefaultroutetableid
       */
      PropagationDefaultRouteTableId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-defaultroutetableassociation
       */
      DefaultRouteTableAssociation?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-vpnecmpsupport
       */
      VpnEcmpSupport?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-securitygroupreferencingsupport
       */
      SecurityGroupReferencingSupport?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-dnssupport
       */
      DnsSupport?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-multicastsupport
       */
      MulticastSupport?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-amazonsideasn
       */
      AmazonSideAsn?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgateway.html#cfn-ec2-transitgateway-tags
       */
      Tags?: {}[];
    }
    
    
    interface TransitGateway extends Resource<"AWS::EC2::TransitGateway">, TransitGatewayProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGateway(id: string, props: TransitGatewayProps): Promise<TransitGateway>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html
     */
    interface TransitGatewayAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-options
       */
      Options?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-transitgatewayid
       */
      TransitGatewayId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayattachment.html#cfn-ec2-transitgatewayattachment-tags
       */
      Tags?: {}[];
    }
    
    
    interface TransitGatewayAttachment extends Resource<"AWS::EC2::TransitGatewayAttachment">, TransitGatewayAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayAttachment(id: string, props: TransitGatewayAttachmentProps): Promise<TransitGatewayAttachment>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html
     */
    interface TransitGatewayConnectProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-options
       */
      Options: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-transporttransitgatewayattachmentid
       */
      TransportTransitGatewayAttachmentId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayconnect.html#cfn-ec2-transitgatewayconnect-tags
       */
      Tags?: {}[];
    }
    
    
    interface TransitGatewayConnect extends Resource<"AWS::EC2::TransitGatewayConnect">, TransitGatewayConnectProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayConnect(id: string, props: TransitGatewayConnectProps): Promise<TransitGatewayConnect>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html
     */
    interface TransitGatewayMulticastDomainProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-options
       */
      Options?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-transitgatewayid
       */
      TransitGatewayId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomain.html#cfn-ec2-transitgatewaymulticastdomain-tags
       */
      Tags?: {}[];
    }
    
    
    interface TransitGatewayMulticastDomain extends Resource<"AWS::EC2::TransitGatewayMulticastDomain">, TransitGatewayMulticastDomainProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayMulticastDomain(id: string, props: TransitGatewayMulticastDomainProps): Promise<TransitGatewayMulticastDomain>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html
     */
    interface TransitGatewayMulticastDomainAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewaymulticastdomainid
       */
      TransitGatewayMulticastDomainId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-subnetid
       */
      SubnetId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewayattachmentid
       */
      TransitGatewayAttachmentId: string;
    }
    
    
    interface TransitGatewayMulticastDomainAssociation extends Resource<"AWS::EC2::TransitGatewayMulticastDomainAssociation">, TransitGatewayMulticastDomainAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayMulticastDomainAssociation(id: string, props: TransitGatewayMulticastDomainAssociationProps): Promise<TransitGatewayMulticastDomainAssociation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html
     */
    interface TransitGatewayMulticastGroupMemberProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-transitgatewaymulticastdomainid
       */
      TransitGatewayMulticastDomainId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-networkinterfaceid
       */
      NetworkInterfaceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-groupipaddress
       */
      GroupIpAddress: string;
    }
    
    
    interface TransitGatewayMulticastGroupMember extends Resource<"AWS::EC2::TransitGatewayMulticastGroupMember">, TransitGatewayMulticastGroupMemberProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayMulticastGroupMember(id: string, props: TransitGatewayMulticastGroupMemberProps): Promise<TransitGatewayMulticastGroupMember>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html
     */
    interface TransitGatewayMulticastGroupSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-transitgatewaymulticastdomainid
       */
      TransitGatewayMulticastDomainId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-networkinterfaceid
       */
      NetworkInterfaceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupsource.html#cfn-ec2-transitgatewaymulticastgroupsource-groupipaddress
       */
      GroupIpAddress: string;
    }
    
    
    interface TransitGatewayMulticastGroupSource extends Resource<"AWS::EC2::TransitGatewayMulticastGroupSource">, TransitGatewayMulticastGroupSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayMulticastGroupSource(id: string, props: TransitGatewayMulticastGroupSourceProps): Promise<TransitGatewayMulticastGroupSource>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html
     */
    interface TransitGatewayPeeringAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-transitgatewayid
       */
      TransitGatewayId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peertransitgatewayid
       */
      PeerTransitGatewayId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peeraccountid
       */
      PeerAccountId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-peerregion
       */
      PeerRegion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaypeeringattachment.html#cfn-ec2-transitgatewaypeeringattachment-tags
       */
      Tags?: {}[];
    }
    
    
    interface TransitGatewayPeeringAttachment extends Resource<"AWS::EC2::TransitGatewayPeeringAttachment">, TransitGatewayPeeringAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayPeeringAttachment(id: string, props: TransitGatewayPeeringAttachmentProps): Promise<TransitGatewayPeeringAttachment>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html
     */
    interface TransitGatewayRouteProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayroutetableid
       */
      TransitGatewayRouteTableId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-destinationcidrblock
       */
      DestinationCidrBlock: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-blackhole
       */
      Blackhole?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroute.html#cfn-ec2-transitgatewayroute-transitgatewayattachmentid
       */
      TransitGatewayAttachmentId?: string;
    }
    
    
    interface TransitGatewayRoute extends Resource<"AWS::EC2::TransitGatewayRoute">, TransitGatewayRouteProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayRoute(id: string, props: TransitGatewayRouteProps): Promise<TransitGatewayRoute>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html
     */
    interface TransitGatewayRouteTableProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-transitgatewayid
       */
      TransitGatewayId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetable.html#cfn-ec2-transitgatewayroutetable-tags
       */
      Tags?: {}[];
    }
    
    
    interface TransitGatewayRouteTable extends Resource<"AWS::EC2::TransitGatewayRouteTable">, TransitGatewayRouteTableProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayRouteTable(id: string, props: TransitGatewayRouteTableProps): Promise<TransitGatewayRouteTable>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html
     */
    interface TransitGatewayRouteTableAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayroutetableid
       */
      TransitGatewayRouteTableId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html#cfn-ec2-transitgatewayroutetableassociation-transitgatewayattachmentid
       */
      TransitGatewayAttachmentId: string;
    }
    
    
    interface TransitGatewayRouteTableAssociation extends Resource<"AWS::EC2::TransitGatewayRouteTableAssociation">, TransitGatewayRouteTableAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayRouteTableAssociation(id: string, props: TransitGatewayRouteTableAssociationProps): Promise<TransitGatewayRouteTableAssociation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html
     */
    interface TransitGatewayRouteTablePropagationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayroutetableid
       */
      TransitGatewayRouteTableId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetablepropagation.html#cfn-ec2-transitgatewayroutetablepropagation-transitgatewayattachmentid
       */
      TransitGatewayAttachmentId: string;
    }
    
    
    interface TransitGatewayRouteTablePropagation extends Resource<"AWS::EC2::TransitGatewayRouteTablePropagation">, TransitGatewayRouteTablePropagationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayRouteTablePropagation(id: string, props: TransitGatewayRouteTablePropagationProps): Promise<TransitGatewayRouteTablePropagation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html
     */
    interface TransitGatewayVpcAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-options
       */
      Options?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-transitgatewayid
       */
      TransitGatewayId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-removesubnetids
       */
      RemoveSubnetIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-addsubnetids
       */
      AddSubnetIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayvpcattachment.html#cfn-ec2-transitgatewayvpcattachment-tags
       */
      Tags?: {}[];
    }
    
    
    interface TransitGatewayVpcAttachment extends Resource<"AWS::EC2::TransitGatewayVpcAttachment">, TransitGatewayVpcAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayVpcAttachment(id: string, props: TransitGatewayVpcAttachmentProps): Promise<TransitGatewayVpcAttachment>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html
     */
    interface VPCProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-instancetenancy
       */
      InstanceTenancy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-ipv4netmasklength
       */
      Ipv4NetmaskLength?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-cidrblock
       */
      CidrBlock?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-ipv4ipampoolid
       */
      Ipv4IpamPoolId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-enablednssupport
       */
      EnableDnsSupport?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-enablednshostnames
       */
      EnableDnsHostnames?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-ec2-vpc-tags
       */
      Tags?: {}[];
    }
    
    
    interface VPC extends Resource<"AWS::EC2::VPC">, VPCProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPC(id: string, props: VPCProps): Promise<VPC>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcblockpublicaccessexclusion.html
     */
    interface VPCBlockPublicAccessExclusionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcblockpublicaccessexclusion.html#cfn-ec2-vpcblockpublicaccessexclusion-internetgatewayexclusionmode
       */
      InternetGatewayExclusionMode: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcblockpublicaccessexclusion.html#cfn-ec2-vpcblockpublicaccessexclusion-vpcid
       */
      VpcId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcblockpublicaccessexclusion.html#cfn-ec2-vpcblockpublicaccessexclusion-subnetid
       */
      SubnetId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcblockpublicaccessexclusion.html#cfn-ec2-vpcblockpublicaccessexclusion-tags
       */
      Tags?: {}[];
    }
    
    
    interface VPCBlockPublicAccessExclusion extends Resource<"AWS::EC2::VPCBlockPublicAccessExclusion">, VPCBlockPublicAccessExclusionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPCBlockPublicAccessExclusion(id: string, props: VPCBlockPublicAccessExclusionProps): Promise<VPCBlockPublicAccessExclusion>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcblockpublicaccessoptions.html
     */
    interface VPCBlockPublicAccessOptionsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcblockpublicaccessoptions.html#cfn-ec2-vpcblockpublicaccessoptions-internetgatewayblockmode
       */
      InternetGatewayBlockMode: string;
    }
    
    
    interface VPCBlockPublicAccessOptions extends Resource<"AWS::EC2::VPCBlockPublicAccessOptions">, VPCBlockPublicAccessOptionsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPCBlockPublicAccessOptions(id: string, props: VPCBlockPublicAccessOptionsProps): Promise<VPCBlockPublicAccessOptions>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html
     */
    interface VPCCidrBlockProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6netmasklength
       */
      Ipv6NetmaskLength?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6ipampoolid
       */
      Ipv6IpamPoolId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv4netmasklength
       */
      Ipv4NetmaskLength?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6cidrblocknetworkbordergroup
       */
      Ipv6CidrBlockNetworkBorderGroup?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-cidrblock
       */
      CidrBlock?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6pool
       */
      Ipv6Pool?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv4ipampoolid
       */
      Ipv4IpamPoolId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6cidrblock
       */
      Ipv6CidrBlock?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-amazonprovidedipv6cidrblock
       */
      AmazonProvidedIpv6CidrBlock?: boolean;
    }
    
    
    interface VPCCidrBlock extends Resource<"AWS::EC2::VPCCidrBlock">, VPCCidrBlockProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPCCidrBlock(id: string, props: VPCCidrBlockProps): Promise<VPCCidrBlock>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html
     */
    interface VPCDHCPOptionsAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-dhcpoptionsid
       */
      DhcpOptionsId: string;
    }
    
    
    interface VPCDHCPOptionsAssociation extends Resource<"AWS::EC2::VPCDHCPOptionsAssociation">, VPCDHCPOptionsAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPCDHCPOptionsAssociation(id: string, props: VPCDHCPOptionsAssociationProps): Promise<VPCDHCPOptionsAssociation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html
     */
    interface VPCEndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-privatednsenabled
       */
      PrivateDnsEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-ipaddresstype
       */
      IpAddressType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-serviceregion
       */
      ServiceRegion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-dnsoptions
       */
      DnsOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-resourceconfigurationarn
       */
      ResourceConfigurationArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-subnetids
       */
      SubnetIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-servicenetworkarn
       */
      ServiceNetworkArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-routetableids
       */
      RouteTableIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-servicename
       */
      ServiceName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-policydocument
       */
      PolicyDocument?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcendpointtype
       */
      VpcEndpointType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-tags
       */
      Tags?: {}[];
    }
    
    
    interface VPCEndpoint extends Resource<"AWS::EC2::VPCEndpoint">, VPCEndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPCEndpoint(id: string, props: VPCEndpointProps): Promise<VPCEndpoint>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html
     */
    interface VPCEndpointConnectionNotificationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents
       */
      ConnectionEvents: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid
       */
      VPCEndpointId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn
       */
      ConnectionNotificationArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid
       */
      ServiceId?: string;
    }
    
    
    interface VPCEndpointConnectionNotification extends Resource<"AWS::EC2::VPCEndpointConnectionNotification">, VPCEndpointConnectionNotificationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPCEndpointConnectionNotification(id: string, props: VPCEndpointConnectionNotificationProps): Promise<VPCEndpointConnectionNotification>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html
     */
    interface VPCEndpointServiceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-networkloadbalancerarns
       */
      NetworkLoadBalancerArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-payerresponsibility
       */
      PayerResponsibility?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-acceptancerequired
       */
      AcceptanceRequired?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-contributorinsightsenabled
       */
      ContributorInsightsEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-supportedipaddresstypes
       */
      SupportedIpAddressTypes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-gatewayloadbalancerarns
       */
      GatewayLoadBalancerArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-supportedregions
       */
      SupportedRegions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-tags
       */
      Tags?: {}[];
    }
    
    
    interface VPCEndpointService extends Resource<"AWS::EC2::VPCEndpointService">, VPCEndpointServiceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPCEndpointService(id: string, props: VPCEndpointServiceProps): Promise<VPCEndpointService>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html
     */
    interface VPCEndpointServicePermissionsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-allowedprincipals
       */
      AllowedPrincipals?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservicepermissions.html#cfn-ec2-vpcendpointservicepermissions-serviceid
       */
      ServiceId: string;
    }
    
    
    interface VPCEndpointServicePermissions extends Resource<"AWS::EC2::VPCEndpointServicePermissions">, VPCEndpointServicePermissionsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPCEndpointServicePermissions(id: string, props: VPCEndpointServicePermissionsProps): Promise<VPCEndpointServicePermissions>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcgatewayattachment.html
     */
    interface VPCGatewayAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcgatewayattachment.html#cfn-ec2-vpcgatewayattachment-internetgatewayid
       */
      InternetGatewayId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcgatewayattachment.html#cfn-ec2-vpcgatewayattachment-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcgatewayattachment.html#cfn-ec2-vpcgatewayattachment-vpngatewayid
       */
      VpnGatewayId?: string;
    }
    
    
    interface VPCGatewayAttachment extends Resource<"AWS::EC2::VPCGatewayAttachment">, VPCGatewayAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPCGatewayAttachment(id: string, props: VPCGatewayAttachmentProps): Promise<VPCGatewayAttachment>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html
     */
    interface VPCPeeringConnectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn
       */
      PeerRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid
       */
      PeerVpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion
       */
      PeerRegion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid
       */
      PeerOwnerId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags
       */
      Tags?: {}[];
    }
    
    
    interface VPCPeeringConnection extends Resource<"AWS::EC2::VPCPeeringConnection">, VPCPeeringConnectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPCPeeringConnection(id: string, props: VPCPeeringConnectionProps): Promise<VPCPeeringConnection>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html
     */
    interface VPNConnectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-remoteipv6networkcidr
       */
      RemoteIpv6NetworkCidr?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-remoteipv4networkcidr
       */
      RemoteIpv4NetworkCidr?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-vpntunneloptionsspecifications
       */
      VpnTunnelOptionsSpecifications?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-customergatewayid
       */
      CustomerGatewayId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-outsideipaddresstype
       */
      OutsideIpAddressType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-staticroutesonly
       */
      StaticRoutesOnly?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-enableacceleration
       */
      EnableAcceleration?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-transitgatewayid
       */
      TransitGatewayId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-localipv4networkcidr
       */
      LocalIpv4NetworkCidr?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-vpngatewayid
       */
      VpnGatewayId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-transporttransitgatewayattachmentid
       */
      TransportTransitGatewayAttachmentId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-localipv6networkcidr
       */
      LocalIpv6NetworkCidr?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-tunnelinsideipversion
       */
      TunnelInsideIpVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-tags
       */
      Tags?: {}[];
    }
    
    
    interface VPNConnection extends Resource<"AWS::EC2::VPNConnection">, VPNConnectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPNConnection(id: string, props: VPNConnectionProps): Promise<VPNConnection>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnectionroute.html
     */
    interface VPNConnectionRouteProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnectionroute.html#cfn-ec2-vpnconnectionroute-destinationcidrblock
       */
      DestinationCidrBlock: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnectionroute.html#cfn-ec2-vpnconnectionroute-vpnconnectionid
       */
      VpnConnectionId: string;
    }
    
    
    interface VPNConnectionRoute extends Resource<"AWS::EC2::VPNConnectionRoute">, VPNConnectionRouteProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPNConnectionRoute(id: string, props: VPNConnectionRouteProps): Promise<VPNConnectionRoute>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngateway.html
     */
    interface VPNGatewayProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngateway.html#cfn-ec2-vpngateway-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngateway.html#cfn-ec2-vpngateway-amazonsideasn
       */
      AmazonSideAsn?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngateway.html#cfn-ec2-vpngateway-tags
       */
      Tags?: {}[];
    }
    
    
    interface VPNGateway extends Resource<"AWS::EC2::VPNGateway">, VPNGatewayProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPNGateway(id: string, props: VPNGatewayProps): Promise<VPNGateway>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html
     */
    interface VPNGatewayRoutePropagationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html#cfn-ec2-vpngatewayroutepropagation-routetableids
       */
      RouteTableIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpngatewayroutepropagation.html#cfn-ec2-vpngatewayroutepropagation-vpngatewayid
       */
      VpnGatewayId: string;
    }
    
    
    interface VPNGatewayRoutePropagation extends Resource<"AWS::EC2::VPNGatewayRoutePropagation">, VPNGatewayRoutePropagationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPNGatewayRoutePropagation(id: string, props: VPNGatewayRoutePropagationProps): Promise<VPNGatewayRoutePropagation>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html
     */
    interface VerifiedAccessEndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-attachmenttype
       */
      AttachmentType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-domaincertificatearn
       */
      DomainCertificateArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-verifiedaccessgroupid
       */
      VerifiedAccessGroupId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-loadbalanceroptions
       */
      LoadBalancerOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-applicationdomain
       */
      ApplicationDomain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-policyenabled
       */
      PolicyEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-cidroptions
       */
      CidrOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-endpointdomainprefix
       */
      EndpointDomainPrefix?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-endpointtype
       */
      EndpointType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-policydocument
       */
      PolicyDocument?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-rdsoptions
       */
      RdsOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-ssespecification
       */
      SseSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-networkinterfaceoptions
       */
      NetworkInterfaceOptions?: {};
    }
    
    
    interface VerifiedAccessEndpoint extends Resource<"AWS::EC2::VerifiedAccessEndpoint">, VerifiedAccessEndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VerifiedAccessEndpoint(id: string, props: VerifiedAccessEndpointProps): Promise<VerifiedAccessEndpoint>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html
     */
    interface VerifiedAccessGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html#cfn-ec2-verifiedaccessgroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html#cfn-ec2-verifiedaccessgroup-policydocument
       */
      PolicyDocument?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html#cfn-ec2-verifiedaccessgroup-ssespecification
       */
      SseSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html#cfn-ec2-verifiedaccessgroup-verifiedaccessinstanceid
       */
      VerifiedAccessInstanceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html#cfn-ec2-verifiedaccessgroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html#cfn-ec2-verifiedaccessgroup-policyenabled
       */
      PolicyEnabled?: boolean;
    }
    
    
    interface VerifiedAccessGroup extends Resource<"AWS::EC2::VerifiedAccessGroup">, VerifiedAccessGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VerifiedAccessGroup(id: string, props: VerifiedAccessGroupProps): Promise<VerifiedAccessGroup>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html
     */
    interface VerifiedAccessInstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html#cfn-ec2-verifiedaccessinstance-verifiedaccesstrustproviders
       */
      VerifiedAccessTrustProviders?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html#cfn-ec2-verifiedaccessinstance-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html#cfn-ec2-verifiedaccessinstance-fipsenabled
       */
      FipsEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html#cfn-ec2-verifiedaccessinstance-loggingconfigurations
       */
      LoggingConfigurations?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html#cfn-ec2-verifiedaccessinstance-cidrendpointscustomsubdomain
       */
      CidrEndpointsCustomSubDomain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html#cfn-ec2-verifiedaccessinstance-verifiedaccesstrustproviderids
       */
      VerifiedAccessTrustProviderIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html#cfn-ec2-verifiedaccessinstance-tags
       */
      Tags?: {}[];
    }
    
    
    interface VerifiedAccessInstance extends Resource<"AWS::EC2::VerifiedAccessInstance">, VerifiedAccessInstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VerifiedAccessInstance(id: string, props: VerifiedAccessInstanceProps): Promise<VerifiedAccessInstance>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html
     */
    interface VerifiedAccessTrustProviderProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-policyreferencename
       */
      PolicyReferenceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-deviceoptions
       */
      DeviceOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-nativeapplicationoidcoptions
       */
      NativeApplicationOidcOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-devicetrustprovidertype
       */
      DeviceTrustProviderType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-oidcoptions
       */
      OidcOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-trustprovidertype
       */
      TrustProviderType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-ssespecification
       */
      SseSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-usertrustprovidertype
       */
      UserTrustProviderType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-tags
       */
      Tags?: {}[];
    }
    
    
    interface VerifiedAccessTrustProvider extends Resource<"AWS::EC2::VerifiedAccessTrustProvider">, VerifiedAccessTrustProviderProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VerifiedAccessTrustProvider(id: string, props: VerifiedAccessTrustProviderProps): Promise<VerifiedAccessTrustProvider>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html
     */
    interface VolumeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-multiattachenabled
       */
      MultiAttachEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-snapshotid
       */
      SnapshotId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-volumetype
       */
      VolumeType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-encrypted
       */
      Encrypted?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-size
       */
      Size?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-autoenableio
       */
      AutoEnableIO?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-outpostarn
       */
      OutpostArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-availabilityzone
       */
      AvailabilityZone: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-throughput
       */
      Throughput?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-iops
       */
      Iops?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-tags
       */
      Tags?: {}[];
    }
    
    
    interface Volume extends Resource<"AWS::EC2::Volume">, VolumeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Volume(id: string, props: VolumeProps): Promise<Volume>;
  }
  namespace EC2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volumeattachment.html
     */
    interface VolumeAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volumeattachment.html#cfn-ec2-volumeattachment-volumeid
       */
      VolumeId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volumeattachment.html#cfn-ec2-volumeattachment-instanceid
       */
      InstanceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volumeattachment.html#cfn-ec2-volumeattachment-device
       */
      Device?: string;
    }
    
    
    interface VolumeAttachment extends Resource<"AWS::EC2::VolumeAttachment">, VolumeAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VolumeAttachment(id: string, props: VolumeAttachmentProps): Promise<VolumeAttachment>;
  }
  namespace ECR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html
     */
    interface PublicRepositoryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorypolicytext
       */
      RepositoryPolicyText?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositoryname
       */
      RepositoryName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-repositorycatalogdata
       */
      RepositoryCatalogData?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-publicrepository.html#cfn-ecr-publicrepository-tags
       */
      Tags?: {}[];
    }
    
    
    interface PublicRepository extends Resource<"AWS::ECR::PublicRepository">, PublicRepositoryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PublicRepository(id: string, props: PublicRepositoryProps): Promise<PublicRepository>;
  }
  namespace ECR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-pullthroughcacherule.html
     */
    interface PullThroughCacheRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-pullthroughcacherule.html#cfn-ecr-pullthroughcacherule-upstreamregistryurl
       */
      UpstreamRegistryUrl?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-pullthroughcacherule.html#cfn-ecr-pullthroughcacherule-customrolearn
       */
      CustomRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-pullthroughcacherule.html#cfn-ecr-pullthroughcacherule-upstreamrepositoryprefix
       */
      UpstreamRepositoryPrefix?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-pullthroughcacherule.html#cfn-ecr-pullthroughcacherule-upstreamregistry
       */
      UpstreamRegistry?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-pullthroughcacherule.html#cfn-ecr-pullthroughcacherule-credentialarn
       */
      CredentialArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-pullthroughcacherule.html#cfn-ecr-pullthroughcacherule-ecrrepositoryprefix
       */
      EcrRepositoryPrefix?: string;
    }
    
    
    interface PullThroughCacheRule extends Resource<"AWS::ECR::PullThroughCacheRule">, PullThroughCacheRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PullThroughCacheRule(id: string, props: PullThroughCacheRuleProps): Promise<PullThroughCacheRule>;
  }
  namespace ECR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html
     */
    interface RegistryPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registrypolicy.html#cfn-ecr-registrypolicy-policytext
       */
      PolicyText: {
        [k: string]: unknown;
      };
    }
    
    
    interface RegistryPolicy extends Resource<"AWS::ECR::RegistryPolicy">, RegistryPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RegistryPolicy(id: string, props: RegistryPolicyProps): Promise<RegistryPolicy>;
  }
  namespace ECR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registryscanningconfiguration.html
     */
    interface RegistryScanningConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registryscanningconfiguration.html#cfn-ecr-registryscanningconfiguration-scantype
       */
      ScanType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-registryscanningconfiguration.html#cfn-ecr-registryscanningconfiguration-rules
       */
      Rules: {}[];
    }
    
    
    interface RegistryScanningConfiguration extends Resource<"AWS::ECR::RegistryScanningConfiguration">, RegistryScanningConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RegistryScanningConfiguration(id: string, props: RegistryScanningConfigurationProps): Promise<RegistryScanningConfiguration>;
  }
  namespace ECR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html
     */
    interface ReplicationConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-replicationconfiguration.html#cfn-ecr-replicationconfiguration-replicationconfiguration
       */
      ReplicationConfiguration: {};
    }
    
    
    interface ReplicationConfiguration extends Resource<"AWS::ECR::ReplicationConfiguration">, ReplicationConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReplicationConfiguration(id: string, props: ReplicationConfigurationProps): Promise<ReplicationConfiguration>;
  }
  namespace ECR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html
     */
    interface RepositoryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-emptyondelete
       */
      EmptyOnDelete?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration
       */
      ImageScanningConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration
       */
      EncryptionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext
       */
      RepositoryPolicyText?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy
       */
      LifecyclePolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname
       */
      RepositoryName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability
       */
      ImageTagMutability?: string;
    }
    
    
    interface Repository extends Resource<"AWS::ECR::Repository">, RepositoryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Repository(id: string, props: RepositoryProps): Promise<Repository>;
  }
  namespace ECR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repositorycreationtemplate.html
     */
    interface RepositoryCreationTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repositorycreationtemplate.html#cfn-ecr-repositorycreationtemplate-customrolearn
       */
      CustomRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repositorycreationtemplate.html#cfn-ecr-repositorycreationtemplate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repositorycreationtemplate.html#cfn-ecr-repositorycreationtemplate-encryptionconfiguration
       */
      EncryptionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repositorycreationtemplate.html#cfn-ecr-repositorycreationtemplate-resourcetags
       */
      ResourceTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repositorycreationtemplate.html#cfn-ecr-repositorycreationtemplate-repositorypolicy
       */
      RepositoryPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repositorycreationtemplate.html#cfn-ecr-repositorycreationtemplate-lifecyclepolicy
       */
      LifecyclePolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repositorycreationtemplate.html#cfn-ecr-repositorycreationtemplate-appliedfor
       */
      AppliedFor: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repositorycreationtemplate.html#cfn-ecr-repositorycreationtemplate-prefix
       */
      Prefix: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repositorycreationtemplate.html#cfn-ecr-repositorycreationtemplate-imagetagmutability
       */
      ImageTagMutability?: string;
    }
    
    
    interface RepositoryCreationTemplate extends Resource<"AWS::ECR::RepositoryCreationTemplate">, RepositoryCreationTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RepositoryCreationTemplate(id: string, props: RepositoryCreationTemplateProps): Promise<RepositoryCreationTemplate>;
  }
  namespace ECS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html
     */
    interface CapacityProviderProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html#cfn-ecs-capacityprovider-autoscalinggroupprovider
       */
      AutoScalingGroupProvider?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html#cfn-ecs-capacityprovider-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-capacityprovider.html#cfn-ecs-capacityprovider-name
       */
      Name?: string;
    }
    
    
    interface CapacityProvider extends Resource<"AWS::ECS::CapacityProvider">, CapacityProviderProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CapacityProvider(id: string, props: CapacityProviderProps): Promise<CapacityProvider>;
  }
  namespace ECS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html
     */
    interface ClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-clustersettings
       */
      ClusterSettings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-defaultcapacityproviderstrategy
       */
      DefaultCapacityProviderStrategy?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-configuration
       */
      Configuration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-serviceconnectdefaults
       */
      ServiceConnectDefaults?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-capacityproviders
       */
      CapacityProviders?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-clustername
       */
      ClusterName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-tags
       */
      Tags?: {}[];
    }
    
    
    interface Cluster extends Resource<"AWS::ECS::Cluster">, ClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Cluster(id: string, props: ClusterProps): Promise<Cluster>;
  }
  namespace ECS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-clustercapacityproviderassociations.html
     */
    interface ClusterCapacityProviderAssociationsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-clustercapacityproviderassociations.html#cfn-ecs-clustercapacityproviderassociations-defaultcapacityproviderstrategy
       */
      DefaultCapacityProviderStrategy: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-clustercapacityproviderassociations.html#cfn-ecs-clustercapacityproviderassociations-capacityproviders
       */
      CapacityProviders: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-clustercapacityproviderassociations.html#cfn-ecs-clustercapacityproviderassociations-cluster
       */
      Cluster: string;
    }
    
    
    interface ClusterCapacityProviderAssociations extends Resource<"AWS::ECS::ClusterCapacityProviderAssociations">, ClusterCapacityProviderAssociationsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ClusterCapacityProviderAssociations(id: string, props: ClusterCapacityProviderAssociationsProps): Promise<ClusterCapacityProviderAssociations>;
  }
  namespace ECS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html
     */
    interface PrimaryTaskSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html#cfn-ecs-primarytaskset-tasksetid
       */
      TaskSetId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html#cfn-ecs-primarytaskset-cluster
       */
      Cluster: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-primarytaskset.html#cfn-ecs-primarytaskset-service
       */
      Service: string;
    }
    
    
    interface PrimaryTaskSet extends Resource<"AWS::ECS::PrimaryTaskSet">, PrimaryTaskSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PrimaryTaskSet(id: string, props: PrimaryTaskSetProps): Promise<PrimaryTaskSet>;
  }
  namespace ECS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html
     */
    interface ServiceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-platformversion
       */
      PlatformVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-propagatetags
       */
      PropagateTags?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementstrategies
       */
      PlacementStrategies?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-serviceregistries
       */
      ServiceRegistries?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-volumeconfigurations
       */
      VolumeConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-capacityproviderstrategy
       */
      CapacityProviderStrategy?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-launchtype
       */
      LaunchType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-availabilityzonerebalancing
       */
      AvailabilityZoneRebalancing?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-schedulingstrategy
       */
      SchedulingStrategy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-networkconfiguration
       */
      NetworkConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-healthcheckgraceperiodseconds
       */
      HealthCheckGracePeriodSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-enableecsmanagedtags
       */
      EnableECSManagedTags?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-enableexecutecommand
       */
      EnableExecuteCommand?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementconstraints
       */
      PlacementConstraints?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-cluster
       */
      Cluster?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-loadbalancers
       */
      LoadBalancers?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-serviceconnectconfiguration
       */
      ServiceConnectConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-desiredcount
       */
      DesiredCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-vpclatticeconfigurations
       */
      VpcLatticeConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-deploymentcontroller
       */
      DeploymentController?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-role
       */
      Role?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-taskdefinition
       */
      TaskDefinition?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-servicename
       */
      ServiceName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-deploymentconfiguration
       */
      DeploymentConfiguration?: {};
    }
    
    
    interface Service extends Resource<"AWS::ECS::Service">, ServiceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Service(id: string, props: ServiceProps): Promise<Service>;
  }
  namespace ECS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html
     */
    interface TaskDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-taskrolearn
       */
      TaskRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-ipcmode
       */
      IpcMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-inferenceaccelerators
       */
      InferenceAccelerators?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-memory
       */
      Memory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-placementconstraints
       */
      PlacementConstraints?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-cpu
       */
      Cpu?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-requirescompatibilities
       */
      RequiresCompatibilities?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-networkmode
       */
      NetworkMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-pidmode
       */
      PidMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-enablefaultinjection
       */
      EnableFaultInjection?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-executionrolearn
       */
      ExecutionRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-runtimeplatform
       */
      RuntimePlatform?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-proxyconfiguration
       */
      ProxyConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-volumes
       */
      Volumes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-containerdefinitions
       */
      ContainerDefinitions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-family
       */
      Family?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-ephemeralstorage
       */
      EphemeralStorage?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-tags
       */
      Tags?: {}[];
    }
    
    
    interface TaskDefinition extends Resource<"AWS::ECS::TaskDefinition">, TaskDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TaskDefinition(id: string, props: TaskDefinitionProps): Promise<TaskDefinition>;
  }
  namespace ECS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html
     */
    interface TaskSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-platformversion
       */
      PlatformVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-taskdefinition
       */
      TaskDefinition: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-externalid
       */
      ExternalId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-cluster
       */
      Cluster: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-loadbalancers
       */
      LoadBalancers?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-service
       */
      Service: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-scale
       */
      Scale?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-networkconfiguration
       */
      NetworkConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-serviceregistries
       */
      ServiceRegistries?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-capacityproviderstrategy
       */
      CapacityProviderStrategy?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-launchtype
       */
      LaunchType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-tags
       */
      Tags?: {}[];
    }
    
    
    interface TaskSet extends Resource<"AWS::ECS::TaskSet">, TaskSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TaskSet(id: string, props: TaskSetProps): Promise<TaskSet>;
  }
  namespace EFS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html
     */
    interface AccessPointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html#cfn-efs-accesspoint-filesystemid
       */
      FileSystemId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html#cfn-efs-accesspoint-rootdirectory
       */
      RootDirectory?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html#cfn-efs-accesspoint-clienttoken
       */
      ClientToken?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html#cfn-efs-accesspoint-accesspointtags
       */
      AccessPointTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html#cfn-efs-accesspoint-posixuser
       */
      PosixUser?: {};
    }
    
    
    interface AccessPoint extends Resource<"AWS::EFS::AccessPoint">, AccessPointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccessPoint(id: string, props: AccessPointProps): Promise<AccessPoint>;
  }
  namespace EFS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html
     */
    interface FileSystemProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html#cfn-efs-filesystem-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html#cfn-efs-filesystem-performancemode
       */
      PerformanceMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html#cfn-efs-filesystem-encrypted
       */
      Encrypted?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html#cfn-efs-filesystem-bypasspolicylockoutsafetycheck
       */
      BypassPolicyLockoutSafetyCheck?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html#cfn-efs-filesystem-filesystemprotection
       */
      FileSystemProtection?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html#cfn-efs-filesystem-lifecyclepolicies
       */
      LifecyclePolicies?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html#cfn-efs-filesystem-throughputmode
       */
      ThroughputMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html#cfn-efs-filesystem-filesystemtags
       */
      FileSystemTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html#cfn-efs-filesystem-provisionedthroughputinmibps
       */
      ProvisionedThroughputInMibps?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html#cfn-efs-filesystem-filesystempolicy
       */
      FileSystemPolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html#cfn-efs-filesystem-availabilityzonename
       */
      AvailabilityZoneName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html#cfn-efs-filesystem-replicationconfiguration
       */
      ReplicationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-filesystem.html#cfn-efs-filesystem-backuppolicy
       */
      BackupPolicy?: {};
    }
    
    
    interface FileSystem extends Resource<"AWS::EFS::FileSystem">, FileSystemProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FileSystem(id: string, props: FileSystemProps): Promise<FileSystem>;
  }
  namespace EFS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html
     */
    interface MountTargetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html#cfn-efs-mounttarget-securitygroups
       */
      SecurityGroups: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html#cfn-efs-mounttarget-filesystemid
       */
      FileSystemId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html#cfn-efs-mounttarget-ipaddress
       */
      IpAddress?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-mounttarget.html#cfn-efs-mounttarget-subnetid
       */
      SubnetId: string;
    }
    
    
    interface MountTarget extends Resource<"AWS::EFS::MountTarget">, MountTargetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MountTarget(id: string, props: MountTargetProps): Promise<MountTarget>;
  }
  namespace EKS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-accessentry.html
     */
    interface AccessEntryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-accessentry.html#cfn-eks-accessentry-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-accessentry.html#cfn-eks-accessentry-principalarn
       */
      PrincipalArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-accessentry.html#cfn-eks-accessentry-kubernetesgroups
       */
      KubernetesGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-accessentry.html#cfn-eks-accessentry-username
       */
      Username?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-accessentry.html#cfn-eks-accessentry-clustername
       */
      ClusterName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-accessentry.html#cfn-eks-accessentry-accesspolicies
       */
      AccessPolicies?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-accessentry.html#cfn-eks-accessentry-tags
       */
      Tags?: {}[];
    }
    
    
    interface AccessEntry extends Resource<"AWS::EKS::AccessEntry">, AccessEntryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccessEntry(id: string, props: AccessEntryProps): Promise<AccessEntry>;
  }
  namespace EKS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html
     */
    interface AddonProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-preserveondelete
       */
      PreserveOnDelete?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion
       */
      AddonVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn
       */
      ServiceAccountRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername
       */
      ClusterName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname
       */
      AddonName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-podidentityassociations
       */
      PodIdentityAssociations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts
       */
      ResolveConflicts?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-configurationvalues
       */
      ConfigurationValues?: string;
    }
    
    
    interface Addon extends Resource<"AWS::EKS::Addon">, AddonProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Addon(id: string, props: AddonProps): Promise<Addon>;
  }
  namespace EKS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html
     */
    interface ClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-logging
       */
      Logging?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-computeconfig
       */
      ComputeConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-storageconfig
       */
      StorageConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-force
       */
      Force?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-bootstrapselfmanagedaddons
       */
      BootstrapSelfManagedAddons?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-zonalshiftconfig
       */
      ZonalShiftConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-accessconfig
       */
      AccessConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig
       */
      EncryptionConfig?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig
       */
      KubernetesNetworkConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-upgradepolicy
       */
      UpgradePolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-remotenetworkconfig
       */
      RemoteNetworkConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version
       */
      Version?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-outpostconfig
       */
      OutpostConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig
       */
      ResourcesVpcConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-tags
       */
      Tags?: {}[];
    }
    
    
    interface Cluster extends Resource<"AWS::EKS::Cluster">, ClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Cluster(id: string, props: ClusterProps): Promise<Cluster>;
  }
  namespace EKS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html
     */
    interface FargateProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets
       */
      Subnets?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename
       */
      FargateProfileName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername
       */
      ClusterName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn
       */
      PodExecutionRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors
       */
      Selectors: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags
       */
      Tags?: {}[];
    }
    
    
    interface FargateProfile extends Resource<"AWS::EKS::FargateProfile">, FargateProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FargateProfile(id: string, props: FargateProfileProps): Promise<FargateProfile>;
  }
  namespace EKS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html
     */
    interface IdentityProviderConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-clustername
       */
      ClusterName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-identityproviderconfigname
       */
      IdentityProviderConfigName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-oidc
       */
      Oidc?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-identityproviderconfig.html#cfn-eks-identityproviderconfig-tags
       */
      Tags?: {}[];
    }
    
    
    interface IdentityProviderConfig extends Resource<"AWS::EKS::IdentityProviderConfig">, IdentityProviderConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IdentityProviderConfig(id: string, props: IdentityProviderConfigProps): Promise<IdentityProviderConfig>;
  }
  namespace EKS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html
     */
    interface NodegroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-updateconfig
       */
      UpdateConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig
       */
      ScalingConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels
       */
      Labels?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-taints
       */
      Taints?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-capacitytype
       */
      CapacityType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion
       */
      ReleaseVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderepairconfig
       */
      NodeRepairConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname
       */
      NodegroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole
       */
      NodeRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets
       */
      Subnets: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype
       */
      AmiType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled
       */
      ForceUpdateEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version
       */
      Version?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-launchtemplate
       */
      LaunchTemplate?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess
       */
      RemoteAccess?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize
       */
      DiskSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername
       */
      ClusterName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes
       */
      InstanceTypes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Nodegroup extends Resource<"AWS::EKS::Nodegroup">, NodegroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Nodegroup(id: string, props: NodegroupProps): Promise<Nodegroup>;
  }
  namespace EKS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-podidentityassociation.html
     */
    interface PodIdentityAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-podidentityassociation.html#cfn-eks-podidentityassociation-serviceaccount
       */
      ServiceAccount: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-podidentityassociation.html#cfn-eks-podidentityassociation-clustername
       */
      ClusterName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-podidentityassociation.html#cfn-eks-podidentityassociation-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-podidentityassociation.html#cfn-eks-podidentityassociation-namespace
       */
      Namespace: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-podidentityassociation.html#cfn-eks-podidentityassociation-tags
       */
      Tags?: {}[];
    }
    
    
    interface PodIdentityAssociation extends Resource<"AWS::EKS::PodIdentityAssociation">, PodIdentityAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PodIdentityAssociation(id: string, props: PodIdentityAssociationProps): Promise<PodIdentityAssociation>;
  }
  namespace EMR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html
     */
    interface ClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-additionalinfo
       */
      AdditionalInfo?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-applications
       */
      Applications?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-autoscalingrole
       */
      AutoScalingRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-autoterminationpolicy
       */
      AutoTerminationPolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-bootstrapactions
       */
      BootstrapActions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-configurations
       */
      Configurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-customamiid
       */
      CustomAmiId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-ebsrootvolumeiops
       */
      EbsRootVolumeIops?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-ebsrootvolumesize
       */
      EbsRootVolumeSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-ebsrootvolumethroughput
       */
      EbsRootVolumeThroughput?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-instances
       */
      Instances: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-jobflowrole
       */
      JobFlowRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-kerberosattributes
       */
      KerberosAttributes?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-logencryptionkmskeyid
       */
      LogEncryptionKmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-loguri
       */
      LogUri?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-managedscalingpolicy
       */
      ManagedScalingPolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-osreleaselabel
       */
      OSReleaseLabel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-placementgroupconfigs
       */
      PlacementGroupConfigs?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-releaselabel
       */
      ReleaseLabel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-scaledownbehavior
       */
      ScaleDownBehavior?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-securityconfiguration
       */
      SecurityConfiguration?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-servicerole
       */
      ServiceRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-stepconcurrencylevel
       */
      StepConcurrencyLevel?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-steps
       */
      Steps?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-cluster.html#cfn-elasticmapreduce-cluster-visibletoallusers
       */
      VisibleToAllUsers?: boolean;
    }
    
    
    interface Cluster extends Resource<"AWS::EMR::Cluster">, ClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Cluster(id: string, props: ClusterProps): Promise<Cluster>;
  }
  namespace EMR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html
     */
    interface InstanceFleetConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-clusterid
       */
      ClusterId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancefleettype
       */
      InstanceFleetType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancetypeconfigs
       */
      InstanceTypeConfigs?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-launchspecifications
       */
      LaunchSpecifications?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-resizespecifications
       */
      ResizeSpecifications?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-targetondemandcapacity
       */
      TargetOnDemandCapacity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-targetspotcapacity
       */
      TargetSpotCapacity?: number;
    }
    
    
    interface InstanceFleetConfig extends Resource<"AWS::EMR::InstanceFleetConfig">, InstanceFleetConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InstanceFleetConfig(id: string, props: InstanceFleetConfigProps): Promise<InstanceFleetConfig>;
  }
  namespace EMR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html
     */
    interface InstanceGroupConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-elasticmapreduce-instancegroupconfig-autoscalingpolicy
       */
      AutoScalingPolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-bidprice
       */
      BidPrice?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-configurations
       */
      Configurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-customamiid
       */
      CustomAmiId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-ebsconfiguration
       */
      EbsConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfiginstancecount-
       */
      InstanceCount: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-instancerole
       */
      InstanceRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-instancetype
       */
      InstanceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-jobflowid
       */
      JobFlowId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-market
       */
      Market?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html#cfn-emr-instancegroupconfig-name
       */
      Name?: string;
    }
    
    
    interface InstanceGroupConfig extends Resource<"AWS::EMR::InstanceGroupConfig">, InstanceGroupConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InstanceGroupConfig(id: string, props: InstanceGroupConfigProps): Promise<InstanceGroupConfig>;
  }
  namespace EMR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-securityconfiguration.html
     */
    interface SecurityConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-securityconfiguration.html#cfn-emr-securityconfiguration-securityconfiguration
       */
      SecurityConfiguration: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-securityconfiguration.html#cfn-emr-securityconfiguration-name
       */
      Name?: string;
    }
    
    
    interface SecurityConfiguration extends Resource<"AWS::EMR::SecurityConfiguration">, SecurityConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecurityConfiguration(id: string, props: SecurityConfigurationProps): Promise<SecurityConfiguration>;
  }
  namespace EMR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html
     */
    interface StepProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html#cfn-emr-step-jobflowid
       */
      JobFlowId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html#cfn-emr-step-actiononfailure
       */
      ActionOnFailure: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html#cfn-emr-step-hadoopjarstep
       */
      HadoopJarStep: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-step.html#cfn-emr-step-name
       */
      Name: string;
    }
    
    
    interface Step extends Resource<"AWS::EMR::Step">, StepProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Step(id: string, props: StepProps): Promise<Step>;
  }
  namespace EMR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html
     */
    interface StudioProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-workspacesecuritygroupid
       */
      WorkspaceSecurityGroupId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-encryptionkeyarn
       */
      EncryptionKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-defaults3location
       */
      DefaultS3Location: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-idpauthurl
       */
      IdpAuthUrl?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-trustedidentitypropagationenabled
       */
      TrustedIdentityPropagationEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-idcuserassignment
       */
      IdcUserAssignment?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-servicerole
       */
      ServiceRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-enginesecuritygroupid
       */
      EngineSecurityGroupId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-userrole
       */
      UserRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-idprelaystateparametername
       */
      IdpRelayStateParameterName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-authmode
       */
      AuthMode: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studio.html#cfn-emr-studio-idcinstancearn
       */
      IdcInstanceArn?: string;
    }
    
    
    interface Studio extends Resource<"AWS::EMR::Studio">, StudioProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Studio(id: string, props: StudioProps): Promise<Studio>;
  }
  namespace EMR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html
     */
    interface StudioSessionMappingProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html#cfn-emr-studiosessionmapping-identitytype
       */
      IdentityType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html#cfn-emr-studiosessionmapping-sessionpolicyarn
       */
      SessionPolicyArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html#cfn-emr-studiosessionmapping-studioid
       */
      StudioId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-studiosessionmapping.html#cfn-emr-studiosessionmapping-identityname
       */
      IdentityName: string;
    }
    
    
    interface StudioSessionMapping extends Resource<"AWS::EMR::StudioSessionMapping">, StudioSessionMappingProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StudioSessionMapping(id: string, props: StudioSessionMappingProps): Promise<StudioSessionMapping>;
  }
  namespace EMR {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-walworkspace.html
     */
    interface WALWorkspaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-walworkspace.html#cfn-emr-walworkspace-walworkspacename
       */
      WALWorkspaceName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-walworkspace.html#cfn-emr-walworkspace-tags
       */
      Tags?: {}[];
    }
    
    
    interface WALWorkspace extends Resource<"AWS::EMR::WALWorkspace">, WALWorkspaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WALWorkspace(id: string, props: WALWorkspaceProps): Promise<WALWorkspace>;
  }
  namespace EMRContainers {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html
     */
    interface VirtualClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html#cfn-emrcontainers-virtualcluster-securityconfigurationid
       */
      SecurityConfigurationId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html#cfn-emrcontainers-virtualcluster-containerprovider
       */
      ContainerProvider: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html#cfn-emrcontainers-virtualcluster-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrcontainers-virtualcluster.html#cfn-emrcontainers-virtualcluster-name
       */
      Name: string;
    }
    
    
    interface VirtualCluster extends Resource<"AWS::EMRContainers::VirtualCluster">, VirtualClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VirtualCluster(id: string, props: VirtualClusterProps): Promise<VirtualCluster>;
  }
  namespace EMRServerless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-autostartconfiguration
       */
      AutoStartConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-architecture
       */
      Architecture?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-workertypespecifications
       */
      WorkerTypeSpecifications?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-monitoringconfiguration
       */
      MonitoringConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-maximumcapacity
       */
      MaximumCapacity?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-autostopconfiguration
       */
      AutoStopConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-runtimeconfiguration
       */
      RuntimeConfiguration?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-schedulerconfiguration
       */
      SchedulerConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-initialcapacity
       */
      InitialCapacity?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-interactiveconfiguration
       */
      InteractiveConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-imageconfiguration
       */
      ImageConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-networkconfiguration
       */
      NetworkConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-releaselabel
       */
      ReleaseLabel: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-tags
       */
      Tags?: {}[];
    }
    
    
    interface Application extends Resource<"AWS::EMRServerless::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace ElastiCache {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html
     */
    interface CacheClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-azmode
       */
      AZMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-autominorversionupgrade
       */
      AutoMinorVersionUpgrade?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cachenodetype
       */
      CacheNodeType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cacheparametergroupname
       */
      CacheParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cachesecuritygroupnames
       */
      CacheSecurityGroupNames?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cachesubnetgroupname
       */
      CacheSubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-clustername
       */
      ClusterName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-engine
       */
      Engine: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-ipdiscovery
       */
      IpDiscovery?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-logdeliveryconfigurations
       */
      LogDeliveryConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-networktype
       */
      NetworkType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-notificationtopicarn
       */
      NotificationTopicArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-numcachenodes
       */
      NumCacheNodes: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-port
       */
      Port?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-preferredavailabilityzone
       */
      PreferredAvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-preferredavailabilityzones
       */
      PreferredAvailabilityZones?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotarns
       */
      SnapshotArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotname
       */
      SnapshotName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotretentionlimit
       */
      SnapshotRetentionLimit?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotwindow
       */
      SnapshotWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-transitencryptionenabled
       */
      TransitEncryptionEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-vpcsecuritygroupids
       */
      VpcSecurityGroupIds?: string[];
    }
    
    
    interface CacheCluster extends Resource<"AWS::ElastiCache::CacheCluster">, CacheClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CacheCluster(id: string, props: CacheClusterProps): Promise<CacheCluster>;
  }
  namespace ElastiCache {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html
     */
    interface GlobalReplicationGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-globalreplicationgroupidsuffix
       */
      GlobalReplicationGroupIdSuffix?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-cachenodetype
       */
      CacheNodeType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-globalreplicationgroupdescription
       */
      GlobalReplicationGroupDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-regionalconfigurations
       */
      RegionalConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-cacheparametergroupname
       */
      CacheParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-engine
       */
      Engine?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-members
       */
      Members: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-automaticfailoverenabled
       */
      AutomaticFailoverEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-globalnodegroupcount
       */
      GlobalNodeGroupCount?: number;
    }
    
    
    interface GlobalReplicationGroup extends Resource<"AWS::ElastiCache::GlobalReplicationGroup">, GlobalReplicationGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GlobalReplicationGroup(id: string, props: GlobalReplicationGroupProps): Promise<GlobalReplicationGroup>;
  }
  namespace ElastiCache {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-parametergroup.html
     */
    interface ParameterGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-parametergroup.html#cfn-elasticache-parametergroup-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-parametergroup.html#cfn-elasticache-parametergroup-properties
       */
      Properties?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-parametergroup.html#cfn-elasticache-parametergroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-parametergroup.html#cfn-elasticache-parametergroup-cacheparametergroupfamily
       */
      CacheParameterGroupFamily: string;
    }
    
    
    interface ParameterGroup extends Resource<"AWS::ElastiCache::ParameterGroup">, ParameterGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ParameterGroup(id: string, props: ParameterGroupProps): Promise<ParameterGroup>;
  }
  namespace ElastiCache {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html
     */
    interface ReplicationGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-atrestencryptionenabled
       */
      AtRestEncryptionEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-authtoken
       */
      AuthToken?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-autominorversionupgrade
       */
      AutoMinorVersionUpgrade?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-automaticfailoverenabled
       */
      AutomaticFailoverEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-cachenodetype
       */
      CacheNodeType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-cacheparametergroupname
       */
      CacheParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-cachesecuritygroupnames
       */
      CacheSecurityGroupNames?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-cachesubnetgroupname
       */
      CacheSubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-clustermode
       */
      ClusterMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-datatieringenabled
       */
      DataTieringEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-engine
       */
      Engine?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-globalreplicationgroupid
       */
      GlobalReplicationGroupId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-ipdiscovery
       */
      IpDiscovery?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-logdeliveryconfigurations
       */
      LogDeliveryConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-multiazenabled
       */
      MultiAZEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-networktype
       */
      NetworkType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-nodegroupconfiguration
       */
      NodeGroupConfiguration?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-notificationtopicarn
       */
      NotificationTopicArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-numcacheclusters
       */
      NumCacheClusters?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-numnodegroups
       */
      NumNodeGroups?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-port
       */
      Port?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-preferredcacheclusterazs
       */
      PreferredCacheClusterAZs?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-primaryclusterid
       */
      PrimaryClusterId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-replicaspernodegroup
       */
      ReplicasPerNodeGroup?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-replicationgroupdescription
       */
      ReplicationGroupDescription: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-replicationgroupid
       */
      ReplicationGroupId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshotarns
       */
      SnapshotArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshotname
       */
      SnapshotName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshotretentionlimit
       */
      SnapshotRetentionLimit?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshotwindow
       */
      SnapshotWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshottingclusterid
       */
      SnapshottingClusterId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-transitencryptionenabled
       */
      TransitEncryptionEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-transitencryptionmode
       */
      TransitEncryptionMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-usergroupids
       */
      UserGroupIds?: string[];
    }
    
    
    interface ReplicationGroup extends Resource<"AWS::ElastiCache::ReplicationGroup">, ReplicationGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReplicationGroup(id: string, props: ReplicationGroupProps): Promise<ReplicationGroup>;
  }
  namespace ElastiCache {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group.html
     */
    interface SecurityGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group.html#cfn-elasticache-securitygroup-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group.html#cfn-elasticache-securitygroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface SecurityGroup extends Resource<"AWS::ElastiCache::SecurityGroup">, SecurityGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecurityGroup(id: string, props: SecurityGroupProps): Promise<SecurityGroup>;
  }
  namespace ElastiCache {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html
     */
    interface SecurityGroupIngressProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html#cfn-elasticache-securitygroupingress-cachesecuritygroupname
       */
      CacheSecurityGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html#cfn-elasticache-securitygroupingress-ec2securitygroupname
       */
      EC2SecurityGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html#cfn-elasticache-securitygroupingress-ec2securitygroupownerid
       */
      EC2SecurityGroupOwnerId?: string;
    }
    
    
    interface SecurityGroupIngress extends Resource<"AWS::ElastiCache::SecurityGroupIngress">, SecurityGroupIngressProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecurityGroupIngress(id: string, props: SecurityGroupIngressProps): Promise<SecurityGroupIngress>;
  }
  namespace ElastiCache {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html
     */
    interface ServerlessCacheProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-finalsnapshotname
       */
      FinalSnapshotName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-usergroupid
       */
      UserGroupId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-cacheusagelimits
       */
      CacheUsageLimits?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-snapshotarnstorestore
       */
      SnapshotArnsToRestore?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-subnetids
       */
      SubnetIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-dailysnapshottime
       */
      DailySnapshotTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-readerendpoint
       */
      ReaderEndpoint?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-snapshotretentionlimit
       */
      SnapshotRetentionLimit?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-endpoint
       */
      Endpoint?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-serverlesscachename
       */
      ServerlessCacheName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-majorengineversion
       */
      MajorEngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-engine
       */
      Engine: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-serverlesscache.html#cfn-elasticache-serverlesscache-tags
       */
      Tags?: {}[];
    }
    
    
    interface ServerlessCache extends Resource<"AWS::ElastiCache::ServerlessCache">, ServerlessCacheProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ServerlessCache(id: string, props: ServerlessCacheProps): Promise<ServerlessCache>;
  }
  namespace ElastiCache {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-subnetgroup.html
     */
    interface SubnetGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-subnetgroup.html#cfn-elasticache-subnetgroup-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-subnetgroup.html#cfn-elasticache-subnetgroup-cachesubnetgroupname
       */
      CacheSubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-subnetgroup.html#cfn-elasticache-subnetgroup-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-subnetgroup.html#cfn-elasticache-subnetgroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface SubnetGroup extends Resource<"AWS::ElastiCache::SubnetGroup">, SubnetGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SubnetGroup(id: string, props: SubnetGroupProps): Promise<SubnetGroup>;
  }
  namespace ElastiCache {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html
     */
    interface UserProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-authenticationmode
       */
      AuthenticationMode?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-username
       */
      UserName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-nopasswordrequired
       */
      NoPasswordRequired?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-accessstring
       */
      AccessString?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-userid
       */
      UserId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-passwords
       */
      Passwords?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-engine
       */
      Engine: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-tags
       */
      Tags?: {}[];
    }
    
    
    interface User extends Resource<"AWS::ElastiCache::User">, UserProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function User(id: string, props: UserProps): Promise<User>;
  }
  namespace ElastiCache {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html
     */
    interface UserGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html#cfn-elasticache-usergroup-usergroupid
       */
      UserGroupId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html#cfn-elasticache-usergroup-engine
       */
      Engine: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html#cfn-elasticache-usergroup-userids
       */
      UserIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html#cfn-elasticache-usergroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface UserGroup extends Resource<"AWS::ElastiCache::UserGroup">, UserGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserGroup(id: string, props: UserGroupProps): Promise<UserGroup>;
  }
  namespace ElasticBeanstalk {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-application.html#cfn-elasticbeanstalk-application-applicationname
       */
      ApplicationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-application.html#cfn-elasticbeanstalk-application-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-application.html#cfn-elasticbeanstalk-application-resourcelifecycleconfig
       */
      ResourceLifecycleConfig?: {};
    }
    
    
    interface Application extends Resource<"AWS::ElasticBeanstalk::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace ElasticBeanstalk {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-applicationversion.html
     */
    interface ApplicationVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-applicationversion.html#cfn-elasticbeanstalk-applicationversion-applicationname
       */
      ApplicationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-applicationversion.html#cfn-elasticbeanstalk-applicationversion-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-applicationversion.html#cfn-elasticbeanstalk-applicationversion-sourcebundle
       */
      SourceBundle: {};
    }
    
    
    interface ApplicationVersion extends Resource<"AWS::ElasticBeanstalk::ApplicationVersion">, ApplicationVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApplicationVersion(id: string, props: ApplicationVersionProps): Promise<ApplicationVersion>;
  }
  namespace ElasticBeanstalk {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-configurationtemplate.html
     */
    interface ConfigurationTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-configurationtemplate.html#cfn-elasticbeanstalk-configurationtemplate-environmentid
       */
      EnvironmentId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-configurationtemplate.html#cfn-elasticbeanstalk-configurationtemplate-platformarn
       */
      PlatformArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-configurationtemplate.html#cfn-elasticbeanstalk-configurationtemplate-applicationname
       */
      ApplicationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-configurationtemplate.html#cfn-elasticbeanstalk-configurationtemplate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-configurationtemplate.html#cfn-elasticbeanstalk-configurationtemplate-optionsettings
       */
      OptionSettings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-configurationtemplate.html#cfn-elasticbeanstalk-configurationtemplate-sourceconfiguration
       */
      SourceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-configurationtemplate.html#cfn-elasticbeanstalk-configurationtemplate-solutionstackname
       */
      SolutionStackName?: string;
    }
    
    
    interface ConfigurationTemplate extends Resource<"AWS::ElasticBeanstalk::ConfigurationTemplate">, ConfigurationTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConfigurationTemplate(id: string, props: ConfigurationTemplateProps): Promise<ConfigurationTemplate>;
  }
  namespace ElasticBeanstalk {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-environment.html
     */
    interface EnvironmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-environment.html#cfn-elasticbeanstalk-environment-platformarn
       */
      PlatformArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-environment.html#cfn-elasticbeanstalk-environment-applicationname
       */
      ApplicationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-environment.html#cfn-elasticbeanstalk-environment-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-environment.html#cfn-elasticbeanstalk-environment-environmentname
       */
      EnvironmentName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-environment.html#cfn-elasticbeanstalk-environment-operationsrole
       */
      OperationsRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-environment.html#cfn-elasticbeanstalk-environment-tier
       */
      Tier?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-environment.html#cfn-elasticbeanstalk-environment-optionsettings
       */
      OptionSettings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-environment.html#cfn-elasticbeanstalk-environment-versionlabel
       */
      VersionLabel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-environment.html#cfn-elasticbeanstalk-environment-templatename
       */
      TemplateName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-environment.html#cfn-elasticbeanstalk-environment-solutionstackname
       */
      SolutionStackName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-environment.html#cfn-elasticbeanstalk-environment-cnameprefix
       */
      CNAMEPrefix?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-environment.html#cfn-elasticbeanstalk-environment-tags
       */
      Tags?: {}[];
    }
    
    
    interface Environment extends Resource<"AWS::ElasticBeanstalk::Environment">, EnvironmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Environment(id: string, props: EnvironmentProps): Promise<Environment>;
  }
  namespace ElasticLoadBalancing {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html
     */
    interface LoadBalancerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-accessloggingpolicy
       */
      AccessLoggingPolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-appcookiestickinesspolicy
       */
      AppCookieStickinessPolicy?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-availabilityzones
       */
      AvailabilityZones?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-connectiondrainingpolicy
       */
      ConnectionDrainingPolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-connectionsettings
       */
      ConnectionSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-crosszone
       */
      CrossZone?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-healthcheck
       */
      HealthCheck?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-instances
       */
      Instances?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-lbcookiestickinesspolicy
       */
      LBCookieStickinessPolicy?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-listeners
       */
      Listeners: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-elbname
       */
      LoadBalancerName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-policies
       */
      Policies?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-scheme
       */
      Scheme?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-securitygroups
       */
      SecurityGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-subnets
       */
      Subnets?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-elasticloadbalancing-loadbalancer-tags
       */
      Tags?: {}[];
    }
    
    
    interface LoadBalancer extends Resource<"AWS::ElasticLoadBalancing::LoadBalancer">, LoadBalancerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LoadBalancer(id: string, props: LoadBalancerProps): Promise<LoadBalancer>;
  }
  namespace ElasticLoadBalancingV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html
     */
    interface ListenerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-mutualauthentication
       */
      MutualAuthentication?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-listenerattributes
       */
      ListenerAttributes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-alpnpolicy
       */
      AlpnPolicy?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-sslpolicy
       */
      SslPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-loadbalancerarn
       */
      LoadBalancerArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-defaultactions
       */
      DefaultActions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-port
       */
      Port?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-certificates
       */
      Certificates?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html#cfn-elasticloadbalancingv2-listener-protocol
       */
      Protocol?: string;
    }
    
    
    interface Listener extends Resource<"AWS::ElasticLoadBalancingV2::Listener">, ListenerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Listener(id: string, props: ListenerProps): Promise<Listener>;
  }
  namespace ElasticLoadBalancingV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html
     */
    interface ListenerCertificateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html#cfn-elasticloadbalancingv2-listenercertificate-certificates
       */
      Certificates: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html#cfn-elasticloadbalancingv2-listenercertificate-listenerarn
       */
      ListenerArn: string;
    }
    
    
    interface ListenerCertificate extends Resource<"AWS::ElasticLoadBalancingV2::ListenerCertificate">, ListenerCertificateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ListenerCertificate(id: string, props: ListenerCertificateProps): Promise<ListenerCertificate>;
  }
  namespace ElasticLoadBalancingV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html
     */
    interface ListenerRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-listenerarn
       */
      ListenerArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-actions
       */
      Actions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-priority
       */
      Priority: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-conditions
       */
      Conditions: {}[];
    }
    
    
    interface ListenerRule extends Resource<"AWS::ElasticLoadBalancingV2::ListenerRule">, ListenerRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ListenerRule(id: string, props: ListenerRuleProps): Promise<ListenerRule>;
  }
  namespace ElasticLoadBalancingV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html
     */
    interface LoadBalancerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-ipaddresstype
       */
      IpAddressType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-securitygroups
       */
      SecurityGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-loadbalancerattributes
       */
      LoadBalancerAttributes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-scheme
       */
      Scheme?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-subnets
       */
      Subnets?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-minimumloadbalancercapacity
       */
      MinimumLoadBalancerCapacity?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-enableprefixforipv6sourcenat
       */
      EnablePrefixForIpv6SourceNat?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-ipv4ipampoolid
       */
      Ipv4IpamPoolId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-enforcesecuritygroupinboundrulesonprivatelinktraffic
       */
      EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmappings
       */
      SubnetMappings?: {}[];
    }
    
    
    interface LoadBalancer extends Resource<"AWS::ElasticLoadBalancingV2::LoadBalancer">, LoadBalancerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LoadBalancer(id: string, props: LoadBalancerProps): Promise<LoadBalancer>;
  }
  namespace ElasticLoadBalancingV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html
     */
    interface TargetGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-ipaddresstype
       */
      IpAddressType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckintervalseconds
       */
      HealthCheckIntervalSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-matcher
       */
      Matcher?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckpath
       */
      HealthCheckPath?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-port
       */
      Port?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targets
       */
      Targets?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckenabled
       */
      HealthCheckEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-protocolversion
       */
      ProtocolVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-unhealthythresholdcount
       */
      UnhealthyThresholdCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthchecktimeoutseconds
       */
      HealthCheckTimeoutSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-vpcid
       */
      VpcId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthythresholdcount
       */
      HealthyThresholdCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckprotocol
       */
      HealthCheckProtocol?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targetgroupattributes
       */
      TargetGroupAttributes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targettype
       */
      TargetType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckport
       */
      HealthCheckPort?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-protocol
       */
      Protocol?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface TargetGroup extends Resource<"AWS::ElasticLoadBalancingV2::TargetGroup">, TargetGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TargetGroup(id: string, props: TargetGroupProps): Promise<TargetGroup>;
  }
  namespace ElasticLoadBalancingV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststore.html
     */
    interface TrustStoreProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststore.html#cfn-elasticloadbalancingv2-truststore-cacertificatesbundles3bucket
       */
      CaCertificatesBundleS3Bucket?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststore.html#cfn-elasticloadbalancingv2-truststore-cacertificatesbundles3objectversion
       */
      CaCertificatesBundleS3ObjectVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststore.html#cfn-elasticloadbalancingv2-truststore-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststore.html#cfn-elasticloadbalancingv2-truststore-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststore.html#cfn-elasticloadbalancingv2-truststore-cacertificatesbundles3key
       */
      CaCertificatesBundleS3Key?: string;
    }
    
    
    interface TrustStore extends Resource<"AWS::ElasticLoadBalancingV2::TrustStore">, TrustStoreProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TrustStore(id: string, props: TrustStoreProps): Promise<TrustStore>;
  }
  namespace ElasticLoadBalancingV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststorerevocation.html
     */
    interface TrustStoreRevocationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststorerevocation.html#cfn-elasticloadbalancingv2-truststorerevocation-revocationcontents
       */
      RevocationContents?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststorerevocation.html#cfn-elasticloadbalancingv2-truststorerevocation-truststorearn
       */
      TrustStoreArn?: string;
    }
    
    
    interface TrustStoreRevocation extends Resource<"AWS::ElasticLoadBalancingV2::TrustStoreRevocation">, TrustStoreRevocationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TrustStoreRevocation(id: string, props: TrustStoreRevocationProps): Promise<TrustStoreRevocation>;
  }
  namespace Elasticsearch {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html
     */
    interface DomainProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-accesspolicies
       */
      AccessPolicies?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-advancedoptions
       */
      AdvancedOptions?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-advancedsecurityoptions
       */
      AdvancedSecurityOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-cognitooptions
       */
      CognitoOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-domainendpointoptions
       */
      DomainEndpointOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-domainname
       */
      DomainName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-ebsoptions
       */
      EBSOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-elasticsearchclusterconfig
       */
      ElasticsearchClusterConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-elasticsearchversion
       */
      ElasticsearchVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-encryptionatrestoptions
       */
      EncryptionAtRestOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-logpublishingoptions
       */
      LogPublishingOptions?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-nodetonodeencryptionoptions
       */
      NodeToNodeEncryptionOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-snapshotoptions
       */
      SnapshotOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html#cfn-elasticsearch-domain-vpcoptions
       */
      VPCOptions?: {};
    }
    
    
    interface Domain extends Resource<"AWS::Elasticsearch::Domain">, DomainProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Domain(id: string, props: DomainProps): Promise<Domain>;
  }
  namespace EntityResolution {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html
     */
    interface IdMappingWorkflowProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html#cfn-entityresolution-idmappingworkflow-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html#cfn-entityresolution-idmappingworkflow-inputsourceconfig
       */
      InputSourceConfig: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html#cfn-entityresolution-idmappingworkflow-idmappingtechniques
       */
      IdMappingTechniques: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html#cfn-entityresolution-idmappingworkflow-workflowname
       */
      WorkflowName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html#cfn-entityresolution-idmappingworkflow-outputsourceconfig
       */
      OutputSourceConfig?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html#cfn-entityresolution-idmappingworkflow-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html#cfn-entityresolution-idmappingworkflow-tags
       */
      Tags?: {}[];
    }
    
    
    interface IdMappingWorkflow extends Resource<"AWS::EntityResolution::IdMappingWorkflow">, IdMappingWorkflowProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IdMappingWorkflow(id: string, props: IdMappingWorkflowProps): Promise<IdMappingWorkflow>;
  }
  namespace EntityResolution {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html
     */
    interface IdNamespaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html#cfn-entityresolution-idnamespace-idnamespacename
       */
      IdNamespaceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html#cfn-entityresolution-idnamespace-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html#cfn-entityresolution-idnamespace-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html#cfn-entityresolution-idnamespace-inputsourceconfig
       */
      InputSourceConfig?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html#cfn-entityresolution-idnamespace-idmappingworkflowproperties
       */
      IdMappingWorkflowProperties?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html#cfn-entityresolution-idnamespace-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html#cfn-entityresolution-idnamespace-tags
       */
      Tags?: {}[];
    }
    
    
    interface IdNamespace extends Resource<"AWS::EntityResolution::IdNamespace">, IdNamespaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IdNamespace(id: string, props: IdNamespaceProps): Promise<IdNamespace>;
  }
  namespace EntityResolution {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-matchingworkflow.html
     */
    interface MatchingWorkflowProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-matchingworkflow.html#cfn-entityresolution-matchingworkflow-resolutiontechniques
       */
      ResolutionTechniques: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-matchingworkflow.html#cfn-entityresolution-matchingworkflow-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-matchingworkflow.html#cfn-entityresolution-matchingworkflow-inputsourceconfig
       */
      InputSourceConfig: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-matchingworkflow.html#cfn-entityresolution-matchingworkflow-workflowname
       */
      WorkflowName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-matchingworkflow.html#cfn-entityresolution-matchingworkflow-incrementalrunconfig
       */
      IncrementalRunConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-matchingworkflow.html#cfn-entityresolution-matchingworkflow-outputsourceconfig
       */
      OutputSourceConfig: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-matchingworkflow.html#cfn-entityresolution-matchingworkflow-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-matchingworkflow.html#cfn-entityresolution-matchingworkflow-tags
       */
      Tags?: {}[];
    }
    
    
    interface MatchingWorkflow extends Resource<"AWS::EntityResolution::MatchingWorkflow">, MatchingWorkflowProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MatchingWorkflow(id: string, props: MatchingWorkflowProps): Promise<MatchingWorkflow>;
  }
  namespace EntityResolution {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-policystatement.html
     */
    interface PolicyStatementProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-policystatement.html#cfn-entityresolution-policystatement-condition
       */
      Condition?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-policystatement.html#cfn-entityresolution-policystatement-action
       */
      Action?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-policystatement.html#cfn-entityresolution-policystatement-statementid
       */
      StatementId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-policystatement.html#cfn-entityresolution-policystatement-effect
       */
      Effect?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-policystatement.html#cfn-entityresolution-policystatement-arn
       */
      Arn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-policystatement.html#cfn-entityresolution-policystatement-principal
       */
      Principal?: string[];
    }
    
    
    interface PolicyStatement extends Resource<"AWS::EntityResolution::PolicyStatement">, PolicyStatementProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PolicyStatement(id: string, props: PolicyStatementProps): Promise<PolicyStatement>;
  }
  namespace EntityResolution {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-schemamapping.html
     */
    interface SchemaMappingProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-schemamapping.html#cfn-entityresolution-schemamapping-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-schemamapping.html#cfn-entityresolution-schemamapping-mappedinputfields
       */
      MappedInputFields: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-schemamapping.html#cfn-entityresolution-schemamapping-schemaname
       */
      SchemaName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-schemamapping.html#cfn-entityresolution-schemamapping-tags
       */
      Tags?: {}[];
    }
    
    
    interface SchemaMapping extends Resource<"AWS::EntityResolution::SchemaMapping">, SchemaMappingProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SchemaMapping(id: string, props: SchemaMappingProps): Promise<SchemaMapping>;
  }
  namespace EventSchemas {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html
     */
    interface DiscovererProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html#cfn-eventschemas-discoverer-crossaccount
       */
      CrossAccount?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html#cfn-eventschemas-discoverer-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html#cfn-eventschemas-discoverer-sourcearn
       */
      SourceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html#cfn-eventschemas-discoverer-tags
       */
      Tags?: {}[];
    }
    
    
    interface Discoverer extends Resource<"AWS::EventSchemas::Discoverer">, DiscovererProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Discoverer(id: string, props: DiscovererProps): Promise<Discoverer>;
  }
  namespace EventSchemas {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html
     */
    interface RegistryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html#cfn-eventschemas-registry-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html#cfn-eventschemas-registry-registryname
       */
      RegistryName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registry.html#cfn-eventschemas-registry-tags
       */
      Tags?: {}[];
    }
    
    
    interface Registry extends Resource<"AWS::EventSchemas::Registry">, RegistryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Registry(id: string, props: RegistryProps): Promise<Registry>;
  }
  namespace EventSchemas {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html
     */
    interface RegistryPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html#cfn-eventschemas-registrypolicy-policy
       */
      Policy: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html#cfn-eventschemas-registrypolicy-registryname
       */
      RegistryName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-registrypolicy.html#cfn-eventschemas-registrypolicy-revisionid
       */
      RevisionId?: string;
    }
    
    
    interface RegistryPolicy extends Resource<"AWS::EventSchemas::RegistryPolicy">, RegistryPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RegistryPolicy(id: string, props: RegistryPolicyProps): Promise<RegistryPolicy>;
  }
  namespace EventSchemas {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html
     */
    interface SchemaProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-content
       */
      Content: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-registryname
       */
      RegistryName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-schemaname
       */
      SchemaName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-schema.html#cfn-eventschemas-schema-tags
       */
      Tags?: {}[];
    }
    
    
    interface Schema extends Resource<"AWS::EventSchemas::Schema">, SchemaProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Schema(id: string, props: SchemaProps): Promise<Schema>;
  }
  namespace Events {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-apidestination.html
     */
    interface ApiDestinationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-apidestination.html#cfn-events-apidestination-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-apidestination.html#cfn-events-apidestination-connectionarn
       */
      ConnectionArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-apidestination.html#cfn-events-apidestination-invocationendpoint
       */
      InvocationEndpoint: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-apidestination.html#cfn-events-apidestination-httpmethod
       */
      HttpMethod: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-apidestination.html#cfn-events-apidestination-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-apidestination.html#cfn-events-apidestination-invocationratelimitpersecond
       */
      InvocationRateLimitPerSecond?: number;
    }
    
    
    interface ApiDestination extends Resource<"AWS::Events::ApiDestination">, ApiDestinationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApiDestination(id: string, props: ApiDestinationProps): Promise<ApiDestination>;
  }
  namespace Events {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-archive.html
     */
    interface ArchiveProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-archive.html#cfn-events-archive-eventpattern
       */
      EventPattern?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-archive.html#cfn-events-archive-kmskeyidentifier
       */
      KmsKeyIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-archive.html#cfn-events-archive-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-archive.html#cfn-events-archive-sourcearn
       */
      SourceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-archive.html#cfn-events-archive-archivename
       */
      ArchiveName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-archive.html#cfn-events-archive-retentiondays
       */
      RetentionDays?: number;
    }
    
    
    interface Archive extends Resource<"AWS::Events::Archive">, ArchiveProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Archive(id: string, props: ArchiveProps): Promise<Archive>;
  }
  namespace Events {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-connection.html
     */
    interface ConnectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-connection.html#cfn-events-connection-authparameters
       */
      AuthParameters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-connection.html#cfn-events-connection-kmskeyidentifier
       */
      KmsKeyIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-connection.html#cfn-events-connection-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-connection.html#cfn-events-connection-invocationconnectivityparameters
       */
      InvocationConnectivityParameters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-connection.html#cfn-events-connection-authorizationtype
       */
      AuthorizationType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-connection.html#cfn-events-connection-name
       */
      Name?: string;
    }
    
    
    interface Connection extends Resource<"AWS::Events::Connection">, ConnectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Connection(id: string, props: ConnectionProps): Promise<Connection>;
  }
  namespace Events {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html
     */
    interface EndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html#cfn-events-endpoint-eventbuses
       */
      EventBuses: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html#cfn-events-endpoint-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html#cfn-events-endpoint-replicationconfig
       */
      ReplicationConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html#cfn-events-endpoint-routingconfig
       */
      RoutingConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html#cfn-events-endpoint-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html#cfn-events-endpoint-name
       */
      Name?: string;
    }
    
    
    interface Endpoint extends Resource<"AWS::Events::Endpoint">, EndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Endpoint(id: string, props: EndpointProps): Promise<Endpoint>;
  }
  namespace Events {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html
     */
    interface EventBusProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html#cfn-events-eventbus-policy
       */
      Policy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html#cfn-events-eventbus-kmskeyidentifier
       */
      KmsKeyIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html#cfn-events-eventbus-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html#cfn-events-eventbus-eventsourcename
       */
      EventSourceName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html#cfn-events-eventbus-deadletterconfig
       */
      DeadLetterConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html#cfn-events-eventbus-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html#cfn-events-eventbus-name
       */
      Name: string;
    }
    
    
    interface EventBus extends Resource<"AWS::Events::EventBus">, EventBusProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventBus(id: string, props: EventBusProps): Promise<EventBus>;
  }
  namespace Events {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html
     */
    interface EventBusPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-eventbusname
       */
      EventBusName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-condition
       */
      Condition?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-action
       */
      Action?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-statementid
       */
      StatementId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-statement
       */
      Statement?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-principal
       */
      Principal?: string;
    }
    
    
    interface EventBusPolicy extends Resource<"AWS::Events::EventBusPolicy">, EventBusPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventBusPolicy(id: string, props: EventBusPolicyProps): Promise<EventBusPolicy>;
  }
  namespace Events {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html
     */
    interface RuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-eventbusname
       */
      EventBusName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-eventpattern
       */
      EventPattern?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-scheduleexpression
       */
      ScheduleExpression?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-state
       */
      State?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-targets
       */
      Targets?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-name
       */
      Name?: string;
    }
    
    
    interface Rule extends Resource<"AWS::Events::Rule">, RuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Rule(id: string, props: RuleProps): Promise<Rule>;
  }
  namespace Evidently {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html
     */
    interface ExperimentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-project
       */
      Project: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-runningstatus
       */
      RunningStatus?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-metricgoals
       */
      MetricGoals: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-onlineabconfig
       */
      OnlineAbConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-removesegment
       */
      RemoveSegment?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-randomizationsalt
       */
      RandomizationSalt?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-treatments
       */
      Treatments: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-samplingrate
       */
      SamplingRate?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-segment
       */
      Segment?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-name
       */
      Name: string;
    }
    
    
    interface Experiment extends Resource<"AWS::Evidently::Experiment">, ExperimentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Experiment(id: string, props: ExperimentProps): Promise<Experiment>;
  }
  namespace Evidently {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html
     */
    interface FeatureProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-project
       */
      Project: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-evaluationstrategy
       */
      EvaluationStrategy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-defaultvariation
       */
      DefaultVariation?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-entityoverrides
       */
      EntityOverrides?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-variations
       */
      Variations: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-name
       */
      Name: string;
    }
    
    
    interface Feature extends Resource<"AWS::Evidently::Feature">, FeatureProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Feature(id: string, props: FeatureProps): Promise<Feature>;
  }
  namespace Evidently {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-launch.html
     */
    interface LaunchProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-launch.html#cfn-evidently-launch-project
       */
      Project: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-launch.html#cfn-evidently-launch-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-launch.html#cfn-evidently-launch-executionstatus
       */
      ExecutionStatus?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-launch.html#cfn-evidently-launch-groups
       */
      Groups: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-launch.html#cfn-evidently-launch-randomizationsalt
       */
      RandomizationSalt?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-launch.html#cfn-evidently-launch-metricmonitors
       */
      MetricMonitors?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-launch.html#cfn-evidently-launch-scheduledsplitsconfig
       */
      ScheduledSplitsConfig: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-launch.html#cfn-evidently-launch-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-launch.html#cfn-evidently-launch-name
       */
      Name: string;
    }
    
    
    interface Launch extends Resource<"AWS::Evidently::Launch">, LaunchProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Launch(id: string, props: LaunchProps): Promise<Launch>;
  }
  namespace Evidently {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-project.html
     */
    interface ProjectProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-project.html#cfn-evidently-project-datadelivery
       */
      DataDelivery?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-project.html#cfn-evidently-project-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-project.html#cfn-evidently-project-appconfigresource
       */
      AppConfigResource?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-project.html#cfn-evidently-project-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-project.html#cfn-evidently-project-name
       */
      Name: string;
    }
    
    
    interface Project extends Resource<"AWS::Evidently::Project">, ProjectProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Project(id: string, props: ProjectProps): Promise<Project>;
  }
  namespace Evidently {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-segment.html
     */
    interface SegmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-segment.html#cfn-evidently-segment-pattern
       */
      Pattern?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-segment.html#cfn-evidently-segment-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-segment.html#cfn-evidently-segment-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-segment.html#cfn-evidently-segment-name
       */
      Name: string;
    }
    
    
    interface Segment extends Resource<"AWS::Evidently::Segment">, SegmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Segment(id: string, props: SegmentProps): Promise<Segment>;
  }
  namespace FIS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html
     */
    interface ExperimentTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-experimentreportconfiguration
       */
      ExperimentReportConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-actions
       */
      Actions?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-experimentoptions
       */
      ExperimentOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-stopconditions
       */
      StopConditions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-targets
       */
      Targets: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-logconfiguration
       */
      LogConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-experimenttemplate.html#cfn-fis-experimenttemplate-tags
       */
      Tags: {
        [k: string]: unknown;
      };
    }
    
    
    interface ExperimentTemplate extends Resource<"AWS::FIS::ExperimentTemplate">, ExperimentTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ExperimentTemplate(id: string, props: ExperimentTemplateProps): Promise<ExperimentTemplate>;
  }
  namespace FIS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-targetaccountconfiguration.html
     */
    interface TargetAccountConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-targetaccountconfiguration.html#cfn-fis-targetaccountconfiguration-accountid
       */
      AccountId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-targetaccountconfiguration.html#cfn-fis-targetaccountconfiguration-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-targetaccountconfiguration.html#cfn-fis-targetaccountconfiguration-experimenttemplateid
       */
      ExperimentTemplateId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fis-targetaccountconfiguration.html#cfn-fis-targetaccountconfiguration-rolearn
       */
      RoleArn: string;
    }
    
    
    interface TargetAccountConfiguration extends Resource<"AWS::FIS::TargetAccountConfiguration">, TargetAccountConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TargetAccountConfiguration(id: string, props: TargetAccountConfigurationProps): Promise<TargetAccountConfiguration>;
  }
  namespace FMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-notificationchannel.html
     */
    interface NotificationChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-notificationchannel.html#cfn-fms-notificationchannel-snstopicarn
       */
      SnsTopicArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-notificationchannel.html#cfn-fms-notificationchannel-snsrolename
       */
      SnsRoleName: string;
    }
    
    
    interface NotificationChannel extends Resource<"AWS::FMS::NotificationChannel">, NotificationChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NotificationChannel(id: string, props: NotificationChannelProps): Promise<NotificationChannel>;
  }
  namespace FMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html
     */
    interface PolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcetaglogicaloperator
       */
      ResourceTagLogicalOperator?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcescleanup
       */
      ResourcesCleanUp?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcetags
       */
      ResourceTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-excluderesourcetags
       */
      ExcludeResourceTags: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcetype
       */
      ResourceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcesetids
       */
      ResourceSetIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-securityservicepolicydata
       */
      SecurityServicePolicyData: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-remediationenabled
       */
      RemediationEnabled: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-deleteallpolicyresources
       */
      DeleteAllPolicyResources?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-excludemap
       */
      ExcludeMap?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-includemap
       */
      IncludeMap?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-policydescription
       */
      PolicyDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-policyname
       */
      PolicyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcetypelist
       */
      ResourceTypeList?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-tags
       */
      Tags?: {}[];
    }
    
    
    interface Policy extends Resource<"AWS::FMS::Policy">, PolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Policy(id: string, props: PolicyProps): Promise<Policy>;
  }
  namespace FMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-resourceset.html
     */
    interface ResourceSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-resourceset.html#cfn-fms-resourceset-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-resourceset.html#cfn-fms-resourceset-resourcetypelist
       */
      ResourceTypeList: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-resourceset.html#cfn-fms-resourceset-resources
       */
      Resources?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-resourceset.html#cfn-fms-resourceset-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-resourceset.html#cfn-fms-resourceset-name
       */
      Name: string;
    }
    
    
    interface ResourceSet extends Resource<"AWS::FMS::ResourceSet">, ResourceSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceSet(id: string, props: ResourceSetProps): Promise<ResourceSet>;
  }
  namespace FSx {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-datarepositoryassociation.html
     */
    interface DataRepositoryAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-datarepositoryassociation.html#cfn-fsx-datarepositoryassociation-filesystempath
       */
      FileSystemPath: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-datarepositoryassociation.html#cfn-fsx-datarepositoryassociation-datarepositorypath
       */
      DataRepositoryPath: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-datarepositoryassociation.html#cfn-fsx-datarepositoryassociation-batchimportmetadataoncreate
       */
      BatchImportMetaDataOnCreate?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-datarepositoryassociation.html#cfn-fsx-datarepositoryassociation-s3
       */
      S3?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-datarepositoryassociation.html#cfn-fsx-datarepositoryassociation-filesystemid
       */
      FileSystemId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-datarepositoryassociation.html#cfn-fsx-datarepositoryassociation-importedfilechunksize
       */
      ImportedFileChunkSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-datarepositoryassociation.html#cfn-fsx-datarepositoryassociation-tags
       */
      Tags?: {}[];
    }
    
    
    interface DataRepositoryAssociation extends Resource<"AWS::FSx::DataRepositoryAssociation">, DataRepositoryAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataRepositoryAssociation(id: string, props: DataRepositoryAssociationProps): Promise<DataRepositoryAssociation>;
  }
  namespace FSx {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html
     */
    interface FileSystemProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-storagetype
       */
      StorageType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-storagecapacity
       */
      StorageCapacity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-lustreconfiguration
       */
      LustreConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-backupid
       */
      BackupId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-ontapconfiguration
       */
      OntapConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-windowsconfiguration
       */
      WindowsConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-filesystemtypeversion
       */
      FileSystemTypeVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-openzfsconfiguration
       */
      OpenZFSConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-filesystemtype
       */
      FileSystemType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-tags
       */
      Tags?: {}[];
    }
    
    
    interface FileSystem extends Resource<"AWS::FSx::FileSystem">, FileSystemProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FileSystem(id: string, props: FileSystemProps): Promise<FileSystem>;
  }
  namespace FSx {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-snapshot.html
     */
    interface SnapshotProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-snapshot.html#cfn-fsx-snapshot-volumeid
       */
      VolumeId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-snapshot.html#cfn-fsx-snapshot-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-snapshot.html#cfn-fsx-snapshot-name
       */
      Name: string;
    }
    
    
    interface Snapshot extends Resource<"AWS::FSx::Snapshot">, SnapshotProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Snapshot(id: string, props: SnapshotProps): Promise<Snapshot>;
  }
  namespace FSx {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html
     */
    interface StorageVirtualMachineProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html#cfn-fsx-storagevirtualmachine-svmadminpassword
       */
      SvmAdminPassword?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html#cfn-fsx-storagevirtualmachine-activedirectoryconfiguration
       */
      ActiveDirectoryConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html#cfn-fsx-storagevirtualmachine-rootvolumesecuritystyle
       */
      RootVolumeSecurityStyle?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html#cfn-fsx-storagevirtualmachine-filesystemid
       */
      FileSystemId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html#cfn-fsx-storagevirtualmachine-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html#cfn-fsx-storagevirtualmachine-name
       */
      Name: string;
    }
    
    
    interface StorageVirtualMachine extends Resource<"AWS::FSx::StorageVirtualMachine">, StorageVirtualMachineProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StorageVirtualMachine(id: string, props: StorageVirtualMachineProps): Promise<StorageVirtualMachine>;
  }
  namespace FSx {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-volume.html
     */
    interface VolumeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-volume.html#cfn-fsx-volume-openzfsconfiguration
       */
      OpenZFSConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-volume.html#cfn-fsx-volume-volumetype
       */
      VolumeType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-volume.html#cfn-fsx-volume-backupid
       */
      BackupId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-volume.html#cfn-fsx-volume-ontapconfiguration
       */
      OntapConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-volume.html#cfn-fsx-volume-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-volume.html#cfn-fsx-volume-name
       */
      Name: string;
    }
    
    
    interface Volume extends Resource<"AWS::FSx::Volume">, VolumeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Volume(id: string, props: VolumeProps): Promise<Volume>;
  }
  namespace FinSpace {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-finspace-environment.html
     */
    interface EnvironmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-finspace-environment.html#cfn-finspace-environment-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-finspace-environment.html#cfn-finspace-environment-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-finspace-environment.html#cfn-finspace-environment-federationparameters
       */
      FederationParameters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-finspace-environment.html#cfn-finspace-environment-federationmode
       */
      FederationMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-finspace-environment.html#cfn-finspace-environment-superuserparameters
       */
      SuperuserParameters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-finspace-environment.html#cfn-finspace-environment-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-finspace-environment.html#cfn-finspace-environment-name
       */
      Name: string;
    }
    
    
    interface Environment extends Resource<"AWS::FinSpace::Environment">, EnvironmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Environment(id: string, props: EnvironmentProps): Promise<Environment>;
  }
  namespace Forecast {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html
     */
    interface DatasetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-datafrequency
       */
      DataFrequency?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-datasetname
       */
      DatasetName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-schema
       */
      Schema: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-datasettype
       */
      DatasetType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-domain
       */
      Domain: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-encryptionconfig
       */
      EncryptionConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-tags
       */
      Tags?: {}[];
    }
    
    
    interface Dataset extends Resource<"AWS::Forecast::Dataset">, DatasetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Dataset(id: string, props: DatasetProps): Promise<Dataset>;
  }
  namespace Forecast {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-datasetgroup.html
     */
    interface DatasetGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-datasetgroup.html#cfn-forecast-datasetgroup-datasetarns
       */
      DatasetArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-datasetgroup.html#cfn-forecast-datasetgroup-datasetgroupname
       */
      DatasetGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-datasetgroup.html#cfn-forecast-datasetgroup-domain
       */
      Domain: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-datasetgroup.html#cfn-forecast-datasetgroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface DatasetGroup extends Resource<"AWS::Forecast::DatasetGroup">, DatasetGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DatasetGroup(id: string, props: DatasetGroupProps): Promise<DatasetGroup>;
  }
  namespace FraudDetector {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-detector.html
     */
    interface DetectorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-detector.html#cfn-frauddetector-detector-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-detector.html#cfn-frauddetector-detector-detectorversionstatus
       */
      DetectorVersionStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-detector.html#cfn-frauddetector-detector-eventtype
       */
      EventType: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-detector.html#cfn-frauddetector-detector-detectorid
       */
      DetectorId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-detector.html#cfn-frauddetector-detector-associatedmodels
       */
      AssociatedModels?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-detector.html#cfn-frauddetector-detector-ruleexecutionmode
       */
      RuleExecutionMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-detector.html#cfn-frauddetector-detector-rules
       */
      Rules: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-detector.html#cfn-frauddetector-detector-tags
       */
      Tags?: {}[];
    }
    
    
    interface Detector extends Resource<"AWS::FraudDetector::Detector">, DetectorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Detector(id: string, props: DetectorProps): Promise<Detector>;
  }
  namespace FraudDetector {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-entitytype.html
     */
    interface EntityTypeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-entitytype.html#cfn-frauddetector-entitytype-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-entitytype.html#cfn-frauddetector-entitytype-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-entitytype.html#cfn-frauddetector-entitytype-name
       */
      Name: string;
    }
    
    
    interface EntityType extends Resource<"AWS::FraudDetector::EntityType">, EntityTypeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EntityType(id: string, props: EntityTypeProps): Promise<EntityType>;
  }
  namespace FraudDetector {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-eventtype.html
     */
    interface EventTypeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-eventtype.html#cfn-frauddetector-eventtype-entitytypes
       */
      EntityTypes: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-eventtype.html#cfn-frauddetector-eventtype-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-eventtype.html#cfn-frauddetector-eventtype-labels
       */
      Labels: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-eventtype.html#cfn-frauddetector-eventtype-eventvariables
       */
      EventVariables: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-eventtype.html#cfn-frauddetector-eventtype-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-eventtype.html#cfn-frauddetector-eventtype-name
       */
      Name: string;
    }
    
    
    interface EventType extends Resource<"AWS::FraudDetector::EventType">, EventTypeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventType(id: string, props: EventTypeProps): Promise<EventType>;
  }
  namespace FraudDetector {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-label.html
     */
    interface LabelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-label.html#cfn-frauddetector-label-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-label.html#cfn-frauddetector-label-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-label.html#cfn-frauddetector-label-name
       */
      Name: string;
    }
    
    
    interface Label extends Resource<"AWS::FraudDetector::Label">, LabelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Label(id: string, props: LabelProps): Promise<Label>;
  }
  namespace FraudDetector {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-list.html
     */
    interface ListProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-list.html#cfn-frauddetector-list-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-list.html#cfn-frauddetector-list-variabletype
       */
      VariableType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-list.html#cfn-frauddetector-list-elements
       */
      Elements?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-list.html#cfn-frauddetector-list-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-list.html#cfn-frauddetector-list-name
       */
      Name: string;
    }
    
    
    interface List extends Resource<"AWS::FraudDetector::List">, ListProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function List(id: string, props: ListProps): Promise<List>;
  }
  namespace FraudDetector {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-outcome.html
     */
    interface OutcomeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-outcome.html#cfn-frauddetector-outcome-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-outcome.html#cfn-frauddetector-outcome-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-outcome.html#cfn-frauddetector-outcome-name
       */
      Name: string;
    }
    
    
    interface Outcome extends Resource<"AWS::FraudDetector::Outcome">, OutcomeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Outcome(id: string, props: OutcomeProps): Promise<Outcome>;
  }
  namespace FraudDetector {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-variable.html
     */
    interface VariableProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-variable.html#cfn-frauddetector-variable-defaultvalue
       */
      DefaultValue: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-variable.html#cfn-frauddetector-variable-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-variable.html#cfn-frauddetector-variable-variabletype
       */
      VariableType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-variable.html#cfn-frauddetector-variable-datatype
       */
      DataType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-variable.html#cfn-frauddetector-variable-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-variable.html#cfn-frauddetector-variable-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-frauddetector-variable.html#cfn-frauddetector-variable-datasource
       */
      DataSource: string;
    }
    
    
    interface Variable extends Resource<"AWS::FraudDetector::Variable">, VariableProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Variable(id: string, props: VariableProps): Promise<Variable>;
  }
  namespace GameLift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-alias.html
     */
    interface AliasProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-alias.html#cfn-gamelift-alias-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-alias.html#cfn-gamelift-alias-routingstrategy
       */
      RoutingStrategy: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-alias.html#cfn-gamelift-alias-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-alias.html#cfn-gamelift-alias-name
       */
      Name: string;
    }
    
    
    interface Alias extends Resource<"AWS::GameLift::Alias">, AliasProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Alias(id: string, props: AliasProps): Promise<Alias>;
  }
  namespace GameLift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-build.html
     */
    interface BuildProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-build.html#cfn-gamelift-build-operatingsystem
       */
      OperatingSystem?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-build.html#cfn-gamelift-build-version
       */
      Version?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-build.html#cfn-gamelift-build-serversdkversion
       */
      ServerSdkVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-build.html#cfn-gamelift-build-storagelocation
       */
      StorageLocation?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-build.html#cfn-gamelift-build-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-build.html#cfn-gamelift-build-name
       */
      Name?: string;
    }
    
    
    interface Build extends Resource<"AWS::GameLift::Build">, BuildProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Build(id: string, props: BuildProps): Promise<Build>;
  }
  namespace GameLift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html
     */
    interface ContainerFleetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-scalingpolicies
       */
      ScalingPolicies?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-gameservercontainergroupdefinitionname
       */
      GameServerContainerGroupDefinitionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-fleetrolearn
       */
      FleetRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-perinstancecontainergroupdefinitionname
       */
      PerInstanceContainerGroupDefinitionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-locations
       */
      Locations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-gamesessioncreationlimitpolicy
       */
      GameSessionCreationLimitPolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-newgamesessionprotectionpolicy
       */
      NewGameSessionProtectionPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-gameservercontainergroupsperinstance
       */
      GameServerContainerGroupsPerInstance?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-logconfiguration
       */
      LogConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-instanceconnectionportrange
       */
      InstanceConnectionPortRange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-metricgroups
       */
      MetricGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-instanceinboundpermissions
       */
      InstanceInboundPermissions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-instancetype
       */
      InstanceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-deploymentconfiguration
       */
      DeploymentConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containerfleet.html#cfn-gamelift-containerfleet-billingtype
       */
      BillingType?: string;
    }
    
    
    interface ContainerFleet extends Resource<"AWS::GameLift::ContainerFleet">, ContainerFleetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ContainerFleet(id: string, props: ContainerFleetProps): Promise<ContainerFleet>;
  }
  namespace GameLift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containergroupdefinition.html
     */
    interface ContainerGroupDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containergroupdefinition.html#cfn-gamelift-containergroupdefinition-operatingsystem
       */
      OperatingSystem: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containergroupdefinition.html#cfn-gamelift-containergroupdefinition-versiondescription
       */
      VersionDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containergroupdefinition.html#cfn-gamelift-containergroupdefinition-gameservercontainerdefinition
       */
      GameServerContainerDefinition?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containergroupdefinition.html#cfn-gamelift-containergroupdefinition-totalmemorylimitmebibytes
       */
      TotalMemoryLimitMebibytes: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containergroupdefinition.html#cfn-gamelift-containergroupdefinition-sourceversionnumber
       */
      SourceVersionNumber?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containergroupdefinition.html#cfn-gamelift-containergroupdefinition-totalvcpulimit
       */
      TotalVcpuLimit: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containergroupdefinition.html#cfn-gamelift-containergroupdefinition-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containergroupdefinition.html#cfn-gamelift-containergroupdefinition-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containergroupdefinition.html#cfn-gamelift-containergroupdefinition-containergrouptype
       */
      ContainerGroupType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-containergroupdefinition.html#cfn-gamelift-containergroupdefinition-supportcontainerdefinitions
       */
      SupportContainerDefinitions?: {}[];
    }
    
    
    interface ContainerGroupDefinition extends Resource<"AWS::GameLift::ContainerGroupDefinition">, ContainerGroupDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ContainerGroupDefinition(id: string, props: ContainerGroupDefinitionProps): Promise<ContainerGroupDefinition>;
  }
  namespace GameLift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html
     */
    interface FleetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-scalingpolicies
       */
      ScalingPolicies?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-peervpcid
       */
      PeerVpcId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-applycapacity
       */
      ApplyCapacity?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-fleettype
       */
      FleetType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-ec2inboundpermissions
       */
      EC2InboundPermissions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-locations
       */
      Locations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-newgamesessionprotectionpolicy
       */
      NewGameSessionProtectionPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-scriptid
       */
      ScriptId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-computetype
       */
      ComputeType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-maxsize
       */
      MaxSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-runtimeconfiguration
       */
      RuntimeConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-minsize
       */
      MinSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-peervpcawsaccountid
       */
      PeerVpcAwsAccountId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-anywhereconfiguration
       */
      AnywhereConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-instancerolearn
       */
      InstanceRoleARN?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-metricgroups
       */
      MetricGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-buildid
       */
      BuildId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-resourcecreationlimitpolicy
       */
      ResourceCreationLimitPolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-ec2instancetype
       */
      EC2InstanceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-certificateconfiguration
       */
      CertificateConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-instancerolecredentialsprovider
       */
      InstanceRoleCredentialsProvider?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-desiredec2instances
       */
      DesiredEC2Instances?: number;
    }
    
    
    interface Fleet extends Resource<"AWS::GameLift::Fleet">, FleetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Fleet(id: string, props: FleetProps): Promise<Fleet>;
  }
  namespace GameLift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html
     */
    interface GameServerGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-autoscalingpolicy
       */
      AutoScalingPolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-minsize
       */
      MinSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-deleteoption
       */
      DeleteOption?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-balancingstrategy
       */
      BalancingStrategy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-gameservergroupname
       */
      GameServerGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-launchtemplate
       */
      LaunchTemplate?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-gameserverprotectionpolicy
       */
      GameServerProtectionPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-vpcsubnets
       */
      VpcSubnets?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-maxsize
       */
      MaxSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-instancedefinitions
       */
      InstanceDefinitions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface GameServerGroup extends Resource<"AWS::GameLift::GameServerGroup">, GameServerGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GameServerGroup(id: string, props: GameServerGroupProps): Promise<GameServerGroup>;
  }
  namespace GameLift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gamesessionqueue.html
     */
    interface GameSessionQueueProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gamesessionqueue.html#cfn-gamelift-gamesessionqueue-timeoutinseconds
       */
      TimeoutInSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gamesessionqueue.html#cfn-gamelift-gamesessionqueue-playerlatencypolicies
       */
      PlayerLatencyPolicies?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gamesessionqueue.html#cfn-gamelift-gamesessionqueue-destinations
       */
      Destinations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gamesessionqueue.html#cfn-gamelift-gamesessionqueue-notificationtarget
       */
      NotificationTarget?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gamesessionqueue.html#cfn-gamelift-gamesessionqueue-filterconfiguration
       */
      FilterConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gamesessionqueue.html#cfn-gamelift-gamesessionqueue-customeventdata
       */
      CustomEventData?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gamesessionqueue.html#cfn-gamelift-gamesessionqueue-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gamesessionqueue.html#cfn-gamelift-gamesessionqueue-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gamesessionqueue.html#cfn-gamelift-gamesessionqueue-priorityconfiguration
       */
      PriorityConfiguration?: {};
    }
    
    
    interface GameSessionQueue extends Resource<"AWS::GameLift::GameSessionQueue">, GameSessionQueueProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GameSessionQueue(id: string, props: GameSessionQueueProps): Promise<GameSessionQueue>;
  }
  namespace GameLift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-location.html
     */
    interface LocationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-location.html#cfn-gamelift-location-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-location.html#cfn-gamelift-location-locationname
       */
      LocationName: string;
    }
    
    
    interface Location extends Resource<"AWS::GameLift::Location">, LocationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Location(id: string, props: LocationProps): Promise<Location>;
  }
  namespace GameLift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html
     */
    interface MatchmakingConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-gameproperties
       */
      GameProperties?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-gamesessiondata
       */
      GameSessionData?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-acceptancetimeoutseconds
       */
      AcceptanceTimeoutSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-notificationtarget
       */
      NotificationTarget?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-customeventdata
       */
      CustomEventData?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-additionalplayercount
       */
      AdditionalPlayerCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-backfillmode
       */
      BackfillMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-requesttimeoutseconds
       */
      RequestTimeoutSeconds: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-acceptancerequired
       */
      AcceptanceRequired: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-creationtime
       */
      CreationTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-flexmatchmode
       */
      FlexMatchMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-rulesetname
       */
      RuleSetName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-gamesessionqueuearns
       */
      GameSessionQueueArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-rulesetarn
       */
      RuleSetArn?: string;
    }
    
    
    interface MatchmakingConfiguration extends Resource<"AWS::GameLift::MatchmakingConfiguration">, MatchmakingConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MatchmakingConfiguration(id: string, props: MatchmakingConfigurationProps): Promise<MatchmakingConfiguration>;
  }
  namespace GameLift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingruleset.html
     */
    interface MatchmakingRuleSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingruleset.html#cfn-gamelift-matchmakingruleset-rulesetbody
       */
      RuleSetBody: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingruleset.html#cfn-gamelift-matchmakingruleset-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingruleset.html#cfn-gamelift-matchmakingruleset-name
       */
      Name: string;
    }
    
    
    interface MatchmakingRuleSet extends Resource<"AWS::GameLift::MatchmakingRuleSet">, MatchmakingRuleSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MatchmakingRuleSet(id: string, props: MatchmakingRuleSetProps): Promise<MatchmakingRuleSet>;
  }
  namespace GameLift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-script.html
     */
    interface ScriptProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-script.html#cfn-gamelift-script-version
       */
      Version?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-script.html#cfn-gamelift-script-storagelocation
       */
      StorageLocation: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-script.html#cfn-gamelift-script-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-script.html#cfn-gamelift-script-name
       */
      Name?: string;
    }
    
    
    interface Script extends Resource<"AWS::GameLift::Script">, ScriptProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Script(id: string, props: ScriptProps): Promise<Script>;
  }
  namespace GlobalAccelerator {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html
     */
    interface AcceleratorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-ipaddresstype
       */
      IpAddressType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-ipaddresses
       */
      IpAddresses?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-name
       */
      Name: string;
    }
    
    
    interface Accelerator extends Resource<"AWS::GlobalAccelerator::Accelerator">, AcceleratorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Accelerator(id: string, props: AcceleratorProps): Promise<Accelerator>;
  }
  namespace GlobalAccelerator {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-crossaccountattachment.html
     */
    interface CrossAccountAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-crossaccountattachment.html#cfn-globalaccelerator-crossaccountattachment-principals
       */
      Principals?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-crossaccountattachment.html#cfn-globalaccelerator-crossaccountattachment-resources
       */
      Resources?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-crossaccountattachment.html#cfn-globalaccelerator-crossaccountattachment-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-crossaccountattachment.html#cfn-globalaccelerator-crossaccountattachment-name
       */
      Name: string;
    }
    
    
    interface CrossAccountAttachment extends Resource<"AWS::GlobalAccelerator::CrossAccountAttachment">, CrossAccountAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CrossAccountAttachment(id: string, props: CrossAccountAttachmentProps): Promise<CrossAccountAttachment>;
  }
  namespace GlobalAccelerator {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html
     */
    interface EndpointGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-listenerarn
       */
      ListenerArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-portoverrides
       */
      PortOverrides?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckintervalseconds
       */
      HealthCheckIntervalSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-endpointgroupregion
       */
      EndpointGroupRegion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckpath
       */
      HealthCheckPath?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-trafficdialpercentage
       */
      TrafficDialPercentage?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckprotocol
       */
      HealthCheckProtocol?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-thresholdcount
       */
      ThresholdCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckport
       */
      HealthCheckPort?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-endpointconfigurations
       */
      EndpointConfigurations?: {}[];
    }
    
    
    interface EndpointGroup extends Resource<"AWS::GlobalAccelerator::EndpointGroup">, EndpointGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EndpointGroup(id: string, props: EndpointGroupProps): Promise<EndpointGroup>;
  }
  namespace GlobalAccelerator {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html
     */
    interface ListenerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html#cfn-globalaccelerator-listener-portranges
       */
      PortRanges: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html#cfn-globalaccelerator-listener-acceleratorarn
       */
      AcceleratorArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html#cfn-globalaccelerator-listener-protocol
       */
      Protocol: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html#cfn-globalaccelerator-listener-clientaffinity
       */
      ClientAffinity?: string;
    }
    
    
    interface Listener extends Resource<"AWS::GlobalAccelerator::Listener">, ListenerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Listener(id: string, props: ListenerProps): Promise<Listener>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html
     */
    interface ClassifierProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html#cfn-glue-classifier-xmlclassifier
       */
      XMLClassifier?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html#cfn-glue-classifier-jsonclassifier
       */
      JsonClassifier?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html#cfn-glue-classifier-csvclassifier
       */
      CsvClassifier?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html#cfn-glue-classifier-grokclassifier
       */
      GrokClassifier?: {};
    }
    
    
    interface Classifier extends Resource<"AWS::Glue::Classifier">, ClassifierProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Classifier(id: string, props: ClassifierProps): Promise<Classifier>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-connection.html
     */
    interface ConnectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-connection.html#cfn-glue-connection-connectioninput
       */
      ConnectionInput: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-connection.html#cfn-glue-connection-catalogid
       */
      CatalogId: string;
    }
    
    
    interface Connection extends Resource<"AWS::Glue::Connection">, ConnectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Connection(id: string, props: ConnectionProps): Promise<Connection>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html
     */
    interface CrawlerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-classifiers
       */
      Classifiers?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-schemachangepolicy
       */
      SchemaChangePolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-configuration
       */
      Configuration?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-recrawlpolicy
       */
      RecrawlPolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-databasename
       */
      DatabaseName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-targets
       */
      Targets: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-crawlersecurityconfiguration
       */
      CrawlerSecurityConfiguration?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-role
       */
      Role: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-lakeformationconfiguration
       */
      LakeFormationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-schedule
       */
      Schedule?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-tableprefix
       */
      TablePrefix?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Crawler extends Resource<"AWS::Glue::Crawler">, CrawlerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Crawler(id: string, props: CrawlerProps): Promise<Crawler>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-customentitytype.html
     */
    interface CustomEntityTypeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-customentitytype.html#cfn-glue-customentitytype-contextwords
       */
      ContextWords?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-customentitytype.html#cfn-glue-customentitytype-regexstring
       */
      RegexString?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-customentitytype.html#cfn-glue-customentitytype-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-customentitytype.html#cfn-glue-customentitytype-name
       */
      Name?: string;
    }
    
    
    interface CustomEntityType extends Resource<"AWS::Glue::CustomEntityType">, CustomEntityTypeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CustomEntityType(id: string, props: CustomEntityTypeProps): Promise<CustomEntityType>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-datacatalogencryptionsettings.html
     */
    interface DataCatalogEncryptionSettingsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-datacatalogencryptionsettings.html#cfn-glue-datacatalogencryptionsettings-datacatalogencryptionsettings
       */
      DataCatalogEncryptionSettings: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-datacatalogencryptionsettings.html#cfn-glue-datacatalogencryptionsettings-catalogid
       */
      CatalogId: string;
    }
    
    
    interface DataCatalogEncryptionSettings extends Resource<"AWS::Glue::DataCatalogEncryptionSettings">, DataCatalogEncryptionSettingsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataCatalogEncryptionSettings(id: string, props: DataCatalogEncryptionSettingsProps): Promise<DataCatalogEncryptionSettings>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-dataqualityruleset.html
     */
    interface DataQualityRulesetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-dataqualityruleset.html#cfn-glue-dataqualityruleset-ruleset
       */
      Ruleset?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-dataqualityruleset.html#cfn-glue-dataqualityruleset-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-dataqualityruleset.html#cfn-glue-dataqualityruleset-targettable
       */
      TargetTable?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-dataqualityruleset.html#cfn-glue-dataqualityruleset-clienttoken
       */
      ClientToken?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-dataqualityruleset.html#cfn-glue-dataqualityruleset-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-dataqualityruleset.html#cfn-glue-dataqualityruleset-name
       */
      Name?: string;
    }
    
    
    interface DataQualityRuleset extends Resource<"AWS::Glue::DataQualityRuleset">, DataQualityRulesetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataQualityRuleset(id: string, props: DataQualityRulesetProps): Promise<DataQualityRuleset>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-database.html
     */
    interface DatabaseProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-database.html#cfn-glue-database-databasename
       */
      DatabaseName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-database.html#cfn-glue-database-databaseinput
       */
      DatabaseInput: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-database.html#cfn-glue-database-catalogid
       */
      CatalogId: string;
    }
    
    
    interface Database extends Resource<"AWS::Glue::Database">, DatabaseProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Database(id: string, props: DatabaseProps): Promise<Database>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html
     */
    interface DevEndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-extrajarss3path
       */
      ExtraJarsS3Path?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-publickey
       */
      PublicKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-numberofnodes
       */
      NumberOfNodes?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-arguments
       */
      Arguments?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-subnetid
       */
      SubnetId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-publickeys
       */
      PublicKeys?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-workertype
       */
      WorkerType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-endpointname
       */
      EndpointName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-glueversion
       */
      GlueVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-extrapythonlibss3path
       */
      ExtraPythonLibsS3Path?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-securityconfiguration
       */
      SecurityConfiguration?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-numberofworkers
       */
      NumberOfWorkers?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-devendpoint.html#cfn-glue-devendpoint-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface DevEndpoint extends Resource<"AWS::Glue::DevEndpoint">, DevEndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DevEndpoint(id: string, props: DevEndpointProps): Promise<DevEndpoint>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html
     */
    interface JobProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-connections
       */
      Connections?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-maxretries
       */
      MaxRetries?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-jobmode
       */
      JobMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-timeout
       */
      Timeout?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-allocatedcapacity
       */
      AllocatedCapacity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-jobrunqueuingenabled
       */
      JobRunQueuingEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-role
       */
      Role: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-defaultarguments
       */
      DefaultArguments?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-notificationproperty
       */
      NotificationProperty?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-workertype
       */
      WorkerType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-executionclass
       */
      ExecutionClass?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-loguri
       */
      LogUri?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-command
       */
      Command: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-glueversion
       */
      GlueVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-executionproperty
       */
      ExecutionProperty?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-securityconfiguration
       */
      SecurityConfiguration?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-maintenancewindow
       */
      MaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-numberofworkers
       */
      NumberOfWorkers?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-maxcapacity
       */
      MaxCapacity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-job.html#cfn-glue-job-nonoverridablearguments
       */
      NonOverridableArguments?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Job extends Resource<"AWS::Glue::Job">, JobProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Job(id: string, props: JobProps): Promise<Job>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html
     */
    interface MLTransformProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html#cfn-glue-mltransform-maxretries
       */
      MaxRetries?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html#cfn-glue-mltransform-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html#cfn-glue-mltransform-transformencryption
       */
      TransformEncryption?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html#cfn-glue-mltransform-timeout
       */
      Timeout?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html#cfn-glue-mltransform-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html#cfn-glue-mltransform-role
       */
      Role: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html#cfn-glue-mltransform-workertype
       */
      WorkerType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html#cfn-glue-mltransform-glueversion
       */
      GlueVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html#cfn-glue-mltransform-transformparameters
       */
      TransformParameters: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html#cfn-glue-mltransform-inputrecordtables
       */
      InputRecordTables: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html#cfn-glue-mltransform-numberofworkers
       */
      NumberOfWorkers?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html#cfn-glue-mltransform-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-mltransform.html#cfn-glue-mltransform-maxcapacity
       */
      MaxCapacity?: number;
    }
    
    
    interface MLTransform extends Resource<"AWS::Glue::MLTransform">, MLTransformProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MLTransform(id: string, props: MLTransformProps): Promise<MLTransform>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-partition.html
     */
    interface PartitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-partition.html#cfn-glue-partition-tablename
       */
      TableName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-partition.html#cfn-glue-partition-databasename
       */
      DatabaseName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-partition.html#cfn-glue-partition-catalogid
       */
      CatalogId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-partition.html#cfn-glue-partition-partitioninput
       */
      PartitionInput: {};
    }
    
    
    interface Partition extends Resource<"AWS::Glue::Partition">, PartitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Partition(id: string, props: PartitionProps): Promise<Partition>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-registry.html
     */
    interface RegistryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-registry.html#cfn-glue-registry-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-registry.html#cfn-glue-registry-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-registry.html#cfn-glue-registry-name
       */
      Name: string;
    }
    
    
    interface Registry extends Resource<"AWS::Glue::Registry">, RegistryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Registry(id: string, props: RegistryProps): Promise<Registry>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schema.html
     */
    interface SchemaProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schema.html#cfn-glue-schema-schemadefinition
       */
      SchemaDefinition?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schema.html#cfn-glue-schema-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schema.html#cfn-glue-schema-dataformat
       */
      DataFormat: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schema.html#cfn-glue-schema-registry
       */
      Registry?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schema.html#cfn-glue-schema-compatibility
       */
      Compatibility: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schema.html#cfn-glue-schema-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schema.html#cfn-glue-schema-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schema.html#cfn-glue-schema-checkpointversion
       */
      CheckpointVersion?: {};
    }
    
    
    interface Schema extends Resource<"AWS::Glue::Schema">, SchemaProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Schema(id: string, props: SchemaProps): Promise<Schema>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversion.html
     */
    interface SchemaVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversion.html#cfn-glue-schemaversion-schemadefinition
       */
      SchemaDefinition: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversion.html#cfn-glue-schemaversion-schema
       */
      Schema: {};
    }
    
    
    interface SchemaVersion extends Resource<"AWS::Glue::SchemaVersion">, SchemaVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SchemaVersion(id: string, props: SchemaVersionProps): Promise<SchemaVersion>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversionmetadata.html
     */
    interface SchemaVersionMetadataProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversionmetadata.html#cfn-glue-schemaversionmetadata-schemaversionid
       */
      SchemaVersionId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversionmetadata.html#cfn-glue-schemaversionmetadata-value
       */
      Value: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-schemaversionmetadata.html#cfn-glue-schemaversionmetadata-key
       */
      Key: string;
    }
    
    
    interface SchemaVersionMetadata extends Resource<"AWS::Glue::SchemaVersionMetadata">, SchemaVersionMetadataProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SchemaVersionMetadata(id: string, props: SchemaVersionMetadataProps): Promise<SchemaVersionMetadata>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-securityconfiguration.html
     */
    interface SecurityConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-securityconfiguration.html#cfn-glue-securityconfiguration-encryptionconfiguration
       */
      EncryptionConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-securityconfiguration.html#cfn-glue-securityconfiguration-name
       */
      Name: string;
    }
    
    
    interface SecurityConfiguration extends Resource<"AWS::Glue::SecurityConfiguration">, SecurityConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecurityConfiguration(id: string, props: SecurityConfigurationProps): Promise<SecurityConfiguration>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-table.html
     */
    interface TableProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-table.html#cfn-glue-table-tableinput
       */
      TableInput: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-table.html#cfn-glue-table-opentableformatinput
       */
      OpenTableFormatInput?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-table.html#cfn-glue-table-databasename
       */
      DatabaseName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-table.html#cfn-glue-table-catalogid
       */
      CatalogId: string;
    }
    
    
    interface Table extends Resource<"AWS::Glue::Table">, TableProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Table(id: string, props: TableProps): Promise<Table>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-tableoptimizer.html
     */
    interface TableOptimizerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-tableoptimizer.html#cfn-glue-tableoptimizer-tablename
       */
      TableName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-tableoptimizer.html#cfn-glue-tableoptimizer-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-tableoptimizer.html#cfn-glue-tableoptimizer-databasename
       */
      DatabaseName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-tableoptimizer.html#cfn-glue-tableoptimizer-tableoptimizerconfiguration
       */
      TableOptimizerConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-tableoptimizer.html#cfn-glue-tableoptimizer-catalogid
       */
      CatalogId: string;
    }
    
    
    interface TableOptimizer extends Resource<"AWS::Glue::TableOptimizer">, TableOptimizerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TableOptimizer(id: string, props: TableOptimizerProps): Promise<TableOptimizer>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html
     */
    interface TriggerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html#cfn-glue-trigger-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html#cfn-glue-trigger-startoncreation
       */
      StartOnCreation?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html#cfn-glue-trigger-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html#cfn-glue-trigger-actions
       */
      Actions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html#cfn-glue-trigger-eventbatchingcondition
       */
      EventBatchingCondition?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html#cfn-glue-trigger-workflowname
       */
      WorkflowName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html#cfn-glue-trigger-schedule
       */
      Schedule?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html#cfn-glue-trigger-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html#cfn-glue-trigger-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-trigger.html#cfn-glue-trigger-predicate
       */
      Predicate?: {};
    }
    
    
    interface Trigger extends Resource<"AWS::Glue::Trigger">, TriggerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Trigger(id: string, props: TriggerProps): Promise<Trigger>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-usageprofile.html
     */
    interface UsageProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-usageprofile.html#cfn-glue-usageprofile-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-usageprofile.html#cfn-glue-usageprofile-configuration
       */
      Configuration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-usageprofile.html#cfn-glue-usageprofile-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-usageprofile.html#cfn-glue-usageprofile-name
       */
      Name: string;
    }
    
    
    interface UsageProfile extends Resource<"AWS::Glue::UsageProfile">, UsageProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UsageProfile(id: string, props: UsageProfileProps): Promise<UsageProfile>;
  }
  namespace Glue {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-workflow.html
     */
    interface WorkflowProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-workflow.html#cfn-glue-workflow-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-workflow.html#cfn-glue-workflow-defaultrunproperties
       */
      DefaultRunProperties?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-workflow.html#cfn-glue-workflow-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-workflow.html#cfn-glue-workflow-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-workflow.html#cfn-glue-workflow-maxconcurrentruns
       */
      MaxConcurrentRuns?: number;
    }
    
    
    interface Workflow extends Resource<"AWS::Glue::Workflow">, WorkflowProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Workflow(id: string, props: WorkflowProps): Promise<Workflow>;
  }
  namespace Grafana {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html
     */
    interface WorkspaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-notificationdestinations
       */
      NotificationDestinations?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-pluginadminenabled
       */
      PluginAdminEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-permissiontype
       */
      PermissionType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-accountaccesstype
       */
      AccountAccessType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-stacksetname
       */
      StackSetName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-samlconfiguration
       */
      SamlConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-organizationalunits
       */
      OrganizationalUnits?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-grafanaversion
       */
      GrafanaVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-datasources
       */
      DataSources?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-authenticationproviders
       */
      AuthenticationProviders: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-organizationrolename
       */
      OrganizationRoleName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-vpcconfiguration
       */
      VpcConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-networkaccesscontrol
       */
      NetworkAccessControl?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-grafana-workspace.html#cfn-grafana-workspace-clienttoken
       */
      ClientToken?: string;
    }
    
    
    interface Workspace extends Resource<"AWS::Grafana::Workspace">, WorkspaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Workspace(id: string, props: WorkspaceProps): Promise<Workspace>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinition.html
     */
    interface ConnectorDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinition.html#cfn-greengrass-connectordefinition-initialversion
       */
      InitialVersion?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinition.html#cfn-greengrass-connectordefinition-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinition.html#cfn-greengrass-connectordefinition-name
       */
      Name: string;
    }
    
    
    interface ConnectorDefinition extends Resource<"AWS::Greengrass::ConnectorDefinition">, ConnectorDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConnectorDefinition(id: string, props: ConnectorDefinitionProps): Promise<ConnectorDefinition>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinitionversion.html
     */
    interface ConnectorDefinitionVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinitionversion.html#cfn-greengrass-connectordefinitionversion-connectors
       */
      Connectors: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-connectordefinitionversion.html#cfn-greengrass-connectordefinitionversion-connectordefinitionid
       */
      ConnectorDefinitionId: string;
    }
    
    
    interface ConnectorDefinitionVersion extends Resource<"AWS::Greengrass::ConnectorDefinitionVersion">, ConnectorDefinitionVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConnectorDefinitionVersion(id: string, props: ConnectorDefinitionVersionProps): Promise<ConnectorDefinitionVersion>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinition.html
     */
    interface CoreDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinition.html#cfn-greengrass-coredefinition-initialversion
       */
      InitialVersion?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinition.html#cfn-greengrass-coredefinition-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinition.html#cfn-greengrass-coredefinition-name
       */
      Name: string;
    }
    
    
    interface CoreDefinition extends Resource<"AWS::Greengrass::CoreDefinition">, CoreDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CoreDefinition(id: string, props: CoreDefinitionProps): Promise<CoreDefinition>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinitionversion.html
     */
    interface CoreDefinitionVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinitionversion.html#cfn-greengrass-coredefinitionversion-cores
       */
      Cores: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-coredefinitionversion.html#cfn-greengrass-coredefinitionversion-coredefinitionid
       */
      CoreDefinitionId: string;
    }
    
    
    interface CoreDefinitionVersion extends Resource<"AWS::Greengrass::CoreDefinitionVersion">, CoreDefinitionVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CoreDefinitionVersion(id: string, props: CoreDefinitionVersionProps): Promise<CoreDefinitionVersion>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinition.html
     */
    interface DeviceDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinition.html#cfn-greengrass-devicedefinition-initialversion
       */
      InitialVersion?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinition.html#cfn-greengrass-devicedefinition-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinition.html#cfn-greengrass-devicedefinition-name
       */
      Name: string;
    }
    
    
    interface DeviceDefinition extends Resource<"AWS::Greengrass::DeviceDefinition">, DeviceDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DeviceDefinition(id: string, props: DeviceDefinitionProps): Promise<DeviceDefinition>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinitionversion.html
     */
    interface DeviceDefinitionVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinitionversion.html#cfn-greengrass-devicedefinitionversion-devicedefinitionid
       */
      DeviceDefinitionId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinitionversion.html#cfn-greengrass-devicedefinitionversion-devices
       */
      Devices: {}[];
    }
    
    
    interface DeviceDefinitionVersion extends Resource<"AWS::Greengrass::DeviceDefinitionVersion">, DeviceDefinitionVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DeviceDefinitionVersion(id: string, props: DeviceDefinitionVersionProps): Promise<DeviceDefinitionVersion>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinition.html
     */
    interface FunctionDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinition.html#cfn-greengrass-functiondefinition-initialversion
       */
      InitialVersion?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinition.html#cfn-greengrass-functiondefinition-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinition.html#cfn-greengrass-functiondefinition-name
       */
      Name: string;
    }
    
    
    interface FunctionDefinition extends Resource<"AWS::Greengrass::FunctionDefinition">, FunctionDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FunctionDefinition(id: string, props: FunctionDefinitionProps): Promise<FunctionDefinition>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinitionversion.html
     */
    interface FunctionDefinitionVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinitionversion.html#cfn-greengrass-functiondefinitionversion-defaultconfig
       */
      DefaultConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinitionversion.html#cfn-greengrass-functiondefinitionversion-functions
       */
      Functions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinitionversion.html#cfn-greengrass-functiondefinitionversion-functiondefinitionid
       */
      FunctionDefinitionId: string;
    }
    
    
    interface FunctionDefinitionVersion extends Resource<"AWS::Greengrass::FunctionDefinitionVersion">, FunctionDefinitionVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FunctionDefinitionVersion(id: string, props: FunctionDefinitionVersionProps): Promise<FunctionDefinitionVersion>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-group.html
     */
    interface GroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-group.html#cfn-greengrass-group-initialversion
       */
      InitialVersion?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-group.html#cfn-greengrass-group-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-group.html#cfn-greengrass-group-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-group.html#cfn-greengrass-group-name
       */
      Name: string;
    }
    
    
    interface Group extends Resource<"AWS::Greengrass::Group">, GroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Group(id: string, props: GroupProps): Promise<Group>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html
     */
    interface GroupVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-loggerdefinitionversionarn
       */
      LoggerDefinitionVersionArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-devicedefinitionversionarn
       */
      DeviceDefinitionVersionArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-functiondefinitionversionarn
       */
      FunctionDefinitionVersionArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-coredefinitionversionarn
       */
      CoreDefinitionVersionArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-resourcedefinitionversionarn
       */
      ResourceDefinitionVersionArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-connectordefinitionversionarn
       */
      ConnectorDefinitionVersionArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-subscriptiondefinitionversionarn
       */
      SubscriptionDefinitionVersionArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-groupid
       */
      GroupId: string;
    }
    
    
    interface GroupVersion extends Resource<"AWS::Greengrass::GroupVersion">, GroupVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GroupVersion(id: string, props: GroupVersionProps): Promise<GroupVersion>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinition.html
     */
    interface LoggerDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinition.html#cfn-greengrass-loggerdefinition-initialversion
       */
      InitialVersion?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinition.html#cfn-greengrass-loggerdefinition-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinition.html#cfn-greengrass-loggerdefinition-name
       */
      Name: string;
    }
    
    
    interface LoggerDefinition extends Resource<"AWS::Greengrass::LoggerDefinition">, LoggerDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LoggerDefinition(id: string, props: LoggerDefinitionProps): Promise<LoggerDefinition>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinitionversion.html
     */
    interface LoggerDefinitionVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinitionversion.html#cfn-greengrass-loggerdefinitionversion-loggerdefinitionid
       */
      LoggerDefinitionId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-loggerdefinitionversion.html#cfn-greengrass-loggerdefinitionversion-loggers
       */
      Loggers: {}[];
    }
    
    
    interface LoggerDefinitionVersion extends Resource<"AWS::Greengrass::LoggerDefinitionVersion">, LoggerDefinitionVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LoggerDefinitionVersion(id: string, props: LoggerDefinitionVersionProps): Promise<LoggerDefinitionVersion>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinition.html
     */
    interface ResourceDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinition.html#cfn-greengrass-resourcedefinition-initialversion
       */
      InitialVersion?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinition.html#cfn-greengrass-resourcedefinition-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinition.html#cfn-greengrass-resourcedefinition-name
       */
      Name: string;
    }
    
    
    interface ResourceDefinition extends Resource<"AWS::Greengrass::ResourceDefinition">, ResourceDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceDefinition(id: string, props: ResourceDefinitionProps): Promise<ResourceDefinition>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinitionversion.html
     */
    interface ResourceDefinitionVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinitionversion.html#cfn-greengrass-resourcedefinitionversion-resources
       */
      Resources: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-resourcedefinitionversion.html#cfn-greengrass-resourcedefinitionversion-resourcedefinitionid
       */
      ResourceDefinitionId: string;
    }
    
    
    interface ResourceDefinitionVersion extends Resource<"AWS::Greengrass::ResourceDefinitionVersion">, ResourceDefinitionVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceDefinitionVersion(id: string, props: ResourceDefinitionVersionProps): Promise<ResourceDefinitionVersion>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinition.html
     */
    interface SubscriptionDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinition.html#cfn-greengrass-subscriptiondefinition-initialversion
       */
      InitialVersion?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinition.html#cfn-greengrass-subscriptiondefinition-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinition.html#cfn-greengrass-subscriptiondefinition-name
       */
      Name: string;
    }
    
    
    interface SubscriptionDefinition extends Resource<"AWS::Greengrass::SubscriptionDefinition">, SubscriptionDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SubscriptionDefinition(id: string, props: SubscriptionDefinitionProps): Promise<SubscriptionDefinition>;
  }
  namespace Greengrass {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinitionversion.html
     */
    interface SubscriptionDefinitionVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinitionversion.html#cfn-greengrass-subscriptiondefinitionversion-subscriptiondefinitionid
       */
      SubscriptionDefinitionId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-subscriptiondefinitionversion.html#cfn-greengrass-subscriptiondefinitionversion-subscriptions
       */
      Subscriptions: {}[];
    }
    
    
    interface SubscriptionDefinitionVersion extends Resource<"AWS::Greengrass::SubscriptionDefinitionVersion">, SubscriptionDefinitionVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SubscriptionDefinitionVersion(id: string, props: SubscriptionDefinitionVersionProps): Promise<SubscriptionDefinitionVersion>;
  }
  namespace GreengrassV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-componentversion.html
     */
    interface ComponentVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-componentversion.html#cfn-greengrassv2-componentversion-lambdafunction
       */
      LambdaFunction?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-componentversion.html#cfn-greengrassv2-componentversion-inlinerecipe
       */
      InlineRecipe?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-componentversion.html#cfn-greengrassv2-componentversion-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface ComponentVersion extends Resource<"AWS::GreengrassV2::ComponentVersion">, ComponentVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ComponentVersion(id: string, props: ComponentVersionProps): Promise<ComponentVersion>;
  }
  namespace GreengrassV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html
     */
    interface DeploymentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html#cfn-greengrassv2-deployment-components
       */
      Components?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html#cfn-greengrassv2-deployment-deploymentname
       */
      DeploymentName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html#cfn-greengrassv2-deployment-iotjobconfiguration
       */
      IotJobConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html#cfn-greengrassv2-deployment-deploymentpolicies
       */
      DeploymentPolicies?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html#cfn-greengrassv2-deployment-targetarn
       */
      TargetArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html#cfn-greengrassv2-deployment-parenttargetarn
       */
      ParentTargetArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html#cfn-greengrassv2-deployment-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Deployment extends Resource<"AWS::GreengrassV2::Deployment">, DeploymentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Deployment(id: string, props: DeploymentProps): Promise<Deployment>;
  }
  namespace GroundStation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-config.html
     */
    interface ConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-config.html#cfn-groundstation-config-configdata
       */
      ConfigData: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-config.html#cfn-groundstation-config-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-config.html#cfn-groundstation-config-name
       */
      Name: string;
    }
    
    
    interface Config extends Resource<"AWS::GroundStation::Config">, ConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Config(id: string, props: ConfigProps): Promise<Config>;
  }
  namespace GroundStation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-dataflowendpointgroup.html
     */
    interface DataflowEndpointGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-dataflowendpointgroup.html#cfn-groundstation-dataflowendpointgroup-contactpostpassdurationseconds
       */
      ContactPostPassDurationSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-dataflowendpointgroup.html#cfn-groundstation-dataflowendpointgroup-endpointdetails
       */
      EndpointDetails: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-dataflowendpointgroup.html#cfn-groundstation-dataflowendpointgroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-dataflowendpointgroup.html#cfn-groundstation-dataflowendpointgroup-contactprepassdurationseconds
       */
      ContactPrePassDurationSeconds?: number;
    }
    
    
    interface DataflowEndpointGroup extends Resource<"AWS::GroundStation::DataflowEndpointGroup">, DataflowEndpointGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataflowEndpointGroup(id: string, props: DataflowEndpointGroupProps): Promise<DataflowEndpointGroup>;
  }
  namespace GroundStation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-missionprofile.html
     */
    interface MissionProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-missionprofile.html#cfn-groundstation-missionprofile-streamskmskey
       */
      StreamsKmsKey?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-missionprofile.html#cfn-groundstation-missionprofile-contactpostpassdurationseconds
       */
      ContactPostPassDurationSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-missionprofile.html#cfn-groundstation-missionprofile-minimumviablecontactdurationseconds
       */
      MinimumViableContactDurationSeconds: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-missionprofile.html#cfn-groundstation-missionprofile-dataflowedges
       */
      DataflowEdges: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-missionprofile.html#cfn-groundstation-missionprofile-streamskmsrole
       */
      StreamsKmsRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-missionprofile.html#cfn-groundstation-missionprofile-trackingconfigarn
       */
      TrackingConfigArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-missionprofile.html#cfn-groundstation-missionprofile-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-missionprofile.html#cfn-groundstation-missionprofile-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-groundstation-missionprofile.html#cfn-groundstation-missionprofile-contactprepassdurationseconds
       */
      ContactPrePassDurationSeconds?: number;
    }
    
    
    interface MissionProfile extends Resource<"AWS::GroundStation::MissionProfile">, MissionProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MissionProfile(id: string, props: MissionProfileProps): Promise<MissionProfile>;
  }
  namespace GuardDuty {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html
     */
    interface DetectorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html#cfn-guardduty-detector-findingpublishingfrequency
       */
      FindingPublishingFrequency?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html#cfn-guardduty-detector-datasources
       */
      DataSources?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html#cfn-guardduty-detector-enable
       */
      Enable: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html#cfn-guardduty-detector-features
       */
      Features?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-detector.html#cfn-guardduty-detector-tags
       */
      Tags?: {}[];
    }
    
    
    interface Detector extends Resource<"AWS::GuardDuty::Detector">, DetectorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Detector(id: string, props: DetectorProps): Promise<Detector>;
  }
  namespace GuardDuty {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html
     */
    interface FilterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html#cfn-guardduty-filter-action
       */
      Action?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html#cfn-guardduty-filter-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html#cfn-guardduty-filter-detectorid
       */
      DetectorId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html#cfn-guardduty-filter-findingcriteria
       */
      FindingCriteria: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html#cfn-guardduty-filter-rank
       */
      Rank?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html#cfn-guardduty-filter-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-filter.html#cfn-guardduty-filter-name
       */
      Name: string;
    }
    
    
    interface Filter extends Resource<"AWS::GuardDuty::Filter">, FilterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Filter(id: string, props: FilterProps): Promise<Filter>;
  }
  namespace GuardDuty {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html
     */
    interface IPSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html#cfn-guardduty-ipset-format
       */
      Format: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html#cfn-guardduty-ipset-activate
       */
      Activate?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html#cfn-guardduty-ipset-detectorid
       */
      DetectorId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html#cfn-guardduty-ipset-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html#cfn-guardduty-ipset-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-ipset.html#cfn-guardduty-ipset-location
       */
      Location: string;
    }
    
    
    interface IPSet extends Resource<"AWS::GuardDuty::IPSet">, IPSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IPSet(id: string, props: IPSetProps): Promise<IPSet>;
  }
  namespace GuardDuty {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html
     */
    interface MalwareProtectionPlanProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html#cfn-guardduty-malwareprotectionplan-role
       */
      Role: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html#cfn-guardduty-malwareprotectionplan-protectedresource
       */
      ProtectedResource: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html#cfn-guardduty-malwareprotectionplan-actions
       */
      Actions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-malwareprotectionplan.html#cfn-guardduty-malwareprotectionplan-tags
       */
      Tags?: {}[];
    }
    
    
    interface MalwareProtectionPlan extends Resource<"AWS::GuardDuty::MalwareProtectionPlan">, MalwareProtectionPlanProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MalwareProtectionPlan(id: string, props: MalwareProtectionPlanProps): Promise<MalwareProtectionPlan>;
  }
  namespace GuardDuty {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-master.html
     */
    interface MasterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-master.html#cfn-guardduty-master-detectorid
       */
      DetectorId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-master.html#cfn-guardduty-master-masterid
       */
      MasterId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-master.html#cfn-guardduty-master-invitationid
       */
      InvitationId?: string;
    }
    
    
    interface Master extends Resource<"AWS::GuardDuty::Master">, MasterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Master(id: string, props: MasterProps): Promise<Master>;
  }
  namespace GuardDuty {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html
     */
    interface MemberProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html#cfn-guardduty-member-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html#cfn-guardduty-member-memberid
       */
      MemberId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html#cfn-guardduty-member-email
       */
      Email: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html#cfn-guardduty-member-message
       */
      Message?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html#cfn-guardduty-member-disableemailnotification
       */
      DisableEmailNotification?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-member.html#cfn-guardduty-member-detectorid
       */
      DetectorId?: string;
    }
    
    
    interface Member extends Resource<"AWS::GuardDuty::Member">, MemberProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Member(id: string, props: MemberProps): Promise<Member>;
  }
  namespace GuardDuty {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-publishingdestination.html
     */
    interface PublishingDestinationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-publishingdestination.html#cfn-guardduty-publishingdestination-destinationproperties
       */
      DestinationProperties: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-publishingdestination.html#cfn-guardduty-publishingdestination-detectorid
       */
      DetectorId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-publishingdestination.html#cfn-guardduty-publishingdestination-destinationtype
       */
      DestinationType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-publishingdestination.html#cfn-guardduty-publishingdestination-tags
       */
      Tags?: {}[];
    }
    
    
    interface PublishingDestination extends Resource<"AWS::GuardDuty::PublishingDestination">, PublishingDestinationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PublishingDestination(id: string, props: PublishingDestinationProps): Promise<PublishingDestination>;
  }
  namespace GuardDuty {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html
     */
    interface ThreatIntelSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html#cfn-guardduty-threatintelset-format
       */
      Format: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html#cfn-guardduty-threatintelset-activate
       */
      Activate?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html#cfn-guardduty-threatintelset-detectorid
       */
      DetectorId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html#cfn-guardduty-threatintelset-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html#cfn-guardduty-threatintelset-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-guardduty-threatintelset.html#cfn-guardduty-threatintelset-location
       */
      Location: string;
    }
    
    
    interface ThreatIntelSet extends Resource<"AWS::GuardDuty::ThreatIntelSet">, ThreatIntelSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ThreatIntelSet(id: string, props: ThreatIntelSetProps): Promise<ThreatIntelSet>;
  }
  namespace HealthImaging {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthimaging-datastore.html
     */
    interface DatastoreProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthimaging-datastore.html#cfn-healthimaging-datastore-kmskeyarn
       */
      KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthimaging-datastore.html#cfn-healthimaging-datastore-datastorename
       */
      DatastoreName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthimaging-datastore.html#cfn-healthimaging-datastore-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Datastore extends Resource<"AWS::HealthImaging::Datastore">, DatastoreProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Datastore(id: string, props: DatastoreProps): Promise<Datastore>;
  }
  namespace HealthLake {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html
     */
    interface FHIRDatastoreProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html#cfn-healthlake-fhirdatastore-datastoretypeversion
       */
      DatastoreTypeVersion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html#cfn-healthlake-fhirdatastore-datastorename
       */
      DatastoreName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html#cfn-healthlake-fhirdatastore-identityproviderconfiguration
       */
      IdentityProviderConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html#cfn-healthlake-fhirdatastore-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html#cfn-healthlake-fhirdatastore-preloaddataconfig
       */
      PreloadDataConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html#cfn-healthlake-fhirdatastore-sseconfiguration
       */
      SseConfiguration?: {};
    }
    
    
    interface FHIRDatastore extends Resource<"AWS::HealthLake::FHIRDatastore">, FHIRDatastoreProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FHIRDatastore(id: string, props: FHIRDatastoreProps): Promise<FHIRDatastore>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html
     */
    interface AccessKeyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html#cfn-iam-accesskey-serial
       */
      Serial?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html#cfn-iam-accesskey-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html#cfn-iam-accesskey-username
       */
      UserName: string;
    }
    
    
    interface AccessKey extends Resource<"AWS::IAM::AccessKey">, AccessKeyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccessKey(id: string, props: AccessKeyProps): Promise<AccessKey>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-group.html
     */
    interface GroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-group.html#cfn-iam-group-groupname
       */
      GroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-group.html#cfn-iam-group-path
       */
      Path?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-group.html#cfn-iam-group-managedpolicyarns
       */
      ManagedPolicyArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-group.html#cfn-iam-group-policies
       */
      Policies?: {}[];
    }
    
    
    interface Group extends Resource<"AWS::IAM::Group">, GroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Group(id: string, props: GroupProps): Promise<Group>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-grouppolicy.html
     */
    interface GroupPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-grouppolicy.html#cfn-iam-grouppolicy-groupname
       */
      GroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-grouppolicy.html#cfn-iam-grouppolicy-policyname
       */
      PolicyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-grouppolicy.html#cfn-iam-grouppolicy-policydocument
       */
      PolicyDocument?: {
        [k: string]: unknown;
      };
    }
    
    
    interface GroupPolicy extends Resource<"AWS::IAM::GroupPolicy">, GroupPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GroupPolicy(id: string, props: GroupPolicyProps): Promise<GroupPolicy>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html
     */
    interface InstanceProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html#cfn-iam-instanceprofile-path
       */
      Path?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html#cfn-iam-instanceprofile-instanceprofilename
       */
      InstanceProfileName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html#cfn-iam-instanceprofile-roles
       */
      Roles: string[];
    }
    
    
    interface InstanceProfile extends Resource<"AWS::IAM::InstanceProfile">, InstanceProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InstanceProfile(id: string, props: InstanceProfileProps): Promise<InstanceProfile>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html
     */
    interface ManagedPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-managedpolicyname
       */
      ManagedPolicyName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-path
       */
      Path?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-groups
       */
      Groups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-policydocument
       */
      PolicyDocument: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-roles
       */
      Roles?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-users
       */
      Users?: string[];
    }
    
    
    interface ManagedPolicy extends Resource<"AWS::IAM::ManagedPolicy">, ManagedPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ManagedPolicy(id: string, props: ManagedPolicyProps): Promise<ManagedPolicy>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-oidcprovider.html
     */
    interface OIDCProviderProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-oidcprovider.html#cfn-iam-oidcprovider-clientidlist
       */
      ClientIdList?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-oidcprovider.html#cfn-iam-oidcprovider-thumbprintlist
       */
      ThumbprintList?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-oidcprovider.html#cfn-iam-oidcprovider-url
       */
      Url?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-oidcprovider.html#cfn-iam-oidcprovider-tags
       */
      Tags?: {}[];
    }
    
    
    interface OIDCProvider extends Resource<"AWS::IAM::OIDCProvider">, OIDCProviderProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function OIDCProvider(id: string, props: OIDCProviderProps): Promise<OIDCProvider>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html
     */
    interface PolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-groups
       */
      Groups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-policyname
       */
      PolicyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-policydocument
       */
      PolicyDocument: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-roles
       */
      Roles?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html#cfn-iam-policy-users
       */
      Users?: string[];
    }
    
    
    interface Policy extends Resource<"AWS::IAM::Policy">, PolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Policy(id: string, props: PolicyProps): Promise<Policy>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
     */
    interface RoleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-path
       */
      Path?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-managedpolicyarns
       */
      ManagedPolicyArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-maxsessionduration
       */
      MaxSessionDuration?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-rolename
       */
      RoleName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-policies
       */
      Policies?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-assumerolepolicydocument
       */
      AssumeRolePolicyDocument: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-permissionsboundary
       */
      PermissionsBoundary?: string;
    }
    
    
    interface Role extends Resource<"AWS::IAM::Role">, RoleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Role(id: string, props: RoleProps): Promise<Role>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-rolepolicy.html
     */
    interface RolePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-rolepolicy.html#cfn-iam-rolepolicy-rolename
       */
      RoleName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-rolepolicy.html#cfn-iam-rolepolicy-policyname
       */
      PolicyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-rolepolicy.html#cfn-iam-rolepolicy-policydocument
       */
      PolicyDocument?: {
        [k: string]: unknown;
      };
    }
    
    
    interface RolePolicy extends Resource<"AWS::IAM::RolePolicy">, RolePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RolePolicy(id: string, props: RolePolicyProps): Promise<RolePolicy>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-samlprovider.html
     */
    interface SAMLProviderProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-samlprovider.html#cfn-iam-samlprovider-addprivatekey
       */
      AddPrivateKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-samlprovider.html#cfn-iam-samlprovider-removeprivatekey
       */
      RemovePrivateKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-samlprovider.html#cfn-iam-samlprovider-assertionencryptionmode
       */
      AssertionEncryptionMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-samlprovider.html#cfn-iam-samlprovider-samlmetadatadocument
       */
      SamlMetadataDocument?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-samlprovider.html#cfn-iam-samlprovider-privatekeylist
       */
      PrivateKeyList?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-samlprovider.html#cfn-iam-samlprovider-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-samlprovider.html#cfn-iam-samlprovider-name
       */
      Name?: string;
    }
    
    
    interface SAMLProvider extends Resource<"AWS::IAM::SAMLProvider">, SAMLProviderProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SAMLProvider(id: string, props: SAMLProviderProps): Promise<SAMLProvider>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servercertificate.html
     */
    interface ServerCertificateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servercertificate.html#cfn-iam-servercertificate-certificatebody
       */
      CertificateBody?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servercertificate.html#cfn-iam-servercertificate-path
       */
      Path?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servercertificate.html#cfn-iam-servercertificate-privatekey
       */
      PrivateKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servercertificate.html#cfn-iam-servercertificate-certificatechain
       */
      CertificateChain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servercertificate.html#cfn-iam-servercertificate-servercertificatename
       */
      ServerCertificateName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servercertificate.html#cfn-iam-servercertificate-tags
       */
      Tags?: {}[];
    }
    
    
    interface ServerCertificate extends Resource<"AWS::IAM::ServerCertificate">, ServerCertificateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ServerCertificate(id: string, props: ServerCertificateProps): Promise<ServerCertificate>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html
     */
    interface ServiceLinkedRoleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html#cfn-iam-servicelinkedrole-customsuffix
       */
      CustomSuffix?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html#cfn-iam-servicelinkedrole-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-servicelinkedrole.html#cfn-iam-servicelinkedrole-awsservicename
       */
      AWSServiceName?: string;
    }
    
    
    interface ServiceLinkedRole extends Resource<"AWS::IAM::ServiceLinkedRole">, ServiceLinkedRoleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ServiceLinkedRole(id: string, props: ServiceLinkedRoleProps): Promise<ServiceLinkedRole>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html
     */
    interface UserProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-path
       */
      Path?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-managedpolicyarns
       */
      ManagedPolicyArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-policies
       */
      Policies?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-username
       */
      UserName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-groups
       */
      Groups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-loginprofile
       */
      LoginProfile?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-permissionsboundary
       */
      PermissionsBoundary?: string;
    }
    
    
    interface User extends Resource<"AWS::IAM::User">, UserProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function User(id: string, props: UserProps): Promise<User>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-userpolicy.html
     */
    interface UserPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-userpolicy.html#cfn-iam-userpolicy-username
       */
      UserName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-userpolicy.html#cfn-iam-userpolicy-policyname
       */
      PolicyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-userpolicy.html#cfn-iam-userpolicy-policydocument
       */
      PolicyDocument?: {
        [k: string]: unknown;
      };
    }
    
    
    interface UserPolicy extends Resource<"AWS::IAM::UserPolicy">, UserPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserPolicy(id: string, props: UserPolicyProps): Promise<UserPolicy>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html
     */
    interface UserToGroupAdditionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html#cfn-iam-addusertogroup-groupname
       */
      GroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html#cfn-iam-addusertogroup-users
       */
      Users: string[];
    }
    
    
    interface UserToGroupAddition extends Resource<"AWS::IAM::UserToGroupAddition">, UserToGroupAdditionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserToGroupAddition(id: string, props: UserToGroupAdditionProps): Promise<UserToGroupAddition>;
  }
  namespace IAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-virtualmfadevice.html
     */
    interface VirtualMFADeviceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-virtualmfadevice.html#cfn-iam-virtualmfadevice-path
       */
      Path?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-virtualmfadevice.html#cfn-iam-virtualmfadevice-virtualmfadevicename
       */
      VirtualMfaDeviceName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-virtualmfadevice.html#cfn-iam-virtualmfadevice-users
       */
      Users: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-virtualmfadevice.html#cfn-iam-virtualmfadevice-tags
       */
      Tags?: {}[];
    }
    
    
    interface VirtualMFADevice extends Resource<"AWS::IAM::VirtualMFADevice">, VirtualMFADeviceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VirtualMFADevice(id: string, props: VirtualMFADeviceProps): Promise<VirtualMFADevice>;
  }
  namespace IVS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html
     */
    interface ChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-recordingconfigurationarn
       */
      RecordingConfigurationArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-authorized
       */
      Authorized?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-multitrackinputconfiguration
       */
      MultitrackInputConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-preset
       */
      Preset?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-containerformat
       */
      ContainerFormat?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-insecureingest
       */
      InsecureIngest?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-latencymode
       */
      LatencyMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-name
       */
      Name?: string;
    }
    
    
    interface Channel extends Resource<"AWS::IVS::Channel">, ChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Channel(id: string, props: ChannelProps): Promise<Channel>;
  }
  namespace IVS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-encoderconfiguration.html
     */
    interface EncoderConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-encoderconfiguration.html#cfn-ivs-encoderconfiguration-video
       */
      Video?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-encoderconfiguration.html#cfn-ivs-encoderconfiguration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-encoderconfiguration.html#cfn-ivs-encoderconfiguration-name
       */
      Name?: string;
    }
    
    
    interface EncoderConfiguration extends Resource<"AWS::IVS::EncoderConfiguration">, EncoderConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EncoderConfiguration(id: string, props: EncoderConfigurationProps): Promise<EncoderConfiguration>;
  }
  namespace IVS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-ingestconfiguration.html
     */
    interface IngestConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-ingestconfiguration.html#cfn-ivs-ingestconfiguration-userid
       */
      UserId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-ingestconfiguration.html#cfn-ivs-ingestconfiguration-ingestprotocol
       */
      IngestProtocol?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-ingestconfiguration.html#cfn-ivs-ingestconfiguration-stagearn
       */
      StageArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-ingestconfiguration.html#cfn-ivs-ingestconfiguration-insecureingest
       */
      InsecureIngest?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-ingestconfiguration.html#cfn-ivs-ingestconfiguration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-ingestconfiguration.html#cfn-ivs-ingestconfiguration-name
       */
      Name?: string;
    }
    
    
    interface IngestConfiguration extends Resource<"AWS::IVS::IngestConfiguration">, IngestConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IngestConfiguration(id: string, props: IngestConfigurationProps): Promise<IngestConfiguration>;
  }
  namespace IVS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-playbackkeypair.html
     */
    interface PlaybackKeyPairProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-playbackkeypair.html#cfn-ivs-playbackkeypair-publickeymaterial
       */
      PublicKeyMaterial?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-playbackkeypair.html#cfn-ivs-playbackkeypair-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-playbackkeypair.html#cfn-ivs-playbackkeypair-name
       */
      Name?: string;
    }
    
    
    interface PlaybackKeyPair extends Resource<"AWS::IVS::PlaybackKeyPair">, PlaybackKeyPairProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PlaybackKeyPair(id: string, props: PlaybackKeyPairProps): Promise<PlaybackKeyPair>;
  }
  namespace IVS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-playbackrestrictionpolicy.html
     */
    interface PlaybackRestrictionPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-playbackrestrictionpolicy.html#cfn-ivs-playbackrestrictionpolicy-allowedorigins
       */
      AllowedOrigins: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-playbackrestrictionpolicy.html#cfn-ivs-playbackrestrictionpolicy-enablestrictoriginenforcement
       */
      EnableStrictOriginEnforcement?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-playbackrestrictionpolicy.html#cfn-ivs-playbackrestrictionpolicy-allowedcountries
       */
      AllowedCountries: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-playbackrestrictionpolicy.html#cfn-ivs-playbackrestrictionpolicy-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-playbackrestrictionpolicy.html#cfn-ivs-playbackrestrictionpolicy-name
       */
      Name?: string;
    }
    
    
    interface PlaybackRestrictionPolicy extends Resource<"AWS::IVS::PlaybackRestrictionPolicy">, PlaybackRestrictionPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PlaybackRestrictionPolicy(id: string, props: PlaybackRestrictionPolicyProps): Promise<PlaybackRestrictionPolicy>;
  }
  namespace IVS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-publickey.html
     */
    interface PublicKeyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-publickey.html#cfn-ivs-publickey-publickeymaterial
       */
      PublicKeyMaterial?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-publickey.html#cfn-ivs-publickey-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-publickey.html#cfn-ivs-publickey-name
       */
      Name?: string;
    }
    
    
    interface PublicKey extends Resource<"AWS::IVS::PublicKey">, PublicKeyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PublicKey(id: string, props: PublicKeyProps): Promise<PublicKey>;
  }
  namespace IVS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html
     */
    interface RecordingConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-destinationconfiguration
       */
      DestinationConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-renditionconfiguration
       */
      RenditionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-recordingreconnectwindowseconds
       */
      RecordingReconnectWindowSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-thumbnailconfiguration
       */
      ThumbnailConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-recordingconfiguration.html#cfn-ivs-recordingconfiguration-name
       */
      Name?: string;
    }
    
    
    interface RecordingConfiguration extends Resource<"AWS::IVS::RecordingConfiguration">, RecordingConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RecordingConfiguration(id: string, props: RecordingConfigurationProps): Promise<RecordingConfiguration>;
  }
  namespace IVS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-stage.html
     */
    interface StageProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-stage.html#cfn-ivs-stage-autoparticipantrecordingconfiguration
       */
      AutoParticipantRecordingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-stage.html#cfn-ivs-stage-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-stage.html#cfn-ivs-stage-name
       */
      Name?: string;
    }
    
    
    interface Stage extends Resource<"AWS::IVS::Stage">, StageProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Stage(id: string, props: StageProps): Promise<Stage>;
  }
  namespace IVS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-storageconfiguration.html
     */
    interface StorageConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-storageconfiguration.html#cfn-ivs-storageconfiguration-s3
       */
      S3: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-storageconfiguration.html#cfn-ivs-storageconfiguration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-storageconfiguration.html#cfn-ivs-storageconfiguration-name
       */
      Name?: string;
    }
    
    
    interface StorageConfiguration extends Resource<"AWS::IVS::StorageConfiguration">, StorageConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StorageConfiguration(id: string, props: StorageConfigurationProps): Promise<StorageConfiguration>;
  }
  namespace IVS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-streamkey.html
     */
    interface StreamKeyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-streamkey.html#cfn-ivs-streamkey-channelarn
       */
      ChannelArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-streamkey.html#cfn-ivs-streamkey-tags
       */
      Tags?: {}[];
    }
    
    
    interface StreamKey extends Resource<"AWS::IVS::StreamKey">, StreamKeyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StreamKey(id: string, props: StreamKeyProps): Promise<StreamKey>;
  }
  namespace IVSChat {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivschat-loggingconfiguration.html
     */
    interface LoggingConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivschat-loggingconfiguration.html#cfn-ivschat-loggingconfiguration-destinationconfiguration
       */
      DestinationConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivschat-loggingconfiguration.html#cfn-ivschat-loggingconfiguration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivschat-loggingconfiguration.html#cfn-ivschat-loggingconfiguration-name
       */
      Name?: string;
    }
    
    
    interface LoggingConfiguration extends Resource<"AWS::IVSChat::LoggingConfiguration">, LoggingConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LoggingConfiguration(id: string, props: LoggingConfigurationProps): Promise<LoggingConfiguration>;
  }
  namespace IVSChat {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivschat-room.html
     */
    interface RoomProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivschat-room.html#cfn-ivschat-room-maximummessageratepersecond
       */
      MaximumMessageRatePerSecond?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivschat-room.html#cfn-ivschat-room-maximummessagelength
       */
      MaximumMessageLength?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivschat-room.html#cfn-ivschat-room-messagereviewhandler
       */
      MessageReviewHandler?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivschat-room.html#cfn-ivschat-room-loggingconfigurationidentifiers
       */
      LoggingConfigurationIdentifiers?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivschat-room.html#cfn-ivschat-room-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivschat-room.html#cfn-ivschat-room-name
       */
      Name?: string;
    }
    
    
    interface Room extends Resource<"AWS::IVSChat::Room">, RoomProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Room(id: string, props: RoomProps): Promise<Room>;
  }
  namespace IdentityStore {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-identitystore-group.html
     */
    interface GroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-identitystore-group.html#cfn-identitystore-group-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-identitystore-group.html#cfn-identitystore-group-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-identitystore-group.html#cfn-identitystore-group-identitystoreid
       */
      IdentityStoreId: string;
    }
    
    
    interface Group extends Resource<"AWS::IdentityStore::Group">, GroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Group(id: string, props: GroupProps): Promise<Group>;
  }
  namespace IdentityStore {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-identitystore-groupmembership.html
     */
    interface GroupMembershipProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-identitystore-groupmembership.html#cfn-identitystore-groupmembership-memberid
       */
      MemberId: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-identitystore-groupmembership.html#cfn-identitystore-groupmembership-identitystoreid
       */
      IdentityStoreId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-identitystore-groupmembership.html#cfn-identitystore-groupmembership-groupid
       */
      GroupId: string;
    }
    
    
    interface GroupMembership extends Resource<"AWS::IdentityStore::GroupMembership">, GroupMembershipProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GroupMembership(id: string, props: GroupMembershipProps): Promise<GroupMembership>;
  }
  namespace ImageBuilder {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html
     */
    interface ComponentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html#cfn-imagebuilder-component-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html#cfn-imagebuilder-component-supportedosversions
       */
      SupportedOsVersions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html#cfn-imagebuilder-component-platform
       */
      Platform: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html#cfn-imagebuilder-component-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html#cfn-imagebuilder-component-version
       */
      Version: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html#cfn-imagebuilder-component-changedescription
       */
      ChangeDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html#cfn-imagebuilder-component-data
       */
      Data?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html#cfn-imagebuilder-component-uri
       */
      Uri?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html#cfn-imagebuilder-component-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-component.html#cfn-imagebuilder-component-name
       */
      Name: string;
    }
    
    
    interface Component extends Resource<"AWS::ImageBuilder::Component">, ComponentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Component(id: string, props: ComponentProps): Promise<Component>;
  }
  namespace ImageBuilder {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html
     */
    interface ContainerRecipeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-workingdirectory
       */
      WorkingDirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-parentimage
       */
      ParentImage: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-instanceconfiguration
       */
      InstanceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-containertype
       */
      ContainerType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-dockerfiletemplatedata
       */
      DockerfileTemplateData?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-components
       */
      Components: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-targetrepository
       */
      TargetRepository: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-version
       */
      Version: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-platformoverride
       */
      PlatformOverride?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-imageosversionoverride
       */
      ImageOsVersionOverride?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-containerrecipe.html#cfn-imagebuilder-containerrecipe-dockerfiletemplateuri
       */
      DockerfileTemplateUri?: string;
    }
    
    
    interface ContainerRecipe extends Resource<"AWS::ImageBuilder::ContainerRecipe">, ContainerRecipeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ContainerRecipe(id: string, props: ContainerRecipeProps): Promise<ContainerRecipe>;
  }
  namespace ImageBuilder {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-distributionconfiguration.html
     */
    interface DistributionConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-distributionconfiguration.html#cfn-imagebuilder-distributionconfiguration-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-distributionconfiguration.html#cfn-imagebuilder-distributionconfiguration-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-distributionconfiguration.html#cfn-imagebuilder-distributionconfiguration-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-distributionconfiguration.html#cfn-imagebuilder-distributionconfiguration-distributions
       */
      Distributions: {}[];
    }
    
    
    interface DistributionConfiguration extends Resource<"AWS::ImageBuilder::DistributionConfiguration">, DistributionConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DistributionConfiguration(id: string, props: DistributionConfigurationProps): Promise<DistributionConfiguration>;
  }
  namespace ImageBuilder {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html
     */
    interface ImageProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-imagescanningconfiguration
       */
      ImageScanningConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-infrastructureconfigurationarn
       */
      InfrastructureConfigurationArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-imagerecipearn
       */
      ImageRecipeArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-distributionconfigurationarn
       */
      DistributionConfigurationArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-containerrecipearn
       */
      ContainerRecipeArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-workflows
       */
      Workflows?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-imagetestsconfiguration
       */
      ImageTestsConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-enhancedimagemetadataenabled
       */
      EnhancedImageMetadataEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-executionrole
       */
      ExecutionRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Image extends Resource<"AWS::ImageBuilder::Image">, ImageProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Image(id: string, props: ImageProps): Promise<Image>;
  }
  namespace ImageBuilder {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html
     */
    interface ImagePipelineProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-imagescanningconfiguration
       */
      ImageScanningConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-containerrecipearn
       */
      ContainerRecipeArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-workflows
       */
      Workflows?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-infrastructureconfigurationarn
       */
      InfrastructureConfigurationArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-imagerecipearn
       */
      ImageRecipeArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-distributionconfigurationarn
       */
      DistributionConfigurationArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-schedule
       */
      Schedule?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-imagetestsconfiguration
       */
      ImageTestsConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-enhancedimagemetadataenabled
       */
      EnhancedImageMetadataEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-executionrole
       */
      ExecutionRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface ImagePipeline extends Resource<"AWS::ImageBuilder::ImagePipeline">, ImagePipelineProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ImagePipeline(id: string, props: ImagePipelineProps): Promise<ImagePipeline>;
  }
  namespace ImageBuilder {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagerecipe.html
     */
    interface ImageRecipeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagerecipe.html#cfn-imagebuilder-imagerecipe-components
       */
      Components: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagerecipe.html#cfn-imagebuilder-imagerecipe-workingdirectory
       */
      WorkingDirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagerecipe.html#cfn-imagebuilder-imagerecipe-parentimage
       */
      ParentImage: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagerecipe.html#cfn-imagebuilder-imagerecipe-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagerecipe.html#cfn-imagebuilder-imagerecipe-version
       */
      Version: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagerecipe.html#cfn-imagebuilder-imagerecipe-blockdevicemappings
       */
      BlockDeviceMappings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagerecipe.html#cfn-imagebuilder-imagerecipe-additionalinstanceconfiguration
       */
      AdditionalInstanceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagerecipe.html#cfn-imagebuilder-imagerecipe-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagerecipe.html#cfn-imagebuilder-imagerecipe-name
       */
      Name: string;
    }
    
    
    interface ImageRecipe extends Resource<"AWS::ImageBuilder::ImageRecipe">, ImageRecipeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ImageRecipe(id: string, props: ImageRecipeProps): Promise<ImageRecipe>;
  }
  namespace ImageBuilder {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html
     */
    interface InfrastructureConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-logging
       */
      Logging?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-keypair
       */
      KeyPair?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-instanceprofilename
       */
      InstanceProfileName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-resourcetags
       */
      ResourceTags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-terminateinstanceonfailure
       */
      TerminateInstanceOnFailure?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-subnetid
       */
      SubnetId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-placement
       */
      Placement?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-instancemetadataoptions
       */
      InstanceMetadataOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-instancetypes
       */
      InstanceTypes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-snstopicarn
       */
      SnsTopicArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface InfrastructureConfiguration extends Resource<"AWS::ImageBuilder::InfrastructureConfiguration">, InfrastructureConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InfrastructureConfiguration(id: string, props: InfrastructureConfigurationProps): Promise<InfrastructureConfiguration>;
  }
  namespace ImageBuilder {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-lifecyclepolicy.html
     */
    interface LifecyclePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-lifecyclepolicy.html#cfn-imagebuilder-lifecyclepolicy-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-lifecyclepolicy.html#cfn-imagebuilder-lifecyclepolicy-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-lifecyclepolicy.html#cfn-imagebuilder-lifecyclepolicy-resourcetype
       */
      ResourceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-lifecyclepolicy.html#cfn-imagebuilder-lifecyclepolicy-policydetails
       */
      PolicyDetails: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-lifecyclepolicy.html#cfn-imagebuilder-lifecyclepolicy-executionrole
       */
      ExecutionRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-lifecyclepolicy.html#cfn-imagebuilder-lifecyclepolicy-resourceselection
       */
      ResourceSelection: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-lifecyclepolicy.html#cfn-imagebuilder-lifecyclepolicy-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-lifecyclepolicy.html#cfn-imagebuilder-lifecyclepolicy-name
       */
      Name: string;
    }
    
    
    interface LifecyclePolicy extends Resource<"AWS::ImageBuilder::LifecyclePolicy">, LifecyclePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LifecyclePolicy(id: string, props: LifecyclePolicyProps): Promise<LifecyclePolicy>;
  }
  namespace ImageBuilder {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html
     */
    interface WorkflowProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-version
       */
      Version: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-changedescription
       */
      ChangeDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-data
       */
      Data?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-uri
       */
      Uri?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-name
       */
      Name: string;
    }
    
    
    interface Workflow extends Resource<"AWS::ImageBuilder::Workflow">, WorkflowProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Workflow(id: string, props: WorkflowProps): Promise<Workflow>;
  }
  namespace Inspector {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttarget.html
     */
    interface AssessmentTargetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttarget.html#cfn-inspector-assessmenttarget-assessmenttargetname
       */
      AssessmentTargetName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttarget.html#cfn-inspector-assessmenttarget-resourcegrouparn
       */
      ResourceGroupArn?: string;
    }
    
    
    interface AssessmentTarget extends Resource<"AWS::Inspector::AssessmentTarget">, AssessmentTargetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AssessmentTarget(id: string, props: AssessmentTargetProps): Promise<AssessmentTarget>;
  }
  namespace Inspector {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html
     */
    interface AssessmentTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html#cfn-inspector-assessmenttemplate-assessmenttargetarn
       */
      AssessmentTargetArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html#cfn-inspector-assessmenttemplate-durationinseconds
       */
      DurationInSeconds: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html#cfn-inspector-assessmenttemplate-assessmenttemplatename
       */
      AssessmentTemplateName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html#cfn-inspector-assessmenttemplate-rulespackagearns
       */
      RulesPackageArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html#cfn-inspector-assessmenttemplate-userattributesforfindings
       */
      UserAttributesForFindings?: {}[];
    }
    
    
    interface AssessmentTemplate extends Resource<"AWS::Inspector::AssessmentTemplate">, AssessmentTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AssessmentTemplate(id: string, props: AssessmentTemplateProps): Promise<AssessmentTemplate>;
  }
  namespace Inspector {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-resourcegroup.html
     */
    interface ResourceGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-resourcegroup.html#cfn-inspector-resourcegroup-resourcegrouptags
       */
      ResourceGroupTags: {}[];
    }
    
    
    interface ResourceGroup extends Resource<"AWS::Inspector::ResourceGroup">, ResourceGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceGroup(id: string, props: ResourceGroupProps): Promise<ResourceGroup>;
  }
  namespace InspectorV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-cisscanconfiguration.html
     */
    interface CisScanConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-cisscanconfiguration.html#cfn-inspectorv2-cisscanconfiguration-securitylevel
       */
      SecurityLevel: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-cisscanconfiguration.html#cfn-inspectorv2-cisscanconfiguration-schedule
       */
      Schedule: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-cisscanconfiguration.html#cfn-inspectorv2-cisscanconfiguration-targets
       */
      Targets: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-cisscanconfiguration.html#cfn-inspectorv2-cisscanconfiguration-scanname
       */
      ScanName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-cisscanconfiguration.html#cfn-inspectorv2-cisscanconfiguration-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface CisScanConfiguration extends Resource<"AWS::InspectorV2::CisScanConfiguration">, CisScanConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CisScanConfiguration(id: string, props: CisScanConfigurationProps): Promise<CisScanConfiguration>;
  }
  namespace InspectorV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-filter.html
     */
    interface FilterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-filter.html#cfn-inspectorv2-filter-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-filter.html#cfn-inspectorv2-filter-filtercriteria
       */
      FilterCriteria: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-filter.html#cfn-inspectorv2-filter-filteraction
       */
      FilterAction: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspectorv2-filter.html#cfn-inspectorv2-filter-name
       */
      Name: string;
    }
    
    
    interface Filter extends Resource<"AWS::InspectorV2::Filter">, FilterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Filter(id: string, props: FilterProps): Promise<Filter>;
  }
  namespace InternetMonitor {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-internetmonitor-monitor.html
     */
    interface MonitorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-internetmonitor-monitor.html#cfn-internetmonitor-monitor-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-internetmonitor-monitor.html#cfn-internetmonitor-monitor-linkedaccountid
       */
      LinkedAccountId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-internetmonitor-monitor.html#cfn-internetmonitor-monitor-trafficpercentagetomonitor
       */
      TrafficPercentageToMonitor?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-internetmonitor-monitor.html#cfn-internetmonitor-monitor-includelinkedaccounts
       */
      IncludeLinkedAccounts?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-internetmonitor-monitor.html#cfn-internetmonitor-monitor-healtheventsconfig
       */
      HealthEventsConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-internetmonitor-monitor.html#cfn-internetmonitor-monitor-resourcestoadd
       */
      ResourcesToAdd?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-internetmonitor-monitor.html#cfn-internetmonitor-monitor-internetmeasurementslogdelivery
       */
      InternetMeasurementsLogDelivery?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-internetmonitor-monitor.html#cfn-internetmonitor-monitor-monitorname
       */
      MonitorName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-internetmonitor-monitor.html#cfn-internetmonitor-monitor-resourcestoremove
       */
      ResourcesToRemove?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-internetmonitor-monitor.html#cfn-internetmonitor-monitor-resources
       */
      Resources?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-internetmonitor-monitor.html#cfn-internetmonitor-monitor-maxcitynetworkstomonitor
       */
      MaxCityNetworksToMonitor?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-internetmonitor-monitor.html#cfn-internetmonitor-monitor-tags
       */
      Tags?: {}[];
    }
    
    
    interface Monitor extends Resource<"AWS::InternetMonitor::Monitor">, MonitorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Monitor(id: string, props: MonitorProps): Promise<Monitor>;
  }
  namespace Invoicing {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-invoicing-invoiceunit.html
     */
    interface InvoiceUnitProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-invoicing-invoiceunit.html#cfn-invoicing-invoiceunit-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-invoicing-invoiceunit.html#cfn-invoicing-invoiceunit-taxinheritancedisabled
       */
      TaxInheritanceDisabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-invoicing-invoiceunit.html#cfn-invoicing-invoiceunit-resourcetags
       */
      ResourceTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-invoicing-invoiceunit.html#cfn-invoicing-invoiceunit-rule
       */
      Rule: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-invoicing-invoiceunit.html#cfn-invoicing-invoiceunit-invoicereceiver
       */
      InvoiceReceiver: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-invoicing-invoiceunit.html#cfn-invoicing-invoiceunit-name
       */
      Name: string;
    }
    
    
    interface InvoiceUnit extends Resource<"AWS::Invoicing::InvoiceUnit">, InvoiceUnitProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InvoiceUnit(id: string, props: InvoiceUnitProps): Promise<InvoiceUnit>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-accountauditconfiguration.html
     */
    interface AccountAuditConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-accountauditconfiguration.html#cfn-iot-accountauditconfiguration-accountid
       */
      AccountId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-accountauditconfiguration.html#cfn-iot-accountauditconfiguration-auditcheckconfigurations
       */
      AuditCheckConfigurations: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-accountauditconfiguration.html#cfn-iot-accountauditconfiguration-auditnotificationtargetconfigurations
       */
      AuditNotificationTargetConfigurations?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-accountauditconfiguration.html#cfn-iot-accountauditconfiguration-rolearn
       */
      RoleArn: string;
    }
    
    
    interface AccountAuditConfiguration extends Resource<"AWS::IoT::AccountAuditConfiguration">, AccountAuditConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccountAuditConfiguration(id: string, props: AccountAuditConfigurationProps): Promise<AccountAuditConfiguration>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html
     */
    interface AuthorizerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-tokenkeyname
       */
      TokenKeyName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-enablecachingforhttp
       */
      EnableCachingForHttp?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-authorizername
       */
      AuthorizerName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-tokensigningpublickeys
       */
      TokenSigningPublicKeys?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-signingdisabled
       */
      SigningDisabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-authorizerfunctionarn
       */
      AuthorizerFunctionArn: string;
    }
    
    
    interface Authorizer extends Resource<"AWS::IoT::Authorizer">, AuthorizerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Authorizer(id: string, props: AuthorizerProps): Promise<Authorizer>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-billinggroup.html
     */
    interface BillingGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-billinggroup.html#cfn-iot-billinggroup-billinggroupname
       */
      BillingGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-billinggroup.html#cfn-iot-billinggroup-billinggroupproperties
       */
      BillingGroupProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-billinggroup.html#cfn-iot-billinggroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface BillingGroup extends Resource<"AWS::IoT::BillingGroup">, BillingGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BillingGroup(id: string, props: BillingGroupProps): Promise<BillingGroup>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-cacertificate.html
     */
    interface CACertificateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-cacertificate.html#cfn-iot-cacertificate-status
       */
      Status: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-cacertificate.html#cfn-iot-cacertificate-cacertificatepem
       */
      CACertificatePem: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-cacertificate.html#cfn-iot-cacertificate-certificatemode
       */
      CertificateMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-cacertificate.html#cfn-iot-cacertificate-autoregistrationstatus
       */
      AutoRegistrationStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-cacertificate.html#cfn-iot-cacertificate-removeautoregistration
       */
      RemoveAutoRegistration?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-cacertificate.html#cfn-iot-cacertificate-registrationconfig
       */
      RegistrationConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-cacertificate.html#cfn-iot-cacertificate-verificationcertificatepem
       */
      VerificationCertificatePem?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-cacertificate.html#cfn-iot-cacertificate-tags
       */
      Tags?: {}[];
    }
    
    
    interface CACertificate extends Resource<"AWS::IoT::CACertificate">, CACertificateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CACertificate(id: string, props: CACertificateProps): Promise<CACertificate>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificate.html
     */
    interface CertificateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificate.html#cfn-iot-certificate-status
       */
      Status: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificate.html#cfn-iot-certificate-cacertificatepem
       */
      CACertificatePem?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificate.html#cfn-iot-certificate-certificatemode
       */
      CertificateMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificate.html#cfn-iot-certificate-certificatesigningrequest
       */
      CertificateSigningRequest?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificate.html#cfn-iot-certificate-certificatepem
       */
      CertificatePem?: string;
    }
    
    
    interface Certificate extends Resource<"AWS::IoT::Certificate">, CertificateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Certificate(id: string, props: CertificateProps): Promise<Certificate>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificateprovider.html
     */
    interface CertificateProviderProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificateprovider.html#cfn-iot-certificateprovider-lambdafunctionarn
       */
      LambdaFunctionArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificateprovider.html#cfn-iot-certificateprovider-certificateprovidername
       */
      CertificateProviderName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificateprovider.html#cfn-iot-certificateprovider-accountdefaultforoperations
       */
      AccountDefaultForOperations: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-certificateprovider.html#cfn-iot-certificateprovider-tags
       */
      Tags?: {}[];
    }
    
    
    interface CertificateProvider extends Resource<"AWS::IoT::CertificateProvider">, CertificateProviderProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CertificateProvider(id: string, props: CertificateProviderProps): Promise<CertificateProvider>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-command.html
     */
    interface CommandProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-command.html#cfn-iot-command-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-command.html#cfn-iot-command-lastupdatedat
       */
      LastUpdatedAt?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-command.html#cfn-iot-command-deprecated
       */
      Deprecated?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-command.html#cfn-iot-command-createdat
       */
      CreatedAt?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-command.html#cfn-iot-command-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-command.html#cfn-iot-command-payload
       */
      Payload?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-command.html#cfn-iot-command-commandid
       */
      CommandId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-command.html#cfn-iot-command-pendingdeletion
       */
      PendingDeletion?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-command.html#cfn-iot-command-mandatoryparameters
       */
      MandatoryParameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-command.html#cfn-iot-command-namespace
       */
      Namespace?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-command.html#cfn-iot-command-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-command.html#cfn-iot-command-tags
       */
      Tags?: {}[];
    }
    
    
    interface Command extends Resource<"AWS::IoT::Command">, CommandProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Command(id: string, props: CommandProps): Promise<Command>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-custommetric.html
     */
    interface CustomMetricProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-custommetric.html#cfn-iot-custommetric-metricname
       */
      MetricName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-custommetric.html#cfn-iot-custommetric-metrictype
       */
      MetricType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-custommetric.html#cfn-iot-custommetric-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-custommetric.html#cfn-iot-custommetric-tags
       */
      Tags?: {}[];
    }
    
    
    interface CustomMetric extends Resource<"AWS::IoT::CustomMetric">, CustomMetricProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CustomMetric(id: string, props: CustomMetricProps): Promise<CustomMetric>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-dimension.html
     */
    interface DimensionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-dimension.html#cfn-iot-dimension-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-dimension.html#cfn-iot-dimension-stringvalues
       */
      StringValues: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-dimension.html#cfn-iot-dimension-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-dimension.html#cfn-iot-dimension-name
       */
      Name?: string;
    }
    
    
    interface Dimension extends Resource<"AWS::IoT::Dimension">, DimensionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Dimension(id: string, props: DimensionProps): Promise<Dimension>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html
     */
    interface DomainConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-applicationprotocol
       */
      ApplicationProtocol?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-clientcertificateconfig
       */
      ClientCertificateConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-domainconfigurationname
       */
      DomainConfigurationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-domainname
       */
      DomainName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-domainconfigurationstatus
       */
      DomainConfigurationStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-servercertificatearns
       */
      ServerCertificateArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-servercertificateconfig
       */
      ServerCertificateConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-authorizerconfig
       */
      AuthorizerConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-servicetype
       */
      ServiceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-validationcertificatearn
       */
      ValidationCertificateArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-tlsconfig
       */
      TlsConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-authenticationtype
       */
      AuthenticationType?: string;
    }
    
    
    interface DomainConfiguration extends Resource<"AWS::IoT::DomainConfiguration">, DomainConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DomainConfiguration(id: string, props: DomainConfigurationProps): Promise<DomainConfiguration>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-fleetmetric.html
     */
    interface FleetMetricProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-fleetmetric.html#cfn-iot-fleetmetric-indexname
       */
      IndexName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-fleetmetric.html#cfn-iot-fleetmetric-metricname
       */
      MetricName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-fleetmetric.html#cfn-iot-fleetmetric-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-fleetmetric.html#cfn-iot-fleetmetric-querystring
       */
      QueryString?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-fleetmetric.html#cfn-iot-fleetmetric-period
       */
      Period?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-fleetmetric.html#cfn-iot-fleetmetric-queryversion
       */
      QueryVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-fleetmetric.html#cfn-iot-fleetmetric-unit
       */
      Unit?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-fleetmetric.html#cfn-iot-fleetmetric-aggregationtype
       */
      AggregationType?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-fleetmetric.html#cfn-iot-fleetmetric-aggregationfield
       */
      AggregationField?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-fleetmetric.html#cfn-iot-fleetmetric-tags
       */
      Tags?: {}[];
    }
    
    
    interface FleetMetric extends Resource<"AWS::IoT::FleetMetric">, FleetMetricProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FleetMetric(id: string, props: FleetMetricProps): Promise<FleetMetric>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html
     */
    interface JobTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html#cfn-iot-jobtemplate-timeoutconfig
       */
      TimeoutConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html#cfn-iot-jobtemplate-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html#cfn-iot-jobtemplate-jobexecutionsretryconfig
       */
      JobExecutionsRetryConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html#cfn-iot-jobtemplate-abortconfig
       */
      AbortConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html#cfn-iot-jobtemplate-jobtemplateid
       */
      JobTemplateId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html#cfn-iot-jobtemplate-document
       */
      Document?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html#cfn-iot-jobtemplate-destinationpackageversions
       */
      DestinationPackageVersions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html#cfn-iot-jobtemplate-jobarn
       */
      JobArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html#cfn-iot-jobtemplate-jobexecutionsrolloutconfig
       */
      JobExecutionsRolloutConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html#cfn-iot-jobtemplate-documentsource
       */
      DocumentSource?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html#cfn-iot-jobtemplate-maintenancewindows
       */
      MaintenanceWindows?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html#cfn-iot-jobtemplate-presignedurlconfig
       */
      PresignedUrlConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-jobtemplate.html#cfn-iot-jobtemplate-tags
       */
      Tags?: {}[];
    }
    
    
    interface JobTemplate extends Resource<"AWS::IoT::JobTemplate">, JobTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function JobTemplate(id: string, props: JobTemplateProps): Promise<JobTemplate>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-logging.html
     */
    interface LoggingProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-logging.html#cfn-iot-logging-accountid
       */
      AccountId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-logging.html#cfn-iot-logging-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-logging.html#cfn-iot-logging-defaultloglevel
       */
      DefaultLogLevel: string;
    }
    
    
    interface Logging extends Resource<"AWS::IoT::Logging">, LoggingProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Logging(id: string, props: LoggingProps): Promise<Logging>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-mitigationaction.html
     */
    interface MitigationActionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-mitigationaction.html#cfn-iot-mitigationaction-actionname
       */
      ActionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-mitigationaction.html#cfn-iot-mitigationaction-actionparams
       */
      ActionParams: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-mitigationaction.html#cfn-iot-mitigationaction-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-mitigationaction.html#cfn-iot-mitigationaction-tags
       */
      Tags?: {}[];
    }
    
    
    interface MitigationAction extends Resource<"AWS::IoT::MitigationAction">, MitigationActionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MitigationAction(id: string, props: MitigationActionProps): Promise<MitigationAction>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policy.html
     */
    interface PolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policy.html#cfn-iot-policy-policyname
       */
      PolicyName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policy.html#cfn-iot-policy-policydocument
       */
      PolicyDocument: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policy.html#cfn-iot-policy-tags
       */
      Tags?: {}[];
    }
    
    
    interface Policy extends Resource<"AWS::IoT::Policy">, PolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Policy(id: string, props: PolicyProps): Promise<Policy>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policyprincipalattachment.html
     */
    interface PolicyPrincipalAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policyprincipalattachment.html#cfn-iot-policyprincipalattachment-policyname
       */
      PolicyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-policyprincipalattachment.html#cfn-iot-policyprincipalattachment-principal
       */
      Principal: string;
    }
    
    
    interface PolicyPrincipalAttachment extends Resource<"AWS::IoT::PolicyPrincipalAttachment">, PolicyPrincipalAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PolicyPrincipalAttachment(id: string, props: PolicyPrincipalAttachmentProps): Promise<PolicyPrincipalAttachment>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-provisioningtemplate.html
     */
    interface ProvisioningTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-provisioningtemplate.html#cfn-iot-provisioningtemplate-provisioningrolearn
       */
      ProvisioningRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-provisioningtemplate.html#cfn-iot-provisioningtemplate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-provisioningtemplate.html#cfn-iot-provisioningtemplate-preprovisioninghook
       */
      PreProvisioningHook?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-provisioningtemplate.html#cfn-iot-provisioningtemplate-templatename
       */
      TemplateName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-provisioningtemplate.html#cfn-iot-provisioningtemplate-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-provisioningtemplate.html#cfn-iot-provisioningtemplate-templatebody
       */
      TemplateBody: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-provisioningtemplate.html#cfn-iot-provisioningtemplate-templatetype
       */
      TemplateType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-provisioningtemplate.html#cfn-iot-provisioningtemplate-tags
       */
      Tags?: {}[];
    }
    
    
    interface ProvisioningTemplate extends Resource<"AWS::IoT::ProvisioningTemplate">, ProvisioningTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ProvisioningTemplate(id: string, props: ProvisioningTemplateProps): Promise<ProvisioningTemplate>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-resourcespecificlogging.html
     */
    interface ResourceSpecificLoggingProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-resourcespecificlogging.html#cfn-iot-resourcespecificlogging-targettype
       */
      TargetType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-resourcespecificlogging.html#cfn-iot-resourcespecificlogging-targetname
       */
      TargetName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-resourcespecificlogging.html#cfn-iot-resourcespecificlogging-loglevel
       */
      LogLevel: string;
    }
    
    
    interface ResourceSpecificLogging extends Resource<"AWS::IoT::ResourceSpecificLogging">, ResourceSpecificLoggingProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceSpecificLogging(id: string, props: ResourceSpecificLoggingProps): Promise<ResourceSpecificLogging>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-rolealias.html
     */
    interface RoleAliasProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-rolealias.html#cfn-iot-rolealias-rolealias
       */
      RoleAlias?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-rolealias.html#cfn-iot-rolealias-credentialdurationseconds
       */
      CredentialDurationSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-rolealias.html#cfn-iot-rolealias-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-rolealias.html#cfn-iot-rolealias-tags
       */
      Tags?: {}[];
    }
    
    
    interface RoleAlias extends Resource<"AWS::IoT::RoleAlias">, RoleAliasProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RoleAlias(id: string, props: RoleAliasProps): Promise<RoleAlias>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-scheduledaudit.html
     */
    interface ScheduledAuditProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-scheduledaudit.html#cfn-iot-scheduledaudit-dayofweek
       */
      DayOfWeek?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-scheduledaudit.html#cfn-iot-scheduledaudit-targetchecknames
       */
      TargetCheckNames: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-scheduledaudit.html#cfn-iot-scheduledaudit-scheduledauditname
       */
      ScheduledAuditName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-scheduledaudit.html#cfn-iot-scheduledaudit-dayofmonth
       */
      DayOfMonth?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-scheduledaudit.html#cfn-iot-scheduledaudit-frequency
       */
      Frequency: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-scheduledaudit.html#cfn-iot-scheduledaudit-tags
       */
      Tags?: {}[];
    }
    
    
    interface ScheduledAudit extends Resource<"AWS::IoT::ScheduledAudit">, ScheduledAuditProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ScheduledAudit(id: string, props: ScheduledAuditProps): Promise<ScheduledAudit>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-securityprofile.html
     */
    interface SecurityProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-securityprofile.html#cfn-iot-securityprofile-additionalmetricstoretainv2
       */
      AdditionalMetricsToRetainV2?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-securityprofile.html#cfn-iot-securityprofile-metricsexportconfig
       */
      MetricsExportConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-securityprofile.html#cfn-iot-securityprofile-securityprofiledescription
       */
      SecurityProfileDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-securityprofile.html#cfn-iot-securityprofile-behaviors
       */
      Behaviors?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-securityprofile.html#cfn-iot-securityprofile-securityprofilename
       */
      SecurityProfileName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-securityprofile.html#cfn-iot-securityprofile-alerttargets
       */
      AlertTargets?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-securityprofile.html#cfn-iot-securityprofile-targetarns
       */
      TargetArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-securityprofile.html#cfn-iot-securityprofile-tags
       */
      Tags?: {}[];
    }
    
    
    interface SecurityProfile extends Resource<"AWS::IoT::SecurityProfile">, SecurityProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecurityProfile(id: string, props: SecurityProfileProps): Promise<SecurityProfile>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackage.html
     */
    interface SoftwarePackageProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackage.html#cfn-iot-softwarepackage-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackage.html#cfn-iot-softwarepackage-packagename
       */
      PackageName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackage.html#cfn-iot-softwarepackage-tags
       */
      Tags?: {}[];
    }
    
    
    interface SoftwarePackage extends Resource<"AWS::IoT::SoftwarePackage">, SoftwarePackageProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SoftwarePackage(id: string, props: SoftwarePackageProps): Promise<SoftwarePackage>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackageversion.html
     */
    interface SoftwarePackageVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackageversion.html#cfn-iot-softwarepackageversion-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackageversion.html#cfn-iot-softwarepackageversion-packagename
       */
      PackageName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackageversion.html#cfn-iot-softwarepackageversion-recipe
       */
      Recipe?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackageversion.html#cfn-iot-softwarepackageversion-attributes
       */
      Attributes?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackageversion.html#cfn-iot-softwarepackageversion-sbom
       */
      Sbom?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackageversion.html#cfn-iot-softwarepackageversion-versionname
       */
      VersionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackageversion.html#cfn-iot-softwarepackageversion-artifact
       */
      Artifact?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-softwarepackageversion.html#cfn-iot-softwarepackageversion-tags
       */
      Tags?: {}[];
    }
    
    
    interface SoftwarePackageVersion extends Resource<"AWS::IoT::SoftwarePackageVersion">, SoftwarePackageVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SoftwarePackageVersion(id: string, props: SoftwarePackageVersionProps): Promise<SoftwarePackageVersion>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thing.html
     */
    interface ThingProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thing.html#cfn-iot-thing-attributepayload
       */
      AttributePayload?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thing.html#cfn-iot-thing-thingname
       */
      ThingName?: string;
    }
    
    
    interface Thing extends Resource<"AWS::IoT::Thing">, ThingProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Thing(id: string, props: ThingProps): Promise<Thing>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thinggroup.html
     */
    interface ThingGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thinggroup.html#cfn-iot-thinggroup-parentgroupname
       */
      ParentGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thinggroup.html#cfn-iot-thinggroup-thinggroupname
       */
      ThingGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thinggroup.html#cfn-iot-thinggroup-thinggroupproperties
       */
      ThingGroupProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thinggroup.html#cfn-iot-thinggroup-querystring
       */
      QueryString?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thinggroup.html#cfn-iot-thinggroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface ThingGroup extends Resource<"AWS::IoT::ThingGroup">, ThingGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ThingGroup(id: string, props: ThingGroupProps): Promise<ThingGroup>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thingprincipalattachment.html
     */
    interface ThingPrincipalAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thingprincipalattachment.html#cfn-iot-thingprincipalattachment-principal
       */
      Principal: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thingprincipalattachment.html#cfn-iot-thingprincipalattachment-thingname
       */
      ThingName: string;
    }
    
    
    interface ThingPrincipalAttachment extends Resource<"AWS::IoT::ThingPrincipalAttachment">, ThingPrincipalAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ThingPrincipalAttachment(id: string, props: ThingPrincipalAttachmentProps): Promise<ThingPrincipalAttachment>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thingtype.html
     */
    interface ThingTypeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thingtype.html#cfn-iot-thingtype-deprecatethingtype
       */
      DeprecateThingType?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thingtype.html#cfn-iot-thingtype-thingtypename
       */
      ThingTypeName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thingtype.html#cfn-iot-thingtype-thingtypeproperties
       */
      ThingTypeProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-thingtype.html#cfn-iot-thingtype-tags
       */
      Tags?: {}[];
    }
    
    
    interface ThingType extends Resource<"AWS::IoT::ThingType">, ThingTypeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ThingType(id: string, props: ThingTypeProps): Promise<ThingType>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicrule.html
     */
    interface TopicRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicrule.html#cfn-iot-topicrule-topicrulepayload
       */
      TopicRulePayload: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicrule.html#cfn-iot-topicrule-rulename
       */
      RuleName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicrule.html#cfn-iot-topicrule-tags
       */
      Tags?: {}[];
    }
    
    
    interface TopicRule extends Resource<"AWS::IoT::TopicRule">, TopicRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TopicRule(id: string, props: TopicRuleProps): Promise<TopicRule>;
  }
  namespace IoT {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicruledestination.html
     */
    interface TopicRuleDestinationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicruledestination.html#cfn-iot-topicruledestination-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicruledestination.html#cfn-iot-topicruledestination-httpurlproperties
       */
      HttpUrlProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-topicruledestination.html#cfn-iot-topicruledestination-vpcproperties
       */
      VpcProperties?: {};
    }
    
    
    interface TopicRuleDestination extends Resource<"AWS::IoT::TopicRuleDestination">, TopicRuleDestinationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TopicRuleDestination(id: string, props: TopicRuleDestinationProps): Promise<TopicRuleDestination>;
  }
  namespace IoTAnalytics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-channel.html
     */
    interface ChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-channel.html#cfn-iotanalytics-channel-channelname
       */
      ChannelName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-channel.html#cfn-iotanalytics-channel-channelstorage
       */
      ChannelStorage?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-channel.html#cfn-iotanalytics-channel-retentionperiod
       */
      RetentionPeriod?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-channel.html#cfn-iotanalytics-channel-tags
       */
      Tags?: {}[];
    }
    
    
    interface Channel extends Resource<"AWS::IoTAnalytics::Channel">, ChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Channel(id: string, props: ChannelProps): Promise<Channel>;
  }
  namespace IoTAnalytics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-dataset.html
     */
    interface DatasetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-dataset.html#cfn-iotanalytics-dataset-actions
       */
      Actions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-dataset.html#cfn-iotanalytics-dataset-latedatarules
       */
      LateDataRules?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-dataset.html#cfn-iotanalytics-dataset-datasetname
       */
      DatasetName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-dataset.html#cfn-iotanalytics-dataset-contentdeliveryrules
       */
      ContentDeliveryRules?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-dataset.html#cfn-iotanalytics-dataset-triggers
       */
      Triggers?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-dataset.html#cfn-iotanalytics-dataset-versioningconfiguration
       */
      VersioningConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-dataset.html#cfn-iotanalytics-dataset-retentionperiod
       */
      RetentionPeriod?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-dataset.html#cfn-iotanalytics-dataset-tags
       */
      Tags?: {}[];
    }
    
    
    interface Dataset extends Resource<"AWS::IoTAnalytics::Dataset">, DatasetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Dataset(id: string, props: DatasetProps): Promise<Dataset>;
  }
  namespace IoTAnalytics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-datastore.html
     */
    interface DatastoreProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-datastore.html#cfn-iotanalytics-datastore-datastorestorage
       */
      DatastoreStorage?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-datastore.html#cfn-iotanalytics-datastore-fileformatconfiguration
       */
      FileFormatConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-datastore.html#cfn-iotanalytics-datastore-datastorepartitions
       */
      DatastorePartitions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-datastore.html#cfn-iotanalytics-datastore-datastorename
       */
      DatastoreName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-datastore.html#cfn-iotanalytics-datastore-retentionperiod
       */
      RetentionPeriod?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-datastore.html#cfn-iotanalytics-datastore-tags
       */
      Tags?: {}[];
    }
    
    
    interface Datastore extends Resource<"AWS::IoTAnalytics::Datastore">, DatastoreProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Datastore(id: string, props: DatastoreProps): Promise<Datastore>;
  }
  namespace IoTAnalytics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-pipeline.html
     */
    interface PipelineProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-pipeline.html#cfn-iotanalytics-pipeline-pipelinename
       */
      PipelineName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-pipeline.html#cfn-iotanalytics-pipeline-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotanalytics-pipeline.html#cfn-iotanalytics-pipeline-pipelineactivities
       */
      PipelineActivities: {}[];
    }
    
    
    interface Pipeline extends Resource<"AWS::IoTAnalytics::Pipeline">, PipelineProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Pipeline(id: string, props: PipelineProps): Promise<Pipeline>;
  }
  namespace IoTCoreDeviceAdvisor {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotcoredeviceadvisor-suitedefinition.html
     */
    interface SuiteDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotcoredeviceadvisor-suitedefinition.html#cfn-iotcoredeviceadvisor-suitedefinition-suitedefinitionconfiguration
       */
      SuiteDefinitionConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotcoredeviceadvisor-suitedefinition.html#cfn-iotcoredeviceadvisor-suitedefinition-tags
       */
      Tags?: {}[];
    }
    
    
    interface SuiteDefinition extends Resource<"AWS::IoTCoreDeviceAdvisor::SuiteDefinition">, SuiteDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SuiteDefinition(id: string, props: SuiteDefinitionProps): Promise<SuiteDefinition>;
  }
  namespace IoTEvents {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-alarmmodel.html
     */
    interface AlarmModelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-alarmmodel.html#cfn-iotevents-alarmmodel-alarmrule
       */
      AlarmRule: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-alarmmodel.html#cfn-iotevents-alarmmodel-alarmmodelname
       */
      AlarmModelName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-alarmmodel.html#cfn-iotevents-alarmmodel-alarmmodeldescription
       */
      AlarmModelDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-alarmmodel.html#cfn-iotevents-alarmmodel-severity
       */
      Severity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-alarmmodel.html#cfn-iotevents-alarmmodel-alarmcapabilities
       */
      AlarmCapabilities?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-alarmmodel.html#cfn-iotevents-alarmmodel-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-alarmmodel.html#cfn-iotevents-alarmmodel-key
       */
      Key?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-alarmmodel.html#cfn-iotevents-alarmmodel-alarmeventactions
       */
      AlarmEventActions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-alarmmodel.html#cfn-iotevents-alarmmodel-tags
       */
      Tags?: {}[];
    }
    
    
    interface AlarmModel extends Resource<"AWS::IoTEvents::AlarmModel">, AlarmModelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AlarmModel(id: string, props: AlarmModelProps): Promise<AlarmModel>;
  }
  namespace IoTEvents {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-detectormodel.html
     */
    interface DetectorModelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-detectormodel.html#cfn-iotevents-detectormodel-detectormodeldefinition
       */
      DetectorModelDefinition: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-detectormodel.html#cfn-iotevents-detectormodel-evaluationmethod
       */
      EvaluationMethod?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-detectormodel.html#cfn-iotevents-detectormodel-detectormodelname
       */
      DetectorModelName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-detectormodel.html#cfn-iotevents-detectormodel-detectormodeldescription
       */
      DetectorModelDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-detectormodel.html#cfn-iotevents-detectormodel-key
       */
      Key?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-detectormodel.html#cfn-iotevents-detectormodel-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-detectormodel.html#cfn-iotevents-detectormodel-tags
       */
      Tags?: {}[];
    }
    
    
    interface DetectorModel extends Resource<"AWS::IoTEvents::DetectorModel">, DetectorModelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DetectorModel(id: string, props: DetectorModelProps): Promise<DetectorModel>;
  }
  namespace IoTEvents {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-input.html
     */
    interface InputProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-input.html#cfn-iotevents-input-inputdefinition
       */
      InputDefinition: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-input.html#cfn-iotevents-input-inputname
       */
      InputName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-input.html#cfn-iotevents-input-inputdescription
       */
      InputDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotevents-input.html#cfn-iotevents-input-tags
       */
      Tags?: {}[];
    }
    
    
    interface Input extends Resource<"AWS::IoTEvents::Input">, InputProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Input(id: string, props: InputProps): Promise<Input>;
  }
  namespace IoTFleetHub {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleethub-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleethub-application.html#cfn-iotfleethub-application-applicationname
       */
      ApplicationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleethub-application.html#cfn-iotfleethub-application-applicationdescription
       */
      ApplicationDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleethub-application.html#cfn-iotfleethub-application-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleethub-application.html#cfn-iotfleethub-application-tags
       */
      Tags?: {}[];
    }
    
    
    interface Application extends Resource<"AWS::IoTFleetHub::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace IoTFleetWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html
     */
    interface CampaignProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-action
       */
      Action?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-compression
       */
      Compression?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-datapartitions
       */
      DataPartitions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-priority
       */
      Priority?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-signalstocollect
       */
      SignalsToCollect?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-starttime
       */
      StartTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-signalstofetch
       */
      SignalsToFetch?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-expirytime
       */
      ExpiryTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-spoolingmode
       */
      SpoolingMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-datadestinationconfigs
       */
      DataDestinationConfigs?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-signalcatalogarn
       */
      SignalCatalogArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-posttriggercollectionduration
       */
      PostTriggerCollectionDuration?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-dataextradimensions
       */
      DataExtraDimensions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-diagnosticsmode
       */
      DiagnosticsMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-targetarn
       */
      TargetArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-collectionscheme
       */
      CollectionScheme: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-tags
       */
      Tags?: {}[];
    }
    
    
    interface Campaign extends Resource<"AWS::IoTFleetWise::Campaign">, CampaignProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Campaign(id: string, props: CampaignProps): Promise<Campaign>;
  }
  namespace IoTFleetWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-decodermanifest.html
     */
    interface DecoderManifestProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-decodermanifest.html#cfn-iotfleetwise-decodermanifest-signaldecoders
       */
      SignalDecoders?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-decodermanifest.html#cfn-iotfleetwise-decodermanifest-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-decodermanifest.html#cfn-iotfleetwise-decodermanifest-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-decodermanifest.html#cfn-iotfleetwise-decodermanifest-networkinterfaces
       */
      NetworkInterfaces?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-decodermanifest.html#cfn-iotfleetwise-decodermanifest-modelmanifestarn
       */
      ModelManifestArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-decodermanifest.html#cfn-iotfleetwise-decodermanifest-defaultforunmappedsignals
       */
      DefaultForUnmappedSignals?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-decodermanifest.html#cfn-iotfleetwise-decodermanifest-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-decodermanifest.html#cfn-iotfleetwise-decodermanifest-name
       */
      Name: string;
    }
    
    
    interface DecoderManifest extends Resource<"AWS::IoTFleetWise::DecoderManifest">, DecoderManifestProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DecoderManifest(id: string, props: DecoderManifestProps): Promise<DecoderManifest>;
  }
  namespace IoTFleetWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-fleet.html
     */
    interface FleetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-fleet.html#cfn-iotfleetwise-fleet-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-fleet.html#cfn-iotfleetwise-fleet-id
       */
      Id: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-fleet.html#cfn-iotfleetwise-fleet-signalcatalogarn
       */
      SignalCatalogArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-fleet.html#cfn-iotfleetwise-fleet-tags
       */
      Tags?: {}[];
    }
    
    
    interface Fleet extends Resource<"AWS::IoTFleetWise::Fleet">, FleetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Fleet(id: string, props: FleetProps): Promise<Fleet>;
  }
  namespace IoTFleetWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-modelmanifest.html
     */
    interface ModelManifestProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-modelmanifest.html#cfn-iotfleetwise-modelmanifest-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-modelmanifest.html#cfn-iotfleetwise-modelmanifest-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-modelmanifest.html#cfn-iotfleetwise-modelmanifest-signalcatalogarn
       */
      SignalCatalogArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-modelmanifest.html#cfn-iotfleetwise-modelmanifest-nodes
       */
      Nodes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-modelmanifest.html#cfn-iotfleetwise-modelmanifest-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-modelmanifest.html#cfn-iotfleetwise-modelmanifest-name
       */
      Name: string;
    }
    
    
    interface ModelManifest extends Resource<"AWS::IoTFleetWise::ModelManifest">, ModelManifestProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ModelManifest(id: string, props: ModelManifestProps): Promise<ModelManifest>;
  }
  namespace IoTFleetWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-signalcatalog.html
     */
    interface SignalCatalogProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-signalcatalog.html#cfn-iotfleetwise-signalcatalog-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-signalcatalog.html#cfn-iotfleetwise-signalcatalog-nodecounts
       */
      NodeCounts?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-signalcatalog.html#cfn-iotfleetwise-signalcatalog-nodes
       */
      Nodes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-signalcatalog.html#cfn-iotfleetwise-signalcatalog-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-signalcatalog.html#cfn-iotfleetwise-signalcatalog-name
       */
      Name?: string;
    }
    
    
    interface SignalCatalog extends Resource<"AWS::IoTFleetWise::SignalCatalog">, SignalCatalogProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SignalCatalog(id: string, props: SignalCatalogProps): Promise<SignalCatalog>;
  }
  namespace IoTFleetWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-statetemplate.html
     */
    interface StateTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-statetemplate.html#cfn-iotfleetwise-statetemplate-statetemplateproperties
       */
      StateTemplateProperties: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-statetemplate.html#cfn-iotfleetwise-statetemplate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-statetemplate.html#cfn-iotfleetwise-statetemplate-dataextradimensions
       */
      DataExtraDimensions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-statetemplate.html#cfn-iotfleetwise-statetemplate-signalcatalogarn
       */
      SignalCatalogArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-statetemplate.html#cfn-iotfleetwise-statetemplate-metadataextradimensions
       */
      MetadataExtraDimensions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-statetemplate.html#cfn-iotfleetwise-statetemplate-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-statetemplate.html#cfn-iotfleetwise-statetemplate-name
       */
      Name: string;
    }
    
    
    interface StateTemplate extends Resource<"AWS::IoTFleetWise::StateTemplate">, StateTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StateTemplate(id: string, props: StateTemplateProps): Promise<StateTemplate>;
  }
  namespace IoTFleetWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-vehicle.html
     */
    interface VehicleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-vehicle.html#cfn-iotfleetwise-vehicle-associationbehavior
       */
      AssociationBehavior?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-vehicle.html#cfn-iotfleetwise-vehicle-attributes
       */
      Attributes?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-vehicle.html#cfn-iotfleetwise-vehicle-decodermanifestarn
       */
      DecoderManifestArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-vehicle.html#cfn-iotfleetwise-vehicle-statetemplates
       */
      StateTemplates?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-vehicle.html#cfn-iotfleetwise-vehicle-modelmanifestarn
       */
      ModelManifestArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-vehicle.html#cfn-iotfleetwise-vehicle-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-vehicle.html#cfn-iotfleetwise-vehicle-name
       */
      Name: string;
    }
    
    
    interface Vehicle extends Resource<"AWS::IoTFleetWise::Vehicle">, VehicleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Vehicle(id: string, props: VehicleProps): Promise<Vehicle>;
  }
  namespace IoTSiteWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-accesspolicy.html
     */
    interface AccessPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-accesspolicy.html#cfn-iotsitewise-accesspolicy-accesspolicyresource
       */
      AccessPolicyResource: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-accesspolicy.html#cfn-iotsitewise-accesspolicy-accesspolicyidentity
       */
      AccessPolicyIdentity: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-accesspolicy.html#cfn-iotsitewise-accesspolicy-accesspolicypermission
       */
      AccessPolicyPermission: string;
    }
    
    
    interface AccessPolicy extends Resource<"AWS::IoTSiteWise::AccessPolicy">, AccessPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccessPolicy(id: string, props: AccessPolicyProps): Promise<AccessPolicy>;
  }
  namespace IoTSiteWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html
     */
    interface AssetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html#cfn-iotsitewise-asset-assetmodelid
       */
      AssetModelId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html#cfn-iotsitewise-asset-assetdescription
       */
      AssetDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html#cfn-iotsitewise-asset-assetproperties
       */
      AssetProperties?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html#cfn-iotsitewise-asset-assetexternalid
       */
      AssetExternalId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html#cfn-iotsitewise-asset-assetname
       */
      AssetName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html#cfn-iotsitewise-asset-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html#cfn-iotsitewise-asset-assethierarchies
       */
      AssetHierarchies?: {}[];
    }
    
    
    interface Asset extends Resource<"AWS::IoTSiteWise::Asset">, AssetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Asset(id: string, props: AssetProps): Promise<Asset>;
  }
  namespace IoTSiteWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-assetmodel.html
     */
    interface AssetModelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-assetmodel.html#cfn-iotsitewise-assetmodel-assetmodeldescription
       */
      AssetModelDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-assetmodel.html#cfn-iotsitewise-assetmodel-assetmodelcompositemodels
       */
      AssetModelCompositeModels?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-assetmodel.html#cfn-iotsitewise-assetmodel-assetmodeltype
       */
      AssetModelType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-assetmodel.html#cfn-iotsitewise-assetmodel-assetmodelname
       */
      AssetModelName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-assetmodel.html#cfn-iotsitewise-assetmodel-assetmodelhierarchies
       */
      AssetModelHierarchies?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-assetmodel.html#cfn-iotsitewise-assetmodel-assetmodelproperties
       */
      AssetModelProperties?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-assetmodel.html#cfn-iotsitewise-assetmodel-assetmodelexternalid
       */
      AssetModelExternalId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-assetmodel.html#cfn-iotsitewise-assetmodel-tags
       */
      Tags?: {}[];
    }
    
    
    interface AssetModel extends Resource<"AWS::IoTSiteWise::AssetModel">, AssetModelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AssetModel(id: string, props: AssetModelProps): Promise<AssetModel>;
  }
  namespace IoTSiteWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-dashboard.html
     */
    interface DashboardProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-dashboard.html#cfn-iotsitewise-dashboard-dashboardname
       */
      DashboardName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-dashboard.html#cfn-iotsitewise-dashboard-dashboarddefinition
       */
      DashboardDefinition: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-dashboard.html#cfn-iotsitewise-dashboard-projectid
       */
      ProjectId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-dashboard.html#cfn-iotsitewise-dashboard-dashboarddescription
       */
      DashboardDescription: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-dashboard.html#cfn-iotsitewise-dashboard-tags
       */
      Tags?: {}[];
    }
    
    
    interface Dashboard extends Resource<"AWS::IoTSiteWise::Dashboard">, DashboardProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Dashboard(id: string, props: DashboardProps): Promise<Dashboard>;
  }
  namespace IoTSiteWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-dataset.html
     */
    interface DatasetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-dataset.html#cfn-iotsitewise-dataset-datasetname
       */
      DatasetName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-dataset.html#cfn-iotsitewise-dataset-datasetsource
       */
      DatasetSource: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-dataset.html#cfn-iotsitewise-dataset-datasetdescription
       */
      DatasetDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-dataset.html#cfn-iotsitewise-dataset-tags
       */
      Tags?: {}[];
    }
    
    
    interface Dataset extends Resource<"AWS::IoTSiteWise::Dataset">, DatasetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Dataset(id: string, props: DatasetProps): Promise<Dataset>;
  }
  namespace IoTSiteWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-gateway.html
     */
    interface GatewayProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-gateway.html#cfn-iotsitewise-gateway-gatewaycapabilitysummaries
       */
      GatewayCapabilitySummaries?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-gateway.html#cfn-iotsitewise-gateway-gatewayname
       */
      GatewayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-gateway.html#cfn-iotsitewise-gateway-gatewayplatform
       */
      GatewayPlatform: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-gateway.html#cfn-iotsitewise-gateway-gatewayversion
       */
      GatewayVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-gateway.html#cfn-iotsitewise-gateway-tags
       */
      Tags?: {}[];
    }
    
    
    interface Gateway extends Resource<"AWS::IoTSiteWise::Gateway">, GatewayProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Gateway(id: string, props: GatewayProps): Promise<Gateway>;
  }
  namespace IoTSiteWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-portal.html
     */
    interface PortalProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-portal.html#cfn-iotsitewise-portal-portalname
       */
      PortalName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-portal.html#cfn-iotsitewise-portal-portalauthmode
       */
      PortalAuthMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-portal.html#cfn-iotsitewise-portal-notificationsenderemail
       */
      NotificationSenderEmail?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-portal.html#cfn-iotsitewise-portal-alarms
       */
      Alarms?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-portal.html#cfn-iotsitewise-portal-portaltypeconfiguration
       */
      PortalTypeConfiguration?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-portal.html#cfn-iotsitewise-portal-portalcontactemail
       */
      PortalContactEmail: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-portal.html#cfn-iotsitewise-portal-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-portal.html#cfn-iotsitewise-portal-portaltype
       */
      PortalType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-portal.html#cfn-iotsitewise-portal-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-portal.html#cfn-iotsitewise-portal-portaldescription
       */
      PortalDescription?: string;
    }
    
    
    interface Portal extends Resource<"AWS::IoTSiteWise::Portal">, PortalProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Portal(id: string, props: PortalProps): Promise<Portal>;
  }
  namespace IoTSiteWise {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-project.html
     */
    interface ProjectProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-project.html#cfn-iotsitewise-project-assetids
       */
      AssetIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-project.html#cfn-iotsitewise-project-projectname
       */
      ProjectName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-project.html#cfn-iotsitewise-project-portalid
       */
      PortalId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-project.html#cfn-iotsitewise-project-projectdescription
       */
      ProjectDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-project.html#cfn-iotsitewise-project-tags
       */
      Tags?: {}[];
    }
    
    
    interface Project extends Resource<"AWS::IoTSiteWise::Project">, ProjectProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Project(id: string, props: ProjectProps): Promise<Project>;
  }
  namespace IoTThingsGraph {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotthingsgraph-flowtemplate.html
     */
    interface FlowTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotthingsgraph-flowtemplate.html#cfn-iotthingsgraph-flowtemplate-compatiblenamespaceversion
       */
      CompatibleNamespaceVersion?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotthingsgraph-flowtemplate.html#cfn-iotthingsgraph-flowtemplate-definition
       */
      Definition: {};
    }
    
    
    interface FlowTemplate extends Resource<"AWS::IoTThingsGraph::FlowTemplate">, FlowTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FlowTemplate(id: string, props: FlowTemplateProps): Promise<FlowTemplate>;
  }
  namespace IoTTwinMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html
     */
    interface ComponentTypeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-extendsfrom
       */
      ExtendsFrom?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-issingleton
       */
      IsSingleton?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-propertydefinitions
       */
      PropertyDefinitions?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-propertygroups
       */
      PropertyGroups?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-workspaceid
       */
      WorkspaceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-componenttypeid
       */
      ComponentTypeId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-functions
       */
      Functions?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-compositecomponenttypes
       */
      CompositeComponentTypes?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface ComponentType extends Resource<"AWS::IoTTwinMaker::ComponentType">, ComponentTypeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ComponentType(id: string, props: ComponentTypeProps): Promise<ComponentType>;
  }
  namespace IoTTwinMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html
     */
    interface EntityProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-entityid
       */
      EntityId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-components
       */
      Components?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-parententityid
       */
      ParentEntityId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-compositecomponents
       */
      CompositeComponents?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-entityname
       */
      EntityName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-workspaceid
       */
      WorkspaceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Entity extends Resource<"AWS::IoTTwinMaker::Entity">, EntityProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Entity(id: string, props: EntityProps): Promise<Entity>;
  }
  namespace IoTTwinMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html
     */
    interface SceneProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-sceneid
       */
      SceneId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-scenemetadata
       */
      SceneMetadata?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-contentlocation
       */
      ContentLocation: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-capabilities
       */
      Capabilities?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-workspaceid
       */
      WorkspaceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Scene extends Resource<"AWS::IoTTwinMaker::Scene">, SceneProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Scene(id: string, props: SceneProps): Promise<Scene>;
  }
  namespace IoTTwinMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-syncjob.html
     */
    interface SyncJobProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-syncjob.html#cfn-iottwinmaker-syncjob-syncsource
       */
      SyncSource: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-syncjob.html#cfn-iottwinmaker-syncjob-syncrole
       */
      SyncRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-syncjob.html#cfn-iottwinmaker-syncjob-workspaceid
       */
      WorkspaceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-syncjob.html#cfn-iottwinmaker-syncjob-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface SyncJob extends Resource<"AWS::IoTTwinMaker::SyncJob">, SyncJobProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SyncJob(id: string, props: SyncJobProps): Promise<SyncJob>;
  }
  namespace IoTTwinMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html
     */
    interface WorkspaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-role
       */
      Role: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-workspaceid
       */
      WorkspaceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-s3location
       */
      S3Location: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Workspace extends Resource<"AWS::IoTTwinMaker::Workspace">, WorkspaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Workspace(id: string, props: WorkspaceProps): Promise<Workspace>;
  }
  namespace IoTWireless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-destination.html
     */
    interface DestinationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-destination.html#cfn-iotwireless-destination-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-destination.html#cfn-iotwireless-destination-expression
       */
      Expression: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-destination.html#cfn-iotwireless-destination-expressiontype
       */
      ExpressionType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-destination.html#cfn-iotwireless-destination-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-destination.html#cfn-iotwireless-destination-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-destination.html#cfn-iotwireless-destination-name
       */
      Name: string;
    }
    
    
    interface Destination extends Resource<"AWS::IoTWireless::Destination">, DestinationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Destination(id: string, props: DestinationProps): Promise<Destination>;
  }
  namespace IoTWireless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-deviceprofile.html
     */
    interface DeviceProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-deviceprofile.html#cfn-iotwireless-deviceprofile-lorawan
       */
      LoRaWAN?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-deviceprofile.html#cfn-iotwireless-deviceprofile-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-deviceprofile.html#cfn-iotwireless-deviceprofile-name
       */
      Name?: string;
    }
    
    
    interface DeviceProfile extends Resource<"AWS::IoTWireless::DeviceProfile">, DeviceProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DeviceProfile(id: string, props: DeviceProfileProps): Promise<DeviceProfile>;
  }
  namespace IoTWireless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-fuotatask.html
     */
    interface FuotaTaskProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-fuotatask.html#cfn-iotwireless-fuotatask-firmwareupdateimage
       */
      FirmwareUpdateImage: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-fuotatask.html#cfn-iotwireless-fuotatask-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-fuotatask.html#cfn-iotwireless-fuotatask-lorawan
       */
      LoRaWAN: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-fuotatask.html#cfn-iotwireless-fuotatask-firmwareupdaterole
       */
      FirmwareUpdateRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-fuotatask.html#cfn-iotwireless-fuotatask-associatemulticastgroup
       */
      AssociateMulticastGroup?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-fuotatask.html#cfn-iotwireless-fuotatask-disassociatewirelessdevice
       */
      DisassociateWirelessDevice?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-fuotatask.html#cfn-iotwireless-fuotatask-disassociatemulticastgroup
       */
      DisassociateMulticastGroup?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-fuotatask.html#cfn-iotwireless-fuotatask-associatewirelessdevice
       */
      AssociateWirelessDevice?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-fuotatask.html#cfn-iotwireless-fuotatask-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-fuotatask.html#cfn-iotwireless-fuotatask-name
       */
      Name?: string;
    }
    
    
    interface FuotaTask extends Resource<"AWS::IoTWireless::FuotaTask">, FuotaTaskProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FuotaTask(id: string, props: FuotaTaskProps): Promise<FuotaTask>;
  }
  namespace IoTWireless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-multicastgroup.html
     */
    interface MulticastGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-multicastgroup.html#cfn-iotwireless-multicastgroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-multicastgroup.html#cfn-iotwireless-multicastgroup-lorawan
       */
      LoRaWAN: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-multicastgroup.html#cfn-iotwireless-multicastgroup-disassociatewirelessdevice
       */
      DisassociateWirelessDevice?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-multicastgroup.html#cfn-iotwireless-multicastgroup-associatewirelessdevice
       */
      AssociateWirelessDevice?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-multicastgroup.html#cfn-iotwireless-multicastgroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-multicastgroup.html#cfn-iotwireless-multicastgroup-name
       */
      Name?: string;
    }
    
    
    interface MulticastGroup extends Resource<"AWS::IoTWireless::MulticastGroup">, MulticastGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MulticastGroup(id: string, props: MulticastGroupProps): Promise<MulticastGroup>;
  }
  namespace IoTWireless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-networkanalyzerconfiguration.html
     */
    interface NetworkAnalyzerConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-networkanalyzerconfiguration.html#cfn-iotwireless-networkanalyzerconfiguration-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-networkanalyzerconfiguration.html#cfn-iotwireless-networkanalyzerconfiguration-tracecontent
       */
      TraceContent?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-networkanalyzerconfiguration.html#cfn-iotwireless-networkanalyzerconfiguration-wirelessgateways
       */
      WirelessGateways?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-networkanalyzerconfiguration.html#cfn-iotwireless-networkanalyzerconfiguration-wirelessdevices
       */
      WirelessDevices?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-networkanalyzerconfiguration.html#cfn-iotwireless-networkanalyzerconfiguration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-networkanalyzerconfiguration.html#cfn-iotwireless-networkanalyzerconfiguration-name
       */
      Name: string;
    }
    
    
    interface NetworkAnalyzerConfiguration extends Resource<"AWS::IoTWireless::NetworkAnalyzerConfiguration">, NetworkAnalyzerConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NetworkAnalyzerConfiguration(id: string, props: NetworkAnalyzerConfigurationProps): Promise<NetworkAnalyzerConfiguration>;
  }
  namespace IoTWireless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html
     */
    interface PartnerAccountProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html#cfn-iotwireless-partneraccount-partnertype
       */
      PartnerType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html#cfn-iotwireless-partneraccount-sidewalkresponse
       */
      SidewalkResponse?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html#cfn-iotwireless-partneraccount-accountlinked
       */
      AccountLinked?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html#cfn-iotwireless-partneraccount-sidewalk
       */
      Sidewalk?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html#cfn-iotwireless-partneraccount-partneraccountid
       */
      PartnerAccountId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html#cfn-iotwireless-partneraccount-sidewalkupdate
       */
      SidewalkUpdate?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html#cfn-iotwireless-partneraccount-tags
       */
      Tags?: {}[];
    }
    
    
    interface PartnerAccount extends Resource<"AWS::IoTWireless::PartnerAccount">, PartnerAccountProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PartnerAccount(id: string, props: PartnerAccountProps): Promise<PartnerAccount>;
  }
  namespace IoTWireless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html
     */
    interface ServiceProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-lorawan
       */
      LoRaWAN?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-name
       */
      Name?: string;
    }
    
    
    interface ServiceProfile extends Resource<"AWS::IoTWireless::ServiceProfile">, ServiceProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ServiceProfile(id: string, props: ServiceProfileProps): Promise<ServiceProfile>;
  }
  namespace IoTWireless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-taskdefinition.html
     */
    interface TaskDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-taskdefinition.html#cfn-iotwireless-taskdefinition-autocreatetasks
       */
      AutoCreateTasks: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-taskdefinition.html#cfn-iotwireless-taskdefinition-lorawanupdategatewaytaskentry
       */
      LoRaWANUpdateGatewayTaskEntry?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-taskdefinition.html#cfn-iotwireless-taskdefinition-update
       */
      Update?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-taskdefinition.html#cfn-iotwireless-taskdefinition-taskdefinitiontype
       */
      TaskDefinitionType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-taskdefinition.html#cfn-iotwireless-taskdefinition-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-taskdefinition.html#cfn-iotwireless-taskdefinition-name
       */
      Name?: string;
    }
    
    
    interface TaskDefinition extends Resource<"AWS::IoTWireless::TaskDefinition">, TaskDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TaskDefinition(id: string, props: TaskDefinitionProps): Promise<TaskDefinition>;
  }
  namespace IoTWireless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html
     */
    interface WirelessDeviceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-lastuplinkreceivedat
       */
      LastUplinkReceivedAt?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-positioning
       */
      Positioning?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-lorawan
       */
      LoRaWAN?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-destinationname
       */
      DestinationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-thingarn
       */
      ThingArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdevice.html#cfn-iotwireless-wirelessdevice-name
       */
      Name?: string;
    }
    
    
    interface WirelessDevice extends Resource<"AWS::IoTWireless::WirelessDevice">, WirelessDeviceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WirelessDevice(id: string, props: WirelessDeviceProps): Promise<WirelessDevice>;
  }
  namespace IoTWireless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdeviceimporttask.html
     */
    interface WirelessDeviceImportTaskProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdeviceimporttask.html#cfn-iotwireless-wirelessdeviceimporttask-destinationname
       */
      DestinationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdeviceimporttask.html#cfn-iotwireless-wirelessdeviceimporttask-sidewalk
       */
      Sidewalk: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessdeviceimporttask.html#cfn-iotwireless-wirelessdeviceimporttask-tags
       */
      Tags?: {}[];
    }
    
    
    interface WirelessDeviceImportTask extends Resource<"AWS::IoTWireless::WirelessDeviceImportTask">, WirelessDeviceImportTaskProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WirelessDeviceImportTask(id: string, props: WirelessDeviceImportTaskProps): Promise<WirelessDeviceImportTask>;
  }
  namespace IoTWireless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessgateway.html
     */
    interface WirelessGatewayProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessgateway.html#cfn-iotwireless-wirelessgateway-lastuplinkreceivedat
       */
      LastUplinkReceivedAt?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessgateway.html#cfn-iotwireless-wirelessgateway-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessgateway.html#cfn-iotwireless-wirelessgateway-lorawan
       */
      LoRaWAN: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessgateway.html#cfn-iotwireless-wirelessgateway-thingarn
       */
      ThingArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessgateway.html#cfn-iotwireless-wirelessgateway-thingname
       */
      ThingName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessgateway.html#cfn-iotwireless-wirelessgateway-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-wirelessgateway.html#cfn-iotwireless-wirelessgateway-name
       */
      Name?: string;
    }
    
    
    interface WirelessGateway extends Resource<"AWS::IoTWireless::WirelessGateway">, WirelessGatewayProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WirelessGateway(id: string, props: WirelessGatewayProps): Promise<WirelessGateway>;
  }
  namespace KMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-alias.html
     */
    interface AliasProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-alias.html#cfn-kms-alias-targetkeyid
       */
      TargetKeyId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-alias.html#cfn-kms-alias-aliasname
       */
      AliasName: string;
    }
    
    
    interface Alias extends Resource<"AWS::KMS::Alias">, AliasProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Alias(id: string, props: AliasProps): Promise<Alias>;
  }
  namespace KMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html
     */
    interface KeyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-origin
       */
      Origin?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-multiregion
       */
      MultiRegion?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-pendingwindowindays
       */
      PendingWindowInDays?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-bypasspolicylockoutsafetycheck
       */
      BypassPolicyLockoutSafetyCheck?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-keypolicy
       */
      KeyPolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-keyspec
       */
      KeySpec?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-keyusage
       */
      KeyUsage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-rotationperiodindays
       */
      RotationPeriodInDays?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-enablekeyrotation
       */
      EnableKeyRotation?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-key.html#cfn-kms-key-tags
       */
      Tags?: {}[];
    }
    
    
    interface Key extends Resource<"AWS::KMS::Key">, KeyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Key(id: string, props: KeyProps): Promise<Key>;
  }
  namespace KMS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html
     */
    interface ReplicaKeyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html#cfn-kms-replicakey-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html#cfn-kms-replicakey-pendingwindowindays
       */
      PendingWindowInDays?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html#cfn-kms-replicakey-keypolicy
       */
      KeyPolicy: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html#cfn-kms-replicakey-primarykeyarn
       */
      PrimaryKeyArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html#cfn-kms-replicakey-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kms-replicakey.html#cfn-kms-replicakey-tags
       */
      Tags?: {}[];
    }
    
    
    interface ReplicaKey extends Resource<"AWS::KMS::ReplicaKey">, ReplicaKeyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReplicaKey(id: string, props: ReplicaKeyProps): Promise<ReplicaKey>;
  }
  namespace KafkaConnect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html
     */
    interface ConnectorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkacluster
       */
      KafkaCluster: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaconnectversion
       */
      KafkaConnectVersion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectorconfiguration
       */
      ConnectorConfiguration: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-logdelivery
       */
      LogDelivery?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-workerconfiguration
       */
      WorkerConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-capacity
       */
      Capacity: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaclusterencryptionintransit
       */
      KafkaClusterEncryptionInTransit: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectordescription
       */
      ConnectorDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaclusterclientauthentication
       */
      KafkaClusterClientAuthentication: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectorname
       */
      ConnectorName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-serviceexecutionrolearn
       */
      ServiceExecutionRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-plugins
       */
      Plugins: {}[];
    }
    
    
    interface Connector extends Resource<"AWS::KafkaConnect::Connector">, ConnectorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Connector(id: string, props: ConnectorProps): Promise<Connector>;
  }
  namespace KafkaConnect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-customplugin.html
     */
    interface CustomPluginProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-customplugin.html#cfn-kafkaconnect-customplugin-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-customplugin.html#cfn-kafkaconnect-customplugin-contenttype
       */
      ContentType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-customplugin.html#cfn-kafkaconnect-customplugin-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-customplugin.html#cfn-kafkaconnect-customplugin-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-customplugin.html#cfn-kafkaconnect-customplugin-location
       */
      Location: {};
    }
    
    
    interface CustomPlugin extends Resource<"AWS::KafkaConnect::CustomPlugin">, CustomPluginProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CustomPlugin(id: string, props: CustomPluginProps): Promise<CustomPlugin>;
  }
  namespace KafkaConnect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-workerconfiguration.html
     */
    interface WorkerConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-workerconfiguration.html#cfn-kafkaconnect-workerconfiguration-propertiesfilecontent
       */
      PropertiesFileContent: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-workerconfiguration.html#cfn-kafkaconnect-workerconfiguration-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-workerconfiguration.html#cfn-kafkaconnect-workerconfiguration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-workerconfiguration.html#cfn-kafkaconnect-workerconfiguration-name
       */
      Name: string;
    }
    
    
    interface WorkerConfiguration extends Resource<"AWS::KafkaConnect::WorkerConfiguration">, WorkerConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WorkerConfiguration(id: string, props: WorkerConfigurationProps): Promise<WorkerConfiguration>;
  }
  namespace Kendra {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html
     */
    interface DataSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html#cfn-kendra-datasource-customdocumentenrichmentconfiguration
       */
      CustomDocumentEnrichmentConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html#cfn-kendra-datasource-indexid
       */
      IndexId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html#cfn-kendra-datasource-languagecode
       */
      LanguageCode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html#cfn-kendra-datasource-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html#cfn-kendra-datasource-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html#cfn-kendra-datasource-schedule
       */
      Schedule?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html#cfn-kendra-datasource-datasourceconfiguration
       */
      DataSourceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html#cfn-kendra-datasource-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html#cfn-kendra-datasource-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-datasource.html#cfn-kendra-datasource-name
       */
      Name: string;
    }
    
    
    interface DataSource extends Resource<"AWS::Kendra::DataSource">, DataSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataSource(id: string, props: DataSourceProps): Promise<DataSource>;
  }
  namespace Kendra {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-faq.html
     */
    interface FaqProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-faq.html#cfn-kendra-faq-indexid
       */
      IndexId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-faq.html#cfn-kendra-faq-languagecode
       */
      LanguageCode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-faq.html#cfn-kendra-faq-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-faq.html#cfn-kendra-faq-s3path
       */
      S3Path: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-faq.html#cfn-kendra-faq-fileformat
       */
      FileFormat?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-faq.html#cfn-kendra-faq-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-faq.html#cfn-kendra-faq-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-faq.html#cfn-kendra-faq-name
       */
      Name: string;
    }
    
    
    interface Faq extends Resource<"AWS::Kendra::Faq">, FaqProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Faq(id: string, props: FaqProps): Promise<Faq>;
  }
  namespace Kendra {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html
     */
    interface IndexProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html#cfn-kendra-index-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html#cfn-kendra-index-usercontextpolicy
       */
      UserContextPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html#cfn-kendra-index-capacityunits
       */
      CapacityUnits?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html#cfn-kendra-index-serversideencryptionconfiguration
       */
      ServerSideEncryptionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html#cfn-kendra-index-documentmetadataconfigurations
       */
      DocumentMetadataConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html#cfn-kendra-index-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html#cfn-kendra-index-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html#cfn-kendra-index-edition
       */
      Edition: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html#cfn-kendra-index-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendra-index.html#cfn-kendra-index-usertokenconfigurations
       */
      UserTokenConfigurations?: {}[];
    }
    
    
    interface Index extends Resource<"AWS::Kendra::Index">, IndexProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Index(id: string, props: IndexProps): Promise<Index>;
  }
  namespace KendraRanking {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendraranking-executionplan.html
     */
    interface ExecutionPlanProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendraranking-executionplan.html#cfn-kendraranking-executionplan-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendraranking-executionplan.html#cfn-kendraranking-executionplan-capacityunits
       */
      CapacityUnits?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendraranking-executionplan.html#cfn-kendraranking-executionplan-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kendraranking-executionplan.html#cfn-kendraranking-executionplan-name
       */
      Name: string;
    }
    
    
    interface ExecutionPlan extends Resource<"AWS::KendraRanking::ExecutionPlan">, ExecutionPlanProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ExecutionPlan(id: string, props: ExecutionPlanProps): Promise<ExecutionPlan>;
  }
  namespace Kinesis {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-resourcepolicy.html
     */
    interface ResourcePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-resourcepolicy.html#cfn-kinesis-resourcepolicy-resourcearn
       */
      ResourceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-resourcepolicy.html#cfn-kinesis-resourcepolicy-resourcepolicy
       */
      ResourcePolicy: {
        [k: string]: unknown;
      };
    }
    
    
    interface ResourcePolicy extends Resource<"AWS::Kinesis::ResourcePolicy">, ResourcePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourcePolicy(id: string, props: ResourcePolicyProps): Promise<ResourcePolicy>;
  }
  namespace Kinesis {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html
     */
    interface StreamProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-streammodedetails
       */
      StreamModeDetails?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-streamencryption
       */
      StreamEncryption?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-retentionperiodhours
       */
      RetentionPeriodHours?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-desiredshardlevelmetrics
       */
      DesiredShardLevelMetrics?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-shardcount
       */
      ShardCount?: number;
    }
    
    
    interface Stream extends Resource<"AWS::Kinesis::Stream">, StreamProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Stream(id: string, props: StreamProps): Promise<Stream>;
  }
  namespace Kinesis {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html
     */
    interface StreamConsumerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html#cfn-kinesis-streamconsumer-consumername
       */
      ConsumerName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-streamconsumer.html#cfn-kinesis-streamconsumer-streamarn
       */
      StreamARN: string;
    }
    
    
    interface StreamConsumer extends Resource<"AWS::Kinesis::StreamConsumer">, StreamConsumerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StreamConsumer(id: string, props: StreamConsumerProps): Promise<StreamConsumer>;
  }
  namespace KinesisAnalytics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-application.html#cfn-kinesisanalytics-application-applicationname
       */
      ApplicationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-application.html#cfn-kinesisanalytics-application-inputs
       */
      Inputs: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-application.html#cfn-kinesisanalytics-application-applicationdescription
       */
      ApplicationDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-application.html#cfn-kinesisanalytics-application-applicationcode
       */
      ApplicationCode?: string;
    }
    
    
    interface Application extends Resource<"AWS::KinesisAnalytics::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace KinesisAnalytics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationoutput.html
     */
    interface ApplicationOutputProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationoutput.html#cfn-kinesisanalytics-applicationoutput-applicationname
       */
      ApplicationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationoutput.html#cfn-kinesisanalytics-applicationoutput-output
       */
      Output: {};
    }
    
    
    interface ApplicationOutput extends Resource<"AWS::KinesisAnalytics::ApplicationOutput">, ApplicationOutputProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApplicationOutput(id: string, props: ApplicationOutputProps): Promise<ApplicationOutput>;
  }
  namespace KinesisAnalytics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationreferencedatasource.html
     */
    interface ApplicationReferenceDataSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationreferencedatasource.html#cfn-kinesisanalytics-applicationreferencedatasource-applicationname
       */
      ApplicationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalytics-applicationreferencedatasource.html#cfn-kinesisanalytics-applicationreferencedatasource-referencedatasource
       */
      ReferenceDataSource: {};
    }
    
    
    interface ApplicationReferenceDataSource extends Resource<"AWS::KinesisAnalytics::ApplicationReferenceDataSource">, ApplicationReferenceDataSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApplicationReferenceDataSource(id: string, props: ApplicationReferenceDataSourceProps): Promise<ApplicationReferenceDataSource>;
  }
  namespace KinesisAnalyticsV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationname
       */
      ApplicationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-runtimeenvironment
       */
      RuntimeEnvironment: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-runconfiguration
       */
      RunConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationmode
       */
      ApplicationMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationmaintenanceconfiguration
       */
      ApplicationMaintenanceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationconfiguration
       */
      ApplicationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationdescription
       */
      ApplicationDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-serviceexecutionrole
       */
      ServiceExecutionRole: string;
    }
    
    
    interface Application extends Resource<"AWS::KinesisAnalyticsV2::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace KinesisAnalyticsV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationcloudwatchloggingoption.html
     */
    interface ApplicationCloudWatchLoggingOptionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationcloudwatchloggingoption.html#cfn-kinesisanalyticsv2-applicationcloudwatchloggingoption-applicationname
       */
      ApplicationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationcloudwatchloggingoption.html#cfn-kinesisanalyticsv2-applicationcloudwatchloggingoption-cloudwatchloggingoption
       */
      CloudWatchLoggingOption: {};
    }
    
    
    interface ApplicationCloudWatchLoggingOption extends Resource<"AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption">, ApplicationCloudWatchLoggingOptionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApplicationCloudWatchLoggingOption(id: string, props: ApplicationCloudWatchLoggingOptionProps): Promise<ApplicationCloudWatchLoggingOption>;
  }
  namespace KinesisAnalyticsV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationoutput.html
     */
    interface ApplicationOutputProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationoutput.html#cfn-kinesisanalyticsv2-applicationoutput-applicationname
       */
      ApplicationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationoutput.html#cfn-kinesisanalyticsv2-applicationoutput-output
       */
      Output: {};
    }
    
    
    interface ApplicationOutput extends Resource<"AWS::KinesisAnalyticsV2::ApplicationOutput">, ApplicationOutputProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApplicationOutput(id: string, props: ApplicationOutputProps): Promise<ApplicationOutput>;
  }
  namespace KinesisAnalyticsV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationreferencedatasource.html
     */
    interface ApplicationReferenceDataSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationreferencedatasource.html#cfn-kinesisanalyticsv2-applicationreferencedatasource-applicationname
       */
      ApplicationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-applicationreferencedatasource.html#cfn-kinesisanalyticsv2-applicationreferencedatasource-referencedatasource
       */
      ReferenceDataSource: {};
    }
    
    
    interface ApplicationReferenceDataSource extends Resource<"AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource">, ApplicationReferenceDataSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApplicationReferenceDataSource(id: string, props: ApplicationReferenceDataSourceProps): Promise<ApplicationReferenceDataSource>;
  }
  namespace KinesisFirehose {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html
     */
    interface DeliveryStreamProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-deliverystreamencryptionconfigurationinput
       */
      DeliveryStreamEncryptionConfigurationInput?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-httpendpointdestinationconfiguration
       */
      HttpEndpointDestinationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-kinesisstreamsourceconfiguration
       */
      KinesisStreamSourceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-deliverystreamtype
       */
      DeliveryStreamType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-icebergdestinationconfiguration
       */
      IcebergDestinationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-redshiftdestinationconfiguration
       */
      RedshiftDestinationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-amazonopensearchservicedestinationconfiguration
       */
      AmazonopensearchserviceDestinationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-msksourceconfiguration
       */
      MSKSourceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-directputsourceconfiguration
       */
      DirectPutSourceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-splunkdestinationconfiguration
       */
      SplunkDestinationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-extendeds3destinationconfiguration
       */
      ExtendedS3DestinationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-amazonopensearchserverlessdestinationconfiguration
       */
      AmazonOpenSearchServerlessDestinationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-elasticsearchdestinationconfiguration
       */
      ElasticsearchDestinationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-snowflakedestinationconfiguration
       */
      SnowflakeDestinationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-databasesourceconfiguration
       */
      DatabaseSourceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-s3destinationconfiguration
       */
      S3DestinationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-deliverystreamname
       */
      DeliveryStreamName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisfirehose-deliverystream.html#cfn-kinesisfirehose-deliverystream-tags
       */
      Tags?: {}[];
    }
    
    
    interface DeliveryStream extends Resource<"AWS::KinesisFirehose::DeliveryStream">, DeliveryStreamProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DeliveryStream(id: string, props: DeliveryStreamProps): Promise<DeliveryStream>;
  }
  namespace KinesisVideo {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-signalingchannel.html
     */
    interface SignalingChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-signalingchannel.html#cfn-kinesisvideo-signalingchannel-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-signalingchannel.html#cfn-kinesisvideo-signalingchannel-messagettlseconds
       */
      MessageTtlSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-signalingchannel.html#cfn-kinesisvideo-signalingchannel-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-signalingchannel.html#cfn-kinesisvideo-signalingchannel-name
       */
      Name?: string;
    }
    
    
    interface SignalingChannel extends Resource<"AWS::KinesisVideo::SignalingChannel">, SignalingChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SignalingChannel(id: string, props: SignalingChannelProps): Promise<SignalingChannel>;
  }
  namespace KinesisVideo {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-stream.html
     */
    interface StreamProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-stream.html#cfn-kinesisvideo-stream-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-stream.html#cfn-kinesisvideo-stream-mediatype
       */
      MediaType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-stream.html#cfn-kinesisvideo-stream-dataretentioninhours
       */
      DataRetentionInHours?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-stream.html#cfn-kinesisvideo-stream-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-stream.html#cfn-kinesisvideo-stream-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisvideo-stream.html#cfn-kinesisvideo-stream-devicename
       */
      DeviceName?: string;
    }
    
    
    interface Stream extends Resource<"AWS::KinesisVideo::Stream">, StreamProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Stream(id: string, props: StreamProps): Promise<Stream>;
  }
  namespace LakeFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html
     */
    interface DataCellsFilterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-tablename
       */
      TableName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-columnnames
       */
      ColumnNames?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-rowfilter
       */
      RowFilter?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-databasename
       */
      DatabaseName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-tablecatalogid
       */
      TableCatalogId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-columnwildcard
       */
      ColumnWildcard?: {};
    }
    
    
    interface DataCellsFilter extends Resource<"AWS::LakeFormation::DataCellsFilter">, DataCellsFilterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataCellsFilter(id: string, props: DataCellsFilterProps): Promise<DataCellsFilter>;
  }
  namespace LakeFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html
     */
    interface DataLakeSettingsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-allowexternaldatafiltering
       */
      AllowExternalDataFiltering?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-externaldatafilteringallowlist
       */
      ExternalDataFilteringAllowList?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-createtabledefaultpermissions
       */
      CreateTableDefaultPermissions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-mutationtype
       */
      MutationType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-parameters
       */
      Parameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-allowfulltableexternaldataaccess
       */
      AllowFullTableExternalDataAccess?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-admins
       */
      Admins?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-createdatabasedefaultpermissions
       */
      CreateDatabaseDefaultPermissions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-authorizedsessiontagvaluelist
       */
      AuthorizedSessionTagValueList?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-trustedresourceowners
       */
      TrustedResourceOwners?: string[];
    }
    
    
    interface DataLakeSettings extends Resource<"AWS::LakeFormation::DataLakeSettings">, DataLakeSettingsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataLakeSettings(id: string, props: DataLakeSettingsProps): Promise<DataLakeSettings>;
  }
  namespace LakeFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-permissions.html
     */
    interface PermissionsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-permissions.html#cfn-lakeformation-permissions-datalakeprincipal
       */
      DataLakePrincipal: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-permissions.html#cfn-lakeformation-permissions-resource
       */
      Resource: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-permissions.html#cfn-lakeformation-permissions-permissions
       */
      Permissions?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-permissions.html#cfn-lakeformation-permissions-permissionswithgrantoption
       */
      PermissionsWithGrantOption?: string[];
    }
    
    
    interface Permissions extends Resource<"AWS::LakeFormation::Permissions">, PermissionsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Permissions(id: string, props: PermissionsProps): Promise<Permissions>;
  }
  namespace LakeFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-principalpermissions.html
     */
    interface PrincipalPermissionsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-principalpermissions.html#cfn-lakeformation-principalpermissions-resource
       */
      Resource: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-principalpermissions.html#cfn-lakeformation-principalpermissions-permissions
       */
      Permissions: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-principalpermissions.html#cfn-lakeformation-principalpermissions-catalog
       */
      Catalog?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-principalpermissions.html#cfn-lakeformation-principalpermissions-principal
       */
      Principal: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-principalpermissions.html#cfn-lakeformation-principalpermissions-permissionswithgrantoption
       */
      PermissionsWithGrantOption: string[];
    }
    
    
    interface PrincipalPermissions extends Resource<"AWS::LakeFormation::PrincipalPermissions">, PrincipalPermissionsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PrincipalPermissions(id: string, props: PrincipalPermissionsProps): Promise<PrincipalPermissions>;
  }
  namespace LakeFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-resource.html
     */
    interface ResourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-resource.html#cfn-lakeformation-resource-resourcearn
       */
      ResourceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-resource.html#cfn-lakeformation-resource-withfederation
       */
      WithFederation?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-resource.html#cfn-lakeformation-resource-useservicelinkedrole
       */
      UseServiceLinkedRole: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-resource.html#cfn-lakeformation-resource-hybridaccessenabled
       */
      HybridAccessEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-resource.html#cfn-lakeformation-resource-rolearn
       */
      RoleArn?: string;
    }
    
    
    interface Resource extends Resource<"AWS::LakeFormation::Resource">, ResourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Resource(id: string, props: ResourceProps): Promise<Resource>;
  }
  namespace LakeFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-tag.html
     */
    interface TagProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-tag.html#cfn-lakeformation-tag-tagkey
       */
      TagKey: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-tag.html#cfn-lakeformation-tag-catalogid
       */
      CatalogId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-tag.html#cfn-lakeformation-tag-tagvalues
       */
      TagValues: string[];
    }
    
    
    interface Tag extends Resource<"AWS::LakeFormation::Tag">, TagProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Tag(id: string, props: TagProps): Promise<Tag>;
  }
  namespace LakeFormation {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-tagassociation.html
     */
    interface TagAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-tagassociation.html#cfn-lakeformation-tagassociation-lftags
       */
      LFTags: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-tagassociation.html#cfn-lakeformation-tagassociation-resource
       */
      Resource: {};
    }
    
    
    interface TagAssociation extends Resource<"AWS::LakeFormation::TagAssociation">, TagAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TagAssociation(id: string, props: TagAssociationProps): Promise<TagAssociation>;
  }
  namespace Lambda {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html
     */
    interface AliasProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-functionname
       */
      FunctionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-provisionedconcurrencyconfig
       */
      ProvisionedConcurrencyConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-functionversion
       */
      FunctionVersion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-routingconfig
       */
      RoutingConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-name
       */
      Name: string;
    }
    
    
    interface Alias extends Resource<"AWS::Lambda::Alias">, AliasProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Alias(id: string, props: AliasProps): Promise<Alias>;
  }
  namespace Lambda {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html
     */
    interface CodeSigningConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html#cfn-lambda-codesigningconfig-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html#cfn-lambda-codesigningconfig-allowedpublishers
       */
      AllowedPublishers: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html#cfn-lambda-codesigningconfig-codesigningpolicies
       */
      CodeSigningPolicies?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html#cfn-lambda-codesigningconfig-tags
       */
      Tags?: {}[];
    }
    
    
    interface CodeSigningConfig extends Resource<"AWS::Lambda::CodeSigningConfig">, CodeSigningConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CodeSigningConfig(id: string, props: CodeSigningConfigProps): Promise<CodeSigningConfig>;
  }
  namespace Lambda {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html
     */
    interface EventInvokeConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-functionname
       */
      FunctionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-maximumretryattempts
       */
      MaximumRetryAttempts?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-destinationconfig
       */
      DestinationConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-qualifier
       */
      Qualifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html#cfn-lambda-eventinvokeconfig-maximumeventageinseconds
       */
      MaximumEventAgeInSeconds?: number;
    }
    
    
    interface EventInvokeConfig extends Resource<"AWS::Lambda::EventInvokeConfig">, EventInvokeConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventInvokeConfig(id: string, props: EventInvokeConfigProps): Promise<EventInvokeConfig>;
  }
  namespace Lambda {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html
     */
    interface EventSourceMappingProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-startingposition
       */
      StartingPosition?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-selfmanagedeventsource
       */
      SelfManagedEventSource?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-parallelizationfactor
       */
      ParallelizationFactor?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-filtercriteria
       */
      FilterCriteria?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-provisionedpollerconfig
       */
      ProvisionedPollerConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-metricsconfig
       */
      MetricsConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-functionname
       */
      FunctionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-destinationconfig
       */
      DestinationConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-kmskeyarn
       */
      KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-amazonmanagedkafkaeventsourceconfig
       */
      AmazonManagedKafkaEventSourceConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-sourceaccessconfigurations
       */
      SourceAccessConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumbatchingwindowinseconds
       */
      MaximumBatchingWindowInSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-batchsize
       */
      BatchSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumretryattempts
       */
      MaximumRetryAttempts?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-topics
       */
      Topics?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-scalingconfig
       */
      ScalingConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-eventsourcearn
       */
      EventSourceArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-selfmanagedkafkaeventsourceconfig
       */
      SelfManagedKafkaEventSourceConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-documentdbeventsourceconfig
       */
      DocumentDBEventSourceConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-tumblingwindowinseconds
       */
      TumblingWindowInSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-bisectbatchonfunctionerror
       */
      BisectBatchOnFunctionError?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumrecordageinseconds
       */
      MaximumRecordAgeInSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-startingpositiontimestamp
       */
      StartingPositionTimestamp?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-queues
       */
      Queues?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-functionresponsetypes
       */
      FunctionResponseTypes?: string[];
    }
    
    
    interface EventSourceMapping extends Resource<"AWS::Lambda::EventSourceMapping">, EventSourceMappingProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventSourceMapping(id: string, props: EventSourceMappingProps): Promise<EventSourceMapping>;
  }
  namespace Lambda {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html
     */
    interface FunctionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-tracingconfig
       */
      TracingConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-vpcconfig
       */
      VpcConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-runtimemanagementconfig
       */
      RuntimeManagementConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-reservedconcurrentexecutions
       */
      ReservedConcurrentExecutions?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-snapstart
       */
      SnapStart?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-filesystemconfigs
       */
      FileSystemConfigs?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-functionname
       */
      FunctionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-runtime
       */
      Runtime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-kmskeyarn
       */
      KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-packagetype
       */
      PackageType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-codesigningconfigarn
       */
      CodeSigningConfigArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-layers
       */
      Layers?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-imageconfig
       */
      ImageConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-memorysize
       */
      MemorySize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-deadletterconfig
       */
      DeadLetterConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-timeout
       */
      Timeout?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-handler
       */
      Handler?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-code
       */
      Code: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-role
       */
      Role: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-loggingconfig
       */
      LoggingConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-recursiveloop
       */
      RecursiveLoop?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-environment
       */
      Environment?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-ephemeralstorage
       */
      EphemeralStorage?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-architectures
       */
      Architectures?: string[];
    }
    
    
    interface Function extends Resource<"AWS::Lambda::Function">, FunctionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Function(id: string, props: FunctionProps): Promise<Function>;
  }
  namespace Lambda {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html
     */
    interface LayerVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-compatibleruntimes
       */
      CompatibleRuntimes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-licenseinfo
       */
      LicenseInfo?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-layername
       */
      LayerName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-content
       */
      Content: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversion.html#cfn-lambda-layerversion-compatiblearchitectures
       */
      CompatibleArchitectures?: string[];
    }
    
    
    interface LayerVersion extends Resource<"AWS::Lambda::LayerVersion">, LayerVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LayerVersion(id: string, props: LayerVersionProps): Promise<LayerVersion>;
  }
  namespace Lambda {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html
     */
    interface LayerVersionPermissionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html#cfn-lambda-layerversionpermission-action
       */
      Action: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html#cfn-lambda-layerversionpermission-layerversionarn
       */
      LayerVersionArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html#cfn-lambda-layerversionpermission-organizationid
       */
      OrganizationId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-layerversionpermission.html#cfn-lambda-layerversionpermission-principal
       */
      Principal: string;
    }
    
    
    interface LayerVersionPermission extends Resource<"AWS::Lambda::LayerVersionPermission">, LayerVersionPermissionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LayerVersionPermission(id: string, props: LayerVersionPermissionProps): Promise<LayerVersionPermission>;
  }
  namespace Lambda {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html
     */
    interface PermissionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-functionname
       */
      FunctionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-action
       */
      Action: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-eventsourcetoken
       */
      EventSourceToken?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-functionurlauthtype
       */
      FunctionUrlAuthType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-sourcearn
       */
      SourceArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-sourceaccount
       */
      SourceAccount?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-principalorgid
       */
      PrincipalOrgID?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-principal
       */
      Principal: string;
    }
    
    
    interface Permission extends Resource<"AWS::Lambda::Permission">, PermissionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Permission(id: string, props: PermissionProps): Promise<Permission>;
  }
  namespace Lambda {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html
     */
    interface UrlProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-qualifier
       */
      Qualifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-invokemode
       */
      InvokeMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-authtype
       */
      AuthType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-targetfunctionarn
       */
      TargetFunctionArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-url.html#cfn-lambda-url-cors
       */
      Cors?: {};
    }
    
    
    interface Url extends Resource<"AWS::Lambda::Url">, UrlProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Url(id: string, props: UrlProps): Promise<Url>;
  }
  namespace Lambda {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html
     */
    interface VersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-functionname
       */
      FunctionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-provisionedconcurrencyconfig
       */
      ProvisionedConcurrencyConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-runtimepolicy
       */
      RuntimePolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-codesha256
       */
      CodeSha256?: string;
    }
    
    
    interface Version extends Resource<"AWS::Lambda::Version">, VersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Version(id: string, props: VersionProps): Promise<Version>;
  }
  namespace LaunchWizard {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-launchwizard-deployment.html
     */
    interface DeploymentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-launchwizard-deployment.html#cfn-launchwizard-deployment-specifications
       */
      Specifications?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-launchwizard-deployment.html#cfn-launchwizard-deployment-workloadname
       */
      WorkloadName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-launchwizard-deployment.html#cfn-launchwizard-deployment-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-launchwizard-deployment.html#cfn-launchwizard-deployment-deploymentpatternname
       */
      DeploymentPatternName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-launchwizard-deployment.html#cfn-launchwizard-deployment-name
       */
      Name: string;
    }
    
    
    interface Deployment extends Resource<"AWS::LaunchWizard::Deployment">, DeploymentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Deployment(id: string, props: DeploymentProps): Promise<Deployment>;
  }
  namespace Lex {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html
     */
    interface BotProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-autobuildbotlocales
       */
      AutoBuildBotLocales?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-botlocales
       */
      BotLocales?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-idlesessionttlinseconds
       */
      IdleSessionTTLInSeconds: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-botfiles3location
       */
      BotFileS3Location?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-replication
       */
      Replication?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-testbotaliassettings
       */
      TestBotAliasSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-bottags
       */
      BotTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-testbotaliastags
       */
      TestBotAliasTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-dataprivacy
       */
      DataPrivacy: {};
    }
    
    
    interface Bot extends Resource<"AWS::Lex::Bot">, BotProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Bot(id: string, props: BotProps): Promise<Bot>;
  }
  namespace Lex {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html
     */
    interface BotAliasProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-botversion
       */
      BotVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-botid
       */
      BotId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-botaliaslocalesettings
       */
      BotAliasLocaleSettings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-conversationlogsettings
       */
      ConversationLogSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-sentimentanalysissettings
       */
      SentimentAnalysisSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-botaliasname
       */
      BotAliasName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-botaliastags
       */
      BotAliasTags?: {}[];
    }
    
    
    interface BotAlias extends Resource<"AWS::Lex::BotAlias">, BotAliasProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BotAlias(id: string, props: BotAliasProps): Promise<BotAlias>;
  }
  namespace Lex {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botversion.html
     */
    interface BotVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botversion.html#cfn-lex-botversion-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botversion.html#cfn-lex-botversion-botid
       */
      BotId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botversion.html#cfn-lex-botversion-botversionlocalespecification
       */
      BotVersionLocaleSpecification: {}[];
    }
    
    
    interface BotVersion extends Resource<"AWS::Lex::BotVersion">, BotVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BotVersion(id: string, props: BotVersionProps): Promise<BotVersion>;
  }
  namespace Lex {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-resourcepolicy.html
     */
    interface ResourcePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-resourcepolicy.html#cfn-lex-resourcepolicy-policy
       */
      Policy: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-resourcepolicy.html#cfn-lex-resourcepolicy-resourcearn
       */
      ResourceArn: string;
    }
    
    
    interface ResourcePolicy extends Resource<"AWS::Lex::ResourcePolicy">, ResourcePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourcePolicy(id: string, props: ResourcePolicyProps): Promise<ResourcePolicy>;
  }
  namespace LicenseManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html
     */
    interface GrantProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-principals
       */
      Principals?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-homeregion
       */
      HomeRegion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-allowedoperations
       */
      AllowedOperations?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-licensearn
       */
      LicenseArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantname
       */
      GrantName?: string;
    }
    
    
    interface Grant extends Resource<"AWS::LicenseManager::Grant">, GrantProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Grant(id: string, props: GrantProps): Promise<Grant>;
  }
  namespace LicenseManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html
     */
    interface LicenseProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-productsku
       */
      ProductSKU?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-consumptionconfiguration
       */
      ConsumptionConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-validity
       */
      Validity: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-productname
       */
      ProductName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-issuer
       */
      Issuer: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-homeregion
       */
      HomeRegion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-entitlements
       */
      Entitlements: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-licensemetadata
       */
      LicenseMetadata?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-licensename
       */
      LicenseName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-beneficiary
       */
      Beneficiary?: string;
    }
    
    
    interface License extends Resource<"AWS::LicenseManager::License">, LicenseProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function License(id: string, props: LicenseProps): Promise<License>;
  }
  namespace Lightsail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html
     */
    interface AlarmProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html#cfn-lightsail-alarm-metricname
       */
      MetricName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html#cfn-lightsail-alarm-comparisonoperator
       */
      ComparisonOperator: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html#cfn-lightsail-alarm-treatmissingdata
       */
      TreatMissingData?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html#cfn-lightsail-alarm-alarmname
       */
      AlarmName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html#cfn-lightsail-alarm-contactprotocols
       */
      ContactProtocols?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html#cfn-lightsail-alarm-monitoredresourcename
       */
      MonitoredResourceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html#cfn-lightsail-alarm-evaluationperiods
       */
      EvaluationPeriods: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html#cfn-lightsail-alarm-notificationenabled
       */
      NotificationEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html#cfn-lightsail-alarm-datapointstoalarm
       */
      DatapointsToAlarm?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html#cfn-lightsail-alarm-notificationtriggers
       */
      NotificationTriggers?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-alarm.html#cfn-lightsail-alarm-threshold
       */
      Threshold: number;
    }
    
    
    interface Alarm extends Resource<"AWS::Lightsail::Alarm">, AlarmProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Alarm(id: string, props: AlarmProps): Promise<Alarm>;
  }
  namespace Lightsail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html
     */
    interface BucketProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html#cfn-lightsail-bucket-objectversioning
       */
      ObjectVersioning?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html#cfn-lightsail-bucket-readonlyaccessaccounts
       */
      ReadOnlyAccessAccounts?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html#cfn-lightsail-bucket-bundleid
       */
      BundleId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html#cfn-lightsail-bucket-bucketname
       */
      BucketName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html#cfn-lightsail-bucket-accessrules
       */
      AccessRules?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html#cfn-lightsail-bucket-resourcesreceivingaccess
       */
      ResourcesReceivingAccess?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html#cfn-lightsail-bucket-tags
       */
      Tags?: {}[];
    }
    
    
    interface Bucket extends Resource<"AWS::Lightsail::Bucket">, BucketProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Bucket(id: string, props: BucketProps): Promise<Bucket>;
  }
  namespace Lightsail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-certificate.html
     */
    interface CertificateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-certificate.html#cfn-lightsail-certificate-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-certificate.html#cfn-lightsail-certificate-subjectalternativenames
       */
      SubjectAlternativeNames?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-certificate.html#cfn-lightsail-certificate-certificatename
       */
      CertificateName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-certificate.html#cfn-lightsail-certificate-tags
       */
      Tags?: {}[];
    }
    
    
    interface Certificate extends Resource<"AWS::Lightsail::Certificate">, CertificateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Certificate(id: string, props: CertificateProps): Promise<Certificate>;
  }
  namespace Lightsail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html
     */
    interface ContainerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-publicdomainnames
       */
      PublicDomainNames?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-servicename
       */
      ServiceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-privateregistryaccess
       */
      PrivateRegistryAccess?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-containerservicedeployment
       */
      ContainerServiceDeployment?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-isdisabled
       */
      IsDisabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-scale
       */
      Scale: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-power
       */
      Power: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-tags
       */
      Tags?: {}[];
    }
    
    
    interface Container extends Resource<"AWS::Lightsail::Container">, ContainerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Container(id: string, props: ContainerProps): Promise<Container>;
  }
  namespace Lightsail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html
     */
    interface DatabaseProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-relationaldatabasename
       */
      RelationalDatabaseName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-cacertificateidentifier
       */
      CaCertificateIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-availabilityzone
       */
      AvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-relationaldatabaseblueprintid
       */
      RelationalDatabaseBlueprintId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-preferredbackupwindow
       */
      PreferredBackupWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-masterdatabasename
       */
      MasterDatabaseName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-masteruserpassword
       */
      MasterUserPassword?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-relationaldatabaseparameters
       */
      RelationalDatabaseParameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-rotatemasteruserpassword
       */
      RotateMasterUserPassword?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-masterusername
       */
      MasterUsername: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-publiclyaccessible
       */
      PubliclyAccessible?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-relationaldatabasebundleid
       */
      RelationalDatabaseBundleId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-backupretention
       */
      BackupRetention?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-database.html#cfn-lightsail-database-tags
       */
      Tags?: {}[];
    }
    
    
    interface Database extends Resource<"AWS::Lightsail::Database">, DatabaseProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Database(id: string, props: DatabaseProps): Promise<Database>;
  }
  namespace Lightsail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-disk.html
     */
    interface DiskProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-disk.html#cfn-lightsail-disk-sizeingb
       */
      SizeInGb: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-disk.html#cfn-lightsail-disk-availabilityzone
       */
      AvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-disk.html#cfn-lightsail-disk-addons
       */
      AddOns?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-disk.html#cfn-lightsail-disk-diskname
       */
      DiskName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-disk.html#cfn-lightsail-disk-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-disk.html#cfn-lightsail-disk-location
       */
      Location?: {};
    }
    
    
    interface Disk extends Resource<"AWS::Lightsail::Disk">, DiskProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Disk(id: string, props: DiskProps): Promise<Disk>;
  }
  namespace Lightsail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-distribution.html
     */
    interface DistributionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-distribution.html#cfn-lightsail-distribution-ipaddresstype
       */
      IpAddressType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-distribution.html#cfn-lightsail-distribution-origin
       */
      Origin: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-distribution.html#cfn-lightsail-distribution-distributionname
       */
      DistributionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-distribution.html#cfn-lightsail-distribution-bundleid
       */
      BundleId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-distribution.html#cfn-lightsail-distribution-defaultcachebehavior
       */
      DefaultCacheBehavior: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-distribution.html#cfn-lightsail-distribution-isenabled
       */
      IsEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-distribution.html#cfn-lightsail-distribution-cachebehaviorsettings
       */
      CacheBehaviorSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-distribution.html#cfn-lightsail-distribution-certificatename
       */
      CertificateName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-distribution.html#cfn-lightsail-distribution-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-distribution.html#cfn-lightsail-distribution-cachebehaviors
       */
      CacheBehaviors?: {}[];
    }
    
    
    interface Distribution extends Resource<"AWS::Lightsail::Distribution">, DistributionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Distribution(id: string, props: DistributionProps): Promise<Distribution>;
  }
  namespace Lightsail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html
     */
    interface InstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html#cfn-lightsail-instance-instancename
       */
      InstanceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html#cfn-lightsail-instance-keypairname
       */
      KeyPairName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html#cfn-lightsail-instance-bundleid
       */
      BundleId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html#cfn-lightsail-instance-blueprintid
       */
      BlueprintId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html#cfn-lightsail-instance-networking
       */
      Networking?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html#cfn-lightsail-instance-userdata
       */
      UserData?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html#cfn-lightsail-instance-state
       */
      State?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html#cfn-lightsail-instance-availabilityzone
       */
      AvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html#cfn-lightsail-instance-addons
       */
      AddOns?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html#cfn-lightsail-instance-hardware
       */
      Hardware?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html#cfn-lightsail-instance-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-instance.html#cfn-lightsail-instance-location
       */
      Location?: {};
    }
    
    
    interface Instance extends Resource<"AWS::Lightsail::Instance">, InstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Instance(id: string, props: InstanceProps): Promise<Instance>;
  }
  namespace Lightsail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html
     */
    interface LoadBalancerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-ipaddresstype
       */
      IpAddressType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-sessionstickinesslbcookiedurationseconds
       */
      SessionStickinessLBCookieDurationSeconds?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-loadbalancername
       */
      LoadBalancerName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-attachedinstances
       */
      AttachedInstances?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-instanceport
       */
      InstancePort: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-healthcheckpath
       */
      HealthCheckPath?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-sessionstickinessenabled
       */
      SessionStickinessEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-tlspolicyname
       */
      TlsPolicyName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-tags
       */
      Tags?: {}[];
    }
    
    
    interface LoadBalancer extends Resource<"AWS::Lightsail::LoadBalancer">, LoadBalancerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LoadBalancer(id: string, props: LoadBalancerProps): Promise<LoadBalancer>;
  }
  namespace Lightsail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancertlscertificate.html
     */
    interface LoadBalancerTlsCertificateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancertlscertificate.html#cfn-lightsail-loadbalancertlscertificate-loadbalancername
       */
      LoadBalancerName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancertlscertificate.html#cfn-lightsail-loadbalancertlscertificate-certificatedomainname
       */
      CertificateDomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancertlscertificate.html#cfn-lightsail-loadbalancertlscertificate-isattached
       */
      IsAttached?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancertlscertificate.html#cfn-lightsail-loadbalancertlscertificate-certificatealternativenames
       */
      CertificateAlternativeNames?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancertlscertificate.html#cfn-lightsail-loadbalancertlscertificate-httpsredirectionenabled
       */
      HttpsRedirectionEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancertlscertificate.html#cfn-lightsail-loadbalancertlscertificate-certificatename
       */
      CertificateName: string;
    }
    
    
    interface LoadBalancerTlsCertificate extends Resource<"AWS::Lightsail::LoadBalancerTlsCertificate">, LoadBalancerTlsCertificateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LoadBalancerTlsCertificate(id: string, props: LoadBalancerTlsCertificateProps): Promise<LoadBalancerTlsCertificate>;
  }
  namespace Lightsail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-staticip.html
     */
    interface StaticIpProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-staticip.html#cfn-lightsail-staticip-staticipname
       */
      StaticIpName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-staticip.html#cfn-lightsail-staticip-attachedto
       */
      AttachedTo?: string;
    }
    
    
    interface StaticIp extends Resource<"AWS::Lightsail::StaticIp">, StaticIpProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StaticIp(id: string, props: StaticIpProps): Promise<StaticIp>;
  }
  namespace Location {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html
     */
    interface APIKeyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-keyname
       */
      KeyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-noexpiry
       */
      NoExpiry?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-forcedelete
       */
      ForceDelete?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-expiretime
       */
      ExpireTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-forceupdate
       */
      ForceUpdate?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-restrictions
       */
      Restrictions: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-tags
       */
      Tags?: {}[];
    }
    
    
    interface APIKey extends Resource<"AWS::Location::APIKey">, APIKeyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function APIKey(id: string, props: APIKeyProps): Promise<APIKey>;
  }
  namespace Location {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-geofencecollection.html
     */
    interface GeofenceCollectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-geofencecollection.html#cfn-location-geofencecollection-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-geofencecollection.html#cfn-location-geofencecollection-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-geofencecollection.html#cfn-location-geofencecollection-collectionname
       */
      CollectionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-geofencecollection.html#cfn-location-geofencecollection-tags
       */
      Tags?: {}[];
    }
    
    
    interface GeofenceCollection extends Resource<"AWS::Location::GeofenceCollection">, GeofenceCollectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GeofenceCollection(id: string, props: GeofenceCollectionProps): Promise<GeofenceCollection>;
  }
  namespace Location {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-map.html
     */
    interface MapProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-map.html#cfn-location-map-mapname
       */
      MapName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-map.html#cfn-location-map-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-map.html#cfn-location-map-configuration
       */
      Configuration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-map.html#cfn-location-map-pricingplan
       */
      PricingPlan?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-map.html#cfn-location-map-tags
       */
      Tags?: {}[];
    }
    
    
    interface Map extends Resource<"AWS::Location::Map">, MapProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Map(id: string, props: MapProps): Promise<Map>;
  }
  namespace Location {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html
     */
    interface PlaceIndexProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html#cfn-location-placeindex-indexname
       */
      IndexName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html#cfn-location-placeindex-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html#cfn-location-placeindex-pricingplan
       */
      PricingPlan?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html#cfn-location-placeindex-datasourceconfiguration
       */
      DataSourceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html#cfn-location-placeindex-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html#cfn-location-placeindex-datasource
       */
      DataSource: string;
    }
    
    
    interface PlaceIndex extends Resource<"AWS::Location::PlaceIndex">, PlaceIndexProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PlaceIndex(id: string, props: PlaceIndexProps): Promise<PlaceIndex>;
  }
  namespace Location {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-routecalculator.html
     */
    interface RouteCalculatorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-routecalculator.html#cfn-location-routecalculator-calculatorname
       */
      CalculatorName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-routecalculator.html#cfn-location-routecalculator-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-routecalculator.html#cfn-location-routecalculator-pricingplan
       */
      PricingPlan?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-routecalculator.html#cfn-location-routecalculator-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-routecalculator.html#cfn-location-routecalculator-datasource
       */
      DataSource: string;
    }
    
    
    interface RouteCalculator extends Resource<"AWS::Location::RouteCalculator">, RouteCalculatorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RouteCalculator(id: string, props: RouteCalculatorProps): Promise<RouteCalculator>;
  }
  namespace Location {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-tracker.html
     */
    interface TrackerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-tracker.html#cfn-location-tracker-trackername
       */
      TrackerName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-tracker.html#cfn-location-tracker-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-tracker.html#cfn-location-tracker-eventbridgeenabled
       */
      EventBridgeEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-tracker.html#cfn-location-tracker-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-tracker.html#cfn-location-tracker-kmskeyenablegeospatialqueries
       */
      KmsKeyEnableGeospatialQueries?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-tracker.html#cfn-location-tracker-positionfiltering
       */
      PositionFiltering?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-tracker.html#cfn-location-tracker-tags
       */
      Tags?: {}[];
    }
    
    
    interface Tracker extends Resource<"AWS::Location::Tracker">, TrackerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Tracker(id: string, props: TrackerProps): Promise<Tracker>;
  }
  namespace Location {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-trackerconsumer.html
     */
    interface TrackerConsumerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-trackerconsumer.html#cfn-location-trackerconsumer-trackername
       */
      TrackerName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-trackerconsumer.html#cfn-location-trackerconsumer-consumerarn
       */
      ConsumerArn: string;
    }
    
    
    interface TrackerConsumer extends Resource<"AWS::Location::TrackerConsumer">, TrackerConsumerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TrackerConsumer(id: string, props: TrackerConsumerProps): Promise<TrackerConsumer>;
  }
  namespace Logs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-accountpolicy.html
     */
    interface AccountPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-accountpolicy.html#cfn-logs-accountpolicy-policytype
       */
      PolicyType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-accountpolicy.html#cfn-logs-accountpolicy-scope
       */
      Scope?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-accountpolicy.html#cfn-logs-accountpolicy-policyname
       */
      PolicyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-accountpolicy.html#cfn-logs-accountpolicy-selectioncriteria
       */
      SelectionCriteria?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-accountpolicy.html#cfn-logs-accountpolicy-policydocument
       */
      PolicyDocument: string;
    }
    
    
    interface AccountPolicy extends Resource<"AWS::Logs::AccountPolicy">, AccountPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccountPolicy(id: string, props: AccountPolicyProps): Promise<AccountPolicy>;
  }
  namespace Logs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-delivery.html
     */
    interface DeliveryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-delivery.html#cfn-logs-delivery-s3enablehivecompatiblepath
       */
      S3EnableHiveCompatiblePath?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-delivery.html#cfn-logs-delivery-fielddelimiter
       */
      FieldDelimiter?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-delivery.html#cfn-logs-delivery-deliverydestinationarn
       */
      DeliveryDestinationArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-delivery.html#cfn-logs-delivery-deliverysourcename
       */
      DeliverySourceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-delivery.html#cfn-logs-delivery-recordfields
       */
      RecordFields?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-delivery.html#cfn-logs-delivery-s3suffixpath
       */
      S3SuffixPath?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-delivery.html#cfn-logs-delivery-tags
       */
      Tags?: {}[];
    }
    
    
    interface Delivery extends Resource<"AWS::Logs::Delivery">, DeliveryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Delivery(id: string, props: DeliveryProps): Promise<Delivery>;
  }
  namespace Logs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverydestination.html
     */
    interface DeliveryDestinationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverydestination.html#cfn-logs-deliverydestination-destinationresourcearn
       */
      DestinationResourceArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverydestination.html#cfn-logs-deliverydestination-outputformat
       */
      OutputFormat?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverydestination.html#cfn-logs-deliverydestination-deliverydestinationpolicy
       */
      DeliveryDestinationPolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverydestination.html#cfn-logs-deliverydestination-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverydestination.html#cfn-logs-deliverydestination-name
       */
      Name: string;
    }
    
    
    interface DeliveryDestination extends Resource<"AWS::Logs::DeliveryDestination">, DeliveryDestinationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DeliveryDestination(id: string, props: DeliveryDestinationProps): Promise<DeliveryDestination>;
  }
  namespace Logs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverysource.html
     */
    interface DeliverySourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverysource.html#cfn-logs-deliverysource-resourcearn
       */
      ResourceArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverysource.html#cfn-logs-deliverysource-logtype
       */
      LogType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverysource.html#cfn-logs-deliverysource-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverysource.html#cfn-logs-deliverysource-name
       */
      Name: string;
    }
    
    
    interface DeliverySource extends Resource<"AWS::Logs::DeliverySource">, DeliverySourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DeliverySource(id: string, props: DeliverySourceProps): Promise<DeliverySource>;
  }
  namespace Logs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html
     */
    interface DestinationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html#cfn-logs-destination-destinationpolicy
       */
      DestinationPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html#cfn-logs-destination-destinationname
       */
      DestinationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html#cfn-logs-destination-targetarn
       */
      TargetArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-destination.html#cfn-logs-destination-rolearn
       */
      RoleArn: string;
    }
    
    
    interface Destination extends Resource<"AWS::Logs::Destination">, DestinationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Destination(id: string, props: DestinationProps): Promise<Destination>;
  }
  namespace Logs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-integration.html
     */
    interface IntegrationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-integration.html#cfn-logs-integration-integrationname
       */
      IntegrationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-integration.html#cfn-logs-integration-resourceconfig
       */
      ResourceConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-integration.html#cfn-logs-integration-integrationtype
       */
      IntegrationType: string;
    }
    
    
    interface Integration extends Resource<"AWS::Logs::Integration">, IntegrationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Integration(id: string, props: IntegrationProps): Promise<Integration>;
  }
  namespace Logs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loganomalydetector.html
     */
    interface LogAnomalyDetectorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loganomalydetector.html#cfn-logs-loganomalydetector-anomalyvisibilitytime
       */
      AnomalyVisibilityTime?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loganomalydetector.html#cfn-logs-loganomalydetector-filterpattern
       */
      FilterPattern?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loganomalydetector.html#cfn-logs-loganomalydetector-accountid
       */
      AccountId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loganomalydetector.html#cfn-logs-loganomalydetector-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loganomalydetector.html#cfn-logs-loganomalydetector-loggrouparnlist
       */
      LogGroupArnList?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loganomalydetector.html#cfn-logs-loganomalydetector-evaluationfrequency
       */
      EvaluationFrequency?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loganomalydetector.html#cfn-logs-loganomalydetector-detectorname
       */
      DetectorName?: string;
    }
    
    
    interface LogAnomalyDetector extends Resource<"AWS::Logs::LogAnomalyDetector">, LogAnomalyDetectorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LogAnomalyDetector(id: string, props: LogAnomalyDetectorProps): Promise<LogAnomalyDetector>;
  }
  namespace Logs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html
     */
    interface LogGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html#cfn-logs-loggroup-fieldindexpolicies
       */
      FieldIndexPolicies?: {
        [k: string]: unknown;
      }[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html#cfn-logs-loggroup-retentionindays
       */
      RetentionInDays?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html#cfn-logs-loggroup-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html#cfn-logs-loggroup-loggroupclass
       */
      LogGroupClass?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html#cfn-logs-loggroup-loggroupname
       */
      LogGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html#cfn-logs-loggroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html#cfn-logs-loggroup-dataprotectionpolicy
       */
      DataProtectionPolicy?: {
        [k: string]: unknown;
      };
    }
    
    
    interface LogGroup extends Resource<"AWS::Logs::LogGroup">, LogGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LogGroup(id: string, props: LogGroupProps): Promise<LogGroup>;
  }
  namespace Logs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-logstream.html
     */
    interface LogStreamProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-logstream.html#cfn-logs-logstream-logstreamname
       */
      LogStreamName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-logstream.html#cfn-logs-logstream-loggroupname
       */
      LogGroupName: string;
    }
    
    
    interface LogStream extends Resource<"AWS::Logs::LogStream">, LogStreamProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LogStream(id: string, props: LogStreamProps): Promise<LogStream>;
  }
  namespace Logs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html
     */
    interface MetricFilterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-logs-metricfilter-metrictransformations
       */
      MetricTransformations: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-logs-metricfilter-filterpattern
       */
      FilterPattern: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-logs-metricfilter-loggroupname
       */
      LogGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-logs-metricfilter-applyontransformedlogs
       */
      ApplyOnTransformedLogs?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-logs-metricfilter-filtername
       */
      FilterName?: string;
    }
    
    
    interface MetricFilter extends Resource<"AWS::Logs::MetricFilter">, MetricFilterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MetricFilter(id: string, props: MetricFilterProps): Promise<MetricFilter>;
  }
  namespace Logs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-querydefinition.html
     */
    interface QueryDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-querydefinition.html#cfn-logs-querydefinition-querystring
       */
      QueryString: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-querydefinition.html#cfn-logs-querydefinition-loggroupnames
       */
      LogGroupNames?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-querydefinition.html#cfn-logs-querydefinition-querylanguage
       */
      QueryLanguage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-querydefinition.html#cfn-logs-querydefinition-name
       */
      Name: string;
    }
    
    
    interface QueryDefinition extends Resource<"AWS::Logs::QueryDefinition">, QueryDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function QueryDefinition(id: string, props: QueryDefinitionProps): Promise<QueryDefinition>;
  }
  namespace Logs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-resourcepolicy.html
     */
    interface ResourcePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-resourcepolicy.html#cfn-logs-resourcepolicy-policyname
       */
      PolicyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-resourcepolicy.html#cfn-logs-resourcepolicy-policydocument
       */
      PolicyDocument: string;
    }
    
    
    interface ResourcePolicy extends Resource<"AWS::Logs::ResourcePolicy">, ResourcePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourcePolicy(id: string, props: ResourcePolicyProps): Promise<ResourcePolicy>;
  }
  namespace Logs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-subscriptionfilter.html
     */
    interface SubscriptionFilterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-subscriptionfilter.html#cfn-logs-subscriptionfilter-filterpattern
       */
      FilterPattern: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-subscriptionfilter.html#cfn-logs-subscriptionfilter-distribution
       */
      Distribution?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-subscriptionfilter.html#cfn-logs-subscriptionfilter-loggroupname
       */
      LogGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-subscriptionfilter.html#cfn-logs-subscriptionfilter-applyontransformedlogs
       */
      ApplyOnTransformedLogs?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-subscriptionfilter.html#cfn-logs-subscriptionfilter-filtername
       */
      FilterName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-subscriptionfilter.html#cfn-logs-subscriptionfilter-destinationarn
       */
      DestinationArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-subscriptionfilter.html#cfn-logs-subscriptionfilter-rolearn
       */
      RoleArn?: string;
    }
    
    
    interface SubscriptionFilter extends Resource<"AWS::Logs::SubscriptionFilter">, SubscriptionFilterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SubscriptionFilter(id: string, props: SubscriptionFilterProps): Promise<SubscriptionFilter>;
  }
  namespace Logs {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-transformer.html
     */
    interface TransformerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-transformer.html#cfn-logs-transformer-transformerconfig
       */
      TransformerConfig: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-transformer.html#cfn-logs-transformer-loggroupidentifier
       */
      LogGroupIdentifier: string;
    }
    
    
    interface Transformer extends Resource<"AWS::Logs::Transformer">, TransformerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Transformer(id: string, props: TransformerProps): Promise<Transformer>;
  }
  namespace LookoutEquipment {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html
     */
    interface InferenceSchedulerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-inferenceschedulername
       */
      InferenceSchedulerName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-datauploadfrequency
       */
      DataUploadFrequency: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-modelname
       */
      ModelName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-datainputconfiguration
       */
      DataInputConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-dataoutputconfiguration
       */
      DataOutputConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-serversidekmskeyid
       */
      ServerSideKmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-datadelayoffsetinminutes
       */
      DataDelayOffsetInMinutes?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-tags
       */
      Tags?: {}[];
    }
    
    
    interface InferenceScheduler extends Resource<"AWS::LookoutEquipment::InferenceScheduler">, InferenceSchedulerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InferenceScheduler(id: string, props: InferenceSchedulerProps): Promise<InferenceScheduler>;
  }
  namespace LookoutMetrics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-alert.html
     */
    interface AlertProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-alert.html#cfn-lookoutmetrics-alert-alertdescription
       */
      AlertDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-alert.html#cfn-lookoutmetrics-alert-action
       */
      Action: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-alert.html#cfn-lookoutmetrics-alert-alertname
       */
      AlertName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-alert.html#cfn-lookoutmetrics-alert-alertsensitivitythreshold
       */
      AlertSensitivityThreshold: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-alert.html#cfn-lookoutmetrics-alert-anomalydetectorarn
       */
      AnomalyDetectorArn: string;
    }
    
    
    interface Alert extends Resource<"AWS::LookoutMetrics::Alert">, AlertProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Alert(id: string, props: AlertProps): Promise<Alert>;
  }
  namespace LookoutMetrics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-anomalydetector.html
     */
    interface AnomalyDetectorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-anomalydetector.html#cfn-lookoutmetrics-anomalydetector-anomalydetectorname
       */
      AnomalyDetectorName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-anomalydetector.html#cfn-lookoutmetrics-anomalydetector-kmskeyarn
       */
      KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-anomalydetector.html#cfn-lookoutmetrics-anomalydetector-anomalydetectordescription
       */
      AnomalyDetectorDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-anomalydetector.html#cfn-lookoutmetrics-anomalydetector-anomalydetectorconfig
       */
      AnomalyDetectorConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutmetrics-anomalydetector.html#cfn-lookoutmetrics-anomalydetector-metricsetlist
       */
      MetricSetList: {}[];
    }
    
    
    interface AnomalyDetector extends Resource<"AWS::LookoutMetrics::AnomalyDetector">, AnomalyDetectorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AnomalyDetector(id: string, props: AnomalyDetectorProps): Promise<AnomalyDetector>;
  }
  namespace LookoutVision {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutvision-project.html
     */
    interface ProjectProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutvision-project.html#cfn-lookoutvision-project-projectname
       */
      ProjectName: string;
    }
    
    
    interface Project extends Resource<"AWS::LookoutVision::Project">, ProjectProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Project(id: string, props: ProjectProps): Promise<Project>;
  }
  namespace M2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-application.html#cfn-m2-application-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-application.html#cfn-m2-application-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-application.html#cfn-m2-application-definition
       */
      Definition?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-application.html#cfn-m2-application-enginetype
       */
      EngineType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-application.html#cfn-m2-application-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-application.html#cfn-m2-application-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-application.html#cfn-m2-application-name
       */
      Name: string;
    }
    
    
    interface Application extends Resource<"AWS::M2::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace M2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-deployment.html
     */
    interface DeploymentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-deployment.html#cfn-m2-deployment-environmentid
       */
      EnvironmentId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-deployment.html#cfn-m2-deployment-applicationversion
       */
      ApplicationVersion: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-deployment.html#cfn-m2-deployment-applicationid
       */
      ApplicationId: string;
    }
    
    
    interface Deployment extends Resource<"AWS::M2::Deployment">, DeploymentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Deployment(id: string, props: DeploymentProps): Promise<Deployment>;
  }
  namespace M2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html
     */
    interface EnvironmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-highavailabilityconfig
       */
      HighAvailabilityConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-subnetids
       */
      SubnetIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-networktype
       */
      NetworkType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-enginetype
       */
      EngineType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-publiclyaccessible
       */
      PubliclyAccessible?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-instancetype
       */
      InstanceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-storageconfigurations
       */
      StorageConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Environment extends Resource<"AWS::M2::Environment">, EnvironmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Environment(id: string, props: EnvironmentProps): Promise<Environment>;
  }
  namespace MSK {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-batchscramsecret.html
     */
    interface BatchScramSecretProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-batchscramsecret.html#cfn-msk-batchscramsecret-clusterarn
       */
      ClusterArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-batchscramsecret.html#cfn-msk-batchscramsecret-secretarnlist
       */
      SecretArnList?: string[];
    }
    
    
    interface BatchScramSecret extends Resource<"AWS::MSK::BatchScramSecret">, BatchScramSecretProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BatchScramSecret(id: string, props: BatchScramSecretProps): Promise<BatchScramSecret>;
  }
  namespace MSK {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html
     */
    interface ClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-kafkaversion
       */
      KafkaVersion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-numberofbrokernodes
       */
      NumberOfBrokerNodes: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-encryptioninfo
       */
      EncryptionInfo?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-openmonitoring
       */
      OpenMonitoring?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-currentversion
       */
      CurrentVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-storagemode
       */
      StorageMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-configurationinfo
       */
      ConfigurationInfo?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-brokernodegroupinfo
       */
      BrokerNodeGroupInfo: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-enhancedmonitoring
       */
      EnhancedMonitoring?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-clustername
       */
      ClusterName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-clientauthentication
       */
      ClientAuthentication?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-logginginfo
       */
      LoggingInfo?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-cluster.html#cfn-msk-cluster-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Cluster extends Resource<"AWS::MSK::Cluster">, ClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Cluster(id: string, props: ClusterProps): Promise<Cluster>;
  }
  namespace MSK {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-clusterpolicy.html
     */
    interface ClusterPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-clusterpolicy.html#cfn-msk-clusterpolicy-policy
       */
      Policy: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-clusterpolicy.html#cfn-msk-clusterpolicy-clusterarn
       */
      ClusterArn: string;
    }
    
    
    interface ClusterPolicy extends Resource<"AWS::MSK::ClusterPolicy">, ClusterPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ClusterPolicy(id: string, props: ClusterPolicyProps): Promise<ClusterPolicy>;
  }
  namespace MSK {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-configuration.html
     */
    interface ConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-configuration.html#cfn-msk-configuration-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-configuration.html#cfn-msk-configuration-latestrevision
       */
      LatestRevision?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-configuration.html#cfn-msk-configuration-serverproperties
       */
      ServerProperties: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-configuration.html#cfn-msk-configuration-kafkaversionslist
       */
      KafkaVersionsList?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-configuration.html#cfn-msk-configuration-name
       */
      Name: string;
    }
    
    
    interface Configuration extends Resource<"AWS::MSK::Configuration">, ConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Configuration(id: string, props: ConfigurationProps): Promise<Configuration>;
  }
  namespace MSK {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html
     */
    interface ReplicatorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html#cfn-msk-replicator-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html#cfn-msk-replicator-serviceexecutionrolearn
       */
      ServiceExecutionRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html#cfn-msk-replicator-replicatorname
       */
      ReplicatorName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html#cfn-msk-replicator-replicationinfolist
       */
      ReplicationInfoList: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html#cfn-msk-replicator-kafkaclusters
       */
      KafkaClusters: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html#cfn-msk-replicator-tags
       */
      Tags?: {}[];
    }
    
    
    interface Replicator extends Resource<"AWS::MSK::Replicator">, ReplicatorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Replicator(id: string, props: ReplicatorProps): Promise<Replicator>;
  }
  namespace MSK {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-serverlesscluster.html
     */
    interface ServerlessClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-serverlesscluster.html#cfn-msk-serverlesscluster-vpcconfigs
       */
      VpcConfigs: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-serverlesscluster.html#cfn-msk-serverlesscluster-clustername
       */
      ClusterName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-serverlesscluster.html#cfn-msk-serverlesscluster-clientauthentication
       */
      ClientAuthentication: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-serverlesscluster.html#cfn-msk-serverlesscluster-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface ServerlessCluster extends Resource<"AWS::MSK::ServerlessCluster">, ServerlessClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ServerlessCluster(id: string, props: ServerlessClusterProps): Promise<ServerlessCluster>;
  }
  namespace MSK {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-vpcconnection.html
     */
    interface VpcConnectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-vpcconnection.html#cfn-msk-vpcconnection-securitygroups
       */
      SecurityGroups: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-vpcconnection.html#cfn-msk-vpcconnection-targetclusterarn
       */
      TargetClusterArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-vpcconnection.html#cfn-msk-vpcconnection-clientsubnets
       */
      ClientSubnets: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-vpcconnection.html#cfn-msk-vpcconnection-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-vpcconnection.html#cfn-msk-vpcconnection-authentication
       */
      Authentication: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-vpcconnection.html#cfn-msk-vpcconnection-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface VpcConnection extends Resource<"AWS::MSK::VpcConnection">, VpcConnectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VpcConnection(id: string, props: VpcConnectionProps): Promise<VpcConnection>;
  }
  namespace MWAA {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html
     */
    interface EnvironmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-airflowconfigurationoptions
       */
      AirflowConfigurationOptions?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-pluginss3path
       */
      PluginsS3Path?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-startupscripts3path
       */
      StartupScriptS3Path?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-executionrolearn
       */
      ExecutionRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-startupscripts3objectversion
       */
      StartupScriptS3ObjectVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-dags3path
       */
      DagS3Path?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-loggingconfiguration
       */
      LoggingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-webserveraccessmode
       */
      WebserverAccessMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-networkconfiguration
       */
      NetworkConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-kmskey
       */
      KmsKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-maxworkers
       */
      MaxWorkers?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-environmentclass
       */
      EnvironmentClass?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-schedulers
       */
      Schedulers?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-requirementss3path
       */
      RequirementsS3Path?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-minworkers
       */
      MinWorkers?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-airflowversion
       */
      AirflowVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-requirementss3objectversion
       */
      RequirementsS3ObjectVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-sourcebucketarn
       */
      SourceBucketArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-weeklymaintenancewindowstart
       */
      WeeklyMaintenanceWindowStart?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-pluginss3objectversion
       */
      PluginsS3ObjectVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-endpointmanagement
       */
      EndpointManagement?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-maxwebservers
       */
      MaxWebservers?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-minwebservers
       */
      MinWebservers?: number;
    }
    
    
    interface Environment extends Resource<"AWS::MWAA::Environment">, EnvironmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Environment(id: string, props: EnvironmentProps): Promise<Environment>;
  }
  namespace Macie {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-allowlist.html
     */
    interface AllowListProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-allowlist.html#cfn-macie-allowlist-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-allowlist.html#cfn-macie-allowlist-criteria
       */
      Criteria: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-allowlist.html#cfn-macie-allowlist-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-allowlist.html#cfn-macie-allowlist-name
       */
      Name: string;
    }
    
    
    interface AllowList extends Resource<"AWS::Macie::AllowList">, AllowListProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AllowList(id: string, props: AllowListProps): Promise<AllowList>;
  }
  namespace Macie {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-customdataidentifier.html
     */
    interface CustomDataIdentifierProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-customdataidentifier.html#cfn-macie-customdataidentifier-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-customdataidentifier.html#cfn-macie-customdataidentifier-keywords
       */
      Keywords?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-customdataidentifier.html#cfn-macie-customdataidentifier-regex
       */
      Regex: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-customdataidentifier.html#cfn-macie-customdataidentifier-ignorewords
       */
      IgnoreWords?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-customdataidentifier.html#cfn-macie-customdataidentifier-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-customdataidentifier.html#cfn-macie-customdataidentifier-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-customdataidentifier.html#cfn-macie-customdataidentifier-maximummatchdistance
       */
      MaximumMatchDistance?: number;
    }
    
    
    interface CustomDataIdentifier extends Resource<"AWS::Macie::CustomDataIdentifier">, CustomDataIdentifierProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CustomDataIdentifier(id: string, props: CustomDataIdentifierProps): Promise<CustomDataIdentifier>;
  }
  namespace Macie {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-findingsfilter.html
     */
    interface FindingsFilterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-findingsfilter.html#cfn-macie-findingsfilter-action
       */
      Action?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-findingsfilter.html#cfn-macie-findingsfilter-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-findingsfilter.html#cfn-macie-findingsfilter-position
       */
      Position?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-findingsfilter.html#cfn-macie-findingsfilter-findingcriteria
       */
      FindingCriteria: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-findingsfilter.html#cfn-macie-findingsfilter-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-findingsfilter.html#cfn-macie-findingsfilter-name
       */
      Name: string;
    }
    
    
    interface FindingsFilter extends Resource<"AWS::Macie::FindingsFilter">, FindingsFilterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FindingsFilter(id: string, props: FindingsFilterProps): Promise<FindingsFilter>;
  }
  namespace Macie {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-session.html
     */
    interface SessionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-session.html#cfn-macie-session-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-macie-session.html#cfn-macie-session-findingpublishingfrequency
       */
      FindingPublishingFrequency?: string;
    }
    
    
    interface Session extends Resource<"AWS::Macie::Session">, SessionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Session(id: string, props: SessionProps): Promise<Session>;
  }
  namespace ManagedBlockchain {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-accessor.html
     */
    interface AccessorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-accessor.html#cfn-managedblockchain-accessor-networktype
       */
      NetworkType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-accessor.html#cfn-managedblockchain-accessor-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-accessor.html#cfn-managedblockchain-accessor-accessortype
       */
      AccessorType: string;
    }
    
    
    interface Accessor extends Resource<"AWS::ManagedBlockchain::Accessor">, AccessorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Accessor(id: string, props: AccessorProps): Promise<Accessor>;
  }
  namespace ManagedBlockchain {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-member.html
     */
    interface MemberProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-member.html#cfn-managedblockchain-member-memberconfiguration
       */
      MemberConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-member.html#cfn-managedblockchain-member-networkconfiguration
       */
      NetworkConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-member.html#cfn-managedblockchain-member-networkid
       */
      NetworkId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-member.html#cfn-managedblockchain-member-invitationid
       */
      InvitationId?: string;
    }
    
    
    interface Member extends Resource<"AWS::ManagedBlockchain::Member">, MemberProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Member(id: string, props: MemberProps): Promise<Member>;
  }
  namespace ManagedBlockchain {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-node.html
     */
    interface NodeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-node.html#cfn-managedblockchain-node-memberid
       */
      MemberId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-node.html#cfn-managedblockchain-node-networkid
       */
      NetworkId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-node.html#cfn-managedblockchain-node-nodeconfiguration
       */
      NodeConfiguration: {};
    }
    
    
    interface Node extends Resource<"AWS::ManagedBlockchain::Node">, NodeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Node(id: string, props: NodeProps): Promise<Node>;
  }
  namespace MediaConnect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html
     */
    interface BridgeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html#cfn-mediaconnect-bridge-sourcefailoverconfig
       */
      SourceFailoverConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html#cfn-mediaconnect-bridge-ingressgatewaybridge
       */
      IngressGatewayBridge?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html#cfn-mediaconnect-bridge-egressgatewaybridge
       */
      EgressGatewayBridge?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html#cfn-mediaconnect-bridge-outputs
       */
      Outputs?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html#cfn-mediaconnect-bridge-placementarn
       */
      PlacementArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html#cfn-mediaconnect-bridge-sources
       */
      Sources: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html#cfn-mediaconnect-bridge-name
       */
      Name: string;
    }
    
    
    interface Bridge extends Resource<"AWS::MediaConnect::Bridge">, BridgeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Bridge(id: string, props: BridgeProps): Promise<Bridge>;
  }
  namespace MediaConnect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridgeoutput.html
     */
    interface BridgeOutputProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridgeoutput.html#cfn-mediaconnect-bridgeoutput-bridgearn
       */
      BridgeArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridgeoutput.html#cfn-mediaconnect-bridgeoutput-networkoutput
       */
      NetworkOutput: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridgeoutput.html#cfn-mediaconnect-bridgeoutput-name
       */
      Name: string;
    }
    
    
    interface BridgeOutput extends Resource<"AWS::MediaConnect::BridgeOutput">, BridgeOutputProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BridgeOutput(id: string, props: BridgeOutputProps): Promise<BridgeOutput>;
  }
  namespace MediaConnect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridgesource.html
     */
    interface BridgeSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridgesource.html#cfn-mediaconnect-bridgesource-networksource
       */
      NetworkSource?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridgesource.html#cfn-mediaconnect-bridgesource-bridgearn
       */
      BridgeArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridgesource.html#cfn-mediaconnect-bridgesource-flowsource
       */
      FlowSource?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridgesource.html#cfn-mediaconnect-bridgesource-name
       */
      Name: string;
    }
    
    
    interface BridgeSource extends Resource<"AWS::MediaConnect::BridgeSource">, BridgeSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BridgeSource(id: string, props: BridgeSourceProps): Promise<BridgeSource>;
  }
  namespace MediaConnect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flow.html
     */
    interface FlowProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flow.html#cfn-mediaconnect-flow-sourcemonitoringconfig
       */
      SourceMonitoringConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flow.html#cfn-mediaconnect-flow-sourcefailoverconfig
       */
      SourceFailoverConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flow.html#cfn-mediaconnect-flow-vpcinterfaces
       */
      VpcInterfaces?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flow.html#cfn-mediaconnect-flow-mediastreams
       */
      MediaStreams?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flow.html#cfn-mediaconnect-flow-ndiconfig
       */
      NdiConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flow.html#cfn-mediaconnect-flow-availabilityzone
       */
      AvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flow.html#cfn-mediaconnect-flow-maintenance
       */
      Maintenance?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flow.html#cfn-mediaconnect-flow-source
       */
      Source: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flow.html#cfn-mediaconnect-flow-flowsize
       */
      FlowSize?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flow.html#cfn-mediaconnect-flow-name
       */
      Name: string;
    }
    
    
    interface Flow extends Resource<"AWS::MediaConnect::Flow">, FlowProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Flow(id: string, props: FlowProps): Promise<Flow>;
  }
  namespace MediaConnect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowentitlement.html
     */
    interface FlowEntitlementProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowentitlement.html#cfn-mediaconnect-flowentitlement-datatransfersubscriberfeepercent
       */
      DataTransferSubscriberFeePercent?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowentitlement.html#cfn-mediaconnect-flowentitlement-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowentitlement.html#cfn-mediaconnect-flowentitlement-encryption
       */
      Encryption?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowentitlement.html#cfn-mediaconnect-flowentitlement-subscribers
       */
      Subscribers: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowentitlement.html#cfn-mediaconnect-flowentitlement-flowarn
       */
      FlowArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowentitlement.html#cfn-mediaconnect-flowentitlement-entitlementstatus
       */
      EntitlementStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowentitlement.html#cfn-mediaconnect-flowentitlement-name
       */
      Name: string;
    }
    
    
    interface FlowEntitlement extends Resource<"AWS::MediaConnect::FlowEntitlement">, FlowEntitlementProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FlowEntitlement(id: string, props: FlowEntitlementProps): Promise<FlowEntitlement>;
  }
  namespace MediaConnect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html
     */
    interface FlowOutputProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-destination
       */
      Destination?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-smoothinglatency
       */
      SmoothingLatency?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-streamid
       */
      StreamId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-ndispeedhqquality
       */
      NdiSpeedHqQuality?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-port
       */
      Port?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-remoteid
       */
      RemoteId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-mediastreamoutputconfigurations
       */
      MediaStreamOutputConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-encryption
       */
      Encryption?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-outputstatus
       */
      OutputStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-vpcinterfaceattachment
       */
      VpcInterfaceAttachment?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-minlatency
       */
      MinLatency?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-protocol
       */
      Protocol: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-flowarn
       */
      FlowArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-ndiprogramname
       */
      NdiProgramName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-maxlatency
       */
      MaxLatency?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowoutput.html#cfn-mediaconnect-flowoutput-cidrallowlist
       */
      CidrAllowList?: string[];
    }
    
    
    interface FlowOutput extends Resource<"AWS::MediaConnect::FlowOutput">, FlowOutputProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FlowOutput(id: string, props: FlowOutputProps): Promise<FlowOutput>;
  }
  namespace MediaConnect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html
     */
    interface FlowSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-streamid
       */
      StreamId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-senderipaddress
       */
      SenderIpAddress?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-ingestport
       */
      IngestPort?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-sendercontrolport
       */
      SenderControlPort?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-decryption
       */
      Decryption?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-gatewaybridgesource
       */
      GatewayBridgeSource?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-sourcelisteneraddress
       */
      SourceListenerAddress?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-sourcelistenerport
       */
      SourceListenerPort?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-whitelistcidr
       */
      WhitelistCidr?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-entitlementarn
       */
      EntitlementArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-minlatency
       */
      MinLatency?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-vpcinterfacename
       */
      VpcInterfaceName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-maxbitrate
       */
      MaxBitrate?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-protocol
       */
      Protocol?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-flowarn
       */
      FlowArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowsource.html#cfn-mediaconnect-flowsource-maxlatency
       */
      MaxLatency?: number;
    }
    
    
    interface FlowSource extends Resource<"AWS::MediaConnect::FlowSource">, FlowSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FlowSource(id: string, props: FlowSourceProps): Promise<FlowSource>;
  }
  namespace MediaConnect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html
     */
    interface FlowVpcInterfaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html#cfn-mediaconnect-flowvpcinterface-subnetid
       */
      SubnetId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html#cfn-mediaconnect-flowvpcinterface-flowarn
       */
      FlowArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html#cfn-mediaconnect-flowvpcinterface-securitygroupids
       */
      SecurityGroupIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html#cfn-mediaconnect-flowvpcinterface-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html#cfn-mediaconnect-flowvpcinterface-name
       */
      Name: string;
    }
    
    
    interface FlowVpcInterface extends Resource<"AWS::MediaConnect::FlowVpcInterface">, FlowVpcInterfaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FlowVpcInterface(id: string, props: FlowVpcInterfaceProps): Promise<FlowVpcInterface>;
  }
  namespace MediaConnect {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-gateway.html
     */
    interface GatewayProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-gateway.html#cfn-mediaconnect-gateway-networks
       */
      Networks: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-gateway.html#cfn-mediaconnect-gateway-egresscidrblocks
       */
      EgressCidrBlocks: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-gateway.html#cfn-mediaconnect-gateway-name
       */
      Name: string;
    }
    
    
    interface Gateway extends Resource<"AWS::MediaConnect::Gateway">, GatewayProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Gateway(id: string, props: GatewayProps): Promise<Gateway>;
  }
  namespace MediaConvert {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html
     */
    interface JobTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html#cfn-mediaconvert-jobtemplate-category
       */
      Category?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html#cfn-mediaconvert-jobtemplate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html#cfn-mediaconvert-jobtemplate-accelerationsettings
       */
      AccelerationSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html#cfn-mediaconvert-jobtemplate-priority
       */
      Priority?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html#cfn-mediaconvert-jobtemplate-statusupdateinterval
       */
      StatusUpdateInterval?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html#cfn-mediaconvert-jobtemplate-settingsjson
       */
      SettingsJson: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html#cfn-mediaconvert-jobtemplate-queue
       */
      Queue?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html#cfn-mediaconvert-jobtemplate-hopdestinations
       */
      HopDestinations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html#cfn-mediaconvert-jobtemplate-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-jobtemplate.html#cfn-mediaconvert-jobtemplate-name
       */
      Name?: string;
    }
    
    
    interface JobTemplate extends Resource<"AWS::MediaConvert::JobTemplate">, JobTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function JobTemplate(id: string, props: JobTemplateProps): Promise<JobTemplate>;
  }
  namespace MediaConvert {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-preset.html
     */
    interface PresetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-preset.html#cfn-mediaconvert-preset-category
       */
      Category?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-preset.html#cfn-mediaconvert-preset-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-preset.html#cfn-mediaconvert-preset-settingsjson
       */
      SettingsJson: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-preset.html#cfn-mediaconvert-preset-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-preset.html#cfn-mediaconvert-preset-name
       */
      Name?: string;
    }
    
    
    interface Preset extends Resource<"AWS::MediaConvert::Preset">, PresetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Preset(id: string, props: PresetProps): Promise<Preset>;
  }
  namespace MediaConvert {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-queue.html
     */
    interface QueueProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-queue.html#cfn-mediaconvert-queue-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-queue.html#cfn-mediaconvert-queue-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-queue.html#cfn-mediaconvert-queue-pricingplan
       */
      PricingPlan?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-queue.html#cfn-mediaconvert-queue-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-queue.html#cfn-mediaconvert-queue-concurrentjobs
       */
      ConcurrentJobs?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconvert-queue.html#cfn-mediaconvert-queue-name
       */
      Name?: string;
    }
    
    
    interface Queue extends Resource<"AWS::MediaConvert::Queue">, QueueProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Queue(id: string, props: QueueProps): Promise<Queue>;
  }
  namespace MediaLive {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html
     */
    interface ChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-inputattachments
       */
      InputAttachments?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-inputspecification
       */
      InputSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-destinations
       */
      Destinations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-dryrun
       */
      DryRun?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-vpc
       */
      Vpc?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-channelengineversion
       */
      ChannelEngineVersion?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-maintenance
       */
      Maintenance?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-loglevel
       */
      LogLevel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-channelclass
       */
      ChannelClass?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-encodersettings
       */
      EncoderSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-anywheresettings
       */
      AnywhereSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-cdiinputspecification
       */
      CdiInputSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channel.html#cfn-medialive-channel-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Channel extends Resource<"AWS::MediaLive::Channel">, ChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Channel(id: string, props: ChannelProps): Promise<Channel>;
  }
  namespace MediaLive {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channelplacementgroup.html
     */
    interface ChannelPlacementGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channelplacementgroup.html#cfn-medialive-channelplacementgroup-clusterid
       */
      ClusterId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channelplacementgroup.html#cfn-medialive-channelplacementgroup-nodes
       */
      Nodes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channelplacementgroup.html#cfn-medialive-channelplacementgroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-channelplacementgroup.html#cfn-medialive-channelplacementgroup-name
       */
      Name?: string;
    }
    
    
    interface ChannelPlacementGroup extends Resource<"AWS::MediaLive::ChannelPlacementGroup">, ChannelPlacementGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ChannelPlacementGroup(id: string, props: ChannelPlacementGroupProps): Promise<ChannelPlacementGroup>;
  }
  namespace MediaLive {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html
     */
    interface CloudWatchAlarmTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html#cfn-medialive-cloudwatchalarmtemplate-targetresourcetype
       */
      TargetResourceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html#cfn-medialive-cloudwatchalarmtemplate-comparisonoperator
       */
      ComparisonOperator: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html#cfn-medialive-cloudwatchalarmtemplate-treatmissingdata
       */
      TreatMissingData: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html#cfn-medialive-cloudwatchalarmtemplate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html#cfn-medialive-cloudwatchalarmtemplate-period
       */
      Period: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html#cfn-medialive-cloudwatchalarmtemplate-evaluationperiods
       */
      EvaluationPeriods: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html#cfn-medialive-cloudwatchalarmtemplate-groupidentifier
       */
      GroupIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html#cfn-medialive-cloudwatchalarmtemplate-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html#cfn-medialive-cloudwatchalarmtemplate-metricname
       */
      MetricName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html#cfn-medialive-cloudwatchalarmtemplate-statistic
       */
      Statistic: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html#cfn-medialive-cloudwatchalarmtemplate-datapointstoalarm
       */
      DatapointsToAlarm?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html#cfn-medialive-cloudwatchalarmtemplate-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplate.html#cfn-medialive-cloudwatchalarmtemplate-threshold
       */
      Threshold: number;
    }
    
    
    interface CloudWatchAlarmTemplate extends Resource<"AWS::MediaLive::CloudWatchAlarmTemplate">, CloudWatchAlarmTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CloudWatchAlarmTemplate(id: string, props: CloudWatchAlarmTemplateProps): Promise<CloudWatchAlarmTemplate>;
  }
  namespace MediaLive {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplategroup.html
     */
    interface CloudWatchAlarmTemplateGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplategroup.html#cfn-medialive-cloudwatchalarmtemplategroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplategroup.html#cfn-medialive-cloudwatchalarmtemplategroup-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cloudwatchalarmtemplategroup.html#cfn-medialive-cloudwatchalarmtemplategroup-name
       */
      Name: string;
    }
    
    
    interface CloudWatchAlarmTemplateGroup extends Resource<"AWS::MediaLive::CloudWatchAlarmTemplateGroup">, CloudWatchAlarmTemplateGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CloudWatchAlarmTemplateGroup(id: string, props: CloudWatchAlarmTemplateGroupProps): Promise<CloudWatchAlarmTemplateGroup>;
  }
  namespace MediaLive {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cluster.html
     */
    interface ClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cluster.html#cfn-medialive-cluster-networksettings
       */
      NetworkSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cluster.html#cfn-medialive-cluster-instancerolearn
       */
      InstanceRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cluster.html#cfn-medialive-cluster-clustertype
       */
      ClusterType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cluster.html#cfn-medialive-cluster-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-cluster.html#cfn-medialive-cluster-name
       */
      Name?: string;
    }
    
    
    interface Cluster extends Resource<"AWS::MediaLive::Cluster">, ClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Cluster(id: string, props: ClusterProps): Promise<Cluster>;
  }
  namespace MediaLive {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-eventbridgeruletemplate.html
     */
    interface EventBridgeRuleTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-eventbridgeruletemplate.html#cfn-medialive-eventbridgeruletemplate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-eventbridgeruletemplate.html#cfn-medialive-eventbridgeruletemplate-eventtargets
       */
      EventTargets?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-eventbridgeruletemplate.html#cfn-medialive-eventbridgeruletemplate-eventtype
       */
      EventType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-eventbridgeruletemplate.html#cfn-medialive-eventbridgeruletemplate-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-eventbridgeruletemplate.html#cfn-medialive-eventbridgeruletemplate-groupidentifier
       */
      GroupIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-eventbridgeruletemplate.html#cfn-medialive-eventbridgeruletemplate-name
       */
      Name: string;
    }
    
    
    interface EventBridgeRuleTemplate extends Resource<"AWS::MediaLive::EventBridgeRuleTemplate">, EventBridgeRuleTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventBridgeRuleTemplate(id: string, props: EventBridgeRuleTemplateProps): Promise<EventBridgeRuleTemplate>;
  }
  namespace MediaLive {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-eventbridgeruletemplategroup.html
     */
    interface EventBridgeRuleTemplateGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-eventbridgeruletemplategroup.html#cfn-medialive-eventbridgeruletemplategroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-eventbridgeruletemplategroup.html#cfn-medialive-eventbridgeruletemplategroup-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-eventbridgeruletemplategroup.html#cfn-medialive-eventbridgeruletemplategroup-name
       */
      Name: string;
    }
    
    
    interface EventBridgeRuleTemplateGroup extends Resource<"AWS::MediaLive::EventBridgeRuleTemplateGroup">, EventBridgeRuleTemplateGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventBridgeRuleTemplateGroup(id: string, props: EventBridgeRuleTemplateGroupProps): Promise<EventBridgeRuleTemplateGroup>;
  }
  namespace MediaLive {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html
     */
    interface InputProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-srtsettings
       */
      SrtSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-inputnetworklocation
       */
      InputNetworkLocation?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-destinations
       */
      Destinations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-vpc
       */
      Vpc?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-mediaconnectflows
       */
      MediaConnectFlows?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-sources
       */
      Sources?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-inputsecuritygroups
       */
      InputSecurityGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-multicastsettings
       */
      MulticastSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-inputdevices
       */
      InputDevices?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Input extends Resource<"AWS::MediaLive::Input">, InputProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Input(id: string, props: InputProps): Promise<Input>;
  }
  namespace MediaLive {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-inputsecuritygroup.html
     */
    interface InputSecurityGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-inputsecuritygroup.html#cfn-medialive-inputsecuritygroup-whitelistrules
       */
      WhitelistRules?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-inputsecuritygroup.html#cfn-medialive-inputsecuritygroup-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface InputSecurityGroup extends Resource<"AWS::MediaLive::InputSecurityGroup">, InputSecurityGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InputSecurityGroup(id: string, props: InputSecurityGroupProps): Promise<InputSecurityGroup>;
  }
  namespace MediaLive {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplex.html
     */
    interface MultiplexProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplex.html#cfn-medialive-multiplex-multiplexsettings
       */
      MultiplexSettings: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplex.html#cfn-medialive-multiplex-availabilityzones
       */
      AvailabilityZones: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplex.html#cfn-medialive-multiplex-destinations
       */
      Destinations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplex.html#cfn-medialive-multiplex-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplex.html#cfn-medialive-multiplex-name
       */
      Name: string;
    }
    
    
    interface Multiplex extends Resource<"AWS::MediaLive::Multiplex">, MultiplexProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Multiplex(id: string, props: MultiplexProps): Promise<Multiplex>;
  }
  namespace MediaLive {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplexprogram.html
     */
    interface MultiplexprogramProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplexprogram.html#cfn-medialive-multiplexprogram-multiplexid
       */
      MultiplexId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplexprogram.html#cfn-medialive-multiplexprogram-preferredchannelpipeline
       */
      PreferredChannelPipeline?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplexprogram.html#cfn-medialive-multiplexprogram-packetidentifiersmap
       */
      PacketIdentifiersMap?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplexprogram.html#cfn-medialive-multiplexprogram-pipelinedetails
       */
      PipelineDetails?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplexprogram.html#cfn-medialive-multiplexprogram-multiplexprogramsettings
       */
      MultiplexProgramSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-multiplexprogram.html#cfn-medialive-multiplexprogram-programname
       */
      ProgramName?: string;
    }
    
    
    interface Multiplexprogram extends Resource<"AWS::MediaLive::Multiplexprogram">, MultiplexprogramProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Multiplexprogram(id: string, props: MultiplexprogramProps): Promise<Multiplexprogram>;
  }
  namespace MediaLive {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-network.html
     */
    interface NetworkProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-network.html#cfn-medialive-network-ippools
       */
      IpPools: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-network.html#cfn-medialive-network-routes
       */
      Routes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-network.html#cfn-medialive-network-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-network.html#cfn-medialive-network-name
       */
      Name: string;
    }
    
    
    interface Network extends Resource<"AWS::MediaLive::Network">, NetworkProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Network(id: string, props: NetworkProps): Promise<Network>;
  }
  namespace MediaLive {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-sdisource.html
     */
    interface SdiSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-sdisource.html#cfn-medialive-sdisource-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-sdisource.html#cfn-medialive-sdisource-mode
       */
      Mode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-sdisource.html#cfn-medialive-sdisource-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-sdisource.html#cfn-medialive-sdisource-name
       */
      Name: string;
    }
    
    
    interface SdiSource extends Resource<"AWS::MediaLive::SdiSource">, SdiSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SdiSource(id: string, props: SdiSourceProps): Promise<SdiSource>;
  }
  namespace MediaLive {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-signalmap.html
     */
    interface SignalMapProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-signalmap.html#cfn-medialive-signalmap-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-signalmap.html#cfn-medialive-signalmap-eventbridgeruletemplategroupidentifiers
       */
      EventBridgeRuleTemplateGroupIdentifiers?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-signalmap.html#cfn-medialive-signalmap-discoveryentrypointarn
       */
      DiscoveryEntryPointArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-signalmap.html#cfn-medialive-signalmap-cloudwatchalarmtemplategroupidentifiers
       */
      CloudWatchAlarmTemplateGroupIdentifiers?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-signalmap.html#cfn-medialive-signalmap-forcerediscovery
       */
      ForceRediscovery?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-signalmap.html#cfn-medialive-signalmap-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-signalmap.html#cfn-medialive-signalmap-name
       */
      Name: string;
    }
    
    
    interface SignalMap extends Resource<"AWS::MediaLive::SignalMap">, SignalMapProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SignalMap(id: string, props: SignalMapProps): Promise<SignalMap>;
  }
  namespace MediaPackage {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-asset.html
     */
    interface AssetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-asset.html#cfn-mediapackage-asset-sourcearn
       */
      SourceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-asset.html#cfn-mediapackage-asset-resourceid
       */
      ResourceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-asset.html#cfn-mediapackage-asset-id
       */
      Id: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-asset.html#cfn-mediapackage-asset-packaginggroupid
       */
      PackagingGroupId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-asset.html#cfn-mediapackage-asset-egressendpoints
       */
      EgressEndpoints?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-asset.html#cfn-mediapackage-asset-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-asset.html#cfn-mediapackage-asset-sourcerolearn
       */
      SourceRoleArn: string;
    }
    
    
    interface Asset extends Resource<"AWS::MediaPackage::Asset">, AssetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Asset(id: string, props: AssetProps): Promise<Asset>;
  }
  namespace MediaPackage {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-channel.html
     */
    interface ChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-channel.html#cfn-mediapackage-channel-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-channel.html#cfn-mediapackage-channel-ingressaccesslogs
       */
      IngressAccessLogs?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-channel.html#cfn-mediapackage-channel-hlsingest
       */
      HlsIngest?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-channel.html#cfn-mediapackage-channel-id
       */
      Id: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-channel.html#cfn-mediapackage-channel-egressaccesslogs
       */
      EgressAccessLogs?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-channel.html#cfn-mediapackage-channel-tags
       */
      Tags?: {}[];
    }
    
    
    interface Channel extends Resource<"AWS::MediaPackage::Channel">, ChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Channel(id: string, props: ChannelProps): Promise<Channel>;
  }
  namespace MediaPackage {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html
     */
    interface OriginEndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html#cfn-mediapackage-originendpoint-msspackage
       */
      MssPackage?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html#cfn-mediapackage-originendpoint-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html#cfn-mediapackage-originendpoint-channelid
       */
      ChannelId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html#cfn-mediapackage-originendpoint-timedelayseconds
       */
      TimeDelaySeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html#cfn-mediapackage-originendpoint-origination
       */
      Origination?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html#cfn-mediapackage-originendpoint-authorization
       */
      Authorization?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html#cfn-mediapackage-originendpoint-manifestname
       */
      ManifestName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html#cfn-mediapackage-originendpoint-cmafpackage
       */
      CmafPackage?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html#cfn-mediapackage-originendpoint-whitelist
       */
      Whitelist?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html#cfn-mediapackage-originendpoint-id
       */
      Id: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html#cfn-mediapackage-originendpoint-hlspackage
       */
      HlsPackage?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html#cfn-mediapackage-originendpoint-dashpackage
       */
      DashPackage?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html#cfn-mediapackage-originendpoint-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-originendpoint.html#cfn-mediapackage-originendpoint-startoverwindowseconds
       */
      StartoverWindowSeconds?: number;
    }
    
    
    interface OriginEndpoint extends Resource<"AWS::MediaPackage::OriginEndpoint">, OriginEndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function OriginEndpoint(id: string, props: OriginEndpointProps): Promise<OriginEndpoint>;
  }
  namespace MediaPackage {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html
     */
    interface PackagingConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html#cfn-mediapackage-packagingconfiguration-msspackage
       */
      MssPackage?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html#cfn-mediapackage-packagingconfiguration-cmafpackage
       */
      CmafPackage?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html#cfn-mediapackage-packagingconfiguration-id
       */
      Id: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html#cfn-mediapackage-packagingconfiguration-hlspackage
       */
      HlsPackage?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html#cfn-mediapackage-packagingconfiguration-packaginggroupid
       */
      PackagingGroupId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html#cfn-mediapackage-packagingconfiguration-dashpackage
       */
      DashPackage?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html#cfn-mediapackage-packagingconfiguration-tags
       */
      Tags?: {}[];
    }
    
    
    interface PackagingConfiguration extends Resource<"AWS::MediaPackage::PackagingConfiguration">, PackagingConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PackagingConfiguration(id: string, props: PackagingConfigurationProps): Promise<PackagingConfiguration>;
  }
  namespace MediaPackage {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html
     */
    interface PackagingGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-authorization
       */
      Authorization?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-id
       */
      Id: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-egressaccesslogs
       */
      EgressAccessLogs?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packaginggroup.html#cfn-mediapackage-packaginggroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface PackagingGroup extends Resource<"AWS::MediaPackage::PackagingGroup">, PackagingGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PackagingGroup(id: string, props: PackagingGroupProps): Promise<PackagingGroup>;
  }
  namespace MediaPackageV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channel.html
     */
    interface ChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channel.html#cfn-mediapackagev2-channel-inputswitchconfiguration
       */
      InputSwitchConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channel.html#cfn-mediapackagev2-channel-channelname
       */
      ChannelName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channel.html#cfn-mediapackagev2-channel-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channel.html#cfn-mediapackagev2-channel-inputtype
       */
      InputType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channel.html#cfn-mediapackagev2-channel-outputheaderconfiguration
       */
      OutputHeaderConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channel.html#cfn-mediapackagev2-channel-channelgroupname
       */
      ChannelGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channel.html#cfn-mediapackagev2-channel-tags
       */
      Tags?: {}[];
    }
    
    
    interface Channel extends Resource<"AWS::MediaPackageV2::Channel">, ChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Channel(id: string, props: ChannelProps): Promise<Channel>;
  }
  namespace MediaPackageV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channelgroup.html
     */
    interface ChannelGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channelgroup.html#cfn-mediapackagev2-channelgroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channelgroup.html#cfn-mediapackagev2-channelgroup-channelgroupname
       */
      ChannelGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channelgroup.html#cfn-mediapackagev2-channelgroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface ChannelGroup extends Resource<"AWS::MediaPackageV2::ChannelGroup">, ChannelGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ChannelGroup(id: string, props: ChannelGroupProps): Promise<ChannelGroup>;
  }
  namespace MediaPackageV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channelpolicy.html
     */
    interface ChannelPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channelpolicy.html#cfn-mediapackagev2-channelpolicy-policy
       */
      Policy: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channelpolicy.html#cfn-mediapackagev2-channelpolicy-channelname
       */
      ChannelName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-channelpolicy.html#cfn-mediapackagev2-channelpolicy-channelgroupname
       */
      ChannelGroupName: string;
    }
    
    
    interface ChannelPolicy extends Resource<"AWS::MediaPackageV2::ChannelPolicy">, ChannelPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ChannelPolicy(id: string, props: ChannelPolicyProps): Promise<ChannelPolicy>;
  }
  namespace MediaPackageV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpoint.html
     */
    interface OriginEndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpoint.html#cfn-mediapackagev2-originendpoint-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpoint.html#cfn-mediapackagev2-originendpoint-channelname
       */
      ChannelName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpoint.html#cfn-mediapackagev2-originendpoint-lowlatencyhlsmanifests
       */
      LowLatencyHlsManifests?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpoint.html#cfn-mediapackagev2-originendpoint-containertype
       */
      ContainerType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpoint.html#cfn-mediapackagev2-originendpoint-forceendpointerrorconfiguration
       */
      ForceEndpointErrorConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpoint.html#cfn-mediapackagev2-originendpoint-originendpointname
       */
      OriginEndpointName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpoint.html#cfn-mediapackagev2-originendpoint-hlsmanifests
       */
      HlsManifests?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpoint.html#cfn-mediapackagev2-originendpoint-channelgroupname
       */
      ChannelGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpoint.html#cfn-mediapackagev2-originendpoint-dashmanifests
       */
      DashManifests?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpoint.html#cfn-mediapackagev2-originendpoint-segment
       */
      Segment?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpoint.html#cfn-mediapackagev2-originendpoint-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpoint.html#cfn-mediapackagev2-originendpoint-startoverwindowseconds
       */
      StartoverWindowSeconds?: number;
    }
    
    
    interface OriginEndpoint extends Resource<"AWS::MediaPackageV2::OriginEndpoint">, OriginEndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function OriginEndpoint(id: string, props: OriginEndpointProps): Promise<OriginEndpoint>;
  }
  namespace MediaPackageV2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpointpolicy.html
     */
    interface OriginEndpointPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpointpolicy.html#cfn-mediapackagev2-originendpointpolicy-policy
       */
      Policy: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpointpolicy.html#cfn-mediapackagev2-originendpointpolicy-channelname
       */
      ChannelName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpointpolicy.html#cfn-mediapackagev2-originendpointpolicy-originendpointname
       */
      OriginEndpointName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackagev2-originendpointpolicy.html#cfn-mediapackagev2-originendpointpolicy-channelgroupname
       */
      ChannelGroupName: string;
    }
    
    
    interface OriginEndpointPolicy extends Resource<"AWS::MediaPackageV2::OriginEndpointPolicy">, OriginEndpointPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function OriginEndpointPolicy(id: string, props: OriginEndpointPolicyProps): Promise<OriginEndpointPolicy>;
  }
  namespace MediaStore {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediastore-container.html
     */
    interface ContainerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediastore-container.html#cfn-mediastore-container-policy
       */
      Policy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediastore-container.html#cfn-mediastore-container-metricpolicy
       */
      MetricPolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediastore-container.html#cfn-mediastore-container-containername
       */
      ContainerName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediastore-container.html#cfn-mediastore-container-corspolicy
       */
      CorsPolicy?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediastore-container.html#cfn-mediastore-container-lifecyclepolicy
       */
      LifecyclePolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediastore-container.html#cfn-mediastore-container-accessloggingenabled
       */
      AccessLoggingEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediastore-container.html#cfn-mediastore-container-tags
       */
      Tags?: {}[];
    }
    
    
    interface Container extends Resource<"AWS::MediaStore::Container">, ContainerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Container(id: string, props: ContainerProps): Promise<Container>;
  }
  namespace MediaTailor {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channel.html
     */
    interface ChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channel.html#cfn-mediatailor-channel-fillerslate
       */
      FillerSlate?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channel.html#cfn-mediatailor-channel-channelname
       */
      ChannelName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channel.html#cfn-mediatailor-channel-tier
       */
      Tier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channel.html#cfn-mediatailor-channel-audiences
       */
      Audiences?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channel.html#cfn-mediatailor-channel-outputs
       */
      Outputs: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channel.html#cfn-mediatailor-channel-logconfiguration
       */
      LogConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channel.html#cfn-mediatailor-channel-playbackmode
       */
      PlaybackMode: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channel.html#cfn-mediatailor-channel-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channel.html#cfn-mediatailor-channel-timeshiftconfiguration
       */
      TimeShiftConfiguration?: {};
    }
    
    
    interface Channel extends Resource<"AWS::MediaTailor::Channel">, ChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Channel(id: string, props: ChannelProps): Promise<Channel>;
  }
  namespace MediaTailor {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channelpolicy.html
     */
    interface ChannelPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channelpolicy.html#cfn-mediatailor-channelpolicy-policy
       */
      Policy: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-channelpolicy.html#cfn-mediatailor-channelpolicy-channelname
       */
      ChannelName: string;
    }
    
    
    interface ChannelPolicy extends Resource<"AWS::MediaTailor::ChannelPolicy">, ChannelPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ChannelPolicy(id: string, props: ChannelPolicyProps): Promise<ChannelPolicy>;
  }
  namespace MediaTailor {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-livesource.html
     */
    interface LiveSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-livesource.html#cfn-mediatailor-livesource-livesourcename
       */
      LiveSourceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-livesource.html#cfn-mediatailor-livesource-sourcelocationname
       */
      SourceLocationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-livesource.html#cfn-mediatailor-livesource-httppackageconfigurations
       */
      HttpPackageConfigurations: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-livesource.html#cfn-mediatailor-livesource-tags
       */
      Tags?: {}[];
    }
    
    
    interface LiveSource extends Resource<"AWS::MediaTailor::LiveSource">, LiveSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LiveSource(id: string, props: LiveSourceProps): Promise<LiveSource>;
  }
  namespace MediaTailor {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html
     */
    interface PlaybackConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-bumper
       */
      Bumper?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-dashconfiguration
       */
      DashConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-cdnconfiguration
       */
      CdnConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-manifestprocessingrules
       */
      ManifestProcessingRules?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-personalizationthresholdseconds
       */
      PersonalizationThresholdSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-liveprerollconfiguration
       */
      LivePreRollConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-hlsconfiguration
       */
      HlsConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-videocontentsourceurl
       */
      VideoContentSourceUrl: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-transcodeprofilename
       */
      TranscodeProfileName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-configurationaliases
       */
      ConfigurationAliases?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-addecisionserverurl
       */
      AdDecisionServerUrl: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-adconditioningconfiguration
       */
      AdConditioningConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-slateadurl
       */
      SlateAdUrl?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-availsuppression
       */
      AvailSuppression?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-tags
       */
      Tags?: {}[];
    }
    
    
    interface PlaybackConfiguration extends Resource<"AWS::MediaTailor::PlaybackConfiguration">, PlaybackConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PlaybackConfiguration(id: string, props: PlaybackConfigurationProps): Promise<PlaybackConfiguration>;
  }
  namespace MediaTailor {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-sourcelocation.html
     */
    interface SourceLocationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-sourcelocation.html#cfn-mediatailor-sourcelocation-sourcelocationname
       */
      SourceLocationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-sourcelocation.html#cfn-mediatailor-sourcelocation-defaultsegmentdeliveryconfiguration
       */
      DefaultSegmentDeliveryConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-sourcelocation.html#cfn-mediatailor-sourcelocation-segmentdeliveryconfigurations
       */
      SegmentDeliveryConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-sourcelocation.html#cfn-mediatailor-sourcelocation-httpconfiguration
       */
      HttpConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-sourcelocation.html#cfn-mediatailor-sourcelocation-accessconfiguration
       */
      AccessConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-sourcelocation.html#cfn-mediatailor-sourcelocation-tags
       */
      Tags?: {}[];
    }
    
    
    interface SourceLocation extends Resource<"AWS::MediaTailor::SourceLocation">, SourceLocationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SourceLocation(id: string, props: SourceLocationProps): Promise<SourceLocation>;
  }
  namespace MediaTailor {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-vodsource.html
     */
    interface VodSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-vodsource.html#cfn-mediatailor-vodsource-vodsourcename
       */
      VodSourceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-vodsource.html#cfn-mediatailor-vodsource-sourcelocationname
       */
      SourceLocationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-vodsource.html#cfn-mediatailor-vodsource-httppackageconfigurations
       */
      HttpPackageConfigurations: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-vodsource.html#cfn-mediatailor-vodsource-tags
       */
      Tags?: {}[];
    }
    
    
    interface VodSource extends Resource<"AWS::MediaTailor::VodSource">, VodSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VodSource(id: string, props: VodSourceProps): Promise<VodSource>;
  }
  namespace MemoryDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-acl.html
     */
    interface ACLProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-acl.html#cfn-memorydb-acl-aclname
       */
      ACLName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-acl.html#cfn-memorydb-acl-usernames
       */
      UserNames?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-acl.html#cfn-memorydb-acl-tags
       */
      Tags?: {}[];
    }
    
    
    interface ACL extends Resource<"AWS::MemoryDB::ACL">, ACLProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ACL(id: string, props: ACLProps): Promise<ACL>;
  }
  namespace MemoryDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html
     */
    interface ClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-numreplicaspershard
       */
      NumReplicasPerShard?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-finalsnapshotname
       */
      FinalSnapshotName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-parametergroupname
       */
      ParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-snapshotarns
       */
      SnapshotArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-port
       */
      Port?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-aclname
       */
      ACLName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-snapshotname
       */
      SnapshotName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-numshards
       */
      NumShards?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-tlsenabled
       */
      TLSEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-networktype
       */
      NetworkType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-clustername
       */
      ClusterName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-snstopicarn
       */
      SnsTopicArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-engine
       */
      Engine?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-multiregionclustername
       */
      MultiRegionClusterName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-snstopicstatus
       */
      SnsTopicStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-subnetgroupname
       */
      SubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-autominorversionupgrade
       */
      AutoMinorVersionUpgrade?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-clusterendpoint
       */
      ClusterEndpoint?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-snapshotwindow
       */
      SnapshotWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-snapshotretentionlimit
       */
      SnapshotRetentionLimit?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-datatiering
       */
      DataTiering?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-nodetype
       */
      NodeType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-ipdiscovery
       */
      IpDiscovery?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-cluster.html#cfn-memorydb-cluster-maintenancewindow
       */
      MaintenanceWindow?: string;
    }
    
    
    interface Cluster extends Resource<"AWS::MemoryDB::Cluster">, ClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Cluster(id: string, props: ClusterProps): Promise<Cluster>;
  }
  namespace MemoryDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html
     */
    interface MultiRegionClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-multiregionparametergroupname
       */
      MultiRegionParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-multiregionclusternamesuffix
       */
      MultiRegionClusterNameSuffix?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-tlsenabled
       */
      TLSEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-nodetype
       */
      NodeType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-updatestrategy
       */
      UpdateStrategy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-engine
       */
      Engine?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-numshards
       */
      NumShards?: number;
    }
    
    
    interface MultiRegionCluster extends Resource<"AWS::MemoryDB::MultiRegionCluster">, MultiRegionClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MultiRegionCluster(id: string, props: MultiRegionClusterProps): Promise<MultiRegionCluster>;
  }
  namespace MemoryDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-parametergroup.html
     */
    interface ParameterGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-parametergroup.html#cfn-memorydb-parametergroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-parametergroup.html#cfn-memorydb-parametergroup-parameters
       */
      Parameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-parametergroup.html#cfn-memorydb-parametergroup-parametergroupname
       */
      ParameterGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-parametergroup.html#cfn-memorydb-parametergroup-family
       */
      Family: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-parametergroup.html#cfn-memorydb-parametergroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface ParameterGroup extends Resource<"AWS::MemoryDB::ParameterGroup">, ParameterGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ParameterGroup(id: string, props: ParameterGroupProps): Promise<ParameterGroup>;
  }
  namespace MemoryDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-subnetgroup.html
     */
    interface SubnetGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-subnetgroup.html#cfn-memorydb-subnetgroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-subnetgroup.html#cfn-memorydb-subnetgroup-subnetgroupname
       */
      SubnetGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-subnetgroup.html#cfn-memorydb-subnetgroup-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-subnetgroup.html#cfn-memorydb-subnetgroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface SubnetGroup extends Resource<"AWS::MemoryDB::SubnetGroup">, SubnetGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SubnetGroup(id: string, props: SubnetGroupProps): Promise<SubnetGroup>;
  }
  namespace MemoryDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-user.html
     */
    interface UserProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-user.html#cfn-memorydb-user-authenticationmode
       */
      AuthenticationMode?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-user.html#cfn-memorydb-user-username
       */
      UserName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-user.html#cfn-memorydb-user-accessstring
       */
      AccessString?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-user.html#cfn-memorydb-user-tags
       */
      Tags?: {}[];
    }
    
    
    interface User extends Resource<"AWS::MemoryDB::User">, UserProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function User(id: string, props: UserProps): Promise<User>;
  }
  namespace Neptune {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html
     */
    interface DBClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-storageencrypted
       */
      StorageEncrypted?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-restoretotime
       */
      RestoreToTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-associatedroles
       */
      AssociatedRoles?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-snapshotidentifier
       */
      SnapshotIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-dbclusteridentifier
       */
      DBClusterIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-preferredbackupwindow
       */
      PreferredBackupWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-dbport
       */
      DBPort?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-vpcsecuritygroupids
       */
      VpcSecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-copytagstosnapshot
       */
      CopyTagsToSnapshot?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-restoretype
       */
      RestoreType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-availabilityzones
       */
      AvailabilityZones?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-serverlessscalingconfiguration
       */
      ServerlessScalingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-iamauthenabled
       */
      IamAuthEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-dbsubnetgroupname
       */
      DBSubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-deletionprotection
       */
      DeletionProtection?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-uselatestrestorabletime
       */
      UseLatestRestorableTime?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-sourcedbclusteridentifier
       */
      SourceDBClusterIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-dbclusterparametergroupname
       */
      DBClusterParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-backupretentionperiod
       */
      BackupRetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-dbinstanceparametergroupname
       */
      DBInstanceParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbcluster.html#cfn-neptune-dbcluster-enablecloudwatchlogsexports
       */
      EnableCloudwatchLogsExports?: string[];
    }
    
    
    interface DBCluster extends Resource<"AWS::Neptune::DBCluster">, DBClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBCluster(id: string, props: DBClusterProps): Promise<DBCluster>;
  }
  namespace Neptune {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbclusterparametergroup.html
     */
    interface DBClusterParameterGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbclusterparametergroup.html#cfn-neptune-dbclusterparametergroup-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbclusterparametergroup.html#cfn-neptune-dbclusterparametergroup-parameters
       */
      Parameters: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbclusterparametergroup.html#cfn-neptune-dbclusterparametergroup-family
       */
      Family: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbclusterparametergroup.html#cfn-neptune-dbclusterparametergroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbclusterparametergroup.html#cfn-neptune-dbclusterparametergroup-name
       */
      Name?: string;
    }
    
    
    interface DBClusterParameterGroup extends Resource<"AWS::Neptune::DBClusterParameterGroup">, DBClusterParameterGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBClusterParameterGroup(id: string, props: DBClusterParameterGroupProps): Promise<DBClusterParameterGroup>;
  }
  namespace Neptune {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html
     */
    interface DBInstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-dbparametergroupname
       */
      DBParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-dbinstanceclass
       */
      DBInstanceClass: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-allowmajorversionupgrade
       */
      AllowMajorVersionUpgrade?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-dbclusteridentifier
       */
      DBClusterIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-availabilityzone
       */
      AvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-autominorversionupgrade
       */
      AutoMinorVersionUpgrade?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-dbsubnetgroupname
       */
      DBSubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-dbinstanceidentifier
       */
      DBInstanceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-dbsnapshotidentifier
       */
      DBSnapshotIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbinstance.html#cfn-neptune-dbinstance-tags
       */
      Tags?: {}[];
    }
    
    
    interface DBInstance extends Resource<"AWS::Neptune::DBInstance">, DBInstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBInstance(id: string, props: DBInstanceProps): Promise<DBInstance>;
  }
  namespace Neptune {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbparametergroup.html
     */
    interface DBParameterGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbparametergroup.html#cfn-neptune-dbparametergroup-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbparametergroup.html#cfn-neptune-dbparametergroup-parameters
       */
      Parameters: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbparametergroup.html#cfn-neptune-dbparametergroup-family
       */
      Family: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbparametergroup.html#cfn-neptune-dbparametergroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbparametergroup.html#cfn-neptune-dbparametergroup-name
       */
      Name?: string;
    }
    
    
    interface DBParameterGroup extends Resource<"AWS::Neptune::DBParameterGroup">, DBParameterGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBParameterGroup(id: string, props: DBParameterGroupProps): Promise<DBParameterGroup>;
  }
  namespace Neptune {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbsubnetgroup.html
     */
    interface DBSubnetGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbsubnetgroup.html#cfn-neptune-dbsubnetgroup-dbsubnetgroupname
       */
      DBSubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbsubnetgroup.html#cfn-neptune-dbsubnetgroup-dbsubnetgroupdescription
       */
      DBSubnetGroupDescription: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbsubnetgroup.html#cfn-neptune-dbsubnetgroup-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-dbsubnetgroup.html#cfn-neptune-dbsubnetgroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface DBSubnetGroup extends Resource<"AWS::Neptune::DBSubnetGroup">, DBSubnetGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBSubnetGroup(id: string, props: DBSubnetGroupProps): Promise<DBSubnetGroup>;
  }
  namespace Neptune {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-eventsubscription.html
     */
    interface EventSubscriptionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-eventsubscription.html#cfn-neptune-eventsubscription-sourcetype
       */
      SourceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-eventsubscription.html#cfn-neptune-eventsubscription-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-eventsubscription.html#cfn-neptune-eventsubscription-eventcategories
       */
      EventCategories?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-eventsubscription.html#cfn-neptune-eventsubscription-snstopicarn
       */
      SnsTopicArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptune-eventsubscription.html#cfn-neptune-eventsubscription-sourceids
       */
      SourceIds?: string[];
    }
    
    
    interface EventSubscription extends Resource<"AWS::Neptune::EventSubscription">, EventSubscriptionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventSubscription(id: string, props: EventSubscriptionProps): Promise<EventSubscription>;
  }
  namespace NeptuneGraph {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html
     */
    interface GraphProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html#cfn-neptunegraph-graph-publicconnectivity
       */
      PublicConnectivity?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html#cfn-neptunegraph-graph-graphname
       */
      GraphName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html#cfn-neptunegraph-graph-replicacount
       */
      ReplicaCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html#cfn-neptunegraph-graph-provisionedmemory
       */
      ProvisionedMemory: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html#cfn-neptunegraph-graph-deletionprotection
       */
      DeletionProtection?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html#cfn-neptunegraph-graph-vectorsearchconfiguration
       */
      VectorSearchConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html#cfn-neptunegraph-graph-tags
       */
      Tags?: {}[];
    }
    
    
    interface Graph extends Resource<"AWS::NeptuneGraph::Graph">, GraphProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Graph(id: string, props: GraphProps): Promise<Graph>;
  }
  namespace NeptuneGraph {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-privategraphendpoint.html
     */
    interface PrivateGraphEndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-privategraphendpoint.html#cfn-neptunegraph-privategraphendpoint-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-privategraphendpoint.html#cfn-neptunegraph-privategraphendpoint-graphidentifier
       */
      GraphIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-privategraphendpoint.html#cfn-neptunegraph-privategraphendpoint-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-privategraphendpoint.html#cfn-neptunegraph-privategraphendpoint-subnetids
       */
      SubnetIds?: string[];
    }
    
    
    interface PrivateGraphEndpoint extends Resource<"AWS::NeptuneGraph::PrivateGraphEndpoint">, PrivateGraphEndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PrivateGraphEndpoint(id: string, props: PrivateGraphEndpointProps): Promise<PrivateGraphEndpoint>;
  }
  namespace NetworkFirewall {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html
     */
    interface FirewallProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-firewallpolicyarn
       */
      FirewallPolicyArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-subnetchangeprotection
       */
      SubnetChangeProtection?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-firewallname
       */
      FirewallName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-deleteprotection
       */
      DeleteProtection?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-firewallpolicychangeprotection
       */
      FirewallPolicyChangeProtection?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-enabledanalysistypes
       */
      EnabledAnalysisTypes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-subnetmappings
       */
      SubnetMappings: {}[];
    }
    
    
    interface Firewall extends Resource<"AWS::NetworkFirewall::Firewall">, FirewallProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Firewall(id: string, props: FirewallProps): Promise<Firewall>;
  }
  namespace NetworkFirewall {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewallpolicy.html
     */
    interface FirewallPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewallpolicy.html#cfn-networkfirewall-firewallpolicy-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewallpolicy.html#cfn-networkfirewall-firewallpolicy-firewallpolicyname
       */
      FirewallPolicyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewallpolicy.html#cfn-networkfirewall-firewallpolicy-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewallpolicy.html#cfn-networkfirewall-firewallpolicy-firewallpolicy
       */
      FirewallPolicy: {};
    }
    
    
    interface FirewallPolicy extends Resource<"AWS::NetworkFirewall::FirewallPolicy">, FirewallPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FirewallPolicy(id: string, props: FirewallPolicyProps): Promise<FirewallPolicy>;
  }
  namespace NetworkFirewall {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-loggingconfiguration.html
     */
    interface LoggingConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-loggingconfiguration.html#cfn-networkfirewall-loggingconfiguration-firewallname
       */
      FirewallName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-loggingconfiguration.html#cfn-networkfirewall-loggingconfiguration-firewallarn
       */
      FirewallArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-loggingconfiguration.html#cfn-networkfirewall-loggingconfiguration-loggingconfiguration
       */
      LoggingConfiguration: {};
    }
    
    
    interface LoggingConfiguration extends Resource<"AWS::NetworkFirewall::LoggingConfiguration">, LoggingConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LoggingConfiguration(id: string, props: LoggingConfigurationProps): Promise<LoggingConfiguration>;
  }
  namespace NetworkFirewall {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html
     */
    interface RuleGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html#cfn-networkfirewall-rulegroup-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html#cfn-networkfirewall-rulegroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html#cfn-networkfirewall-rulegroup-capacity
       */
      Capacity: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html#cfn-networkfirewall-rulegroup-rulegroupname
       */
      RuleGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html#cfn-networkfirewall-rulegroup-rulegroup
       */
      RuleGroup?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html#cfn-networkfirewall-rulegroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface RuleGroup extends Resource<"AWS::NetworkFirewall::RuleGroup">, RuleGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RuleGroup(id: string, props: RuleGroupProps): Promise<RuleGroup>;
  }
  namespace NetworkFirewall {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-tlsinspectionconfiguration.html
     */
    interface TLSInspectionConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-tlsinspectionconfiguration.html#cfn-networkfirewall-tlsinspectionconfiguration-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-tlsinspectionconfiguration.html#cfn-networkfirewall-tlsinspectionconfiguration-tlsinspectionconfigurationname
       */
      TLSInspectionConfigurationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-tlsinspectionconfiguration.html#cfn-networkfirewall-tlsinspectionconfiguration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-tlsinspectionconfiguration.html#cfn-networkfirewall-tlsinspectionconfiguration-tlsinspectionconfiguration
       */
      TLSInspectionConfiguration: {};
    }
    
    
    interface TLSInspectionConfiguration extends Resource<"AWS::NetworkFirewall::TLSInspectionConfiguration">, TLSInspectionConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TLSInspectionConfiguration(id: string, props: TLSInspectionConfigurationProps): Promise<TLSInspectionConfiguration>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html
     */
    interface ConnectAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-proposedsegmentchange
       */
      ProposedSegmentChange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-options
       */
      Options: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-transportattachmentid
       */
      TransportAttachmentId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-corenetworkid
       */
      CoreNetworkId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-proposednetworkfunctiongroupchange
       */
      ProposedNetworkFunctionGroupChange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-networkfunctiongroupname
       */
      NetworkFunctionGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-edgelocation
       */
      EdgeLocation: string;
    }
    
    
    interface ConnectAttachment extends Resource<"AWS::NetworkManager::ConnectAttachment">, ConnectAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConnectAttachment(id: string, props: ConnectAttachmentProps): Promise<ConnectAttachment>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectpeer.html
     */
    interface ConnectPeerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectpeer.html#cfn-networkmanager-connectpeer-connectattachmentid
       */
      ConnectAttachmentId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectpeer.html#cfn-networkmanager-connectpeer-peeraddress
       */
      PeerAddress: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectpeer.html#cfn-networkmanager-connectpeer-subnetarn
       */
      SubnetArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectpeer.html#cfn-networkmanager-connectpeer-corenetworkaddress
       */
      CoreNetworkAddress?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectpeer.html#cfn-networkmanager-connectpeer-bgpoptions
       */
      BgpOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectpeer.html#cfn-networkmanager-connectpeer-insidecidrblocks
       */
      InsideCidrBlocks?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectpeer.html#cfn-networkmanager-connectpeer-tags
       */
      Tags?: {}[];
    }
    
    
    interface ConnectPeer extends Resource<"AWS::NetworkManager::ConnectPeer">, ConnectPeerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConnectPeer(id: string, props: ConnectPeerProps): Promise<ConnectPeer>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-corenetwork.html
     */
    interface CoreNetworkProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-corenetwork.html#cfn-networkmanager-corenetwork-globalnetworkid
       */
      GlobalNetworkId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-corenetwork.html#cfn-networkmanager-corenetwork-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-corenetwork.html#cfn-networkmanager-corenetwork-policydocument
       */
      PolicyDocument?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-corenetwork.html#cfn-networkmanager-corenetwork-tags
       */
      Tags?: {}[];
    }
    
    
    interface CoreNetwork extends Resource<"AWS::NetworkManager::CoreNetwork">, CoreNetworkProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CoreNetwork(id: string, props: CoreNetworkProps): Promise<CoreNetwork>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-customergatewayassociation.html
     */
    interface CustomerGatewayAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-customergatewayassociation.html#cfn-networkmanager-customergatewayassociation-globalnetworkid
       */
      GlobalNetworkId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-customergatewayassociation.html#cfn-networkmanager-customergatewayassociation-deviceid
       */
      DeviceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-customergatewayassociation.html#cfn-networkmanager-customergatewayassociation-customergatewayarn
       */
      CustomerGatewayArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-customergatewayassociation.html#cfn-networkmanager-customergatewayassociation-linkid
       */
      LinkId?: string;
    }
    
    
    interface CustomerGatewayAssociation extends Resource<"AWS::NetworkManager::CustomerGatewayAssociation">, CustomerGatewayAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CustomerGatewayAssociation(id: string, props: CustomerGatewayAssociationProps): Promise<CustomerGatewayAssociation>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html
     */
    interface DeviceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html#cfn-networkmanager-device-siteid
       */
      SiteId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html#cfn-networkmanager-device-awslocation
       */
      AWSLocation?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html#cfn-networkmanager-device-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html#cfn-networkmanager-device-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html#cfn-networkmanager-device-globalnetworkid
       */
      GlobalNetworkId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html#cfn-networkmanager-device-serialnumber
       */
      SerialNumber?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html#cfn-networkmanager-device-model
       */
      Model?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html#cfn-networkmanager-device-vendor
       */
      Vendor?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html#cfn-networkmanager-device-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-device.html#cfn-networkmanager-device-location
       */
      Location?: {};
    }
    
    
    interface Device extends Resource<"AWS::NetworkManager::Device">, DeviceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Device(id: string, props: DeviceProps): Promise<Device>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-directconnectgatewayattachment.html
     */
    interface DirectConnectGatewayAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-directconnectgatewayattachment.html#cfn-networkmanager-directconnectgatewayattachment-proposedsegmentchange
       */
      ProposedSegmentChange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-directconnectgatewayattachment.html#cfn-networkmanager-directconnectgatewayattachment-corenetworkid
       */
      CoreNetworkId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-directconnectgatewayattachment.html#cfn-networkmanager-directconnectgatewayattachment-proposednetworkfunctiongroupchange
       */
      ProposedNetworkFunctionGroupChange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-directconnectgatewayattachment.html#cfn-networkmanager-directconnectgatewayattachment-edgelocations
       */
      EdgeLocations: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-directconnectgatewayattachment.html#cfn-networkmanager-directconnectgatewayattachment-directconnectgatewayarn
       */
      DirectConnectGatewayArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-directconnectgatewayattachment.html#cfn-networkmanager-directconnectgatewayattachment-tags
       */
      Tags?: {}[];
    }
    
    
    interface DirectConnectGatewayAttachment extends Resource<"AWS::NetworkManager::DirectConnectGatewayAttachment">, DirectConnectGatewayAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DirectConnectGatewayAttachment(id: string, props: DirectConnectGatewayAttachmentProps): Promise<DirectConnectGatewayAttachment>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-globalnetwork.html
     */
    interface GlobalNetworkProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-globalnetwork.html#cfn-networkmanager-globalnetwork-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-globalnetwork.html#cfn-networkmanager-globalnetwork-state
       */
      State?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-globalnetwork.html#cfn-networkmanager-globalnetwork-createdat
       */
      CreatedAt?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-globalnetwork.html#cfn-networkmanager-globalnetwork-tags
       */
      Tags?: {}[];
    }
    
    
    interface GlobalNetwork extends Resource<"AWS::NetworkManager::GlobalNetwork">, GlobalNetworkProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GlobalNetwork(id: string, props: GlobalNetworkProps): Promise<GlobalNetwork>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-link.html
     */
    interface LinkProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-link.html#cfn-networkmanager-link-siteid
       */
      SiteId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-link.html#cfn-networkmanager-link-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-link.html#cfn-networkmanager-link-globalnetworkid
       */
      GlobalNetworkId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-link.html#cfn-networkmanager-link-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-link.html#cfn-networkmanager-link-bandwidth
       */
      Bandwidth: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-link.html#cfn-networkmanager-link-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-link.html#cfn-networkmanager-link-provider
       */
      Provider?: string;
    }
    
    
    interface Link extends Resource<"AWS::NetworkManager::Link">, LinkProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Link(id: string, props: LinkProps): Promise<Link>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-linkassociation.html
     */
    interface LinkAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-linkassociation.html#cfn-networkmanager-linkassociation-globalnetworkid
       */
      GlobalNetworkId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-linkassociation.html#cfn-networkmanager-linkassociation-deviceid
       */
      DeviceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-linkassociation.html#cfn-networkmanager-linkassociation-linkid
       */
      LinkId: string;
    }
    
    
    interface LinkAssociation extends Resource<"AWS::NetworkManager::LinkAssociation">, LinkAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LinkAssociation(id: string, props: LinkAssociationProps): Promise<LinkAssociation>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-site.html
     */
    interface SiteProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-site.html#cfn-networkmanager-site-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-site.html#cfn-networkmanager-site-globalnetworkid
       */
      GlobalNetworkId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-site.html#cfn-networkmanager-site-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-site.html#cfn-networkmanager-site-location
       */
      Location?: {};
    }
    
    
    interface Site extends Resource<"AWS::NetworkManager::Site">, SiteProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Site(id: string, props: SiteProps): Promise<Site>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-sitetositevpnattachment.html
     */
    interface SiteToSiteVpnAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-sitetositevpnattachment.html#cfn-networkmanager-sitetositevpnattachment-proposedsegmentchange
       */
      ProposedSegmentChange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-sitetositevpnattachment.html#cfn-networkmanager-sitetositevpnattachment-corenetworkid
       */
      CoreNetworkId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-sitetositevpnattachment.html#cfn-networkmanager-sitetositevpnattachment-proposednetworkfunctiongroupchange
       */
      ProposedNetworkFunctionGroupChange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-sitetositevpnattachment.html#cfn-networkmanager-sitetositevpnattachment-vpnconnectionarn
       */
      VpnConnectionArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-sitetositevpnattachment.html#cfn-networkmanager-sitetositevpnattachment-networkfunctiongroupname
       */
      NetworkFunctionGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-sitetositevpnattachment.html#cfn-networkmanager-sitetositevpnattachment-tags
       */
      Tags?: {}[];
    }
    
    
    interface SiteToSiteVpnAttachment extends Resource<"AWS::NetworkManager::SiteToSiteVpnAttachment">, SiteToSiteVpnAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SiteToSiteVpnAttachment(id: string, props: SiteToSiteVpnAttachmentProps): Promise<SiteToSiteVpnAttachment>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewaypeering.html
     */
    interface TransitGatewayPeeringProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewaypeering.html#cfn-networkmanager-transitgatewaypeering-corenetworkid
       */
      CoreNetworkId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewaypeering.html#cfn-networkmanager-transitgatewaypeering-transitgatewayarn
       */
      TransitGatewayArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewaypeering.html#cfn-networkmanager-transitgatewaypeering-tags
       */
      Tags?: {}[];
    }
    
    
    interface TransitGatewayPeering extends Resource<"AWS::NetworkManager::TransitGatewayPeering">, TransitGatewayPeeringProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayPeering(id: string, props: TransitGatewayPeeringProps): Promise<TransitGatewayPeering>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayregistration.html
     */
    interface TransitGatewayRegistrationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayregistration.html#cfn-networkmanager-transitgatewayregistration-globalnetworkid
       */
      GlobalNetworkId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayregistration.html#cfn-networkmanager-transitgatewayregistration-transitgatewayarn
       */
      TransitGatewayArn: string;
    }
    
    
    interface TransitGatewayRegistration extends Resource<"AWS::NetworkManager::TransitGatewayRegistration">, TransitGatewayRegistrationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayRegistration(id: string, props: TransitGatewayRegistrationProps): Promise<TransitGatewayRegistration>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayroutetableattachment.html
     */
    interface TransitGatewayRouteTableAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayroutetableattachment.html#cfn-networkmanager-transitgatewayroutetableattachment-proposedsegmentchange
       */
      ProposedSegmentChange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayroutetableattachment.html#cfn-networkmanager-transitgatewayroutetableattachment-transitgatewayroutetablearn
       */
      TransitGatewayRouteTableArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayroutetableattachment.html#cfn-networkmanager-transitgatewayroutetableattachment-proposednetworkfunctiongroupchange
       */
      ProposedNetworkFunctionGroupChange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayroutetableattachment.html#cfn-networkmanager-transitgatewayroutetableattachment-peeringid
       */
      PeeringId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayroutetableattachment.html#cfn-networkmanager-transitgatewayroutetableattachment-networkfunctiongroupname
       */
      NetworkFunctionGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewayroutetableattachment.html#cfn-networkmanager-transitgatewayroutetableattachment-tags
       */
      Tags?: {}[];
    }
    
    
    interface TransitGatewayRouteTableAttachment extends Resource<"AWS::NetworkManager::TransitGatewayRouteTableAttachment">, TransitGatewayRouteTableAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransitGatewayRouteTableAttachment(id: string, props: TransitGatewayRouteTableAttachmentProps): Promise<TransitGatewayRouteTableAttachment>;
  }
  namespace NetworkManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-vpcattachment.html
     */
    interface VpcAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-vpcattachment.html#cfn-networkmanager-vpcattachment-proposedsegmentchange
       */
      ProposedSegmentChange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-vpcattachment.html#cfn-networkmanager-vpcattachment-subnetarns
       */
      SubnetArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-vpcattachment.html#cfn-networkmanager-vpcattachment-options
       */
      Options?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-vpcattachment.html#cfn-networkmanager-vpcattachment-corenetworkid
       */
      CoreNetworkId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-vpcattachment.html#cfn-networkmanager-vpcattachment-proposednetworkfunctiongroupchange
       */
      ProposedNetworkFunctionGroupChange?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-vpcattachment.html#cfn-networkmanager-vpcattachment-vpcarn
       */
      VpcArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-vpcattachment.html#cfn-networkmanager-vpcattachment-tags
       */
      Tags?: {}[];
    }
    
    
    interface VpcAttachment extends Resource<"AWS::NetworkManager::VpcAttachment">, VpcAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VpcAttachment(id: string, props: VpcAttachmentProps): Promise<VpcAttachment>;
  }
  namespace Notifications {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-channelassociation.html
     */
    interface ChannelAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-channelassociation.html#cfn-notifications-channelassociation-notificationconfigurationarn
       */
      NotificationConfigurationArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-channelassociation.html#cfn-notifications-channelassociation-arn
       */
      Arn: string;
    }
    
    
    interface ChannelAssociation extends Resource<"AWS::Notifications::ChannelAssociation">, ChannelAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ChannelAssociation(id: string, props: ChannelAssociationProps): Promise<ChannelAssociation>;
  }
  namespace Notifications {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-eventrule.html
     */
    interface EventRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-eventrule.html#cfn-notifications-eventrule-eventpattern
       */
      EventPattern?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-eventrule.html#cfn-notifications-eventrule-eventtype
       */
      EventType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-eventrule.html#cfn-notifications-eventrule-notificationconfigurationarn
       */
      NotificationConfigurationArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-eventrule.html#cfn-notifications-eventrule-regions
       */
      Regions: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-eventrule.html#cfn-notifications-eventrule-source
       */
      Source: string;
    }
    
    
    interface EventRule extends Resource<"AWS::Notifications::EventRule">, EventRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventRule(id: string, props: EventRuleProps): Promise<EventRule>;
  }
  namespace Notifications {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-managednotificationaccountcontactassociation.html
     */
    interface ManagedNotificationAccountContactAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-managednotificationaccountcontactassociation.html#cfn-notifications-managednotificationaccountcontactassociation-contactidentifier
       */
      ContactIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-managednotificationaccountcontactassociation.html#cfn-notifications-managednotificationaccountcontactassociation-managednotificationconfigurationarn
       */
      ManagedNotificationConfigurationArn: string;
    }
    
    
    interface ManagedNotificationAccountContactAssociation extends Resource<"AWS::Notifications::ManagedNotificationAccountContactAssociation">, ManagedNotificationAccountContactAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ManagedNotificationAccountContactAssociation(id: string, props: ManagedNotificationAccountContactAssociationProps): Promise<ManagedNotificationAccountContactAssociation>;
  }
  namespace Notifications {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-managednotificationadditionalchannelassociation.html
     */
    interface ManagedNotificationAdditionalChannelAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-managednotificationadditionalchannelassociation.html#cfn-notifications-managednotificationadditionalchannelassociation-channelarn
       */
      ChannelArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-managednotificationadditionalchannelassociation.html#cfn-notifications-managednotificationadditionalchannelassociation-managednotificationconfigurationarn
       */
      ManagedNotificationConfigurationArn: string;
    }
    
    
    interface ManagedNotificationAdditionalChannelAssociation extends Resource<"AWS::Notifications::ManagedNotificationAdditionalChannelAssociation">, ManagedNotificationAdditionalChannelAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ManagedNotificationAdditionalChannelAssociation(id: string, props: ManagedNotificationAdditionalChannelAssociationProps): Promise<ManagedNotificationAdditionalChannelAssociation>;
  }
  namespace Notifications {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-notificationconfiguration.html
     */
    interface NotificationConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-notificationconfiguration.html#cfn-notifications-notificationconfiguration-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-notificationconfiguration.html#cfn-notifications-notificationconfiguration-aggregationduration
       */
      AggregationDuration?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-notificationconfiguration.html#cfn-notifications-notificationconfiguration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-notificationconfiguration.html#cfn-notifications-notificationconfiguration-name
       */
      Name: string;
    }
    
    
    interface NotificationConfiguration extends Resource<"AWS::Notifications::NotificationConfiguration">, NotificationConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NotificationConfiguration(id: string, props: NotificationConfigurationProps): Promise<NotificationConfiguration>;
  }
  namespace Notifications {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-notificationhub.html
     */
    interface NotificationHubProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notifications-notificationhub.html#cfn-notifications-notificationhub-region
       */
      Region: string;
    }
    
    
    interface NotificationHub extends Resource<"AWS::Notifications::NotificationHub">, NotificationHubProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NotificationHub(id: string, props: NotificationHubProps): Promise<NotificationHub>;
  }
  namespace NotificationsContacts {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notificationscontacts-emailcontact.html
     */
    interface EmailContactProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notificationscontacts-emailcontact.html#cfn-notificationscontacts-emailcontact-emailaddress
       */
      EmailAddress: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notificationscontacts-emailcontact.html#cfn-notificationscontacts-emailcontact-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-notificationscontacts-emailcontact.html#cfn-notificationscontacts-emailcontact-name
       */
      Name: string;
    }
    
    
    interface EmailContact extends Resource<"AWS::NotificationsContacts::EmailContact">, EmailContactProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EmailContact(id: string, props: EmailContactProps): Promise<EmailContact>;
  }
  namespace OSIS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-osis-pipeline.html
     */
    interface PipelineProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-osis-pipeline.html#cfn-osis-pipeline-pipelineconfigurationbody
       */
      PipelineConfigurationBody: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-osis-pipeline.html#cfn-osis-pipeline-bufferoptions
       */
      BufferOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-osis-pipeline.html#cfn-osis-pipeline-minunits
       */
      MinUnits: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-osis-pipeline.html#cfn-osis-pipeline-pipelinename
       */
      PipelineName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-osis-pipeline.html#cfn-osis-pipeline-vpcoptions
       */
      VpcOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-osis-pipeline.html#cfn-osis-pipeline-maxunits
       */
      MaxUnits: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-osis-pipeline.html#cfn-osis-pipeline-logpublishingoptions
       */
      LogPublishingOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-osis-pipeline.html#cfn-osis-pipeline-encryptionatrestoptions
       */
      EncryptionAtRestOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-osis-pipeline.html#cfn-osis-pipeline-tags
       */
      Tags?: {}[];
    }
    
    
    interface Pipeline extends Resource<"AWS::OSIS::Pipeline">, PipelineProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Pipeline(id: string, props: PipelineProps): Promise<Pipeline>;
  }
  namespace Oam {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-oam-link.html
     */
    interface LinkProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-oam-link.html#cfn-oam-link-sinkidentifier
       */
      SinkIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-oam-link.html#cfn-oam-link-labeltemplate
       */
      LabelTemplate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-oam-link.html#cfn-oam-link-resourcetypes
       */
      ResourceTypes: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-oam-link.html#cfn-oam-link-linkconfiguration
       */
      LinkConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-oam-link.html#cfn-oam-link-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Link extends Resource<"AWS::Oam::Link">, LinkProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Link(id: string, props: LinkProps): Promise<Link>;
  }
  namespace Oam {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-oam-sink.html
     */
    interface SinkProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-oam-sink.html#cfn-oam-sink-policy
       */
      Policy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-oam-sink.html#cfn-oam-sink-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-oam-sink.html#cfn-oam-sink-name
       */
      Name: string;
    }
    
    
    interface Sink extends Resource<"AWS::Oam::Sink">, SinkProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Sink(id: string, props: SinkProps): Promise<Sink>;
  }
  namespace Omics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-annotationstore.html
     */
    interface AnnotationStoreProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-annotationstore.html#cfn-omics-annotationstore-storeformat
       */
      StoreFormat: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-annotationstore.html#cfn-omics-annotationstore-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-annotationstore.html#cfn-omics-annotationstore-reference
       */
      Reference?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-annotationstore.html#cfn-omics-annotationstore-sseconfig
       */
      SseConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-annotationstore.html#cfn-omics-annotationstore-storeoptions
       */
      StoreOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-annotationstore.html#cfn-omics-annotationstore-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-annotationstore.html#cfn-omics-annotationstore-name
       */
      Name: string;
    }
    
    
    interface AnnotationStore extends Resource<"AWS::Omics::AnnotationStore">, AnnotationStoreProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AnnotationStore(id: string, props: AnnotationStoreProps): Promise<AnnotationStore>;
  }
  namespace Omics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-referencestore.html
     */
    interface ReferenceStoreProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-referencestore.html#cfn-omics-referencestore-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-referencestore.html#cfn-omics-referencestore-sseconfig
       */
      SseConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-referencestore.html#cfn-omics-referencestore-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-referencestore.html#cfn-omics-referencestore-name
       */
      Name: string;
    }
    
    
    interface ReferenceStore extends Resource<"AWS::Omics::ReferenceStore">, ReferenceStoreProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReferenceStore(id: string, props: ReferenceStoreProps): Promise<ReferenceStore>;
  }
  namespace Omics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-rungroup.html
     */
    interface RunGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-rungroup.html#cfn-omics-rungroup-maxduration
       */
      MaxDuration?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-rungroup.html#cfn-omics-rungroup-maxgpus
       */
      MaxGpus?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-rungroup.html#cfn-omics-rungroup-maxruns
       */
      MaxRuns?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-rungroup.html#cfn-omics-rungroup-maxcpus
       */
      MaxCpus?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-rungroup.html#cfn-omics-rungroup-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-rungroup.html#cfn-omics-rungroup-name
       */
      Name?: string;
    }
    
    
    interface RunGroup extends Resource<"AWS::Omics::RunGroup">, RunGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RunGroup(id: string, props: RunGroupProps): Promise<RunGroup>;
  }
  namespace Omics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-sequencestore.html
     */
    interface SequenceStoreProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-sequencestore.html#cfn-omics-sequencestore-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-sequencestore.html#cfn-omics-sequencestore-propagatedsetleveltags
       */
      PropagatedSetLevelTags?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-sequencestore.html#cfn-omics-sequencestore-fallbacklocation
       */
      FallbackLocation?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-sequencestore.html#cfn-omics-sequencestore-sseconfig
       */
      SseConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-sequencestore.html#cfn-omics-sequencestore-accessloglocation
       */
      AccessLogLocation?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-sequencestore.html#cfn-omics-sequencestore-etagalgorithmfamily
       */
      ETagAlgorithmFamily?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-sequencestore.html#cfn-omics-sequencestore-s3accesspolicy
       */
      S3AccessPolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-sequencestore.html#cfn-omics-sequencestore-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-sequencestore.html#cfn-omics-sequencestore-name
       */
      Name: string;
    }
    
    
    interface SequenceStore extends Resource<"AWS::Omics::SequenceStore">, SequenceStoreProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SequenceStore(id: string, props: SequenceStoreProps): Promise<SequenceStore>;
  }
  namespace Omics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-variantstore.html
     */
    interface VariantStoreProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-variantstore.html#cfn-omics-variantstore-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-variantstore.html#cfn-omics-variantstore-reference
       */
      Reference: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-variantstore.html#cfn-omics-variantstore-sseconfig
       */
      SseConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-variantstore.html#cfn-omics-variantstore-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-variantstore.html#cfn-omics-variantstore-name
       */
      Name: string;
    }
    
    
    interface VariantStore extends Resource<"AWS::Omics::VariantStore">, VariantStoreProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VariantStore(id: string, props: VariantStoreProps): Promise<VariantStore>;
  }
  namespace Omics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-workflow.html
     */
    interface WorkflowProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-workflow.html#cfn-omics-workflow-parametertemplate
       */
      ParameterTemplate?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-workflow.html#cfn-omics-workflow-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-workflow.html#cfn-omics-workflow-storagecapacity
       */
      StorageCapacity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-workflow.html#cfn-omics-workflow-accelerators
       */
      Accelerators?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-workflow.html#cfn-omics-workflow-definitionuri
       */
      DefinitionUri?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-workflow.html#cfn-omics-workflow-main
       */
      Main?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-workflow.html#cfn-omics-workflow-engine
       */
      Engine?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-workflow.html#cfn-omics-workflow-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-omics-workflow.html#cfn-omics-workflow-name
       */
      Name?: string;
    }
    
    
    interface Workflow extends Resource<"AWS::Omics::Workflow">, WorkflowProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Workflow(id: string, props: WorkflowProps): Promise<Workflow>;
  }
  namespace OpenSearchServerless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-accesspolicy.html
     */
    interface AccessPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-accesspolicy.html#cfn-opensearchserverless-accesspolicy-policy
       */
      Policy: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-accesspolicy.html#cfn-opensearchserverless-accesspolicy-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-accesspolicy.html#cfn-opensearchserverless-accesspolicy-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-accesspolicy.html#cfn-opensearchserverless-accesspolicy-name
       */
      Name: string;
    }
    
    
    interface AccessPolicy extends Resource<"AWS::OpenSearchServerless::AccessPolicy">, AccessPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccessPolicy(id: string, props: AccessPolicyProps): Promise<AccessPolicy>;
  }
  namespace OpenSearchServerless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-collection.html
     */
    interface CollectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-collection.html#cfn-opensearchserverless-collection-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-collection.html#cfn-opensearchserverless-collection-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-collection.html#cfn-opensearchserverless-collection-standbyreplicas
       */
      StandbyReplicas?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-collection.html#cfn-opensearchserverless-collection-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-collection.html#cfn-opensearchserverless-collection-name
       */
      Name: string;
    }
    
    
    interface Collection extends Resource<"AWS::OpenSearchServerless::Collection">, CollectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Collection(id: string, props: CollectionProps): Promise<Collection>;
  }
  namespace OpenSearchServerless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-index.html
     */
    interface IndexProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-index.html#cfn-opensearchserverless-index-indexname
       */
      IndexName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-index.html#cfn-opensearchserverless-index-mappings
       */
      Mappings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-index.html#cfn-opensearchserverless-index-collectionendpoint
       */
      CollectionEndpoint: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-index.html#cfn-opensearchserverless-index-settings
       */
      Settings?: {};
    }
    
    
    interface Index extends Resource<"AWS::OpenSearchServerless::Index">, IndexProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Index(id: string, props: IndexProps): Promise<Index>;
  }
  namespace OpenSearchServerless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-lifecyclepolicy.html
     */
    interface LifecyclePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-lifecyclepolicy.html#cfn-opensearchserverless-lifecyclepolicy-policy
       */
      Policy: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-lifecyclepolicy.html#cfn-opensearchserverless-lifecyclepolicy-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-lifecyclepolicy.html#cfn-opensearchserverless-lifecyclepolicy-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-lifecyclepolicy.html#cfn-opensearchserverless-lifecyclepolicy-name
       */
      Name: string;
    }
    
    
    interface LifecyclePolicy extends Resource<"AWS::OpenSearchServerless::LifecyclePolicy">, LifecyclePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LifecyclePolicy(id: string, props: LifecyclePolicyProps): Promise<LifecyclePolicy>;
  }
  namespace OpenSearchServerless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-securityconfig.html
     */
    interface SecurityConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-securityconfig.html#cfn-opensearchserverless-securityconfig-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-securityconfig.html#cfn-opensearchserverless-securityconfig-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-securityconfig.html#cfn-opensearchserverless-securityconfig-samloptions
       */
      SamlOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-securityconfig.html#cfn-opensearchserverless-securityconfig-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-securityconfig.html#cfn-opensearchserverless-securityconfig-iamidentitycenteroptions
       */
      IamIdentityCenterOptions?: {};
    }
    
    
    interface SecurityConfig extends Resource<"AWS::OpenSearchServerless::SecurityConfig">, SecurityConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecurityConfig(id: string, props: SecurityConfigProps): Promise<SecurityConfig>;
  }
  namespace OpenSearchServerless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-securitypolicy.html
     */
    interface SecurityPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-securitypolicy.html#cfn-opensearchserverless-securitypolicy-policy
       */
      Policy: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-securitypolicy.html#cfn-opensearchserverless-securitypolicy-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-securitypolicy.html#cfn-opensearchserverless-securitypolicy-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-securitypolicy.html#cfn-opensearchserverless-securitypolicy-name
       */
      Name: string;
    }
    
    
    interface SecurityPolicy extends Resource<"AWS::OpenSearchServerless::SecurityPolicy">, SecurityPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecurityPolicy(id: string, props: SecurityPolicyProps): Promise<SecurityPolicy>;
  }
  namespace OpenSearchServerless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-vpcendpoint.html
     */
    interface VpcEndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-vpcendpoint.html#cfn-opensearchserverless-vpcendpoint-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-vpcendpoint.html#cfn-opensearchserverless-vpcendpoint-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-vpcendpoint.html#cfn-opensearchserverless-vpcendpoint-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchserverless-vpcendpoint.html#cfn-opensearchserverless-vpcendpoint-name
       */
      Name: string;
    }
    
    
    interface VpcEndpoint extends Resource<"AWS::OpenSearchServerless::VpcEndpoint">, VpcEndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VpcEndpoint(id: string, props: VpcEndpointProps): Promise<VpcEndpoint>;
  }
  namespace OpenSearchService {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-application.html#cfn-opensearchservice-application-datasources
       */
      DataSources?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-application.html#cfn-opensearchservice-application-appconfigs
       */
      AppConfigs?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-application.html#cfn-opensearchservice-application-endpoint
       */
      Endpoint?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-application.html#cfn-opensearchservice-application-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-application.html#cfn-opensearchservice-application-iamidentitycenteroptions
       */
      IamIdentityCenterOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-application.html#cfn-opensearchservice-application-name
       */
      Name: string;
    }
    
    
    interface Application extends Resource<"AWS::OpenSearchService::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace OpenSearchService {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html
     */
    interface DomainProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-skipshardmigrationwait
       */
      SkipShardMigrationWait?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-softwareupdateoptions
       */
      SoftwareUpdateOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-domainname
       */
      DomainName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-logpublishingoptions
       */
      LogPublishingOptions?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-snapshotoptions
       */
      SnapshotOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-vpcoptions
       */
      VPCOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-nodetonodeencryptionoptions
       */
      NodeToNodeEncryptionOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-accesspolicies
       */
      AccessPolicies?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-domainendpointoptions
       */
      DomainEndpointOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-cognitooptions
       */
      CognitoOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-advancedoptions
       */
      AdvancedOptions?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-advancedsecurityoptions
       */
      AdvancedSecurityOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-ipaddresstype
       */
      IPAddressType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-identitycenteroptions
       */
      IdentityCenterOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-ebsoptions
       */
      EBSOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-encryptionatrestoptions
       */
      EncryptionAtRestOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-offpeakwindowoptions
       */
      OffPeakWindowOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html#cfn-opensearchservice-domain-clusterconfig
       */
      ClusterConfig?: {};
    }
    
    
    interface Domain extends Resource<"AWS::OpenSearchService::Domain">, DomainProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Domain(id: string, props: DomainProps): Promise<Domain>;
  }
  namespace OpsWorks {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html
     */
    interface AppProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-appsource
       */
      AppSource?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-attributes
       */
      Attributes?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-datasources
       */
      DataSources?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-domains
       */
      Domains?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-enablessl
       */
      EnableSsl?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-environment
       */
      Environment?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-shortname
       */
      Shortname?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-sslconfiguration
       */
      SslConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-stackid
       */
      StackId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-type
       */
      Type: string;
    }
    
    
    interface App extends Resource<"AWS::OpsWorks::App">, AppProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function App(id: string, props: AppProps): Promise<App>;
  }
  namespace OpsWorks {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-elbattachment.html
     */
    interface ElasticLoadBalancerAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-elbattachment.html#cfn-opsworks-elbattachment-elbname
       */
      ElasticLoadBalancerName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-elbattachment.html#cfn-opsworks-elbattachment-layerid
       */
      LayerId: string;
    }
    
    
    interface ElasticLoadBalancerAttachment extends Resource<"AWS::OpsWorks::ElasticLoadBalancerAttachment">, ElasticLoadBalancerAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ElasticLoadBalancerAttachment(id: string, props: ElasticLoadBalancerAttachmentProps): Promise<ElasticLoadBalancerAttachment>;
  }
  namespace OpsWorks {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html
     */
    interface InstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-agentversion
       */
      AgentVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-amiid
       */
      AmiId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-architecture
       */
      Architecture?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-autoscalingtype
       */
      AutoScalingType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-availabilityzone
       */
      AvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-blockdevicemappings
       */
      BlockDeviceMappings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-ebsoptimized
       */
      EbsOptimized?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-elasticips
       */
      ElasticIps?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-hostname
       */
      Hostname?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-installupdatesonboot
       */
      InstallUpdatesOnBoot?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-instancetype
       */
      InstanceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-layerids
       */
      LayerIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-os
       */
      Os?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-rootdevicetype
       */
      RootDeviceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-sshkeyname
       */
      SshKeyName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-stackid
       */
      StackId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-subnetid
       */
      SubnetId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-tenancy
       */
      Tenancy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-timebasedautoscaling
       */
      TimeBasedAutoScaling?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-virtualizationtype
       */
      VirtualizationType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-instance.html#cfn-opsworks-instance-volumes
       */
      Volumes?: string[];
    }
    
    
    interface Instance extends Resource<"AWS::OpsWorks::Instance">, InstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Instance(id: string, props: InstanceProps): Promise<Instance>;
  }
  namespace OpsWorks {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html
     */
    interface LayerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-attributes
       */
      Attributes?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-autoassignelasticips
       */
      AutoAssignElasticIps: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-autoassignpublicips
       */
      AutoAssignPublicIps: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-custominstanceprofilearn
       */
      CustomInstanceProfileArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-customjson
       */
      CustomJson?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-customrecipes
       */
      CustomRecipes?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-customsecuritygroupids
       */
      CustomSecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-enableautohealing
       */
      EnableAutoHealing: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-installupdatesonboot
       */
      InstallUpdatesOnBoot?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-lifecycleeventconfiguration
       */
      LifecycleEventConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-loadbasedautoscaling
       */
      LoadBasedAutoScaling?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-packages
       */
      Packages?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-shortname
       */
      Shortname: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-stackid
       */
      StackId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-useebsoptimizedinstances
       */
      UseEbsOptimizedInstances?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html#cfn-opsworks-layer-volumeconfigurations
       */
      VolumeConfigurations?: {}[];
    }
    
    
    interface Layer extends Resource<"AWS::OpsWorks::Layer">, LayerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Layer(id: string, props: LayerProps): Promise<Layer>;
  }
  namespace OpsWorks {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html
     */
    interface StackProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-agentversion
       */
      AgentVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-attributes
       */
      Attributes?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-chefconfiguration
       */
      ChefConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-cloneappids
       */
      CloneAppIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-clonepermissions
       */
      ClonePermissions?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-configmanager
       */
      ConfigurationManager?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-custcookbooksource
       */
      CustomCookbooksSource?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-custjson
       */
      CustomJson?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-defaultaz
       */
      DefaultAvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-defaultinstanceprof
       */
      DefaultInstanceProfileArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-defaultos
       */
      DefaultOs?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-defaultrootdevicetype
       */
      DefaultRootDeviceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-defaultsshkeyname
       */
      DefaultSshKeyName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#defaultsubnet
       */
      DefaultSubnetId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-ecsclusterarn
       */
      EcsClusterArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-elasticips
       */
      ElasticIps?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-hostnametheme
       */
      HostnameTheme?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-rdsdbinstances
       */
      RdsDbInstances?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-servicerolearn
       */
      ServiceRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-sourcestackid
       */
      SourceStackId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#usecustcookbooks
       */
      UseCustomCookbooks?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-useopsworkssecuritygroups
       */
      UseOpsworksSecurityGroups?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html#cfn-opsworks-stack-vpcid
       */
      VpcId?: string;
    }
    
    
    interface Stack extends Resource<"AWS::OpsWorks::Stack">, StackProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Stack(id: string, props: StackProps): Promise<Stack>;
  }
  namespace OpsWorks {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-userprofile.html
     */
    interface UserProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-userprofile.html#cfn-opsworks-userprofile-allowselfmanagement
       */
      AllowSelfManagement?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-userprofile.html#cfn-opsworks-userprofile-iamuserarn
       */
      IamUserArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-userprofile.html#cfn-opsworks-userprofile-sshpublickey
       */
      SshPublicKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-userprofile.html#cfn-opsworks-userprofile-sshusername
       */
      SshUsername?: string;
    }
    
    
    interface UserProfile extends Resource<"AWS::OpsWorks::UserProfile">, UserProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserProfile(id: string, props: UserProfileProps): Promise<UserProfile>;
  }
  namespace OpsWorks {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-volume.html
     */
    interface VolumeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-volume.html#cfn-opsworks-volume-ec2volumeid
       */
      Ec2VolumeId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-volume.html#cfn-opsworks-volume-mountpoint
       */
      MountPoint?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-volume.html#cfn-opsworks-volume-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-volume.html#cfn-opsworks-volume-stackid
       */
      StackId: string;
    }
    
    
    interface Volume extends Resource<"AWS::OpsWorks::Volume">, VolumeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Volume(id: string, props: VolumeProps): Promise<Volume>;
  }
  namespace OpsWorksCM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html
     */
    interface ServerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-keypair
       */
      KeyPair?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-servicerolearn
       */
      ServiceRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-disableautomatedbackup
       */
      DisableAutomatedBackup?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-backupid
       */
      BackupId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-enginemodel
       */
      EngineModel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-associatepublicipaddress
       */
      AssociatePublicIpAddress?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-instanceprofilearn
       */
      InstanceProfileArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-customcertificate
       */
      CustomCertificate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-preferredbackupwindow
       */
      PreferredBackupWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-subnetids
       */
      SubnetIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-customdomain
       */
      CustomDomain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-customprivatekey
       */
      CustomPrivateKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-engineattributes
       */
      EngineAttributes?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-backupretentioncount
       */
      BackupRetentionCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-instancetype
       */
      InstanceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworkscm-server.html#cfn-opsworkscm-server-engine
       */
      Engine?: string;
    }
    
    
    interface Server extends Resource<"AWS::OpsWorksCM::Server">, ServerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Server(id: string, props: ServerProps): Promise<Server>;
  }
  namespace Organizations {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-account.html
     */
    interface AccountProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-account.html#cfn-organizations-account-rolename
       */
      RoleName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-account.html#cfn-organizations-account-email
       */
      Email: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-account.html#cfn-organizations-account-parentids
       */
      ParentIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-account.html#cfn-organizations-account-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-account.html#cfn-organizations-account-accountname
       */
      AccountName: string;
    }
    
    
    interface Account extends Resource<"AWS::Organizations::Account">, AccountProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Account(id: string, props: AccountProps): Promise<Account>;
  }
  namespace Organizations {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-organization.html
     */
    interface OrganizationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-organization.html#cfn-organizations-organization-featureset
       */
      FeatureSet?: string;
    }
    
    
    interface Organization extends Resource<"AWS::Organizations::Organization">, OrganizationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Organization(id: string, props: OrganizationProps): Promise<Organization>;
  }
  namespace Organizations {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-organizationalunit.html
     */
    interface OrganizationalUnitProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-organizationalunit.html#cfn-organizations-organizationalunit-parentid
       */
      ParentId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-organizationalunit.html#cfn-organizations-organizationalunit-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-organizationalunit.html#cfn-organizations-organizationalunit-name
       */
      Name: string;
    }
    
    
    interface OrganizationalUnit extends Resource<"AWS::Organizations::OrganizationalUnit">, OrganizationalUnitProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function OrganizationalUnit(id: string, props: OrganizationalUnitProps): Promise<OrganizationalUnit>;
  }
  namespace Organizations {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-policy.html
     */
    interface PolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-policy.html#cfn-organizations-policy-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-policy.html#cfn-organizations-policy-targetids
       */
      TargetIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-policy.html#cfn-organizations-policy-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-policy.html#cfn-organizations-policy-content
       */
      Content: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-policy.html#cfn-organizations-policy-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-policy.html#cfn-organizations-policy-name
       */
      Name: string;
    }
    
    
    interface Policy extends Resource<"AWS::Organizations::Policy">, PolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Policy(id: string, props: PolicyProps): Promise<Policy>;
  }
  namespace Organizations {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-resourcepolicy.html
     */
    interface ResourcePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-resourcepolicy.html#cfn-organizations-resourcepolicy-content
       */
      Content: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-resourcepolicy.html#cfn-organizations-resourcepolicy-tags
       */
      Tags?: {}[];
    }
    
    
    interface ResourcePolicy extends Resource<"AWS::Organizations::ResourcePolicy">, ResourcePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourcePolicy(id: string, props: ResourcePolicyProps): Promise<ResourcePolicy>;
  }
  namespace PCAConnectorAD {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-connector.html
     */
    interface ConnectorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-connector.html#cfn-pcaconnectorad-connector-certificateauthorityarn
       */
      CertificateAuthorityArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-connector.html#cfn-pcaconnectorad-connector-directoryid
       */
      DirectoryId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-connector.html#cfn-pcaconnectorad-connector-vpcinformation
       */
      VpcInformation: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-connector.html#cfn-pcaconnectorad-connector-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Connector extends Resource<"AWS::PCAConnectorAD::Connector">, ConnectorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Connector(id: string, props: ConnectorProps): Promise<Connector>;
  }
  namespace PCAConnectorAD {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-directoryregistration.html
     */
    interface DirectoryRegistrationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-directoryregistration.html#cfn-pcaconnectorad-directoryregistration-directoryid
       */
      DirectoryId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-directoryregistration.html#cfn-pcaconnectorad-directoryregistration-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface DirectoryRegistration extends Resource<"AWS::PCAConnectorAD::DirectoryRegistration">, DirectoryRegistrationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DirectoryRegistration(id: string, props: DirectoryRegistrationProps): Promise<DirectoryRegistration>;
  }
  namespace PCAConnectorAD {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-serviceprincipalname.html
     */
    interface ServicePrincipalNameProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-serviceprincipalname.html#cfn-pcaconnectorad-serviceprincipalname-connectorarn
       */
      ConnectorArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-serviceprincipalname.html#cfn-pcaconnectorad-serviceprincipalname-directoryregistrationarn
       */
      DirectoryRegistrationArn?: string;
    }
    
    
    interface ServicePrincipalName extends Resource<"AWS::PCAConnectorAD::ServicePrincipalName">, ServicePrincipalNameProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ServicePrincipalName(id: string, props: ServicePrincipalNameProps): Promise<ServicePrincipalName>;
  }
  namespace PCAConnectorAD {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-template.html
     */
    interface TemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-template.html#cfn-pcaconnectorad-template-connectorarn
       */
      ConnectorArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-template.html#cfn-pcaconnectorad-template-definition
       */
      Definition: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-template.html#cfn-pcaconnectorad-template-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-template.html#cfn-pcaconnectorad-template-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-template.html#cfn-pcaconnectorad-template-reenrollallcertificateholders
       */
      ReenrollAllCertificateHolders?: boolean;
    }
    
    
    interface Template extends Resource<"AWS::PCAConnectorAD::Template">, TemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Template(id: string, props: TemplateProps): Promise<Template>;
  }
  namespace PCAConnectorAD {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-templategroupaccesscontrolentry.html
     */
    interface TemplateGroupAccessControlEntryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-templategroupaccesscontrolentry.html#cfn-pcaconnectorad-templategroupaccesscontrolentry-accessrights
       */
      AccessRights: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-templategroupaccesscontrolentry.html#cfn-pcaconnectorad-templategroupaccesscontrolentry-templatearn
       */
      TemplateArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-templategroupaccesscontrolentry.html#cfn-pcaconnectorad-templategroupaccesscontrolentry-groupdisplayname
       */
      GroupDisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorad-templategroupaccesscontrolentry.html#cfn-pcaconnectorad-templategroupaccesscontrolentry-groupsecurityidentifier
       */
      GroupSecurityIdentifier?: string;
    }
    
    
    interface TemplateGroupAccessControlEntry extends Resource<"AWS::PCAConnectorAD::TemplateGroupAccessControlEntry">, TemplateGroupAccessControlEntryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TemplateGroupAccessControlEntry(id: string, props: TemplateGroupAccessControlEntryProps): Promise<TemplateGroupAccessControlEntry>;
  }
  namespace PCAConnectorSCEP {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorscep-challenge.html
     */
    interface ChallengeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorscep-challenge.html#cfn-pcaconnectorscep-challenge-connectorarn
       */
      ConnectorArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorscep-challenge.html#cfn-pcaconnectorscep-challenge-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Challenge extends Resource<"AWS::PCAConnectorSCEP::Challenge">, ChallengeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Challenge(id: string, props: ChallengeProps): Promise<Challenge>;
  }
  namespace PCAConnectorSCEP {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorscep-connector.html
     */
    interface ConnectorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorscep-connector.html#cfn-pcaconnectorscep-connector-certificateauthorityarn
       */
      CertificateAuthorityArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorscep-connector.html#cfn-pcaconnectorscep-connector-mobiledevicemanagement
       */
      MobileDeviceManagement?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorscep-connector.html#cfn-pcaconnectorscep-connector-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Connector extends Resource<"AWS::PCAConnectorSCEP::Connector">, ConnectorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Connector(id: string, props: ConnectorProps): Promise<Connector>;
  }
  namespace PCS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-cluster.html
     */
    interface ClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-cluster.html#cfn-pcs-cluster-networking
       */
      Networking: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-cluster.html#cfn-pcs-cluster-scheduler
       */
      Scheduler: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-cluster.html#cfn-pcs-cluster-size
       */
      Size: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-cluster.html#cfn-pcs-cluster-slurmconfiguration
       */
      SlurmConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-cluster.html#cfn-pcs-cluster-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-cluster.html#cfn-pcs-cluster-name
       */
      Name?: string;
    }
    
    
    interface Cluster extends Resource<"AWS::PCS::Cluster">, ClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Cluster(id: string, props: ClusterProps): Promise<Cluster>;
  }
  namespace PCS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-computenodegroup.html
     */
    interface ComputeNodeGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-computenodegroup.html#cfn-pcs-computenodegroup-clusterid
       */
      ClusterId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-computenodegroup.html#cfn-pcs-computenodegroup-spotoptions
       */
      SpotOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-computenodegroup.html#cfn-pcs-computenodegroup-slurmconfiguration
       */
      SlurmConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-computenodegroup.html#cfn-pcs-computenodegroup-scalingconfiguration
       */
      ScalingConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-computenodegroup.html#cfn-pcs-computenodegroup-instanceconfigs
       */
      InstanceConfigs: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-computenodegroup.html#cfn-pcs-computenodegroup-purchaseoption
       */
      PurchaseOption?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-computenodegroup.html#cfn-pcs-computenodegroup-customlaunchtemplate
       */
      CustomLaunchTemplate: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-computenodegroup.html#cfn-pcs-computenodegroup-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-computenodegroup.html#cfn-pcs-computenodegroup-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-computenodegroup.html#cfn-pcs-computenodegroup-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-computenodegroup.html#cfn-pcs-computenodegroup-amiid
       */
      AmiId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-computenodegroup.html#cfn-pcs-computenodegroup-iaminstanceprofilearn
       */
      IamInstanceProfileArn: string;
    }
    
    
    interface ComputeNodeGroup extends Resource<"AWS::PCS::ComputeNodeGroup">, ComputeNodeGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ComputeNodeGroup(id: string, props: ComputeNodeGroupProps): Promise<ComputeNodeGroup>;
  }
  namespace PCS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-queue.html
     */
    interface QueueProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-queue.html#cfn-pcs-queue-clusterid
       */
      ClusterId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-queue.html#cfn-pcs-queue-computenodegroupconfigurations
       */
      ComputeNodeGroupConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-queue.html#cfn-pcs-queue-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcs-queue.html#cfn-pcs-queue-name
       */
      Name?: string;
    }
    
    
    interface Queue extends Resource<"AWS::PCS::Queue">, QueueProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Queue(id: string, props: QueueProps): Promise<Queue>;
  }
  namespace Panorama {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html
     */
    interface ApplicationInstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-defaultruntimecontextdevice
       */
      DefaultRuntimeContextDevice: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-applicationinstanceidtoreplace
       */
      ApplicationInstanceIdToReplace?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-manifestoverridespayload
       */
      ManifestOverridesPayload?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-runtimerolearn
       */
      RuntimeRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-manifestpayload
       */
      ManifestPayload: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-name
       */
      Name?: string;
    }
    
    
    interface ApplicationInstance extends Resource<"AWS::Panorama::ApplicationInstance">, ApplicationInstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApplicationInstance(id: string, props: ApplicationInstanceProps): Promise<ApplicationInstance>;
  }
  namespace Panorama {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-package.html
     */
    interface PackageProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-package.html#cfn-panorama-package-packagename
       */
      PackageName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-package.html#cfn-panorama-package-storagelocation
       */
      StorageLocation?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-package.html#cfn-panorama-package-tags
       */
      Tags?: {}[];
    }
    
    
    interface Package extends Resource<"AWS::Panorama::Package">, PackageProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Package(id: string, props: PackageProps): Promise<Package>;
  }
  namespace Panorama {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html
     */
    interface PackageVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-updatedlatestpatchversion
       */
      UpdatedLatestPatchVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-patchversion
       */
      PatchVersion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-marklatest
       */
      MarkLatest?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-packageid
       */
      PackageId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-owneraccount
       */
      OwnerAccount?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-packageversion.html#cfn-panorama-packageversion-packageversion
       */
      PackageVersion: string;
    }
    
    
    interface PackageVersion extends Resource<"AWS::Panorama::PackageVersion">, PackageVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PackageVersion(id: string, props: PackageVersionProps): Promise<PackageVersion>;
  }
  namespace PaymentCryptography {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-alias.html
     */
    interface AliasProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-alias.html#cfn-paymentcryptography-alias-aliasname
       */
      AliasName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-alias.html#cfn-paymentcryptography-alias-keyarn
       */
      KeyArn?: string;
    }
    
    
    interface Alias extends Resource<"AWS::PaymentCryptography::Alias">, AliasProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Alias(id: string, props: AliasProps): Promise<Alias>;
  }
  namespace PaymentCryptography {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-key.html
     */
    interface KeyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-key.html#cfn-paymentcryptography-key-derivekeyusage
       */
      DeriveKeyUsage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-key.html#cfn-paymentcryptography-key-exportable
       */
      Exportable: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-key.html#cfn-paymentcryptography-key-keyattributes
       */
      KeyAttributes: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-key.html#cfn-paymentcryptography-key-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-key.html#cfn-paymentcryptography-key-keycheckvaluealgorithm
       */
      KeyCheckValueAlgorithm?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-key.html#cfn-paymentcryptography-key-tags
       */
      Tags?: {}[];
    }
    
    
    interface Key extends Resource<"AWS::PaymentCryptography::Key">, KeyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Key(id: string, props: KeyProps): Promise<Key>;
  }
  namespace Personalize {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-dataset.html
     */
    interface DatasetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-dataset.html#cfn-personalize-dataset-datasetgrouparn
       */
      DatasetGroupArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-dataset.html#cfn-personalize-dataset-datasettype
       */
      DatasetType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-dataset.html#cfn-personalize-dataset-datasetimportjob
       */
      DatasetImportJob?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-dataset.html#cfn-personalize-dataset-schemaarn
       */
      SchemaArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-dataset.html#cfn-personalize-dataset-name
       */
      Name: string;
    }
    
    
    interface Dataset extends Resource<"AWS::Personalize::Dataset">, DatasetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Dataset(id: string, props: DatasetProps): Promise<Dataset>;
  }
  namespace Personalize {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-datasetgroup.html
     */
    interface DatasetGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-datasetgroup.html#cfn-personalize-datasetgroup-kmskeyarn
       */
      KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-datasetgroup.html#cfn-personalize-datasetgroup-domain
       */
      Domain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-datasetgroup.html#cfn-personalize-datasetgroup-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-datasetgroup.html#cfn-personalize-datasetgroup-name
       */
      Name: string;
    }
    
    
    interface DatasetGroup extends Resource<"AWS::Personalize::DatasetGroup">, DatasetGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DatasetGroup(id: string, props: DatasetGroupProps): Promise<DatasetGroup>;
  }
  namespace Personalize {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-schema.html
     */
    interface SchemaProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-schema.html#cfn-personalize-schema-schema
       */
      Schema: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-schema.html#cfn-personalize-schema-domain
       */
      Domain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-schema.html#cfn-personalize-schema-name
       */
      Name: string;
    }
    
    
    interface Schema extends Resource<"AWS::Personalize::Schema">, SchemaProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Schema(id: string, props: SchemaProps): Promise<Schema>;
  }
  namespace Personalize {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html
     */
    interface SolutionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html#cfn-personalize-solution-performautoml
       */
      PerformAutoML?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html#cfn-personalize-solution-performhpo
       */
      PerformHPO?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html#cfn-personalize-solution-eventtype
       */
      EventType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html#cfn-personalize-solution-datasetgrouparn
       */
      DatasetGroupArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html#cfn-personalize-solution-solutionconfig
       */
      SolutionConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html#cfn-personalize-solution-recipearn
       */
      RecipeArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html#cfn-personalize-solution-name
       */
      Name: string;
    }
    
    
    interface Solution extends Resource<"AWS::Personalize::Solution">, SolutionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Solution(id: string, props: SolutionProps): Promise<Solution>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-admchannel.html
     */
    interface ADMChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-admchannel.html#cfn-pinpoint-admchannel-clientsecret
       */
      ClientSecret: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-admchannel.html#cfn-pinpoint-admchannel-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-admchannel.html#cfn-pinpoint-admchannel-clientid
       */
      ClientId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-admchannel.html#cfn-pinpoint-admchannel-applicationid
       */
      ApplicationId: string;
    }
    
    
    interface ADMChannel extends Resource<"AWS::Pinpoint::ADMChannel">, ADMChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ADMChannel(id: string, props: ADMChannelProps): Promise<ADMChannel>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnschannel.html
     */
    interface APNSChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnschannel.html#cfn-pinpoint-apnschannel-bundleid
       */
      BundleId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnschannel.html#cfn-pinpoint-apnschannel-privatekey
       */
      PrivateKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnschannel.html#cfn-pinpoint-apnschannel-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnschannel.html#cfn-pinpoint-apnschannel-defaultauthenticationmethod
       */
      DefaultAuthenticationMethod?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnschannel.html#cfn-pinpoint-apnschannel-tokenkey
       */
      TokenKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnschannel.html#cfn-pinpoint-apnschannel-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnschannel.html#cfn-pinpoint-apnschannel-teamid
       */
      TeamId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnschannel.html#cfn-pinpoint-apnschannel-certificate
       */
      Certificate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnschannel.html#cfn-pinpoint-apnschannel-tokenkeyid
       */
      TokenKeyId?: string;
    }
    
    
    interface APNSChannel extends Resource<"AWS::Pinpoint::APNSChannel">, APNSChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function APNSChannel(id: string, props: APNSChannelProps): Promise<APNSChannel>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnssandboxchannel.html
     */
    interface APNSSandboxChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnssandboxchannel.html#cfn-pinpoint-apnssandboxchannel-bundleid
       */
      BundleId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnssandboxchannel.html#cfn-pinpoint-apnssandboxchannel-privatekey
       */
      PrivateKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnssandboxchannel.html#cfn-pinpoint-apnssandboxchannel-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnssandboxchannel.html#cfn-pinpoint-apnssandboxchannel-defaultauthenticationmethod
       */
      DefaultAuthenticationMethod?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnssandboxchannel.html#cfn-pinpoint-apnssandboxchannel-tokenkey
       */
      TokenKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnssandboxchannel.html#cfn-pinpoint-apnssandboxchannel-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnssandboxchannel.html#cfn-pinpoint-apnssandboxchannel-teamid
       */
      TeamId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnssandboxchannel.html#cfn-pinpoint-apnssandboxchannel-certificate
       */
      Certificate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnssandboxchannel.html#cfn-pinpoint-apnssandboxchannel-tokenkeyid
       */
      TokenKeyId?: string;
    }
    
    
    interface APNSSandboxChannel extends Resource<"AWS::Pinpoint::APNSSandboxChannel">, APNSSandboxChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function APNSSandboxChannel(id: string, props: APNSSandboxChannelProps): Promise<APNSSandboxChannel>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipchannel.html
     */
    interface APNSVoipChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipchannel.html#cfn-pinpoint-apnsvoipchannel-bundleid
       */
      BundleId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipchannel.html#cfn-pinpoint-apnsvoipchannel-privatekey
       */
      PrivateKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipchannel.html#cfn-pinpoint-apnsvoipchannel-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipchannel.html#cfn-pinpoint-apnsvoipchannel-defaultauthenticationmethod
       */
      DefaultAuthenticationMethod?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipchannel.html#cfn-pinpoint-apnsvoipchannel-tokenkey
       */
      TokenKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipchannel.html#cfn-pinpoint-apnsvoipchannel-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipchannel.html#cfn-pinpoint-apnsvoipchannel-teamid
       */
      TeamId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipchannel.html#cfn-pinpoint-apnsvoipchannel-certificate
       */
      Certificate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipchannel.html#cfn-pinpoint-apnsvoipchannel-tokenkeyid
       */
      TokenKeyId?: string;
    }
    
    
    interface APNSVoipChannel extends Resource<"AWS::Pinpoint::APNSVoipChannel">, APNSVoipChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function APNSVoipChannel(id: string, props: APNSVoipChannelProps): Promise<APNSVoipChannel>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipsandboxchannel.html
     */
    interface APNSVoipSandboxChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipsandboxchannel.html#cfn-pinpoint-apnsvoipsandboxchannel-bundleid
       */
      BundleId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipsandboxchannel.html#cfn-pinpoint-apnsvoipsandboxchannel-privatekey
       */
      PrivateKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipsandboxchannel.html#cfn-pinpoint-apnsvoipsandboxchannel-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipsandboxchannel.html#cfn-pinpoint-apnsvoipsandboxchannel-defaultauthenticationmethod
       */
      DefaultAuthenticationMethod?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipsandboxchannel.html#cfn-pinpoint-apnsvoipsandboxchannel-tokenkey
       */
      TokenKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipsandboxchannel.html#cfn-pinpoint-apnsvoipsandboxchannel-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipsandboxchannel.html#cfn-pinpoint-apnsvoipsandboxchannel-teamid
       */
      TeamId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipsandboxchannel.html#cfn-pinpoint-apnsvoipsandboxchannel-certificate
       */
      Certificate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-apnsvoipsandboxchannel.html#cfn-pinpoint-apnsvoipsandboxchannel-tokenkeyid
       */
      TokenKeyId?: string;
    }
    
    
    interface APNSVoipSandboxChannel extends Resource<"AWS::Pinpoint::APNSVoipSandboxChannel">, APNSVoipSandboxChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function APNSVoipSandboxChannel(id: string, props: APNSVoipSandboxChannelProps): Promise<APNSVoipSandboxChannel>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-app.html
     */
    interface AppProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-app.html#cfn-pinpoint-app-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-app.html#cfn-pinpoint-app-name
       */
      Name: string;
    }
    
    
    interface App extends Resource<"AWS::Pinpoint::App">, AppProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function App(id: string, props: AppProps): Promise<App>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html
     */
    interface ApplicationSettingsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-quiettime
       */
      QuietTime?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-limits
       */
      Limits?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-campaignhook
       */
      CampaignHook?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-cloudwatchmetricsenabled
       */
      CloudWatchMetricsEnabled?: boolean;
    }
    
    
    interface ApplicationSettings extends Resource<"AWS::Pinpoint::ApplicationSettings">, ApplicationSettingsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApplicationSettings(id: string, props: ApplicationSettingsProps): Promise<ApplicationSettings>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-baiduchannel.html
     */
    interface BaiduChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-baiduchannel.html#cfn-pinpoint-baiduchannel-secretkey
       */
      SecretKey: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-baiduchannel.html#cfn-pinpoint-baiduchannel-apikey
       */
      ApiKey: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-baiduchannel.html#cfn-pinpoint-baiduchannel-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-baiduchannel.html#cfn-pinpoint-baiduchannel-applicationid
       */
      ApplicationId: string;
    }
    
    
    interface BaiduChannel extends Resource<"AWS::Pinpoint::BaiduChannel">, BaiduChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BaiduChannel(id: string, props: BaiduChannelProps): Promise<BaiduChannel>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html
     */
    interface CampaignProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-segmentid
       */
      SegmentId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-priority
       */
      Priority?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-templateconfiguration
       */
      TemplateConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-ispaused
       */
      IsPaused?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-additionaltreatments
       */
      AdditionalTreatments?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-segmentversion
       */
      SegmentVersion?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-treatmentdescription
       */
      TreatmentDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-messageconfiguration
       */
      MessageConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-limits
       */
      Limits?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-holdoutpercent
       */
      HoldoutPercent?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-schedule
       */
      Schedule: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-customdeliveryconfiguration
       */
      CustomDeliveryConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-campaignhook
       */
      CampaignHook?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-campaign.html#cfn-pinpoint-campaign-treatmentname
       */
      TreatmentName?: string;
    }
    
    
    interface Campaign extends Resource<"AWS::Pinpoint::Campaign">, CampaignProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Campaign(id: string, props: CampaignProps): Promise<Campaign>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailchannel.html
     */
    interface EmailChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailchannel.html#cfn-pinpoint-emailchannel-configurationset
       */
      ConfigurationSet?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailchannel.html#cfn-pinpoint-emailchannel-fromaddress
       */
      FromAddress: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailchannel.html#cfn-pinpoint-emailchannel-orchestrationsendingrolearn
       */
      OrchestrationSendingRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailchannel.html#cfn-pinpoint-emailchannel-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailchannel.html#cfn-pinpoint-emailchannel-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailchannel.html#cfn-pinpoint-emailchannel-identity
       */
      Identity: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailchannel.html#cfn-pinpoint-emailchannel-rolearn
       */
      RoleArn?: string;
    }
    
    
    interface EmailChannel extends Resource<"AWS::Pinpoint::EmailChannel">, EmailChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EmailChannel(id: string, props: EmailChannelProps): Promise<EmailChannel>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailtemplate.html
     */
    interface EmailTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailtemplate.html#cfn-pinpoint-emailtemplate-htmlpart
       */
      HtmlPart?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailtemplate.html#cfn-pinpoint-emailtemplate-textpart
       */
      TextPart?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailtemplate.html#cfn-pinpoint-emailtemplate-templatename
       */
      TemplateName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailtemplate.html#cfn-pinpoint-emailtemplate-templatedescription
       */
      TemplateDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailtemplate.html#cfn-pinpoint-emailtemplate-defaultsubstitutions
       */
      DefaultSubstitutions?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailtemplate.html#cfn-pinpoint-emailtemplate-subject
       */
      Subject: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-emailtemplate.html#cfn-pinpoint-emailtemplate-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface EmailTemplate extends Resource<"AWS::Pinpoint::EmailTemplate">, EmailTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EmailTemplate(id: string, props: EmailTemplateProps): Promise<EmailTemplate>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-eventstream.html
     */
    interface EventStreamProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-eventstream.html#cfn-pinpoint-eventstream-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-eventstream.html#cfn-pinpoint-eventstream-destinationstreamarn
       */
      DestinationStreamArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-eventstream.html#cfn-pinpoint-eventstream-rolearn
       */
      RoleArn: string;
    }
    
    
    interface EventStream extends Resource<"AWS::Pinpoint::EventStream">, EventStreamProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventStream(id: string, props: EventStreamProps): Promise<EventStream>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-gcmchannel.html
     */
    interface GCMChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-gcmchannel.html#cfn-pinpoint-gcmchannel-apikey
       */
      ApiKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-gcmchannel.html#cfn-pinpoint-gcmchannel-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-gcmchannel.html#cfn-pinpoint-gcmchannel-servicejson
       */
      ServiceJson?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-gcmchannel.html#cfn-pinpoint-gcmchannel-defaultauthenticationmethod
       */
      DefaultAuthenticationMethod?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-gcmchannel.html#cfn-pinpoint-gcmchannel-applicationid
       */
      ApplicationId: string;
    }
    
    
    interface GCMChannel extends Resource<"AWS::Pinpoint::GCMChannel">, GCMChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GCMChannel(id: string, props: GCMChannelProps): Promise<GCMChannel>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html
     */
    interface InAppTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html#cfn-pinpoint-inapptemplate-customconfig
       */
      CustomConfig?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html#cfn-pinpoint-inapptemplate-layout
       */
      Layout?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html#cfn-pinpoint-inapptemplate-content
       */
      Content?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html#cfn-pinpoint-inapptemplate-templatename
       */
      TemplateName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html#cfn-pinpoint-inapptemplate-templatedescription
       */
      TemplateDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html#cfn-pinpoint-inapptemplate-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface InAppTemplate extends Resource<"AWS::Pinpoint::InAppTemplate">, InAppTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InAppTemplate(id: string, props: InAppTemplateProps): Promise<InAppTemplate>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-pushtemplate.html
     */
    interface PushTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-pushtemplate.html#cfn-pinpoint-pushtemplate-gcm
       */
      GCM?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-pushtemplate.html#cfn-pinpoint-pushtemplate-baidu
       */
      Baidu?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-pushtemplate.html#cfn-pinpoint-pushtemplate-templatename
       */
      TemplateName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-pushtemplate.html#cfn-pinpoint-pushtemplate-adm
       */
      ADM?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-pushtemplate.html#cfn-pinpoint-pushtemplate-apns
       */
      APNS?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-pushtemplate.html#cfn-pinpoint-pushtemplate-templatedescription
       */
      TemplateDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-pushtemplate.html#cfn-pinpoint-pushtemplate-defaultsubstitutions
       */
      DefaultSubstitutions?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-pushtemplate.html#cfn-pinpoint-pushtemplate-default
       */
      Default?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-pushtemplate.html#cfn-pinpoint-pushtemplate-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface PushTemplate extends Resource<"AWS::Pinpoint::PushTemplate">, PushTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PushTemplate(id: string, props: PushTemplateProps): Promise<PushTemplate>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smschannel.html
     */
    interface SMSChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smschannel.html#cfn-pinpoint-smschannel-shortcode
       */
      ShortCode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smschannel.html#cfn-pinpoint-smschannel-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smschannel.html#cfn-pinpoint-smschannel-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smschannel.html#cfn-pinpoint-smschannel-senderid
       */
      SenderId?: string;
    }
    
    
    interface SMSChannel extends Resource<"AWS::Pinpoint::SMSChannel">, SMSChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SMSChannel(id: string, props: SMSChannelProps): Promise<SMSChannel>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html
     */
    interface SegmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html#cfn-pinpoint-segment-segmentgroups
       */
      SegmentGroups?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html#cfn-pinpoint-segment-dimensions
       */
      Dimensions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html#cfn-pinpoint-segment-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html#cfn-pinpoint-segment-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html#cfn-pinpoint-segment-name
       */
      Name: string;
    }
    
    
    interface Segment extends Resource<"AWS::Pinpoint::Segment">, SegmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Segment(id: string, props: SegmentProps): Promise<Segment>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smstemplate.html
     */
    interface SmsTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smstemplate.html#cfn-pinpoint-smstemplate-templatename
       */
      TemplateName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smstemplate.html#cfn-pinpoint-smstemplate-templatedescription
       */
      TemplateDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smstemplate.html#cfn-pinpoint-smstemplate-defaultsubstitutions
       */
      DefaultSubstitutions?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smstemplate.html#cfn-pinpoint-smstemplate-body
       */
      Body: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-smstemplate.html#cfn-pinpoint-smstemplate-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface SmsTemplate extends Resource<"AWS::Pinpoint::SmsTemplate">, SmsTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SmsTemplate(id: string, props: SmsTemplateProps): Promise<SmsTemplate>;
  }
  namespace Pinpoint {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-voicechannel.html
     */
    interface VoiceChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-voicechannel.html#cfn-pinpoint-voicechannel-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-voicechannel.html#cfn-pinpoint-voicechannel-applicationid
       */
      ApplicationId: string;
    }
    
    
    interface VoiceChannel extends Resource<"AWS::Pinpoint::VoiceChannel">, VoiceChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VoiceChannel(id: string, props: VoiceChannelProps): Promise<VoiceChannel>;
  }
  namespace PinpointEmail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationset.html
     */
    interface ConfigurationSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationset.html#cfn-pinpointemail-configurationset-sendingoptions
       */
      SendingOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationset.html#cfn-pinpointemail-configurationset-trackingoptions
       */
      TrackingOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationset.html#cfn-pinpointemail-configurationset-reputationoptions
       */
      ReputationOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationset.html#cfn-pinpointemail-configurationset-deliveryoptions
       */
      DeliveryOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationset.html#cfn-pinpointemail-configurationset-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationset.html#cfn-pinpointemail-configurationset-name
       */
      Name: string;
    }
    
    
    interface ConfigurationSet extends Resource<"AWS::PinpointEmail::ConfigurationSet">, ConfigurationSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConfigurationSet(id: string, props: ConfigurationSetProps): Promise<ConfigurationSet>;
  }
  namespace PinpointEmail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationseteventdestination.html
     */
    interface ConfigurationSetEventDestinationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationseteventdestination.html#cfn-pinpointemail-configurationseteventdestination-eventdestinationname
       */
      EventDestinationName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationseteventdestination.html#cfn-pinpointemail-configurationseteventdestination-configurationsetname
       */
      ConfigurationSetName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-configurationseteventdestination.html#cfn-pinpointemail-configurationseteventdestination-eventdestination
       */
      EventDestination?: {};
    }
    
    
    interface ConfigurationSetEventDestination extends Resource<"AWS::PinpointEmail::ConfigurationSetEventDestination">, ConfigurationSetEventDestinationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConfigurationSetEventDestination(id: string, props: ConfigurationSetEventDestinationProps): Promise<ConfigurationSetEventDestination>;
  }
  namespace PinpointEmail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-dedicatedippool.html
     */
    interface DedicatedIpPoolProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-dedicatedippool.html#cfn-pinpointemail-dedicatedippool-poolname
       */
      PoolName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-dedicatedippool.html#cfn-pinpointemail-dedicatedippool-tags
       */
      Tags?: {}[];
    }
    
    
    interface DedicatedIpPool extends Resource<"AWS::PinpointEmail::DedicatedIpPool">, DedicatedIpPoolProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DedicatedIpPool(id: string, props: DedicatedIpPoolProps): Promise<DedicatedIpPool>;
  }
  namespace PinpointEmail {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-identity.html
     */
    interface IdentityProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-identity.html#cfn-pinpointemail-identity-feedbackforwardingenabled
       */
      FeedbackForwardingEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-identity.html#cfn-pinpointemail-identity-dkimsigningenabled
       */
      DkimSigningEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-identity.html#cfn-pinpointemail-identity-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-identity.html#cfn-pinpointemail-identity-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpointemail-identity.html#cfn-pinpointemail-identity-mailfromattributes
       */
      MailFromAttributes?: {};
    }
    
    
    interface Identity extends Resource<"AWS::PinpointEmail::Identity">, IdentityProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Identity(id: string, props: IdentityProps): Promise<Identity>;
  }
  namespace Pipes {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html
     */
    interface PipeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html#cfn-pipes-pipe-enrichment
       */
      Enrichment?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html#cfn-pipes-pipe-kmskeyidentifier
       */
      KmsKeyIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html#cfn-pipes-pipe-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html#cfn-pipes-pipe-targetparameters
       */
      TargetParameters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html#cfn-pipes-pipe-logconfiguration
       */
      LogConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html#cfn-pipes-pipe-enrichmentparameters
       */
      EnrichmentParameters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html#cfn-pipes-pipe-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html#cfn-pipes-pipe-source
       */
      Source: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html#cfn-pipes-pipe-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html#cfn-pipes-pipe-target
       */
      Target: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html#cfn-pipes-pipe-desiredstate
       */
      DesiredState?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html#cfn-pipes-pipe-sourceparameters
       */
      SourceParameters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pipes-pipe.html#cfn-pipes-pipe-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Pipe extends Resource<"AWS::Pipes::Pipe">, PipeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Pipe(id: string, props: PipeProps): Promise<Pipe>;
  }
  namespace Proton {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmentaccountconnection.html
     */
    interface EnvironmentAccountConnectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmentaccountconnection.html#cfn-proton-environmentaccountconnection-environmentname
       */
      EnvironmentName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmentaccountconnection.html#cfn-proton-environmentaccountconnection-componentrolearn
       */
      ComponentRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmentaccountconnection.html#cfn-proton-environmentaccountconnection-managementaccountid
       */
      ManagementAccountId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmentaccountconnection.html#cfn-proton-environmentaccountconnection-codebuildrolearn
       */
      CodebuildRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmentaccountconnection.html#cfn-proton-environmentaccountconnection-environmentaccountid
       */
      EnvironmentAccountId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmentaccountconnection.html#cfn-proton-environmentaccountconnection-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmentaccountconnection.html#cfn-proton-environmentaccountconnection-tags
       */
      Tags?: {}[];
    }
    
    
    interface EnvironmentAccountConnection extends Resource<"AWS::Proton::EnvironmentAccountConnection">, EnvironmentAccountConnectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EnvironmentAccountConnection(id: string, props: EnvironmentAccountConnectionProps): Promise<EnvironmentAccountConnection>;
  }
  namespace Proton {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmenttemplate.html
     */
    interface EnvironmentTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmenttemplate.html#cfn-proton-environmenttemplate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmenttemplate.html#cfn-proton-environmenttemplate-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmenttemplate.html#cfn-proton-environmenttemplate-encryptionkey
       */
      EncryptionKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmenttemplate.html#cfn-proton-environmenttemplate-provisioning
       */
      Provisioning?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmenttemplate.html#cfn-proton-environmenttemplate-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-environmenttemplate.html#cfn-proton-environmenttemplate-name
       */
      Name?: string;
    }
    
    
    interface EnvironmentTemplate extends Resource<"AWS::Proton::EnvironmentTemplate">, EnvironmentTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EnvironmentTemplate(id: string, props: EnvironmentTemplateProps): Promise<EnvironmentTemplate>;
  }
  namespace Proton {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-servicetemplate.html
     */
    interface ServiceTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-servicetemplate.html#cfn-proton-servicetemplate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-servicetemplate.html#cfn-proton-servicetemplate-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-servicetemplate.html#cfn-proton-servicetemplate-pipelineprovisioning
       */
      PipelineProvisioning?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-servicetemplate.html#cfn-proton-servicetemplate-encryptionkey
       */
      EncryptionKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-servicetemplate.html#cfn-proton-servicetemplate-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-proton-servicetemplate.html#cfn-proton-servicetemplate-name
       */
      Name?: string;
    }
    
    
    interface ServiceTemplate extends Resource<"AWS::Proton::ServiceTemplate">, ServiceTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ServiceTemplate(id: string, props: ServiceTemplateProps): Promise<ServiceTemplate>;
  }
  namespace QBusiness {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html#cfn-qbusiness-application-identitytype
       */
      IdentityType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html#cfn-qbusiness-application-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html#cfn-qbusiness-application-identitycenterinstancearn
       */
      IdentityCenterInstanceArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html#cfn-qbusiness-application-encryptionconfiguration
       */
      EncryptionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html#cfn-qbusiness-application-iamidentityproviderarn
       */
      IamIdentityProviderArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html#cfn-qbusiness-application-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html#cfn-qbusiness-application-attachmentsconfiguration
       */
      AttachmentsConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html#cfn-qbusiness-application-clientidsforoidc
       */
      ClientIdsForOIDC?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html#cfn-qbusiness-application-quicksightconfiguration
       */
      QuickSightConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html#cfn-qbusiness-application-personalizationconfiguration
       */
      PersonalizationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html#cfn-qbusiness-application-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html#cfn-qbusiness-application-autosubscriptionconfiguration
       */
      AutoSubscriptionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html#cfn-qbusiness-application-qappsconfiguration
       */
      QAppsConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-application.html#cfn-qbusiness-application-tags
       */
      Tags?: {}[];
    }
    
    
    interface Application extends Resource<"AWS::QBusiness::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace QBusiness {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-dataaccessor.html
     */
    interface DataAccessorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-dataaccessor.html#cfn-qbusiness-dataaccessor-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-dataaccessor.html#cfn-qbusiness-dataaccessor-actionconfigurations
       */
      ActionConfigurations: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-dataaccessor.html#cfn-qbusiness-dataaccessor-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-dataaccessor.html#cfn-qbusiness-dataaccessor-principal
       */
      Principal: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-dataaccessor.html#cfn-qbusiness-dataaccessor-tags
       */
      Tags?: {}[];
    }
    
    
    interface DataAccessor extends Resource<"AWS::QBusiness::DataAccessor">, DataAccessorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataAccessor(id: string, props: DataAccessorProps): Promise<DataAccessor>;
  }
  namespace QBusiness {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html
     */
    interface DataSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-indexid
       */
      IndexId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-configuration
       */
      Configuration: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-syncschedule
       */
      SyncSchedule?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-documentenrichmentconfiguration
       */
      DocumentEnrichmentConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-mediaextractionconfiguration
       */
      MediaExtractionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-vpcconfiguration
       */
      VpcConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-tags
       */
      Tags?: {}[];
    }
    
    
    interface DataSource extends Resource<"AWS::QBusiness::DataSource">, DataSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataSource(id: string, props: DataSourceProps): Promise<DataSource>;
  }
  namespace QBusiness {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-index.html
     */
    interface IndexProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-index.html#cfn-qbusiness-index-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-index.html#cfn-qbusiness-index-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-index.html#cfn-qbusiness-index-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-index.html#cfn-qbusiness-index-documentattributeconfigurations
       */
      DocumentAttributeConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-index.html#cfn-qbusiness-index-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-index.html#cfn-qbusiness-index-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-index.html#cfn-qbusiness-index-capacityconfiguration
       */
      CapacityConfiguration?: {};
    }
    
    
    interface Index extends Resource<"AWS::QBusiness::Index">, IndexProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Index(id: string, props: IndexProps): Promise<Index>;
  }
  namespace QBusiness {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-permission.html
     */
    interface PermissionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-permission.html#cfn-qbusiness-permission-actions
       */
      Actions: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-permission.html#cfn-qbusiness-permission-statementid
       */
      StatementId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-permission.html#cfn-qbusiness-permission-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-permission.html#cfn-qbusiness-permission-principal
       */
      Principal: string;
    }
    
    
    interface Permission extends Resource<"AWS::QBusiness::Permission">, PermissionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Permission(id: string, props: PermissionProps): Promise<Permission>;
  }
  namespace QBusiness {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-plugin.html
     */
    interface PluginProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-plugin.html#cfn-qbusiness-plugin-serverurl
       */
      ServerUrl?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-plugin.html#cfn-qbusiness-plugin-custompluginconfiguration
       */
      CustomPluginConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-plugin.html#cfn-qbusiness-plugin-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-plugin.html#cfn-qbusiness-plugin-state
       */
      State?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-plugin.html#cfn-qbusiness-plugin-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-plugin.html#cfn-qbusiness-plugin-authconfiguration
       */
      AuthConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-plugin.html#cfn-qbusiness-plugin-applicationid
       */
      ApplicationId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-plugin.html#cfn-qbusiness-plugin-tags
       */
      Tags?: {}[];
    }
    
    
    interface Plugin extends Resource<"AWS::QBusiness::Plugin">, PluginProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Plugin(id: string, props: PluginProps): Promise<Plugin>;
  }
  namespace QBusiness {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-retriever.html
     */
    interface RetrieverProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-retriever.html#cfn-qbusiness-retriever-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-retriever.html#cfn-qbusiness-retriever-configuration
       */
      Configuration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-retriever.html#cfn-qbusiness-retriever-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-retriever.html#cfn-qbusiness-retriever-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-retriever.html#cfn-qbusiness-retriever-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-retriever.html#cfn-qbusiness-retriever-tags
       */
      Tags?: {}[];
    }
    
    
    interface Retriever extends Resource<"AWS::QBusiness::Retriever">, RetrieverProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Retriever(id: string, props: RetrieverProps): Promise<Retriever>;
  }
  namespace QBusiness {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-webexperience.html
     */
    interface WebExperienceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-webexperience.html#cfn-qbusiness-webexperience-origins
       */
      Origins?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-webexperience.html#cfn-qbusiness-webexperience-subtitle
       */
      Subtitle?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-webexperience.html#cfn-qbusiness-webexperience-customizationconfiguration
       */
      CustomizationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-webexperience.html#cfn-qbusiness-webexperience-samplepromptscontrolmode
       */
      SamplePromptsControlMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-webexperience.html#cfn-qbusiness-webexperience-title
       */
      Title?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-webexperience.html#cfn-qbusiness-webexperience-identityproviderconfiguration
       */
      IdentityProviderConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-webexperience.html#cfn-qbusiness-webexperience-welcomemessage
       */
      WelcomeMessage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-webexperience.html#cfn-qbusiness-webexperience-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-webexperience.html#cfn-qbusiness-webexperience-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-webexperience.html#cfn-qbusiness-webexperience-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-webexperience.html#cfn-qbusiness-webexperience-browserextensionconfiguration
       */
      BrowserExtensionConfiguration?: {};
    }
    
    
    interface WebExperience extends Resource<"AWS::QBusiness::WebExperience">, WebExperienceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WebExperience(id: string, props: WebExperienceProps): Promise<WebExperience>;
  }
  namespace QLDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-ledger.html
     */
    interface LedgerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-ledger.html#cfn-qldb-ledger-permissionsmode
       */
      PermissionsMode: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-ledger.html#cfn-qldb-ledger-deletionprotection
       */
      DeletionProtection?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-ledger.html#cfn-qldb-ledger-kmskey
       */
      KmsKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-ledger.html#cfn-qldb-ledger-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-ledger.html#cfn-qldb-ledger-name
       */
      Name?: string;
    }
    
    
    interface Ledger extends Resource<"AWS::QLDB::Ledger">, LedgerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Ledger(id: string, props: LedgerProps): Promise<Ledger>;
  }
  namespace QLDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-stream.html
     */
    interface StreamProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-stream.html#cfn-qldb-stream-inclusivestarttime
       */
      InclusiveStartTime: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-stream.html#cfn-qldb-stream-streamname
       */
      StreamName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-stream.html#cfn-qldb-stream-kinesisconfiguration
       */
      KinesisConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-stream.html#cfn-qldb-stream-exclusiveendtime
       */
      ExclusiveEndTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-stream.html#cfn-qldb-stream-ledgername
       */
      LedgerName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-stream.html#cfn-qldb-stream-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qldb-stream.html#cfn-qldb-stream-tags
       */
      Tags?: {}[];
    }
    
    
    interface Stream extends Resource<"AWS::QLDB::Stream">, StreamProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Stream(id: string, props: StreamProps): Promise<Stream>;
  }
  namespace QuickSight {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html
     */
    interface AnalysisProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html#cfn-quicksight-analysis-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html#cfn-quicksight-analysis-parameters
       */
      Parameters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html#cfn-quicksight-analysis-sourceentity
       */
      SourceEntity?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html#cfn-quicksight-analysis-themearn
       */
      ThemeArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html#cfn-quicksight-analysis-definition
       */
      Definition?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html#cfn-quicksight-analysis-validationstrategy
       */
      ValidationStrategy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html#cfn-quicksight-analysis-folderarns
       */
      FolderArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html#cfn-quicksight-analysis-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html#cfn-quicksight-analysis-errors
       */
      Errors?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html#cfn-quicksight-analysis-analysisid
       */
      AnalysisId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html#cfn-quicksight-analysis-awsaccountid
       */
      AwsAccountId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html#cfn-quicksight-analysis-permissions
       */
      Permissions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html#cfn-quicksight-analysis-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-analysis.html#cfn-quicksight-analysis-sheets
       */
      Sheets?: {}[];
    }
    
    
    interface Analysis extends Resource<"AWS::QuickSight::Analysis">, AnalysisProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Analysis(id: string, props: AnalysisProps): Promise<Analysis>;
  }
  namespace QuickSight {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-custompermissions.html
     */
    interface CustomPermissionsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-custompermissions.html#cfn-quicksight-custompermissions-custompermissionsname
       */
      CustomPermissionsName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-custompermissions.html#cfn-quicksight-custompermissions-capabilities
       */
      Capabilities?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-custompermissions.html#cfn-quicksight-custompermissions-awsaccountid
       */
      AwsAccountId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-custompermissions.html#cfn-quicksight-custompermissions-tags
       */
      Tags?: {}[];
    }
    
    
    interface CustomPermissions extends Resource<"AWS::QuickSight::CustomPermissions">, CustomPermissionsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CustomPermissions(id: string, props: CustomPermissionsProps): Promise<CustomPermissions>;
  }
  namespace QuickSight {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html
     */
    interface DashboardProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-parameters
       */
      Parameters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-versiondescription
       */
      VersionDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-sourceentity
       */
      SourceEntity?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-themearn
       */
      ThemeArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-definition
       */
      Definition?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-validationstrategy
       */
      ValidationStrategy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-folderarns
       */
      FolderArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-dashboardid
       */
      DashboardId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-linksharingconfiguration
       */
      LinkSharingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-dashboardpublishoptions
       */
      DashboardPublishOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-awsaccountid
       */
      AwsAccountId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-permissions
       */
      Permissions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-linkentities
       */
      LinkEntities?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dashboard.html#cfn-quicksight-dashboard-tags
       */
      Tags?: {}[];
    }
    
    
    interface Dashboard extends Resource<"AWS::QuickSight::Dashboard">, DashboardProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Dashboard(id: string, props: DashboardProps): Promise<Dashboard>;
  }
  namespace QuickSight {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html
     */
    interface DataSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-physicaltablemap
       */
      PhysicalTableMap?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-fieldfolders
       */
      FieldFolders?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-folderarns
       */
      FolderArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-datasetid
       */
      DataSetId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-rowlevelpermissiondataset
       */
      RowLevelPermissionDataSet?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-performanceconfiguration
       */
      PerformanceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-ingestionwaitpolicy
       */
      IngestionWaitPolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-datasetrefreshproperties
       */
      DataSetRefreshProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-rowlevelpermissiontagconfiguration
       */
      RowLevelPermissionTagConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-columnlevelpermissionrules
       */
      ColumnLevelPermissionRules?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-columngroups
       */
      ColumnGroups?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-importmode
       */
      ImportMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-datasetparameters
       */
      DatasetParameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-logicaltablemap
       */
      LogicalTableMap?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-permissions
       */
      Permissions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-awsaccountid
       */
      AwsAccountId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-datasetusageconfiguration
       */
      DataSetUsageConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-useas
       */
      UseAs?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-dataset.html#cfn-quicksight-dataset-tags
       */
      Tags?: {}[];
    }
    
    
    interface DataSet extends Resource<"AWS::QuickSight::DataSet">, DataSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataSet(id: string, props: DataSetProps): Promise<DataSet>;
  }
  namespace QuickSight {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html
     */
    interface DataSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-errorinfo
       */
      ErrorInfo?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-folderarns
       */
      FolderArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-datasourceparameters
       */
      DataSourceParameters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-vpcconnectionproperties
       */
      VpcConnectionProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-alternatedatasourceparameters
       */
      AlternateDataSourceParameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-awsaccountid
       */
      AwsAccountId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-permissions
       */
      Permissions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-sslproperties
       */
      SslProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-credentials
       */
      Credentials?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-datasourceid
       */
      DataSourceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-tags
       */
      Tags?: {}[];
    }
    
    
    interface DataSource extends Resource<"AWS::QuickSight::DataSource">, DataSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataSource(id: string, props: DataSourceProps): Promise<DataSource>;
  }
  namespace QuickSight {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-folder.html
     */
    interface FolderProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-folder.html#cfn-quicksight-folder-sharingmodel
       */
      SharingModel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-folder.html#cfn-quicksight-folder-awsaccountid
       */
      AwsAccountId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-folder.html#cfn-quicksight-folder-permissions
       */
      Permissions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-folder.html#cfn-quicksight-folder-folderid
       */
      FolderId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-folder.html#cfn-quicksight-folder-parentfolderarn
       */
      ParentFolderArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-folder.html#cfn-quicksight-folder-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-folder.html#cfn-quicksight-folder-foldertype
       */
      FolderType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-folder.html#cfn-quicksight-folder-name
       */
      Name?: string;
    }
    
    
    interface Folder extends Resource<"AWS::QuickSight::Folder">, FolderProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Folder(id: string, props: FolderProps): Promise<Folder>;
  }
  namespace QuickSight {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-refreshschedule.html
     */
    interface RefreshScheduleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-refreshschedule.html#cfn-quicksight-refreshschedule-schedule
       */
      Schedule?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-refreshschedule.html#cfn-quicksight-refreshschedule-awsaccountid
       */
      AwsAccountId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-refreshschedule.html#cfn-quicksight-refreshschedule-datasetid
       */
      DataSetId?: string;
    }
    
    
    interface RefreshSchedule extends Resource<"AWS::QuickSight::RefreshSchedule">, RefreshScheduleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RefreshSchedule(id: string, props: RefreshScheduleProps): Promise<RefreshSchedule>;
  }
  namespace QuickSight {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-template.html
     */
    interface TemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-template.html#cfn-quicksight-template-versiondescription
       */
      VersionDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-template.html#cfn-quicksight-template-sourceentity
       */
      SourceEntity?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-template.html#cfn-quicksight-template-definition
       */
      Definition?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-template.html#cfn-quicksight-template-awsaccountid
       */
      AwsAccountId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-template.html#cfn-quicksight-template-permissions
       */
      Permissions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-template.html#cfn-quicksight-template-validationstrategy
       */
      ValidationStrategy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-template.html#cfn-quicksight-template-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-template.html#cfn-quicksight-template-templateid
       */
      TemplateId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-template.html#cfn-quicksight-template-name
       */
      Name?: string;
    }
    
    
    interface Template extends Resource<"AWS::QuickSight::Template">, TemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Template(id: string, props: TemplateProps): Promise<Template>;
  }
  namespace QuickSight {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-theme.html
     */
    interface ThemeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-theme.html#cfn-quicksight-theme-themeid
       */
      ThemeId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-theme.html#cfn-quicksight-theme-versiondescription
       */
      VersionDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-theme.html#cfn-quicksight-theme-configuration
       */
      Configuration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-theme.html#cfn-quicksight-theme-basethemeid
       */
      BaseThemeId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-theme.html#cfn-quicksight-theme-awsaccountid
       */
      AwsAccountId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-theme.html#cfn-quicksight-theme-permissions
       */
      Permissions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-theme.html#cfn-quicksight-theme-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-theme.html#cfn-quicksight-theme-name
       */
      Name: string;
    }
    
    
    interface Theme extends Resource<"AWS::QuickSight::Theme">, ThemeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Theme(id: string, props: ThemeProps): Promise<Theme>;
  }
  namespace QuickSight {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-topic.html
     */
    interface TopicProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-topic.html#cfn-quicksight-topic-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-topic.html#cfn-quicksight-topic-datasets
       */
      DataSets?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-topic.html#cfn-quicksight-topic-awsaccountid
       */
      AwsAccountId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-topic.html#cfn-quicksight-topic-folderarns
       */
      FolderArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-topic.html#cfn-quicksight-topic-topicid
       */
      TopicId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-topic.html#cfn-quicksight-topic-userexperienceversion
       */
      UserExperienceVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-topic.html#cfn-quicksight-topic-configoptions
       */
      ConfigOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-topic.html#cfn-quicksight-topic-name
       */
      Name?: string;
    }
    
    
    interface Topic extends Resource<"AWS::QuickSight::Topic">, TopicProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Topic(id: string, props: TopicProps): Promise<Topic>;
  }
  namespace QuickSight {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html
     */
    interface VPCConnectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-dnsresolvers
       */
      DnsResolvers?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-availabilitystatus
       */
      AvailabilityStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-awsaccountid
       */
      AwsAccountId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-vpcconnectionid
       */
      VPCConnectionId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-subnetids
       */
      SubnetIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-name
       */
      Name?: string;
    }
    
    
    interface VPCConnection extends Resource<"AWS::QuickSight::VPCConnection">, VPCConnectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VPCConnection(id: string, props: VPCConnectionProps): Promise<VPCConnection>;
  }
  namespace RAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-permission.html
     */
    interface PermissionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-permission.html#cfn-ram-permission-resourcetype
       */
      ResourceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-permission.html#cfn-ram-permission-policytemplate
       */
      PolicyTemplate: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-permission.html#cfn-ram-permission-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-permission.html#cfn-ram-permission-name
       */
      Name: string;
    }
    
    
    interface Permission extends Resource<"AWS::RAM::Permission">, PermissionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Permission(id: string, props: PermissionProps): Promise<Permission>;
  }
  namespace RAM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-resourceshare.html
     */
    interface ResourceShareProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-resourceshare.html#cfn-ram-resourceshare-permissionarns
       */
      PermissionArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-resourceshare.html#cfn-ram-resourceshare-principals
       */
      Principals?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-resourceshare.html#cfn-ram-resourceshare-allowexternalprincipals
       */
      AllowExternalPrincipals?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-resourceshare.html#cfn-ram-resourceshare-resourcearns
       */
      ResourceArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-resourceshare.html#cfn-ram-resourceshare-sources
       */
      Sources?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-resourceshare.html#cfn-ram-resourceshare-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ram-resourceshare.html#cfn-ram-resourceshare-name
       */
      Name: string;
    }
    
    
    interface ResourceShare extends Resource<"AWS::RAM::ResourceShare">, ResourceShareProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceShare(id: string, props: ResourceShareProps): Promise<ResourceShare>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-customdbengineversion.html
     */
    interface CustomDBEngineVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-customdbengineversion.html#cfn-rds-customdbengineversion-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-customdbengineversion.html#cfn-rds-customdbengineversion-databaseinstallationfiless3bucketname
       */
      DatabaseInstallationFilesS3BucketName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-customdbengineversion.html#cfn-rds-customdbengineversion-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-customdbengineversion.html#cfn-rds-customdbengineversion-engineversion
       */
      EngineVersion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-customdbengineversion.html#cfn-rds-customdbengineversion-kmskeyid
       */
      KMSKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-customdbengineversion.html#cfn-rds-customdbengineversion-useawsprovidedlatestimage
       */
      UseAwsProvidedLatestImage?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-customdbengineversion.html#cfn-rds-customdbengineversion-imageid
       */
      ImageId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-customdbengineversion.html#cfn-rds-customdbengineversion-databaseinstallationfiless3prefix
       */
      DatabaseInstallationFilesS3Prefix?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-customdbengineversion.html#cfn-rds-customdbengineversion-manifest
       */
      Manifest?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-customdbengineversion.html#cfn-rds-customdbengineversion-sourcecustomdbengineversionidentifier
       */
      SourceCustomDbEngineVersionIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-customdbengineversion.html#cfn-rds-customdbengineversion-engine
       */
      Engine: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-customdbengineversion.html#cfn-rds-customdbengineversion-tags
       */
      Tags?: {}[];
    }
    
    
    interface CustomDBEngineVersion extends Resource<"AWS::RDS::CustomDBEngineVersion">, CustomDBEngineVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CustomDBEngineVersion(id: string, props: CustomDBEngineVersionProps): Promise<CustomDBEngineVersion>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html
     */
    interface DBClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-databaseinsightsmode
       */
      DatabaseInsightsMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-storageencrypted
       */
      StorageEncrypted?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbsystemid
       */
      DBSystemId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-restoretotime
       */
      RestoreToTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enginemode
       */
      EngineMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-port
       */
      Port?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbclusteridentifier
       */
      DBClusterIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-monitoringinterval
       */
      MonitoringInterval?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-replicationsourceidentifier
       */
      ReplicationSourceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engine
       */
      Engine?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-storagetype
       */
      StorageType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration
       */
      ServerlessV2ScalingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-performanceinsightsretentionperiod
       */
      PerformanceInsightsRetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-databasename
       */
      DatabaseName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enablelocalwriteforwarding
       */
      EnableLocalWriteForwarding?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-autominorversionupgrade
       */
      AutoMinorVersionUpgrade?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbsubnetgroupname
       */
      DBSubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-deletionprotection
       */
      DeletionProtection?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-allocatedstorage
       */
      AllocatedStorage?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-masteruserpassword
       */
      MasterUserPassword?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-masterusersecret
       */
      MasterUserSecret?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-sourcedbclusteridentifier
       */
      SourceDBClusterIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-masterusername
       */
      MasterUsername?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-scalingconfiguration
       */
      ScalingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-performanceinsightskmskeyid
       */
      PerformanceInsightsKmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-publiclyaccessible
       */
      PubliclyAccessible?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-domain
       */
      Domain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-backtrackwindow
       */
      BacktrackWindow?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbinstanceparametergroupname
       */
      DBInstanceParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enableglobalwriteforwarding
       */
      EnableGlobalWriteForwarding?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-monitoringrolearn
       */
      MonitoringRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-associatedroles
       */
      AssociatedRoles?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enablehttpendpoint
       */
      EnableHttpEndpoint?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-snapshotidentifier
       */
      SnapshotIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-clusterscalabilitytype
       */
      ClusterScalabilityType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-preferredbackupwindow
       */
      PreferredBackupWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-networktype
       */
      NetworkType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-vpcsecuritygroupids
       */
      VpcSecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-copytagstosnapshot
       */
      CopyTagsToSnapshot?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-globalclusteridentifier
       */
      GlobalClusterIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-restoretype
       */
      RestoreType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-domainiamrolename
       */
      DomainIAMRoleName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enginelifecyclesupport
       */
      EngineLifecycleSupport?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbclusterinstanceclass
       */
      DBClusterInstanceClass?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-availabilityzones
       */
      AvailabilityZones?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-iops
       */
      Iops?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-sourceregion
       */
      SourceRegion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-uselatestrestorabletime
       */
      UseLatestRestorableTime?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-managemasteruserpassword
       */
      ManageMasterUserPassword?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enableiamdatabaseauthentication
       */
      EnableIAMDatabaseAuthentication?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbclusterparametergroupname
       */
      DBClusterParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-performanceinsightsenabled
       */
      PerformanceInsightsEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-backupretentionperiod
       */
      BackupRetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enablecloudwatchlogsexports
       */
      EnableCloudwatchLogsExports?: string[];
    }
    
    
    interface DBCluster extends Resource<"AWS::RDS::DBCluster">, DBClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBCluster(id: string, props: DBClusterProps): Promise<DBCluster>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbclusterparametergroup.html
     */
    interface DBClusterParameterGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbclusterparametergroup.html#cfn-rds-dbclusterparametergroup-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbclusterparametergroup.html#cfn-rds-dbclusterparametergroup-parameters
       */
      Parameters: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbclusterparametergroup.html#cfn-rds-dbclusterparametergroup-family
       */
      Family: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbclusterparametergroup.html#cfn-rds-dbclusterparametergroup-dbclusterparametergroupname
       */
      DBClusterParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbclusterparametergroup.html#cfn-rds-dbclusterparametergroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface DBClusterParameterGroup extends Resource<"AWS::RDS::DBClusterParameterGroup">, DBClusterParameterGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBClusterParameterGroup(id: string, props: DBClusterParameterGroupProps): Promise<DBClusterParameterGroup>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html
     */
    interface DBInstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-databaseinsightsmode
       */
      DatabaseInsightsMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-storageencrypted
       */
      StorageEncrypted?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-timezone
       */
      Timezone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-dbsystemid
       */
      DBSystemId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-port
       */
      Port?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-dbclusteridentifier
       */
      DBClusterIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-storagethroughput
       */
      StorageThroughput?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-automaticbackupreplicationretentionperiod
       */
      AutomaticBackupReplicationRetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-monitoringinterval
       */
      MonitoringInterval?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-dbparametergroupname
       */
      DBParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-automaticbackupreplicationkmskeyid
       */
      AutomaticBackupReplicationKmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-multiaz
       */
      MultiAZ?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-engine
       */
      Engine?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-performanceinsightskmskeyid
       */
      PerformanceInsightsKMSKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-sourcedbinstanceidentifier
       */
      SourceDBInstanceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-storagetype
       */
      StorageType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-dbinstanceclass
       */
      DBInstanceClass?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-deleteautomatedbackups
       */
      DeleteAutomatedBackups?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-performanceinsightsretentionperiod
       */
      PerformanceInsightsRetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-availabilityzone
       */
      AvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-optiongroupname
       */
      OptionGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-enableperformanceinsights
       */
      EnablePerformanceInsights?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-autominorversionupgrade
       */
      AutoMinorVersionUpgrade?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-dbsubnetgroupname
       */
      DBSubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-deletionprotection
       */
      DeletionProtection?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-dbinstanceidentifier
       */
      DBInstanceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-allocatedstorage
       */
      AllocatedStorage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-masteruserpassword
       */
      MasterUserPassword?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-masterusersecret
       */
      MasterUserSecret?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-ncharcharactersetname
       */
      NcharCharacterSetName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-sourcedbclusteridentifier
       */
      SourceDBClusterIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-dbsecuritygroups
       */
      DBSecurityGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-masterusername
       */
      MasterUsername?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-maxallocatedstorage
       */
      MaxAllocatedStorage?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-promotiontier
       */
      PromotionTier?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-publiclyaccessible
       */
      PubliclyAccessible?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-domain
       */
      Domain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-applyimmediately
       */
      ApplyImmediately?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-domainfqdn
       */
      DomainFqdn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-charactersetname
       */
      CharacterSetName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-monitoringrolearn
       */
      MonitoringRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-associatedroles
       */
      AssociatedRoles?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-domainou
       */
      DomainOu?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-dbclustersnapshotidentifier
       */
      DBClusterSnapshotIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-sourcedbinstanceautomatedbackupsarn
       */
      SourceDBInstanceAutomatedBackupsArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-processorfeatures
       */
      ProcessorFeatures?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-preferredbackupwindow
       */
      PreferredBackupWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-restoretime
       */
      RestoreTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-certificaterotationrestart
       */
      CertificateRotationRestart?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-networktype
       */
      NetworkType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-dedicatedlogvolume
       */
      DedicatedLogVolume?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-copytagstosnapshot
       */
      CopyTagsToSnapshot?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-domainiamrolename
       */
      DomainIAMRoleName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-replicamode
       */
      ReplicaMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-enginelifecyclesupport
       */
      EngineLifecycleSupport?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-licensemodel
       */
      LicenseModel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-domaindnsips
       */
      DomainDnsIps?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-iops
       */
      Iops?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-sourceregion
       */
      SourceRegion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-uselatestrestorabletime
       */
      UseLatestRestorableTime?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-cacertificateidentifier
       */
      CACertificateIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-managemasteruserpassword
       */
      ManageMasterUserPassword?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-sourcedbiresourceid
       */
      SourceDbiResourceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-domainauthsecretarn
       */
      DomainAuthSecretArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-automaticbackupreplicationregion
       */
      AutomaticBackupReplicationRegion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-vpcsecuritygroups
       */
      VPCSecurityGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-allowmajorversionupgrade
       */
      AllowMajorVersionUpgrade?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-dbname
       */
      DBName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-enableiamdatabaseauthentication
       */
      EnableIAMDatabaseAuthentication?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-backupretentionperiod
       */
      BackupRetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-customiaminstanceprofile
       */
      CustomIAMInstanceProfile?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-dbsnapshotidentifier
       */
      DBSnapshotIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-enablecloudwatchlogsexports
       */
      EnableCloudwatchLogsExports?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-usedefaultprocessorfeatures
       */
      UseDefaultProcessorFeatures?: boolean;
    }
    
    
    interface DBInstance extends Resource<"AWS::RDS::DBInstance">, DBInstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBInstance(id: string, props: DBInstanceProps): Promise<DBInstance>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbparametergroup.html
     */
    interface DBParameterGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbparametergroup.html#cfn-rds-dbparametergroup-dbparametergroupname
       */
      DBParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbparametergroup.html#cfn-rds-dbparametergroup-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbparametergroup.html#cfn-rds-dbparametergroup-parameters
       */
      Parameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbparametergroup.html#cfn-rds-dbparametergroup-family
       */
      Family: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbparametergroup.html#cfn-rds-dbparametergroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface DBParameterGroup extends Resource<"AWS::RDS::DBParameterGroup">, DBParameterGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBParameterGroup(id: string, props: DBParameterGroupProps): Promise<DBParameterGroup>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html
     */
    interface DBProxyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html#cfn-rds-dbproxy-requiretls
       */
      RequireTLS?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html#cfn-rds-dbproxy-dbproxyname
       */
      DBProxyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html#cfn-rds-dbproxy-idleclienttimeout
       */
      IdleClientTimeout?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html#cfn-rds-dbproxy-vpcsecuritygroupids
       */
      VpcSecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html#cfn-rds-dbproxy-auth
       */
      Auth: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html#cfn-rds-dbproxy-debuglogging
       */
      DebugLogging?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html#cfn-rds-dbproxy-vpcsubnetids
       */
      VpcSubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html#cfn-rds-dbproxy-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html#cfn-rds-dbproxy-enginefamily
       */
      EngineFamily: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxy.html#cfn-rds-dbproxy-tags
       */
      Tags?: {}[];
    }
    
    
    interface DBProxy extends Resource<"AWS::RDS::DBProxy">, DBProxyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBProxy(id: string, props: DBProxyProps): Promise<DBProxy>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html
     */
    interface DBProxyEndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-dbproxyendpointname
       */
      DBProxyEndpointName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-dbproxyname
       */
      DBProxyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-targetrole
       */
      TargetRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-vpcsecuritygroupids
       */
      VpcSecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-vpcsubnetids
       */
      VpcSubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-tags
       */
      Tags?: {}[];
    }
    
    
    interface DBProxyEndpoint extends Resource<"AWS::RDS::DBProxyEndpoint">, DBProxyEndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBProxyEndpoint(id: string, props: DBProxyEndpointProps): Promise<DBProxyEndpoint>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxytargetgroup.html
     */
    interface DBProxyTargetGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxytargetgroup.html#cfn-rds-dbproxytargetgroup-dbproxyname
       */
      DBProxyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxytargetgroup.html#cfn-rds-dbproxytargetgroup-dbinstanceidentifiers
       */
      DBInstanceIdentifiers?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxytargetgroup.html#cfn-rds-dbproxytargetgroup-targetgroupname
       */
      TargetGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxytargetgroup.html#cfn-rds-dbproxytargetgroup-connectionpoolconfigurationinfo
       */
      ConnectionPoolConfigurationInfo?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxytargetgroup.html#cfn-rds-dbproxytargetgroup-dbclusteridentifiers
       */
      DBClusterIdentifiers?: string[];
    }
    
    
    interface DBProxyTargetGroup extends Resource<"AWS::RDS::DBProxyTargetGroup">, DBProxyTargetGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBProxyTargetGroup(id: string, props: DBProxyTargetGroupProps): Promise<DBProxyTargetGroup>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group.html
     */
    interface DBSecurityGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group.html#cfn-rds-dbsecuritygroup-dbsecuritygroupingress
       */
      DBSecurityGroupIngress: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group.html#cfn-rds-dbsecuritygroup-ec2vpcid
       */
      EC2VpcId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group.html#cfn-rds-dbsecuritygroup-groupdescription
       */
      GroupDescription: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group.html#cfn-rds-dbsecuritygroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface DBSecurityGroup extends Resource<"AWS::RDS::DBSecurityGroup">, DBSecurityGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBSecurityGroup(id: string, props: DBSecurityGroupProps): Promise<DBSecurityGroup>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-security-group-ingress.html
     */
    interface DBSecurityGroupIngressProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-security-group-ingress.html#cfn-rds-securitygroup-ingress-cidrip
       */
      CIDRIP?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-security-group-ingress.html#cfn-rds-securitygroup-ingress-dbsecuritygroupname
       */
      DBSecurityGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-security-group-ingress.html#cfn-rds-securitygroup-ingress-ec2securitygroupid
       */
      EC2SecurityGroupId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-security-group-ingress.html#cfn-rds-securitygroup-ingress-ec2securitygroupname
       */
      EC2SecurityGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-security-group-ingress.html#cfn-rds-securitygroup-ingress-ec2securitygroupownerid
       */
      EC2SecurityGroupOwnerId?: string;
    }
    
    
    interface DBSecurityGroupIngress extends Resource<"AWS::RDS::DBSecurityGroupIngress">, DBSecurityGroupIngressProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBSecurityGroupIngress(id: string, props: DBSecurityGroupIngressProps): Promise<DBSecurityGroupIngress>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html
     */
    interface DBShardGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html#cfn-rds-dbshardgroup-dbclusteridentifier
       */
      DBClusterIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html#cfn-rds-dbshardgroup-computeredundancy
       */
      ComputeRedundancy?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html#cfn-rds-dbshardgroup-dbshardgroupidentifier
       */
      DBShardGroupIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html#cfn-rds-dbshardgroup-publiclyaccessible
       */
      PubliclyAccessible?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html#cfn-rds-dbshardgroup-maxacu
       */
      MaxACU: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html#cfn-rds-dbshardgroup-minacu
       */
      MinACU?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html#cfn-rds-dbshardgroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface DBShardGroup extends Resource<"AWS::RDS::DBShardGroup">, DBShardGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBShardGroup(id: string, props: DBShardGroupProps): Promise<DBShardGroup>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnetgroup.html
     */
    interface DBSubnetGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnetgroup.html#cfn-rds-dbsubnetgroup-dbsubnetgroupname
       */
      DBSubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnetgroup.html#cfn-rds-dbsubnetgroup-dbsubnetgroupdescription
       */
      DBSubnetGroupDescription: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnetgroup.html#cfn-rds-dbsubnetgroup-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnetgroup.html#cfn-rds-dbsubnetgroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface DBSubnetGroup extends Resource<"AWS::RDS::DBSubnetGroup">, DBSubnetGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DBSubnetGroup(id: string, props: DBSubnetGroupProps): Promise<DBSubnetGroup>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html
     */
    interface EventSubscriptionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html#cfn-rds-eventsubscription-sourcetype
       */
      SourceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html#cfn-rds-eventsubscription-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html#cfn-rds-eventsubscription-eventcategories
       */
      EventCategories?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html#cfn-rds-eventsubscription-subscriptionname
       */
      SubscriptionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html#cfn-rds-eventsubscription-snstopicarn
       */
      SnsTopicArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html#cfn-rds-eventsubscription-sourceids
       */
      SourceIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html#cfn-rds-eventsubscription-tags
       */
      Tags?: {}[];
    }
    
    
    interface EventSubscription extends Resource<"AWS::RDS::EventSubscription">, EventSubscriptionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventSubscription(id: string, props: EventSubscriptionProps): Promise<EventSubscription>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html
     */
    interface GlobalClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-enginelifecyclesupport
       */
      EngineLifecycleSupport?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-storageencrypted
       */
      StorageEncrypted?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-engineversion
       */
      EngineVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-sourcedbclusteridentifier
       */
      SourceDBClusterIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-deletionprotection
       */
      DeletionProtection?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-globalclusteridentifier
       */
      GlobalClusterIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-engine
       */
      Engine?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-tags
       */
      Tags?: {}[];
    }
    
    
    interface GlobalCluster extends Resource<"AWS::RDS::GlobalCluster">, GlobalClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GlobalCluster(id: string, props: GlobalClusterProps): Promise<GlobalCluster>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-integration.html
     */
    interface IntegrationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-integration.html#cfn-rds-integration-datafilter
       */
      DataFilter?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-integration.html#cfn-rds-integration-integrationname
       */
      IntegrationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-integration.html#cfn-rds-integration-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-integration.html#cfn-rds-integration-kmskeyid
       */
      KMSKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-integration.html#cfn-rds-integration-sourcearn
       */
      SourceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-integration.html#cfn-rds-integration-targetarn
       */
      TargetArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-integration.html#cfn-rds-integration-additionalencryptioncontext
       */
      AdditionalEncryptionContext?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-integration.html#cfn-rds-integration-tags
       */
      Tags?: {}[];
    }
    
    
    interface Integration extends Resource<"AWS::RDS::Integration">, IntegrationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Integration(id: string, props: IntegrationProps): Promise<Integration>;
  }
  namespace RDS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-optiongroup.html
     */
    interface OptionGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-optiongroup.html#cfn-rds-optiongroup-optiongroupdescription
       */
      OptionGroupDescription: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-optiongroup.html#cfn-rds-optiongroup-optiongroupname
       */
      OptionGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-optiongroup.html#cfn-rds-optiongroup-optionconfigurations
       */
      OptionConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-optiongroup.html#cfn-rds-optiongroup-majorengineversion
       */
      MajorEngineVersion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-optiongroup.html#cfn-rds-optiongroup-enginename
       */
      EngineName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-optiongroup.html#cfn-rds-optiongroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface OptionGroup extends Resource<"AWS::RDS::OptionGroup">, OptionGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function OptionGroup(id: string, props: OptionGroupProps): Promise<OptionGroup>;
  }
  namespace RUM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html
     */
    interface AppMonitorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-customevents
       */
      CustomEvents?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-cwlogenabled
       */
      CwLogEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-resourcepolicy
       */
      ResourcePolicy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-domainlist
       */
      DomainList?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-deobfuscationconfiguration
       */
      DeobfuscationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-domain
       */
      Domain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-appmonitorconfiguration
       */
      AppMonitorConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-name
       */
      Name: string;
    }
    
    
    interface AppMonitor extends Resource<"AWS::RUM::AppMonitor">, AppMonitorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AppMonitor(id: string, props: AppMonitorProps): Promise<AppMonitor>;
  }
  namespace Rbin {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html
     */
    interface RuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-resourcetags
       */
      ResourceTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-lockconfiguration
       */
      LockConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-excluderesourcetags
       */
      ExcludeResourceTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-resourcetype
       */
      ResourceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-retentionperiod
       */
      RetentionPeriod: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-tags
       */
      Tags?: {}[];
    }
    
    
    interface Rule extends Resource<"AWS::Rbin::Rule">, RuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Rule(id: string, props: RuleProps): Promise<Rule>;
  }
  namespace Redshift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html
     */
    interface ClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-revisiontarget
       */
      RevisionTarget?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-automatedsnapshotretentionperiod
       */
      AutomatedSnapshotRetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-encrypted
       */
      Encrypted?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-port
       */
      Port?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-numberofnodes
       */
      NumberOfNodes?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-destinationregion
       */
      DestinationRegion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-allowversionupgrade
       */
      AllowVersionUpgrade?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-endpoint
       */
      Endpoint?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-namespaceresourcepolicy
       */
      NamespaceResourcePolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-maintenancetrackname
       */
      MaintenanceTrackName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-owneraccount
       */
      OwnerAccount?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-multiaz
       */
      MultiAZ?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotclusteridentifier
       */
      SnapshotClusterIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-iamroles
       */
      IamRoles?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotcopymanual
       */
      SnapshotCopyManual?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-managemasterpassword
       */
      ManageMasterPassword?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-availabilityzone
       */
      AvailabilityZone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustersecuritygroups
       */
      ClusterSecurityGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusteridentifier
       */
      ClusterIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-masteruserpassword
       */
      MasterUserPassword?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustersubnetgroupname
       */
      ClusterSubnetGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-loggingproperties
       */
      LoggingProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenance
       */
      DeferMaintenance?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-nodetype
       */
      NodeType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-masterusername
       */
      MasterUsername: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-publiclyaccessible
       */
      PubliclyAccessible?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-manualsnapshotretentionperiod
       */
      ManualSnapshotRetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-resourceaction
       */
      ResourceAction?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-hsmclientcertificateidentifier
       */
      HsmClientCertificateIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-elasticip
       */
      ElasticIp?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-availabilityzonerelocationstatus
       */
      AvailabilityZoneRelocationStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-aquaconfigurationstatus
       */
      AquaConfigurationStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotidentifier
       */
      SnapshotIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-availabilityzonerelocation
       */
      AvailabilityZoneRelocation?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotcopygrantname
       */
      SnapshotCopyGrantName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-enhancedvpcrouting
       */
      EnhancedVpcRouting?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusterparametergroupname
       */
      ClusterParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenanceendtime
       */
      DeferMaintenanceEndTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-rotateencryptionkey
       */
      RotateEncryptionKey?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-vpcsecuritygroupids
       */
      VpcSecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusterversion
       */
      ClusterVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-hsmconfigurationidentifier
       */
      HsmConfigurationIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-preferredmaintenancewindow
       */
      PreferredMaintenanceWindow?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenancestarttime
       */
      DeferMaintenanceStartTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustertype
       */
      ClusterType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-classic
       */
      Classic?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-masterpasswordsecretkmskeyid
       */
      MasterPasswordSecretKmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenanceduration
       */
      DeferMaintenanceDuration?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-dbname
       */
      DBName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotcopyretentionperiod
       */
      SnapshotCopyRetentionPeriod?: number;
    }
    
    
    interface Cluster extends Resource<"AWS::Redshift::Cluster">, ClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Cluster(id: string, props: ClusterProps): Promise<Cluster>;
  }
  namespace Redshift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html
     */
    interface ClusterParameterGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-parameters
       */
      Parameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-parametergroupname
       */
      ParameterGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-parametergroupfamily
       */
      ParameterGroupFamily: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clusterparametergroup.html#cfn-redshift-clusterparametergroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface ClusterParameterGroup extends Resource<"AWS::Redshift::ClusterParameterGroup">, ClusterParameterGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ClusterParameterGroup(id: string, props: ClusterParameterGroupProps): Promise<ClusterParameterGroup>;
  }
  namespace Redshift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroup.html
     */
    interface ClusterSecurityGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroup.html#cfn-redshift-clustersecuritygroup-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroup.html#cfn-redshift-clustersecuritygroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface ClusterSecurityGroup extends Resource<"AWS::Redshift::ClusterSecurityGroup">, ClusterSecurityGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ClusterSecurityGroup(id: string, props: ClusterSecurityGroupProps): Promise<ClusterSecurityGroup>;
  }
  namespace Redshift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html
     */
    interface ClusterSecurityGroupIngressProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html#cfn-redshift-clustersecuritygroupingress-cidrip
       */
      CIDRIP?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html#cfn-redshift-clustersecuritygroupingress-clustersecuritygroupname
       */
      ClusterSecurityGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html#cfn-redshift-clustersecuritygroupingress-ec2securitygroupname
       */
      EC2SecurityGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersecuritygroupingress.html#cfn-redshift-clustersecuritygroupingress-ec2securitygroupownerid
       */
      EC2SecurityGroupOwnerId?: string;
    }
    
    
    interface ClusterSecurityGroupIngress extends Resource<"AWS::Redshift::ClusterSecurityGroupIngress">, ClusterSecurityGroupIngressProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ClusterSecurityGroupIngress(id: string, props: ClusterSecurityGroupIngressProps): Promise<ClusterSecurityGroupIngress>;
  }
  namespace Redshift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html
     */
    interface ClusterSubnetGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html#cfn-redshift-clustersubnetgroup-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html#cfn-redshift-clustersubnetgroup-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-clustersubnetgroup.html#cfn-redshift-clustersubnetgroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface ClusterSubnetGroup extends Resource<"AWS::Redshift::ClusterSubnetGroup">, ClusterSubnetGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ClusterSubnetGroup(id: string, props: ClusterSubnetGroupProps): Promise<ClusterSubnetGroup>;
  }
  namespace Redshift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html
     */
    interface EndpointAccessProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-endpointname
       */
      EndpointName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-vpcsecuritygroupids
       */
      VpcSecurityGroupIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-resourceowner
       */
      ResourceOwner?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-subnetgroupname
       */
      SubnetGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-clusteridentifier
       */
      ClusterIdentifier: string;
    }
    
    
    interface EndpointAccess extends Resource<"AWS::Redshift::EndpointAccess">, EndpointAccessProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EndpointAccess(id: string, props: EndpointAccessProps): Promise<EndpointAccess>;
  }
  namespace Redshift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html
     */
    interface EndpointAuthorizationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-account
       */
      Account: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-force
       */
      Force?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-vpcids
       */
      VpcIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-clusteridentifier
       */
      ClusterIdentifier: string;
    }
    
    
    interface EndpointAuthorization extends Resource<"AWS::Redshift::EndpointAuthorization">, EndpointAuthorizationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EndpointAuthorization(id: string, props: EndpointAuthorizationProps): Promise<EndpointAuthorization>;
  }
  namespace Redshift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html
     */
    interface EventSubscriptionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-sourcetype
       */
      SourceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-eventcategories
       */
      EventCategories?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-severity
       */
      Severity?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-subscriptionname
       */
      SubscriptionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-sourceids
       */
      SourceIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-snstopicarn
       */
      SnsTopicArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-tags
       */
      Tags?: {}[];
    }
    
    
    interface EventSubscription extends Resource<"AWS::Redshift::EventSubscription">, EventSubscriptionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EventSubscription(id: string, props: EventSubscriptionProps): Promise<EventSubscription>;
  }
  namespace Redshift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-integration.html
     */
    interface IntegrationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-integration.html#cfn-redshift-integration-integrationname
       */
      IntegrationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-integration.html#cfn-redshift-integration-kmskeyid
       */
      KMSKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-integration.html#cfn-redshift-integration-sourcearn
       */
      SourceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-integration.html#cfn-redshift-integration-targetarn
       */
      TargetArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-integration.html#cfn-redshift-integration-additionalencryptioncontext
       */
      AdditionalEncryptionContext?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-integration.html#cfn-redshift-integration-tags
       */
      Tags?: {}[];
    }
    
    
    interface Integration extends Resource<"AWS::Redshift::Integration">, IntegrationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Integration(id: string, props: IntegrationProps): Promise<Integration>;
  }
  namespace Redshift {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html
     */
    interface ScheduledActionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-scheduledactiondescription
       */
      ScheduledActionDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-scheduledactionname
       */
      ScheduledActionName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-endtime
       */
      EndTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-schedule
       */
      Schedule?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-iamrole
       */
      IamRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-starttime
       */
      StartTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-enable
       */
      Enable?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-scheduledaction.html#cfn-redshift-scheduledaction-targetaction
       */
      TargetAction?: {};
    }
    
    
    interface ScheduledAction extends Resource<"AWS::Redshift::ScheduledAction">, ScheduledActionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ScheduledAction(id: string, props: ScheduledActionProps): Promise<ScheduledAction>;
  }
  namespace RedshiftServerless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html
     */
    interface NamespaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-manageadminpassword
       */
      ManageAdminPassword?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-iamroles
       */
      IamRoles?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-snapshotcopyconfigurations
       */
      SnapshotCopyConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-finalsnapshotname
       */
      FinalSnapshotName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-finalsnapshotretentionperiod
       */
      FinalSnapshotRetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-adminuserpassword
       */
      AdminUserPassword?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-adminpasswordsecretkmskeyid
       */
      AdminPasswordSecretKmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-defaultiamrolearn
       */
      DefaultIamRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-adminusername
       */
      AdminUsername?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-namespacename
       */
      NamespaceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-namespaceresourcepolicy
       */
      NamespaceResourcePolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-redshiftidcapplicationarn
       */
      RedshiftIdcApplicationArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-dbname
       */
      DbName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html#cfn-redshiftserverless-namespace-logexports
       */
      LogExports?: string[];
    }
    
    
    interface Namespace extends Resource<"AWS::RedshiftServerless::Namespace">, NamespaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Namespace(id: string, props: NamespaceProps): Promise<Namespace>;
  }
  namespace RedshiftServerless {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html
     */
    interface WorkgroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-snapshotarn
       */
      SnapshotArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-snapshotowneraccount
       */
      SnapshotOwnerAccount?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-port
       */
      Port?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-recoverypointid
       */
      RecoveryPointId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-workgroupname
       */
      WorkgroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-basecapacity
       */
      BaseCapacity?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-enhancedvpcrouting
       */
      EnhancedVpcRouting?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-workgroup
       */
      Workgroup?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-subnetids
       */
      SubnetIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-snapshotname
       */
      SnapshotName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-namespacename
       */
      NamespaceName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-configparameters
       */
      ConfigParameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-trackname
       */
      TrackName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-publiclyaccessible
       */
      PubliclyAccessible?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-priceperformancetarget
       */
      PricePerformanceTarget?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html#cfn-redshiftserverless-workgroup-maxcapacity
       */
      MaxCapacity?: number;
    }
    
    
    interface Workgroup extends Resource<"AWS::RedshiftServerless::Workgroup">, WorkgroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Workgroup(id: string, props: WorkgroupProps): Promise<Workgroup>;
  }
  namespace RefactorSpaces {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-application.html#cfn-refactorspaces-application-environmentidentifier
       */
      EnvironmentIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-application.html#cfn-refactorspaces-application-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-application.html#cfn-refactorspaces-application-apigatewayproxy
       */
      ApiGatewayProxy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-application.html#cfn-refactorspaces-application-proxytype
       */
      ProxyType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-application.html#cfn-refactorspaces-application-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-application.html#cfn-refactorspaces-application-name
       */
      Name: string;
    }
    
    
    interface Application extends Resource<"AWS::RefactorSpaces::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace RefactorSpaces {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-environment.html
     */
    interface EnvironmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-environment.html#cfn-refactorspaces-environment-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-environment.html#cfn-refactorspaces-environment-networkfabrictype
       */
      NetworkFabricType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-environment.html#cfn-refactorspaces-environment-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-environment.html#cfn-refactorspaces-environment-name
       */
      Name?: string;
    }
    
    
    interface Environment extends Resource<"AWS::RefactorSpaces::Environment">, EnvironmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Environment(id: string, props: EnvironmentProps): Promise<Environment>;
  }
  namespace RefactorSpaces {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html
     */
    interface RouteProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html#cfn-refactorspaces-route-uripathroute
       */
      UriPathRoute?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html#cfn-refactorspaces-route-environmentidentifier
       */
      EnvironmentIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html#cfn-refactorspaces-route-routetype
       */
      RouteType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html#cfn-refactorspaces-route-defaultroute
       */
      DefaultRoute?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html#cfn-refactorspaces-route-serviceidentifier
       */
      ServiceIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html#cfn-refactorspaces-route-applicationidentifier
       */
      ApplicationIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html#cfn-refactorspaces-route-tags
       */
      Tags?: {}[];
    }
    
    
    interface Route extends Resource<"AWS::RefactorSpaces::Route">, RouteProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Route(id: string, props: RouteProps): Promise<Route>;
  }
  namespace RefactorSpaces {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-service.html
     */
    interface ServiceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-service.html#cfn-refactorspaces-service-lambdaendpoint
       */
      LambdaEndpoint?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-service.html#cfn-refactorspaces-service-urlendpoint
       */
      UrlEndpoint?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-service.html#cfn-refactorspaces-service-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-service.html#cfn-refactorspaces-service-environmentidentifier
       */
      EnvironmentIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-service.html#cfn-refactorspaces-service-vpcid
       */
      VpcId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-service.html#cfn-refactorspaces-service-endpointtype
       */
      EndpointType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-service.html#cfn-refactorspaces-service-applicationidentifier
       */
      ApplicationIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-service.html#cfn-refactorspaces-service-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-service.html#cfn-refactorspaces-service-name
       */
      Name: string;
    }
    
    
    interface Service extends Resource<"AWS::RefactorSpaces::Service">, ServiceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Service(id: string, props: ServiceProps): Promise<Service>;
  }
  namespace Rekognition {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-collection.html
     */
    interface CollectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-collection.html#cfn-rekognition-collection-collectionid
       */
      CollectionId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-collection.html#cfn-rekognition-collection-tags
       */
      Tags?: {}[];
    }
    
    
    interface Collection extends Resource<"AWS::Rekognition::Collection">, CollectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Collection(id: string, props: CollectionProps): Promise<Collection>;
  }
  namespace Rekognition {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-project.html
     */
    interface ProjectProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-project.html#cfn-rekognition-project-projectname
       */
      ProjectName: string;
    }
    
    
    interface Project extends Resource<"AWS::Rekognition::Project">, ProjectProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Project(id: string, props: ProjectProps): Promise<Project>;
  }
  namespace Rekognition {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html
     */
    interface StreamProcessorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-s3destination
       */
      S3Destination?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-datasharingpreference
       */
      DataSharingPreference?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-facesearchsettings
       */
      FaceSearchSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-polygonregionsofinterest
       */
      PolygonRegionsOfInterest?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-connectedhomesettings
       */
      ConnectedHomeSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-notificationchannel
       */
      NotificationChannel?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-kinesisvideostream
       */
      KinesisVideoStream: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-boundingboxregionsofinterest
       */
      BoundingBoxRegionsOfInterest?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-kinesisdatastream
       */
      KinesisDataStream?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-tags
       */
      Tags?: {}[];
    }
    
    
    interface StreamProcessor extends Resource<"AWS::Rekognition::StreamProcessor">, StreamProcessorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StreamProcessor(id: string, props: StreamProcessorProps): Promise<StreamProcessor>;
  }
  namespace ResilienceHub {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-app.html
     */
    interface AppProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-app.html#cfn-resiliencehub-app-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-app.html#cfn-resiliencehub-app-apptemplatebody
       */
      AppTemplateBody: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-app.html#cfn-resiliencehub-app-appassessmentschedule
       */
      AppAssessmentSchedule?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-app.html#cfn-resiliencehub-app-permissionmodel
       */
      PermissionModel?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-app.html#cfn-resiliencehub-app-resourcemappings
       */
      ResourceMappings: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-app.html#cfn-resiliencehub-app-eventsubscriptions
       */
      EventSubscriptions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-app.html#cfn-resiliencehub-app-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-app.html#cfn-resiliencehub-app-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-app.html#cfn-resiliencehub-app-resiliencypolicyarn
       */
      ResiliencyPolicyArn?: string;
    }
    
    
    interface App extends Resource<"AWS::ResilienceHub::App">, AppProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function App(id: string, props: AppProps): Promise<App>;
  }
  namespace ResilienceHub {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-resiliencypolicy.html
     */
    interface ResiliencyPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-resiliencypolicy.html#cfn-resiliencehub-resiliencypolicy-policy
       */
      Policy: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-resiliencypolicy.html#cfn-resiliencehub-resiliencypolicy-policydescription
       */
      PolicyDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-resiliencypolicy.html#cfn-resiliencehub-resiliencypolicy-tier
       */
      Tier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-resiliencypolicy.html#cfn-resiliencehub-resiliencypolicy-policyname
       */
      PolicyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-resiliencypolicy.html#cfn-resiliencehub-resiliencypolicy-datalocationconstraint
       */
      DataLocationConstraint?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resiliencehub-resiliencypolicy.html#cfn-resiliencehub-resiliencypolicy-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface ResiliencyPolicy extends Resource<"AWS::ResilienceHub::ResiliencyPolicy">, ResiliencyPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResiliencyPolicy(id: string, props: ResiliencyPolicyProps): Promise<ResiliencyPolicy>;
  }
  namespace ResourceExplorer2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourceexplorer2-defaultviewassociation.html
     */
    interface DefaultViewAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourceexplorer2-defaultviewassociation.html#cfn-resourceexplorer2-defaultviewassociation-viewarn
       */
      ViewArn: string;
    }
    
    
    interface DefaultViewAssociation extends Resource<"AWS::ResourceExplorer2::DefaultViewAssociation">, DefaultViewAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DefaultViewAssociation(id: string, props: DefaultViewAssociationProps): Promise<DefaultViewAssociation>;
  }
  namespace ResourceExplorer2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourceexplorer2-index.html
     */
    interface IndexProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourceexplorer2-index.html#cfn-resourceexplorer2-index-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourceexplorer2-index.html#cfn-resourceexplorer2-index-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Index extends Resource<"AWS::ResourceExplorer2::Index">, IndexProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Index(id: string, props: IndexProps): Promise<Index>;
  }
  namespace ResourceExplorer2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourceexplorer2-view.html
     */
    interface ViewProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourceexplorer2-view.html#cfn-resourceexplorer2-view-filters
       */
      Filters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourceexplorer2-view.html#cfn-resourceexplorer2-view-scope
       */
      Scope?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourceexplorer2-view.html#cfn-resourceexplorer2-view-includedproperties
       */
      IncludedProperties?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourceexplorer2-view.html#cfn-resourceexplorer2-view-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourceexplorer2-view.html#cfn-resourceexplorer2-view-viewname
       */
      ViewName: string;
    }
    
    
    interface View extends Resource<"AWS::ResourceExplorer2::View">, ViewProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function View(id: string, props: ViewProps): Promise<View>;
  }
  namespace ResourceGroups {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html
     */
    interface GroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html#cfn-resourcegroups-group-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html#cfn-resourcegroups-group-configuration
       */
      Configuration?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html#cfn-resourcegroups-group-resourcequery
       */
      ResourceQuery?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html#cfn-resourcegroups-group-resources
       */
      Resources?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html#cfn-resourcegroups-group-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html#cfn-resourcegroups-group-name
       */
      Name: string;
    }
    
    
    interface Group extends Resource<"AWS::ResourceGroups::Group">, GroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Group(id: string, props: GroupProps): Promise<Group>;
  }
  namespace ResourceGroups {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-tagsynctask.html
     */
    interface TagSyncTaskProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-tagsynctask.html#cfn-resourcegroups-tagsynctask-group
       */
      Group: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-tagsynctask.html#cfn-resourcegroups-tagsynctask-tagkey
       */
      TagKey: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-tagsynctask.html#cfn-resourcegroups-tagsynctask-tagvalue
       */
      TagValue: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-tagsynctask.html#cfn-resourcegroups-tagsynctask-rolearn
       */
      RoleArn: string;
    }
    
    
    interface TagSyncTask extends Resource<"AWS::ResourceGroups::TagSyncTask">, TagSyncTaskProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TagSyncTask(id: string, props: TagSyncTaskProps): Promise<TagSyncTask>;
  }
  namespace RoboMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-fleet.html
     */
    interface FleetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-fleet.html#cfn-robomaker-fleet-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-fleet.html#cfn-robomaker-fleet-name
       */
      Name?: string;
    }
    
    
    interface Fleet extends Resource<"AWS::RoboMaker::Fleet">, FleetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Fleet(id: string, props: FleetProps): Promise<Fleet>;
  }
  namespace RoboMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html
     */
    interface RobotProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-fleet
       */
      Fleet?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-architecture
       */
      Architecture: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-greengrassgroupid
       */
      GreengrassGroupId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robot.html#cfn-robomaker-robot-name
       */
      Name?: string;
    }
    
    
    interface Robot extends Resource<"AWS::RoboMaker::Robot">, RobotProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Robot(id: string, props: RobotProps): Promise<Robot>;
  }
  namespace RoboMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html
     */
    interface RobotApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html#cfn-robomaker-robotapplication-currentrevisionid
       */
      CurrentRevisionId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html#cfn-robomaker-robotapplication-environment
       */
      Environment?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html#cfn-robomaker-robotapplication-robotsoftwaresuite
       */
      RobotSoftwareSuite: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html#cfn-robomaker-robotapplication-sources
       */
      Sources?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html#cfn-robomaker-robotapplication-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html#cfn-robomaker-robotapplication-name
       */
      Name?: string;
    }
    
    
    interface RobotApplication extends Resource<"AWS::RoboMaker::RobotApplication">, RobotApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RobotApplication(id: string, props: RobotApplicationProps): Promise<RobotApplication>;
  }
  namespace RoboMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplicationversion.html
     */
    interface RobotApplicationVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplicationversion.html#cfn-robomaker-robotapplicationversion-currentrevisionid
       */
      CurrentRevisionId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplicationversion.html#cfn-robomaker-robotapplicationversion-application
       */
      Application: string;
    }
    
    
    interface RobotApplicationVersion extends Resource<"AWS::RoboMaker::RobotApplicationVersion">, RobotApplicationVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RobotApplicationVersion(id: string, props: RobotApplicationVersionProps): Promise<RobotApplicationVersion>;
  }
  namespace RoboMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html
     */
    interface SimulationApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-renderingengine
       */
      RenderingEngine?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-simulationsoftwaresuite
       */
      SimulationSoftwareSuite: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-currentrevisionid
       */
      CurrentRevisionId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-environment
       */
      Environment?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-robotsoftwaresuite
       */
      RobotSoftwareSuite: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-sources
       */
      Sources?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplication.html#cfn-robomaker-simulationapplication-name
       */
      Name?: string;
    }
    
    
    interface SimulationApplication extends Resource<"AWS::RoboMaker::SimulationApplication">, SimulationApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SimulationApplication(id: string, props: SimulationApplicationProps): Promise<SimulationApplication>;
  }
  namespace RoboMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplicationversion.html
     */
    interface SimulationApplicationVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplicationversion.html#cfn-robomaker-simulationapplicationversion-currentrevisionid
       */
      CurrentRevisionId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-simulationapplicationversion.html#cfn-robomaker-simulationapplicationversion-application
       */
      Application: string;
    }
    
    
    interface SimulationApplicationVersion extends Resource<"AWS::RoboMaker::SimulationApplicationVersion">, SimulationApplicationVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SimulationApplicationVersion(id: string, props: SimulationApplicationVersionProps): Promise<SimulationApplicationVersion>;
  }
  namespace RolesAnywhere {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-crl.html
     */
    interface CRLProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-crl.html#cfn-rolesanywhere-crl-trustanchorarn
       */
      TrustAnchorArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-crl.html#cfn-rolesanywhere-crl-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-crl.html#cfn-rolesanywhere-crl-crldata
       */
      CrlData: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-crl.html#cfn-rolesanywhere-crl-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-crl.html#cfn-rolesanywhere-crl-name
       */
      Name: string;
    }
    
    
    interface CRL extends Resource<"AWS::RolesAnywhere::CRL">, CRLProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CRL(id: string, props: CRLProps): Promise<CRL>;
  }
  namespace RolesAnywhere {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-profile.html
     */
    interface ProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-profile.html#cfn-rolesanywhere-profile-managedpolicyarns
       */
      ManagedPolicyArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-profile.html#cfn-rolesanywhere-profile-requireinstanceproperties
       */
      RequireInstanceProperties?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-profile.html#cfn-rolesanywhere-profile-rolearns
       */
      RoleArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-profile.html#cfn-rolesanywhere-profile-acceptrolesessionname
       */
      AcceptRoleSessionName?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-profile.html#cfn-rolesanywhere-profile-sessionpolicy
       */
      SessionPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-profile.html#cfn-rolesanywhere-profile-attributemappings
       */
      AttributeMappings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-profile.html#cfn-rolesanywhere-profile-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-profile.html#cfn-rolesanywhere-profile-durationseconds
       */
      DurationSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-profile.html#cfn-rolesanywhere-profile-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-profile.html#cfn-rolesanywhere-profile-name
       */
      Name: string;
    }
    
    
    interface Profile extends Resource<"AWS::RolesAnywhere::Profile">, ProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Profile(id: string, props: ProfileProps): Promise<Profile>;
  }
  namespace RolesAnywhere {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-trustanchor.html
     */
    interface TrustAnchorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-trustanchor.html#cfn-rolesanywhere-trustanchor-notificationsettings
       */
      NotificationSettings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-trustanchor.html#cfn-rolesanywhere-trustanchor-enabled
       */
      Enabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-trustanchor.html#cfn-rolesanywhere-trustanchor-source
       */
      Source: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-trustanchor.html#cfn-rolesanywhere-trustanchor-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rolesanywhere-trustanchor.html#cfn-rolesanywhere-trustanchor-name
       */
      Name: string;
    }
    
    
    interface TrustAnchor extends Resource<"AWS::RolesAnywhere::TrustAnchor">, TrustAnchorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TrustAnchor(id: string, props: TrustAnchorProps): Promise<TrustAnchor>;
  }
  namespace Route53 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-cidrcollection.html
     */
    interface CidrCollectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-cidrcollection.html#cfn-route53-cidrcollection-locations
       */
      Locations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-cidrcollection.html#cfn-route53-cidrcollection-name
       */
      Name: string;
    }
    
    
    interface CidrCollection extends Resource<"AWS::Route53::CidrCollection">, CidrCollectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CidrCollection(id: string, props: CidrCollectionProps): Promise<CidrCollection>;
  }
  namespace Route53 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-dnssec.html
     */
    interface DNSSECProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-dnssec.html#cfn-route53-dnssec-hostedzoneid
       */
      HostedZoneId: string;
    }
    
    
    interface DNSSEC extends Resource<"AWS::Route53::DNSSEC">, DNSSECProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DNSSEC(id: string, props: DNSSECProps): Promise<DNSSEC>;
  }
  namespace Route53 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html
     */
    interface HealthCheckProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html#cfn-route53-healthcheck-healthcheckconfig
       */
      HealthCheckConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-healthcheck.html#cfn-route53-healthcheck-healthchecktags
       */
      HealthCheckTags?: {}[];
    }
    
    
    interface HealthCheck extends Resource<"AWS::Route53::HealthCheck">, HealthCheckProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function HealthCheck(id: string, props: HealthCheckProps): Promise<HealthCheck>;
  }
  namespace Route53 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html
     */
    interface HostedZoneProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-hostedzonetags
       */
      HostedZoneTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-vpcs
       */
      VPCs?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-hostedzoneconfig
       */
      HostedZoneConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-queryloggingconfig
       */
      QueryLoggingConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone.html#cfn-route53-hostedzone-name
       */
      Name?: string;
    }
    
    
    interface HostedZone extends Resource<"AWS::Route53::HostedZone">, HostedZoneProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function HostedZone(id: string, props: HostedZoneProps): Promise<HostedZone>;
  }
  namespace Route53 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html
     */
    interface KeySigningKeyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html#cfn-route53-keysigningkey-status
       */
      Status: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html#cfn-route53-keysigningkey-keymanagementservicearn
       */
      KeyManagementServiceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html#cfn-route53-keysigningkey-hostedzoneid
       */
      HostedZoneId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-keysigningkey.html#cfn-route53-keysigningkey-name
       */
      Name: string;
    }
    
    
    interface KeySigningKey extends Resource<"AWS::Route53::KeySigningKey">, KeySigningKeyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function KeySigningKey(id: string, props: KeySigningKeyProps): Promise<KeySigningKey>;
  }
  namespace Route53 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html
     */
    interface RecordSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-aliastarget
       */
      AliasTarget?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-cidrroutingconfig
       */
      CidrRoutingConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-comment
       */
      Comment?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-failover
       */
      Failover?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-geolocation
       */
      GeoLocation?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-geoproximitylocation
       */
      GeoProximityLocation?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-healthcheckid
       */
      HealthCheckId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-hostedzoneid
       */
      HostedZoneId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-hostedzonename
       */
      HostedZoneName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-multivalueanswer
       */
      MultiValueAnswer?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-region
       */
      Region?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-resourcerecords
       */
      ResourceRecords?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-setidentifier
       */
      SetIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-ttl
       */
      TTL?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-weight
       */
      Weight?: number;
    }
    
    
    interface RecordSet extends Resource<"AWS::Route53::RecordSet">, RecordSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RecordSet(id: string, props: RecordSetProps): Promise<RecordSet>;
  }
  namespace Route53 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html
     */
    interface RecordSetGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html#cfn-route53-recordsetgroup-comment
       */
      Comment?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html#cfn-route53-recordsetgroup-hostedzoneid
       */
      HostedZoneId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html#cfn-route53-recordsetgroup-hostedzonename
       */
      HostedZoneName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-recordsetgroup.html#cfn-route53-recordsetgroup-recordsets
       */
      RecordSets?: {}[];
    }
    
    
    interface RecordSetGroup extends Resource<"AWS::Route53::RecordSetGroup">, RecordSetGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RecordSetGroup(id: string, props: RecordSetGroupProps): Promise<RecordSetGroup>;
  }
  namespace Route53Profiles {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profile.html
     */
    interface ProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profile.html#cfn-route53profiles-profile-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profile.html#cfn-route53profiles-profile-name
       */
      Name: string;
    }
    
    
    interface Profile extends Resource<"AWS::Route53Profiles::Profile">, ProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Profile(id: string, props: ProfileProps): Promise<Profile>;
  }
  namespace Route53Profiles {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileassociation.html
     */
    interface ProfileAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileassociation.html#cfn-route53profiles-profileassociation-profileid
       */
      ProfileId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileassociation.html#cfn-route53profiles-profileassociation-resourceid
       */
      ResourceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileassociation.html#cfn-route53profiles-profileassociation-arn
       */
      Arn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileassociation.html#cfn-route53profiles-profileassociation-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileassociation.html#cfn-route53profiles-profileassociation-name
       */
      Name: string;
    }
    
    
    interface ProfileAssociation extends Resource<"AWS::Route53Profiles::ProfileAssociation">, ProfileAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ProfileAssociation(id: string, props: ProfileAssociationProps): Promise<ProfileAssociation>;
  }
  namespace Route53Profiles {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileresourceassociation.html
     */
    interface ProfileResourceAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileresourceassociation.html#cfn-route53profiles-profileresourceassociation-profileid
       */
      ProfileId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileresourceassociation.html#cfn-route53profiles-profileresourceassociation-resourcearn
       */
      ResourceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileresourceassociation.html#cfn-route53profiles-profileresourceassociation-resourceproperties
       */
      ResourceProperties?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileresourceassociation.html#cfn-route53profiles-profileresourceassociation-name
       */
      Name: string;
    }
    
    
    interface ProfileResourceAssociation extends Resource<"AWS::Route53Profiles::ProfileResourceAssociation">, ProfileResourceAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ProfileResourceAssociation(id: string, props: ProfileResourceAssociationProps): Promise<ProfileResourceAssociation>;
  }
  namespace Route53RecoveryControl {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-cluster.html
     */
    interface ClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-cluster.html#cfn-route53recoverycontrol-cluster-networktype
       */
      NetworkType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-cluster.html#cfn-route53recoverycontrol-cluster-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-cluster.html#cfn-route53recoverycontrol-cluster-name
       */
      Name: string;
    }
    
    
    interface Cluster extends Resource<"AWS::Route53RecoveryControl::Cluster">, ClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Cluster(id: string, props: ClusterProps): Promise<Cluster>;
  }
  namespace Route53RecoveryControl {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-controlpanel.html
     */
    interface ControlPanelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-controlpanel.html#cfn-route53recoverycontrol-controlpanel-clusterarn
       */
      ClusterArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-controlpanel.html#cfn-route53recoverycontrol-controlpanel-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-controlpanel.html#cfn-route53recoverycontrol-controlpanel-name
       */
      Name: string;
    }
    
    
    interface ControlPanel extends Resource<"AWS::Route53RecoveryControl::ControlPanel">, ControlPanelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ControlPanel(id: string, props: ControlPanelProps): Promise<ControlPanel>;
  }
  namespace Route53RecoveryControl {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-routingcontrol.html
     */
    interface RoutingControlProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-routingcontrol.html#cfn-route53recoverycontrol-routingcontrol-clusterarn
       */
      ClusterArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-routingcontrol.html#cfn-route53recoverycontrol-routingcontrol-controlpanelarn
       */
      ControlPanelArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-routingcontrol.html#cfn-route53recoverycontrol-routingcontrol-name
       */
      Name: string;
    }
    
    
    interface RoutingControl extends Resource<"AWS::Route53RecoveryControl::RoutingControl">, RoutingControlProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RoutingControl(id: string, props: RoutingControlProps): Promise<RoutingControl>;
  }
  namespace Route53RecoveryControl {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html
     */
    interface SafetyRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-controlpanelarn
       */
      ControlPanelArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-assertionrule
       */
      AssertionRule?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-ruleconfig
       */
      RuleConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-gatingrule
       */
      GatingRule?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-name
       */
      Name: string;
    }
    
    
    interface SafetyRule extends Resource<"AWS::Route53RecoveryControl::SafetyRule">, SafetyRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SafetyRule(id: string, props: SafetyRuleProps): Promise<SafetyRule>;
  }
  namespace Route53RecoveryReadiness {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html
     */
    interface CellProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html#cfn-route53recoveryreadiness-cell-cellname
       */
      CellName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html#cfn-route53recoveryreadiness-cell-cells
       */
      Cells?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html#cfn-route53recoveryreadiness-cell-tags
       */
      Tags?: {}[];
    }
    
    
    interface Cell extends Resource<"AWS::Route53RecoveryReadiness::Cell">, CellProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Cell(id: string, props: CellProps): Promise<Cell>;
  }
  namespace Route53RecoveryReadiness {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-readinesscheck.html
     */
    interface ReadinessCheckProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-readinesscheck.html#cfn-route53recoveryreadiness-readinesscheck-resourcesetname
       */
      ResourceSetName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-readinesscheck.html#cfn-route53recoveryreadiness-readinesscheck-readinesscheckname
       */
      ReadinessCheckName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-readinesscheck.html#cfn-route53recoveryreadiness-readinesscheck-tags
       */
      Tags?: {}[];
    }
    
    
    interface ReadinessCheck extends Resource<"AWS::Route53RecoveryReadiness::ReadinessCheck">, ReadinessCheckProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReadinessCheck(id: string, props: ReadinessCheckProps): Promise<ReadinessCheck>;
  }
  namespace Route53RecoveryReadiness {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-recoverygroup.html
     */
    interface RecoveryGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-recoverygroup.html#cfn-route53recoveryreadiness-recoverygroup-recoverygroupname
       */
      RecoveryGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-recoverygroup.html#cfn-route53recoveryreadiness-recoverygroup-cells
       */
      Cells?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-recoverygroup.html#cfn-route53recoveryreadiness-recoverygroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface RecoveryGroup extends Resource<"AWS::Route53RecoveryReadiness::RecoveryGroup">, RecoveryGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RecoveryGroup(id: string, props: RecoveryGroupProps): Promise<RecoveryGroup>;
  }
  namespace Route53RecoveryReadiness {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html
     */
    interface ResourceSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html#cfn-route53recoveryreadiness-resourceset-resourcesettype
       */
      ResourceSetType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html#cfn-route53recoveryreadiness-resourceset-resourcesetname
       */
      ResourceSetName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html#cfn-route53recoveryreadiness-resourceset-resources
       */
      Resources: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-resourceset.html#cfn-route53recoveryreadiness-resourceset-tags
       */
      Tags?: {}[];
    }
    
    
    interface ResourceSet extends Resource<"AWS::Route53RecoveryReadiness::ResourceSet">, ResourceSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceSet(id: string, props: ResourceSetProps): Promise<ResourceSet>;
  }
  namespace Route53Resolver {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html
     */
    interface FirewallDomainListProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html#cfn-route53resolver-firewalldomainlist-domains
       */
      Domains?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html#cfn-route53resolver-firewalldomainlist-domainfileurl
       */
      DomainFileUrl?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html#cfn-route53resolver-firewalldomainlist-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewalldomainlist.html#cfn-route53resolver-firewalldomainlist-name
       */
      Name?: string;
    }
    
    
    interface FirewallDomainList extends Resource<"AWS::Route53Resolver::FirewallDomainList">, FirewallDomainListProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FirewallDomainList(id: string, props: FirewallDomainListProps): Promise<FirewallDomainList>;
  }
  namespace Route53Resolver {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html
     */
    interface FirewallRuleGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html#cfn-route53resolver-firewallrulegroup-firewallrules
       */
      FirewallRules?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html#cfn-route53resolver-firewallrulegroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html#cfn-route53resolver-firewallrulegroup-name
       */
      Name?: string;
    }
    
    
    interface FirewallRuleGroup extends Resource<"AWS::Route53Resolver::FirewallRuleGroup">, FirewallRuleGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FirewallRuleGroup(id: string, props: FirewallRuleGroupProps): Promise<FirewallRuleGroup>;
  }
  namespace Route53Resolver {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html
     */
    interface FirewallRuleGroupAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-firewallrulegroupid
       */
      FirewallRuleGroupId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-priority
       */
      Priority: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-mutationprotection
       */
      MutationProtection?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroupassociation.html#cfn-route53resolver-firewallrulegroupassociation-name
       */
      Name?: string;
    }
    
    
    interface FirewallRuleGroupAssociation extends Resource<"AWS::Route53Resolver::FirewallRuleGroupAssociation">, FirewallRuleGroupAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FirewallRuleGroupAssociation(id: string, props: FirewallRuleGroupAssociationProps): Promise<FirewallRuleGroupAssociation>;
  }
  namespace Route53Resolver {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-outpostresolver.html
     */
    interface OutpostResolverProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-outpostresolver.html#cfn-route53resolver-outpostresolver-instancecount
       */
      InstanceCount?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-outpostresolver.html#cfn-route53resolver-outpostresolver-outpostarn
       */
      OutpostArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-outpostresolver.html#cfn-route53resolver-outpostresolver-preferredinstancetype
       */
      PreferredInstanceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-outpostresolver.html#cfn-route53resolver-outpostresolver-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-outpostresolver.html#cfn-route53resolver-outpostresolver-name
       */
      Name: string;
    }
    
    
    interface OutpostResolver extends Resource<"AWS::Route53Resolver::OutpostResolver">, OutpostResolverProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function OutpostResolver(id: string, props: OutpostResolverProps): Promise<OutpostResolver>;
  }
  namespace Route53Resolver {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverconfig.html
     */
    interface ResolverConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverconfig.html#cfn-route53resolver-resolverconfig-resourceid
       */
      ResourceId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverconfig.html#cfn-route53resolver-resolverconfig-autodefinedreverseflag
       */
      AutodefinedReverseFlag: string;
    }
    
    
    interface ResolverConfig extends Resource<"AWS::Route53Resolver::ResolverConfig">, ResolverConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResolverConfig(id: string, props: ResolverConfigProps): Promise<ResolverConfig>;
  }
  namespace Route53Resolver {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverdnssecconfig.html
     */
    interface ResolverDNSSECConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverdnssecconfig.html#cfn-route53resolver-resolverdnssecconfig-resourceid
       */
      ResourceId?: string;
    }
    
    
    interface ResolverDNSSECConfig extends Resource<"AWS::Route53Resolver::ResolverDNSSECConfig">, ResolverDNSSECConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResolverDNSSECConfig(id: string, props: ResolverDNSSECConfigProps): Promise<ResolverDNSSECConfig>;
  }
  namespace Route53Resolver {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html
     */
    interface ResolverEndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-ipaddresses
       */
      IpAddresses: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-protocols
       */
      Protocols?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-outpostarn
       */
      OutpostArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-preferredinstancetype
       */
      PreferredInstanceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-resolverendpointtype
       */
      ResolverEndpointType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-direction
       */
      Direction: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-securitygroupids
       */
      SecurityGroupIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-name
       */
      Name?: string;
    }
    
    
    interface ResolverEndpoint extends Resource<"AWS::Route53Resolver::ResolverEndpoint">, ResolverEndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResolverEndpoint(id: string, props: ResolverEndpointProps): Promise<ResolverEndpoint>;
  }
  namespace Route53Resolver {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html
     */
    interface ResolverQueryLoggingConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-destinationarn
       */
      DestinationArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-name
       */
      Name?: string;
    }
    
    
    interface ResolverQueryLoggingConfig extends Resource<"AWS::Route53Resolver::ResolverQueryLoggingConfig">, ResolverQueryLoggingConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResolverQueryLoggingConfig(id: string, props: ResolverQueryLoggingConfigProps): Promise<ResolverQueryLoggingConfig>;
  }
  namespace Route53Resolver {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html
     */
    interface ResolverQueryLoggingConfigAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resourceid
       */
      ResourceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resolverquerylogconfigid
       */
      ResolverQueryLogConfigId?: string;
    }
    
    
    interface ResolverQueryLoggingConfigAssociation extends Resource<"AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation">, ResolverQueryLoggingConfigAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResolverQueryLoggingConfigAssociation(id: string, props: ResolverQueryLoggingConfigAssociationProps): Promise<ResolverQueryLoggingConfigAssociation>;
  }
  namespace Route53Resolver {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html
     */
    interface ResolverRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-resolverendpointid
       */
      ResolverEndpointId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-domainname
       */
      DomainName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-ruletype
       */
      RuleType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-targetips
       */
      TargetIps?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-name
       */
      Name?: string;
    }
    
    
    interface ResolverRule extends Resource<"AWS::Route53Resolver::ResolverRule">, ResolverRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResolverRule(id: string, props: ResolverRuleProps): Promise<ResolverRule>;
  }
  namespace Route53Resolver {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html
     */
    interface ResolverRuleAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-vpcid
       */
      VPCId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-resolverruleid
       */
      ResolverRuleId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-name
       */
      Name?: string;
    }
    
    
    interface ResolverRuleAssociation extends Resource<"AWS::Route53Resolver::ResolverRuleAssociation">, ResolverRuleAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResolverRuleAssociation(id: string, props: ResolverRuleAssociationProps): Promise<ResolverRuleAssociation>;
  }
  namespace S3 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html
     */
    interface AccessGrantProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html#cfn-s3-accessgrant-grantee
       */
      Grantee: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html#cfn-s3-accessgrant-accessgrantslocationconfiguration
       */
      AccessGrantsLocationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html#cfn-s3-accessgrant-applicationarn
       */
      ApplicationArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html#cfn-s3-accessgrant-permission
       */
      Permission: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html#cfn-s3-accessgrant-s3prefixtype
       */
      S3PrefixType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html#cfn-s3-accessgrant-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html#cfn-s3-accessgrant-accessgrantslocationid
       */
      AccessGrantsLocationId: string;
    }
    
    
    interface AccessGrant extends Resource<"AWS::S3::AccessGrant">, AccessGrantProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccessGrant(id: string, props: AccessGrantProps): Promise<AccessGrant>;
  }
  namespace S3 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrantsinstance.html
     */
    interface AccessGrantsInstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrantsinstance.html#cfn-s3-accessgrantsinstance-identitycenterarn
       */
      IdentityCenterArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrantsinstance.html#cfn-s3-accessgrantsinstance-tags
       */
      Tags?: {}[];
    }
    
    
    interface AccessGrantsInstance extends Resource<"AWS::S3::AccessGrantsInstance">, AccessGrantsInstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccessGrantsInstance(id: string, props: AccessGrantsInstanceProps): Promise<AccessGrantsInstance>;
  }
  namespace S3 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrantslocation.html
     */
    interface AccessGrantsLocationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrantslocation.html#cfn-s3-accessgrantslocation-locationscope
       */
      LocationScope?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrantslocation.html#cfn-s3-accessgrantslocation-iamrolearn
       */
      IamRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrantslocation.html#cfn-s3-accessgrantslocation-tags
       */
      Tags?: {}[];
    }
    
    
    interface AccessGrantsLocation extends Resource<"AWS::S3::AccessGrantsLocation">, AccessGrantsLocationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccessGrantsLocation(id: string, props: AccessGrantsLocationProps): Promise<AccessGrantsLocation>;
  }
  namespace S3 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html
     */
    interface AccessPointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-policy
       */
      Policy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-publicaccessblockconfiguration
       */
      PublicAccessBlockConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-bucket
       */
      Bucket: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-bucketaccountid
       */
      BucketAccountId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-vpcconfiguration
       */
      VpcConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-name
       */
      Name?: string;
    }
    
    
    interface AccessPoint extends Resource<"AWS::S3::AccessPoint">, AccessPointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccessPoint(id: string, props: AccessPointProps): Promise<AccessPoint>;
  }
  namespace S3 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html
     */
    interface BucketProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-inventoryconfigurations
       */
      InventoryConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-bucketencryption
       */
      BucketEncryption?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-websiteconfiguration
       */
      WebsiteConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-notificationconfiguration
       */
      NotificationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-lifecycleconfiguration
       */
      LifecycleConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-versioningconfiguration
       */
      VersioningConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-metricsconfigurations
       */
      MetricsConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-accesscontrol
       */
      AccessControl?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-metadatatableconfiguration
       */
      MetadataTableConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-intelligenttieringconfigurations
       */
      IntelligentTieringConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-analyticsconfigurations
       */
      AnalyticsConfigurations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-accelerateconfiguration
       */
      AccelerateConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-publicaccessblockconfiguration
       */
      PublicAccessBlockConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-bucketname
       */
      BucketName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-corsconfiguration
       */
      CorsConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-ownershipcontrols
       */
      OwnershipControls?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-objectlockconfiguration
       */
      ObjectLockConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-objectlockenabled
       */
      ObjectLockEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-loggingconfiguration
       */
      LoggingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-replicationconfiguration
       */
      ReplicationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucket.html#cfn-s3-bucket-tags
       */
      Tags?: {}[];
    }
    
    
    interface Bucket extends Resource<"AWS::S3::Bucket">, BucketProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Bucket(id: string, props: BucketProps): Promise<Bucket>;
  }
  namespace S3 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucketpolicy.html
     */
    interface BucketPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucketpolicy.html#cfn-s3-bucketpolicy-bucket
       */
      Bucket: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-bucketpolicy.html#cfn-s3-bucketpolicy-policydocument
       */
      PolicyDocument: {
        [k: string]: unknown;
      };
    }
    
    
    interface BucketPolicy extends Resource<"AWS::S3::BucketPolicy">, BucketPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BucketPolicy(id: string, props: BucketPolicyProps): Promise<BucketPolicy>;
  }
  namespace S3 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-multiregionaccesspoint.html
     */
    interface MultiRegionAccessPointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-multiregionaccesspoint.html#cfn-s3-multiregionaccesspoint-publicaccessblockconfiguration
       */
      PublicAccessBlockConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-multiregionaccesspoint.html#cfn-s3-multiregionaccesspoint-regions
       */
      Regions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-multiregionaccesspoint.html#cfn-s3-multiregionaccesspoint-name
       */
      Name?: string;
    }
    
    
    interface MultiRegionAccessPoint extends Resource<"AWS::S3::MultiRegionAccessPoint">, MultiRegionAccessPointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MultiRegionAccessPoint(id: string, props: MultiRegionAccessPointProps): Promise<MultiRegionAccessPoint>;
  }
  namespace S3 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-multiregionaccesspointpolicy.html
     */
    interface MultiRegionAccessPointPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-multiregionaccesspointpolicy.html#cfn-s3-multiregionaccesspointpolicy-policy
       */
      Policy: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-multiregionaccesspointpolicy.html#cfn-s3-multiregionaccesspointpolicy-mrapname
       */
      MrapName: string;
    }
    
    
    interface MultiRegionAccessPointPolicy extends Resource<"AWS::S3::MultiRegionAccessPointPolicy">, MultiRegionAccessPointPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MultiRegionAccessPointPolicy(id: string, props: MultiRegionAccessPointPolicyProps): Promise<MultiRegionAccessPointPolicy>;
  }
  namespace S3 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelens.html
     */
    interface StorageLensProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelens.html#cfn-s3-storagelens-storagelensconfiguration
       */
      StorageLensConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelens.html#cfn-s3-storagelens-tags
       */
      Tags?: {}[];
    }
    
    
    interface StorageLens extends Resource<"AWS::S3::StorageLens">, StorageLensProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StorageLens(id: string, props: StorageLensProps): Promise<StorageLens>;
  }
  namespace S3 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelensgroup.html
     */
    interface StorageLensGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelensgroup.html#cfn-s3-storagelensgroup-filter
       */
      Filter: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelensgroup.html#cfn-s3-storagelensgroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-storagelensgroup.html#cfn-s3-storagelensgroup-name
       */
      Name: string;
    }
    
    
    interface StorageLensGroup extends Resource<"AWS::S3::StorageLensGroup">, StorageLensGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StorageLensGroup(id: string, props: StorageLensGroupProps): Promise<StorageLensGroup>;
  }
  namespace S3Express {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3express-bucketpolicy.html
     */
    interface BucketPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3express-bucketpolicy.html#cfn-s3express-bucketpolicy-bucket
       */
      Bucket: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3express-bucketpolicy.html#cfn-s3express-bucketpolicy-policydocument
       */
      PolicyDocument: {
        [k: string]: unknown;
      };
    }
    
    
    interface BucketPolicy extends Resource<"AWS::S3Express::BucketPolicy">, BucketPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BucketPolicy(id: string, props: BucketPolicyProps): Promise<BucketPolicy>;
  }
  namespace S3Express {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3express-directorybucket.html
     */
    interface DirectoryBucketProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3express-directorybucket.html#cfn-s3express-directorybucket-bucketname
       */
      BucketName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3express-directorybucket.html#cfn-s3express-directorybucket-bucketencryption
       */
      BucketEncryption?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3express-directorybucket.html#cfn-s3express-directorybucket-dataredundancy
       */
      DataRedundancy: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3express-directorybucket.html#cfn-s3express-directorybucket-lifecycleconfiguration
       */
      LifecycleConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3express-directorybucket.html#cfn-s3express-directorybucket-locationname
       */
      LocationName: string;
    }
    
    
    interface DirectoryBucket extends Resource<"AWS::S3Express::DirectoryBucket">, DirectoryBucketProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DirectoryBucket(id: string, props: DirectoryBucketProps): Promise<DirectoryBucket>;
  }
  namespace S3ObjectLambda {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html
     */
    interface AccessPointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html#cfn-s3objectlambda-accesspoint-objectlambdaconfiguration
       */
      ObjectLambdaConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html#cfn-s3objectlambda-accesspoint-name
       */
      Name?: string;
    }
    
    
    interface AccessPoint extends Resource<"AWS::S3ObjectLambda::AccessPoint">, AccessPointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccessPoint(id: string, props: AccessPointProps): Promise<AccessPoint>;
  }
  namespace S3ObjectLambda {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html
     */
    interface AccessPointPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html#cfn-s3objectlambda-accesspointpolicy-policydocument
       */
      PolicyDocument: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html#cfn-s3objectlambda-accesspointpolicy-objectlambdaaccesspoint
       */
      ObjectLambdaAccessPoint: string;
    }
    
    
    interface AccessPointPolicy extends Resource<"AWS::S3ObjectLambda::AccessPointPolicy">, AccessPointPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccessPointPolicy(id: string, props: AccessPointPolicyProps): Promise<AccessPointPolicy>;
  }
  namespace S3Outposts {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-accesspoint.html
     */
    interface AccessPointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-accesspoint.html#cfn-s3outposts-accesspoint-policy
       */
      Policy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-accesspoint.html#cfn-s3outposts-accesspoint-bucket
       */
      Bucket: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-accesspoint.html#cfn-s3outposts-accesspoint-vpcconfiguration
       */
      VpcConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-accesspoint.html#cfn-s3outposts-accesspoint-name
       */
      Name: string;
    }
    
    
    interface AccessPoint extends Resource<"AWS::S3Outposts::AccessPoint">, AccessPointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccessPoint(id: string, props: AccessPointProps): Promise<AccessPoint>;
  }
  namespace S3Outposts {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-bucket.html
     */
    interface BucketProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-bucket.html#cfn-s3outposts-bucket-outpostid
       */
      OutpostId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-bucket.html#cfn-s3outposts-bucket-bucketname
       */
      BucketName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-bucket.html#cfn-s3outposts-bucket-lifecycleconfiguration
       */
      LifecycleConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-bucket.html#cfn-s3outposts-bucket-tags
       */
      Tags?: {}[];
    }
    
    
    interface Bucket extends Resource<"AWS::S3Outposts::Bucket">, BucketProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Bucket(id: string, props: BucketProps): Promise<Bucket>;
  }
  namespace S3Outposts {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-bucketpolicy.html
     */
    interface BucketPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-bucketpolicy.html#cfn-s3outposts-bucketpolicy-bucket
       */
      Bucket: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-bucketpolicy.html#cfn-s3outposts-bucketpolicy-policydocument
       */
      PolicyDocument: {
        [k: string]: unknown;
      };
    }
    
    
    interface BucketPolicy extends Resource<"AWS::S3Outposts::BucketPolicy">, BucketPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BucketPolicy(id: string, props: BucketPolicyProps): Promise<BucketPolicy>;
  }
  namespace S3Outposts {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-endpoint.html
     */
    interface EndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-endpoint.html#cfn-s3outposts-endpoint-outpostid
       */
      OutpostId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-endpoint.html#cfn-s3outposts-endpoint-securitygroupid
       */
      SecurityGroupId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-endpoint.html#cfn-s3outposts-endpoint-failedreason
       */
      FailedReason?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-endpoint.html#cfn-s3outposts-endpoint-subnetid
       */
      SubnetId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-endpoint.html#cfn-s3outposts-endpoint-accesstype
       */
      AccessType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3outposts-endpoint.html#cfn-s3outposts-endpoint-customerownedipv4pool
       */
      CustomerOwnedIpv4Pool?: string;
    }
    
    
    interface Endpoint extends Resource<"AWS::S3Outposts::Endpoint">, EndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Endpoint(id: string, props: EndpointProps): Promise<Endpoint>;
  }
  namespace S3Tables {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3tables-tablebucket.html
     */
    interface TableBucketProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3tables-tablebucket.html#cfn-s3tables-tablebucket-tablebucketname
       */
      TableBucketName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3tables-tablebucket.html#cfn-s3tables-tablebucket-encryptionconfiguration
       */
      EncryptionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3tables-tablebucket.html#cfn-s3tables-tablebucket-unreferencedfileremoval
       */
      UnreferencedFileRemoval?: {};
    }
    
    
    interface TableBucket extends Resource<"AWS::S3Tables::TableBucket">, TableBucketProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TableBucket(id: string, props: TableBucketProps): Promise<TableBucket>;
  }
  namespace S3Tables {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3tables-tablebucketpolicy.html
     */
    interface TableBucketPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3tables-tablebucketpolicy.html#cfn-s3tables-tablebucketpolicy-tablebucketarn
       */
      TableBucketARN: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3tables-tablebucketpolicy.html#cfn-s3tables-tablebucketpolicy-resourcepolicy
       */
      ResourcePolicy: {
        [k: string]: unknown;
      };
    }
    
    
    interface TableBucketPolicy extends Resource<"AWS::S3Tables::TableBucketPolicy">, TableBucketPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TableBucketPolicy(id: string, props: TableBucketPolicyProps): Promise<TableBucketPolicy>;
  }
  namespace SDB {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-simpledb.html
     */
    interface DomainProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-simpledb.html#cfn-sdb-domain-description
       */
      Description?: string;
    }
    
    
    interface Domain extends Resource<"AWS::SDB::Domain">, DomainProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Domain(id: string, props: DomainProps): Promise<Domain>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationset.html
     */
    interface ConfigurationSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationset.html#cfn-ses-configurationset-sendingoptions
       */
      SendingOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationset.html#cfn-ses-configurationset-suppressionoptions
       */
      SuppressionOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationset.html#cfn-ses-configurationset-trackingoptions
       */
      TrackingOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationset.html#cfn-ses-configurationset-reputationoptions
       */
      ReputationOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationset.html#cfn-ses-configurationset-vdmoptions
       */
      VdmOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationset.html#cfn-ses-configurationset-deliveryoptions
       */
      DeliveryOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationset.html#cfn-ses-configurationset-name
       */
      Name?: string;
    }
    
    
    interface ConfigurationSet extends Resource<"AWS::SES::ConfigurationSet">, ConfigurationSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConfigurationSet(id: string, props: ConfigurationSetProps): Promise<ConfigurationSet>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationseteventdestination.html
     */
    interface ConfigurationSetEventDestinationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationseteventdestination.html#cfn-ses-configurationseteventdestination-configurationsetname
       */
      ConfigurationSetName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-configurationseteventdestination.html#cfn-ses-configurationseteventdestination-eventdestination
       */
      EventDestination: {};
    }
    
    
    interface ConfigurationSetEventDestination extends Resource<"AWS::SES::ConfigurationSetEventDestination">, ConfigurationSetEventDestinationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConfigurationSetEventDestination(id: string, props: ConfigurationSetEventDestinationProps): Promise<ConfigurationSetEventDestination>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-contactlist.html
     */
    interface ContactListProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-contactlist.html#cfn-ses-contactlist-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-contactlist.html#cfn-ses-contactlist-topics
       */
      Topics?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-contactlist.html#cfn-ses-contactlist-contactlistname
       */
      ContactListName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-contactlist.html#cfn-ses-contactlist-tags
       */
      Tags?: {}[];
    }
    
    
    interface ContactList extends Resource<"AWS::SES::ContactList">, ContactListProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ContactList(id: string, props: ContactListProps): Promise<ContactList>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-dedicatedippool.html
     */
    interface DedicatedIpPoolProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-dedicatedippool.html#cfn-ses-dedicatedippool-poolname
       */
      PoolName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-dedicatedippool.html#cfn-ses-dedicatedippool-scalingmode
       */
      ScalingMode?: string;
    }
    
    
    interface DedicatedIpPool extends Resource<"AWS::SES::DedicatedIpPool">, DedicatedIpPoolProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DedicatedIpPool(id: string, props: DedicatedIpPoolProps): Promise<DedicatedIpPool>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-emailidentity.html
     */
    interface EmailIdentityProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-emailidentity.html#cfn-ses-emailidentity-configurationsetattributes
       */
      ConfigurationSetAttributes?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-emailidentity.html#cfn-ses-emailidentity-emailidentity
       */
      EmailIdentity: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-emailidentity.html#cfn-ses-emailidentity-dkimsigningattributes
       */
      DkimSigningAttributes?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-emailidentity.html#cfn-ses-emailidentity-dkimattributes
       */
      DkimAttributes?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-emailidentity.html#cfn-ses-emailidentity-feedbackattributes
       */
      FeedbackAttributes?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-emailidentity.html#cfn-ses-emailidentity-mailfromattributes
       */
      MailFromAttributes?: {};
    }
    
    
    interface EmailIdentity extends Resource<"AWS::SES::EmailIdentity">, EmailIdentityProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EmailIdentity(id: string, props: EmailIdentityProps): Promise<EmailIdentity>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageraddoninstance.html
     */
    interface MailManagerAddonInstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageraddoninstance.html#cfn-ses-mailmanageraddoninstance-addonsubscriptionid
       */
      AddonSubscriptionId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageraddoninstance.html#cfn-ses-mailmanageraddoninstance-tags
       */
      Tags?: {}[];
    }
    
    
    interface MailManagerAddonInstance extends Resource<"AWS::SES::MailManagerAddonInstance">, MailManagerAddonInstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MailManagerAddonInstance(id: string, props: MailManagerAddonInstanceProps): Promise<MailManagerAddonInstance>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageraddonsubscription.html
     */
    interface MailManagerAddonSubscriptionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageraddonsubscription.html#cfn-ses-mailmanageraddonsubscription-addonname
       */
      AddonName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageraddonsubscription.html#cfn-ses-mailmanageraddonsubscription-tags
       */
      Tags?: {}[];
    }
    
    
    interface MailManagerAddonSubscription extends Resource<"AWS::SES::MailManagerAddonSubscription">, MailManagerAddonSubscriptionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MailManagerAddonSubscription(id: string, props: MailManagerAddonSubscriptionProps): Promise<MailManagerAddonSubscription>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerarchive.html
     */
    interface MailManagerArchiveProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerarchive.html#cfn-ses-mailmanagerarchive-kmskeyarn
       */
      KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerarchive.html#cfn-ses-mailmanagerarchive-archivename
       */
      ArchiveName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerarchive.html#cfn-ses-mailmanagerarchive-retention
       */
      Retention?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerarchive.html#cfn-ses-mailmanagerarchive-tags
       */
      Tags?: {}[];
    }
    
    
    interface MailManagerArchive extends Resource<"AWS::SES::MailManagerArchive">, MailManagerArchiveProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MailManagerArchive(id: string, props: MailManagerArchiveProps): Promise<MailManagerArchive>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageringresspoint.html
     */
    interface MailManagerIngressPointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageringresspoint.html#cfn-ses-mailmanageringresspoint-rulesetid
       */
      RuleSetId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageringresspoint.html#cfn-ses-mailmanageringresspoint-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageringresspoint.html#cfn-ses-mailmanageringresspoint-trafficpolicyid
       */
      TrafficPolicyId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageringresspoint.html#cfn-ses-mailmanageringresspoint-ingresspointname
       */
      IngressPointName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageringresspoint.html#cfn-ses-mailmanageringresspoint-statustoupdate
       */
      StatusToUpdate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageringresspoint.html#cfn-ses-mailmanageringresspoint-networkconfiguration
       */
      NetworkConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageringresspoint.html#cfn-ses-mailmanageringresspoint-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanageringresspoint.html#cfn-ses-mailmanageringresspoint-ingresspointconfiguration
       */
      IngressPointConfiguration?: {};
    }
    
    
    interface MailManagerIngressPoint extends Resource<"AWS::SES::MailManagerIngressPoint">, MailManagerIngressPointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MailManagerIngressPoint(id: string, props: MailManagerIngressPointProps): Promise<MailManagerIngressPoint>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerrelay.html
     */
    interface MailManagerRelayProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerrelay.html#cfn-ses-mailmanagerrelay-authentication
       */
      Authentication: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerrelay.html#cfn-ses-mailmanagerrelay-servername
       */
      ServerName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerrelay.html#cfn-ses-mailmanagerrelay-relayname
       */
      RelayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerrelay.html#cfn-ses-mailmanagerrelay-serverport
       */
      ServerPort: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerrelay.html#cfn-ses-mailmanagerrelay-tags
       */
      Tags?: {}[];
    }
    
    
    interface MailManagerRelay extends Resource<"AWS::SES::MailManagerRelay">, MailManagerRelayProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MailManagerRelay(id: string, props: MailManagerRelayProps): Promise<MailManagerRelay>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerruleset.html
     */
    interface MailManagerRuleSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerruleset.html#cfn-ses-mailmanagerruleset-rulesetname
       */
      RuleSetName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerruleset.html#cfn-ses-mailmanagerruleset-rules
       */
      Rules: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagerruleset.html#cfn-ses-mailmanagerruleset-tags
       */
      Tags?: {}[];
    }
    
    
    interface MailManagerRuleSet extends Resource<"AWS::SES::MailManagerRuleSet">, MailManagerRuleSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MailManagerRuleSet(id: string, props: MailManagerRuleSetProps): Promise<MailManagerRuleSet>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagertrafficpolicy.html
     */
    interface MailManagerTrafficPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagertrafficpolicy.html#cfn-ses-mailmanagertrafficpolicy-defaultaction
       */
      DefaultAction: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagertrafficpolicy.html#cfn-ses-mailmanagertrafficpolicy-policystatements
       */
      PolicyStatements: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagertrafficpolicy.html#cfn-ses-mailmanagertrafficpolicy-trafficpolicyname
       */
      TrafficPolicyName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagertrafficpolicy.html#cfn-ses-mailmanagertrafficpolicy-maxmessagesizebytes
       */
      MaxMessageSizeBytes?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-mailmanagertrafficpolicy.html#cfn-ses-mailmanagertrafficpolicy-tags
       */
      Tags?: {}[];
    }
    
    
    interface MailManagerTrafficPolicy extends Resource<"AWS::SES::MailManagerTrafficPolicy">, MailManagerTrafficPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MailManagerTrafficPolicy(id: string, props: MailManagerTrafficPolicyProps): Promise<MailManagerTrafficPolicy>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptfilter.html
     */
    interface ReceiptFilterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptfilter.html#cfn-ses-receiptfilter-filter
       */
      Filter: {};
    }
    
    
    interface ReceiptFilter extends Resource<"AWS::SES::ReceiptFilter">, ReceiptFilterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReceiptFilter(id: string, props: ReceiptFilterProps): Promise<ReceiptFilter>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptrule.html
     */
    interface ReceiptRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptrule.html#cfn-ses-receiptrule-after
       */
      After?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptrule.html#cfn-ses-receiptrule-rule
       */
      Rule: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptrule.html#cfn-ses-receiptrule-rulesetname
       */
      RuleSetName: string;
    }
    
    
    interface ReceiptRule extends Resource<"AWS::SES::ReceiptRule">, ReceiptRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReceiptRule(id: string, props: ReceiptRuleProps): Promise<ReceiptRule>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptruleset.html
     */
    interface ReceiptRuleSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptruleset.html#cfn-ses-receiptruleset-rulesetname
       */
      RuleSetName?: string;
    }
    
    
    interface ReceiptRuleSet extends Resource<"AWS::SES::ReceiptRuleSet">, ReceiptRuleSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReceiptRuleSet(id: string, props: ReceiptRuleSetProps): Promise<ReceiptRuleSet>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-template.html
     */
    interface TemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-template.html#cfn-ses-template-template
       */
      Template?: {};
    }
    
    
    interface Template extends Resource<"AWS::SES::Template">, TemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Template(id: string, props: TemplateProps): Promise<Template>;
  }
  namespace SES {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-vdmattributes.html
     */
    interface VdmAttributesProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-vdmattributes.html#cfn-ses-vdmattributes-dashboardattributes
       */
      DashboardAttributes?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-vdmattributes.html#cfn-ses-vdmattributes-guardianattributes
       */
      GuardianAttributes?: {};
    }
    
    
    interface VdmAttributes extends Resource<"AWS::SES::VdmAttributes">, VdmAttributesProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function VdmAttributes(id: string, props: VdmAttributesProps): Promise<VdmAttributes>;
  }
  namespace SNS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html
     */
    interface SubscriptionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-replaypolicy
       */
      ReplayPolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-rawmessagedelivery
       */
      RawMessageDelivery?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-endpoint
       */
      Endpoint?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-filterpolicy
       */
      FilterPolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-topicarn
       */
      TopicArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-redrivepolicy
       */
      RedrivePolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-deliverypolicy
       */
      DeliveryPolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-region
       */
      Region?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-subscriptionrolearn
       */
      SubscriptionRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-filterpolicyscope
       */
      FilterPolicyScope?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-subscription-protocol
       */
      Protocol: string;
    }
    
    
    interface Subscription extends Resource<"AWS::SNS::Subscription">, SubscriptionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Subscription(id: string, props: SubscriptionProps): Promise<Subscription>;
  }
  namespace SNS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html
     */
    interface TopicProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html#cfn-sns-topic-kmsmasterkeyid
       */
      KmsMasterKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html#cfn-sns-topic-tracingconfig
       */
      TracingConfig?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html#cfn-sns-topic-fifotopic
       */
      FifoTopic?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html#cfn-sns-topic-dataprotectionpolicy
       */
      DataProtectionPolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html#cfn-sns-topic-topicname
       */
      TopicName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html#cfn-sns-topic-signatureversion
       */
      SignatureVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html#cfn-sns-topic-deliverystatuslogging
       */
      DeliveryStatusLogging?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html#cfn-sns-topic-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html#cfn-sns-topic-contentbaseddeduplication
       */
      ContentBasedDeduplication?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html#cfn-sns-topic-subscription
       */
      Subscription?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html#cfn-sns-topic-fifothroughputscope
       */
      FifoThroughputScope?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html#cfn-sns-topic-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topic.html#cfn-sns-topic-archivepolicy
       */
      ArchivePolicy?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Topic extends Resource<"AWS::SNS::Topic">, TopicProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Topic(id: string, props: TopicProps): Promise<Topic>;
  }
  namespace SNS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topicinlinepolicy.html
     */
    interface TopicInlinePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topicinlinepolicy.html#cfn-sns-topicinlinepolicy-topicarn
       */
      TopicArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topicinlinepolicy.html#cfn-sns-topicinlinepolicy-policydocument
       */
      PolicyDocument: {
        [k: string]: unknown;
      };
    }
    
    
    interface TopicInlinePolicy extends Resource<"AWS::SNS::TopicInlinePolicy">, TopicInlinePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TopicInlinePolicy(id: string, props: TopicInlinePolicyProps): Promise<TopicInlinePolicy>;
  }
  namespace SNS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topicpolicy.html
     */
    interface TopicPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topicpolicy.html#cfn-sns-topicpolicy-topics
       */
      Topics: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-topicpolicy.html#cfn-sns-topicpolicy-policydocument
       */
      PolicyDocument: {
        [k: string]: unknown;
      };
    }
    
    
    interface TopicPolicy extends Resource<"AWS::SNS::TopicPolicy">, TopicPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TopicPolicy(id: string, props: TopicPolicyProps): Promise<TopicPolicy>;
  }
  namespace SQS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html
     */
    interface QueueProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-receivemessagewaittimeseconds
       */
      ReceiveMessageWaitTimeSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-fifothroughputlimit
       */
      FifoThroughputLimit?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-kmsmasterkeyid
       */
      KmsMasterKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-fifoqueue
       */
      FifoQueue?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-maximummessagesize
       */
      MaximumMessageSize?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-visibilitytimeout
       */
      VisibilityTimeout?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-kmsdatakeyreuseperiodseconds
       */
      KmsDataKeyReusePeriodSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-redriveallowpolicy
       */
      RedriveAllowPolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-sqsmanagedsseenabled
       */
      SqsManagedSseEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-delayseconds
       */
      DelaySeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-redrivepolicy
       */
      RedrivePolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-messageretentionperiod
       */
      MessageRetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-deduplicationscope
       */
      DeduplicationScope?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-contentbaseddeduplication
       */
      ContentBasedDeduplication?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-queuename
       */
      QueueName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-tags
       */
      Tags?: {}[];
    }
    
    
    interface Queue extends Resource<"AWS::SQS::Queue">, QueueProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Queue(id: string, props: QueueProps): Promise<Queue>;
  }
  namespace SQS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queueinlinepolicy.html
     */
    interface QueueInlinePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queueinlinepolicy.html#cfn-sqs-queueinlinepolicy-policydocument
       */
      PolicyDocument: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queueinlinepolicy.html#cfn-sqs-queueinlinepolicy-queue
       */
      Queue: string;
    }
    
    
    interface QueueInlinePolicy extends Resource<"AWS::SQS::QueueInlinePolicy">, QueueInlinePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function QueueInlinePolicy(id: string, props: QueueInlinePolicyProps): Promise<QueueInlinePolicy>;
  }
  namespace SQS {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queuepolicy.html
     */
    interface QueuePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queuepolicy.html#cfn-sqs-queuepolicy-policydocument
       */
      PolicyDocument: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queuepolicy.html#cfn-sqs-queuepolicy-queues
       */
      Queues: string[];
    }
    
    
    interface QueuePolicy extends Resource<"AWS::SQS::QueuePolicy">, QueuePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function QueuePolicy(id: string, props: QueuePolicyProps): Promise<QueuePolicy>;
  }
  namespace SSM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html
     */
    interface AssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-associationname
       */
      AssociationName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-calendarnames
       */
      CalendarNames?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-scheduleexpression
       */
      ScheduleExpression?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-maxerrors
       */
      MaxErrors?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-parameters
       */
      Parameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-instanceid
       */
      InstanceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-waitforsuccesstimeoutseconds
       */
      WaitForSuccessTimeoutSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-maxconcurrency
       */
      MaxConcurrency?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-complianceseverity
       */
      ComplianceSeverity?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-targets
       */
      Targets?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-synccompliance
       */
      SyncCompliance?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-outputlocation
       */
      OutputLocation?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-scheduleoffset
       */
      ScheduleOffset?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-applyonlyatcroninterval
       */
      ApplyOnlyAtCronInterval?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-documentversion
       */
      DocumentVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-association.html#cfn-ssm-association-automationtargetparametername
       */
      AutomationTargetParameterName?: string;
    }
    
    
    interface Association extends Resource<"AWS::SSM::Association">, AssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Association(id: string, props: AssociationProps): Promise<Association>;
  }
  namespace SSM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html
     */
    interface DocumentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-documentformat
       */
      DocumentFormat?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-requires
       */
      Requires?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-content
       */
      Content: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-targettype
       */
      TargetType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-documenttype
       */
      DocumentType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-versionname
       */
      VersionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-updatemethod
       */
      UpdateMethod?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-attachments
       */
      Attachments?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-name
       */
      Name?: string;
    }
    
    
    interface Document extends Resource<"AWS::SSM::Document">, DocumentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Document(id: string, props: DocumentProps): Promise<Document>;
  }
  namespace SSM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html
     */
    interface MaintenanceWindowProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html#cfn-ssm-maintenancewindow-startdate
       */
      StartDate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html#cfn-ssm-maintenancewindow-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html#cfn-ssm-maintenancewindow-allowunassociatedtargets
       */
      AllowUnassociatedTargets: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html#cfn-ssm-maintenancewindow-cutoff
       */
      Cutoff: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html#cfn-ssm-maintenancewindow-schedule
       */
      Schedule: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html#cfn-ssm-maintenancewindow-duration
       */
      Duration: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html#cfn-ssm-maintenancewindow-scheduleoffset
       */
      ScheduleOffset?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html#cfn-ssm-maintenancewindow-enddate
       */
      EndDate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html#cfn-ssm-maintenancewindow-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html#cfn-ssm-maintenancewindow-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindow.html#cfn-ssm-maintenancewindow-scheduletimezone
       */
      ScheduleTimezone?: string;
    }
    
    
    interface MaintenanceWindow extends Resource<"AWS::SSM::MaintenanceWindow">, MaintenanceWindowProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MaintenanceWindow(id: string, props: MaintenanceWindowProps): Promise<MaintenanceWindow>;
  }
  namespace SSM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtarget.html
     */
    interface MaintenanceWindowTargetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtarget.html#cfn-ssm-maintenancewindowtarget-ownerinformation
       */
      OwnerInformation?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtarget.html#cfn-ssm-maintenancewindowtarget-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtarget.html#cfn-ssm-maintenancewindowtarget-windowid
       */
      WindowId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtarget.html#cfn-ssm-maintenancewindowtarget-resourcetype
       */
      ResourceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtarget.html#cfn-ssm-maintenancewindowtarget-targets
       */
      Targets: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtarget.html#cfn-ssm-maintenancewindowtarget-name
       */
      Name?: string;
    }
    
    
    interface MaintenanceWindowTarget extends Resource<"AWS::SSM::MaintenanceWindowTarget">, MaintenanceWindowTargetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MaintenanceWindowTarget(id: string, props: MaintenanceWindowTargetProps): Promise<MaintenanceWindowTarget>;
  }
  namespace SSM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html
     */
    interface MaintenanceWindowTaskProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-maxerrors
       */
      MaxErrors?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-servicerolearn
       */
      ServiceRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-priority
       */
      Priority: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-maxconcurrency
       */
      MaxConcurrency?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-targets
       */
      Targets?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-taskarn
       */
      TaskArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-taskinvocationparameters
       */
      TaskInvocationParameters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-windowid
       */
      WindowId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-taskparameters
       */
      TaskParameters?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-tasktype
       */
      TaskType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-cutoffbehavior
       */
      CutoffBehavior?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-maintenancewindowtask.html#cfn-ssm-maintenancewindowtask-logginginfo
       */
      LoggingInfo?: {};
    }
    
    
    interface MaintenanceWindowTask extends Resource<"AWS::SSM::MaintenanceWindowTask">, MaintenanceWindowTaskProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MaintenanceWindowTask(id: string, props: MaintenanceWindowTaskProps): Promise<MaintenanceWindowTask>;
  }
  namespace SSM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html
     */
    interface ParameterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html#cfn-ssm-parameter-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html#cfn-ssm-parameter-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html#cfn-ssm-parameter-policies
       */
      Policies?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html#cfn-ssm-parameter-allowedpattern
       */
      AllowedPattern?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html#cfn-ssm-parameter-tier
       */
      Tier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html#cfn-ssm-parameter-value
       */
      Value: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html#cfn-ssm-parameter-datatype
       */
      DataType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html#cfn-ssm-parameter-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html#cfn-ssm-parameter-name
       */
      Name?: string;
    }
    
    
    interface Parameter extends Resource<"AWS::SSM::Parameter">, ParameterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Parameter(id: string, props: ParameterProps): Promise<Parameter>;
  }
  namespace SSM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html
     */
    interface PatchBaselineProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-operatingsystem
       */
      OperatingSystem?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-approvalrules
       */
      ApprovalRules?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-sources
       */
      Sources?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-rejectedpatches
       */
      RejectedPatches?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-approvedpatches
       */
      ApprovedPatches?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-rejectedpatchesaction
       */
      RejectedPatchesAction?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-patchgroups
       */
      PatchGroups?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-approvedpatchescompliancelevel
       */
      ApprovedPatchesComplianceLevel?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-approvedpatchesenablenonsecurity
       */
      ApprovedPatchesEnableNonSecurity?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-defaultbaseline
       */
      DefaultBaseline?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-globalfilters
       */
      GlobalFilters?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-tags
       */
      Tags?: {}[];
    }
    
    
    interface PatchBaseline extends Resource<"AWS::SSM::PatchBaseline">, PatchBaselineProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PatchBaseline(id: string, props: PatchBaselineProps): Promise<PatchBaseline>;
  }
  namespace SSM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html
     */
    interface ResourceDataSyncProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-s3destination
       */
      S3Destination?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-kmskeyarn
       */
      KMSKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-syncsource
       */
      SyncSource?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-bucketname
       */
      BucketName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-bucketregion
       */
      BucketRegion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-syncformat
       */
      SyncFormat?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-syncname
       */
      SyncName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-synctype
       */
      SyncType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcedatasync.html#cfn-ssm-resourcedatasync-bucketprefix
       */
      BucketPrefix?: string;
    }
    
    
    interface ResourceDataSync extends Resource<"AWS::SSM::ResourceDataSync">, ResourceDataSyncProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceDataSync(id: string, props: ResourceDataSyncProps): Promise<ResourceDataSync>;
  }
  namespace SSM {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcepolicy.html
     */
    interface ResourcePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcepolicy.html#cfn-ssm-resourcepolicy-policy
       */
      Policy: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-resourcepolicy.html#cfn-ssm-resourcepolicy-resourcearn
       */
      ResourceArn: string;
    }
    
    
    interface ResourcePolicy extends Resource<"AWS::SSM::ResourcePolicy">, ResourcePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourcePolicy(id: string, props: ResourcePolicyProps): Promise<ResourcePolicy>;
  }
  namespace SSMContacts {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html
     */
    interface ContactProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html#cfn-ssmcontacts-contact-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html#cfn-ssmcontacts-contact-alias
       */
      Alias: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html#cfn-ssmcontacts-contact-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contact.html#cfn-ssmcontacts-contact-plan
       */
      Plan?: {}[];
    }
    
    
    interface Contact extends Resource<"AWS::SSMContacts::Contact">, ContactProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Contact(id: string, props: ContactProps): Promise<Contact>;
  }
  namespace SSMContacts {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html
     */
    interface ContactChannelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channelname
       */
      ChannelName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channeladdress
       */
      ChannelAddress: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-contactid
       */
      ContactId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-channeltype
       */
      ChannelType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-contactchannel.html#cfn-ssmcontacts-contactchannel-deferactivation
       */
      DeferActivation?: boolean;
    }
    
    
    interface ContactChannel extends Resource<"AWS::SSMContacts::ContactChannel">, ContactChannelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ContactChannel(id: string, props: ContactChannelProps): Promise<ContactChannel>;
  }
  namespace SSMContacts {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-plan.html
     */
    interface PlanProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-plan.html#cfn-ssmcontacts-plan-rotationids
       */
      RotationIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-plan.html#cfn-ssmcontacts-plan-stages
       */
      Stages?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-plan.html#cfn-ssmcontacts-plan-contactid
       */
      ContactId: string;
    }
    
    
    interface Plan extends Resource<"AWS::SSMContacts::Plan">, PlanProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Plan(id: string, props: PlanProps): Promise<Plan>;
  }
  namespace SSMContacts {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-rotation.html
     */
    interface RotationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-rotation.html#cfn-ssmcontacts-rotation-recurrence
       */
      Recurrence: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-rotation.html#cfn-ssmcontacts-rotation-timezoneid
       */
      TimeZoneId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-rotation.html#cfn-ssmcontacts-rotation-starttime
       */
      StartTime: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-rotation.html#cfn-ssmcontacts-rotation-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-rotation.html#cfn-ssmcontacts-rotation-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmcontacts-rotation.html#cfn-ssmcontacts-rotation-contactids
       */
      ContactIds: string[];
    }
    
    
    interface Rotation extends Resource<"AWS::SSMContacts::Rotation">, RotationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Rotation(id: string, props: RotationProps): Promise<Rotation>;
  }
  namespace SSMIncidents {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-replicationset.html
     */
    interface ReplicationSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-replicationset.html#cfn-ssmincidents-replicationset-regions
       */
      Regions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-replicationset.html#cfn-ssmincidents-replicationset-deletionprotected
       */
      DeletionProtected?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-replicationset.html#cfn-ssmincidents-replicationset-tags
       */
      Tags?: {}[];
    }
    
    
    interface ReplicationSet extends Resource<"AWS::SSMIncidents::ReplicationSet">, ReplicationSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ReplicationSet(id: string, props: ReplicationSetProps): Promise<ReplicationSet>;
  }
  namespace SSMIncidents {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-responseplan.html
     */
    interface ResponsePlanProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-responseplan.html#cfn-ssmincidents-responseplan-chatchannel
       */
      ChatChannel?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-responseplan.html#cfn-ssmincidents-responseplan-integrations
       */
      Integrations?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-responseplan.html#cfn-ssmincidents-responseplan-actions
       */
      Actions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-responseplan.html#cfn-ssmincidents-responseplan-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-responseplan.html#cfn-ssmincidents-responseplan-incidenttemplate
       */
      IncidentTemplate: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-responseplan.html#cfn-ssmincidents-responseplan-engagements
       */
      Engagements?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-responseplan.html#cfn-ssmincidents-responseplan-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmincidents-responseplan.html#cfn-ssmincidents-responseplan-name
       */
      Name: string;
    }
    
    
    interface ResponsePlan extends Resource<"AWS::SSMIncidents::ResponsePlan">, ResponsePlanProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResponsePlan(id: string, props: ResponsePlanProps): Promise<ResponsePlan>;
  }
  namespace SSMQuickSetup {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmquicksetup-configurationmanager.html
     */
    interface ConfigurationManagerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmquicksetup-configurationmanager.html#cfn-ssmquicksetup-configurationmanager-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmquicksetup-configurationmanager.html#cfn-ssmquicksetup-configurationmanager-configurationdefinitions
       */
      ConfigurationDefinitions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmquicksetup-configurationmanager.html#cfn-ssmquicksetup-configurationmanager-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssmquicksetup-configurationmanager.html#cfn-ssmquicksetup-configurationmanager-name
       */
      Name?: string;
    }
    
    
    interface ConfigurationManager extends Resource<"AWS::SSMQuickSetup::ConfigurationManager">, ConfigurationManagerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConfigurationManager(id: string, props: ConfigurationManagerProps): Promise<ConfigurationManager>;
  }
  namespace SSO {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-application.html#cfn-sso-application-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-application.html#cfn-sso-application-applicationproviderarn
       */
      ApplicationProviderArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-application.html#cfn-sso-application-portaloptions
       */
      PortalOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-application.html#cfn-sso-application-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-application.html#cfn-sso-application-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-application.html#cfn-sso-application-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-application.html#cfn-sso-application-name
       */
      Name: string;
    }
    
    
    interface Application extends Resource<"AWS::SSO::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace SSO {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-applicationassignment.html
     */
    interface ApplicationAssignmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-applicationassignment.html#cfn-sso-applicationassignment-applicationarn
       */
      ApplicationArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-applicationassignment.html#cfn-sso-applicationassignment-principalid
       */
      PrincipalId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-applicationassignment.html#cfn-sso-applicationassignment-principaltype
       */
      PrincipalType: string;
    }
    
    
    interface ApplicationAssignment extends Resource<"AWS::SSO::ApplicationAssignment">, ApplicationAssignmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ApplicationAssignment(id: string, props: ApplicationAssignmentProps): Promise<ApplicationAssignment>;
  }
  namespace SSO {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-assignment.html
     */
    interface AssignmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-assignment.html#cfn-sso-assignment-principalid
       */
      PrincipalId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-assignment.html#cfn-sso-assignment-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-assignment.html#cfn-sso-assignment-targettype
       */
      TargetType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-assignment.html#cfn-sso-assignment-permissionsetarn
       */
      PermissionSetArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-assignment.html#cfn-sso-assignment-principaltype
       */
      PrincipalType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-assignment.html#cfn-sso-assignment-targetid
       */
      TargetId: string;
    }
    
    
    interface Assignment extends Resource<"AWS::SSO::Assignment">, AssignmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Assignment(id: string, props: AssignmentProps): Promise<Assignment>;
  }
  namespace SSO {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-instance.html
     */
    interface InstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-instance.html#cfn-sso-instance-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-instance.html#cfn-sso-instance-name
       */
      Name?: string;
    }
    
    
    interface Instance extends Resource<"AWS::SSO::Instance">, InstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Instance(id: string, props: InstanceProps): Promise<Instance>;
  }
  namespace SSO {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-instanceaccesscontrolattributeconfiguration.html
     */
    interface InstanceAccessControlAttributeConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-instanceaccesscontrolattributeconfiguration.html#cfn-sso-instanceaccesscontrolattributeconfiguration-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-instanceaccesscontrolattributeconfiguration.html#cfn-sso-instanceaccesscontrolattributeconfiguration-accesscontrolattributes
       */
      AccessControlAttributes?: {}[];
    }
    
    
    interface InstanceAccessControlAttributeConfiguration extends Resource<"AWS::SSO::InstanceAccessControlAttributeConfiguration">, InstanceAccessControlAttributeConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InstanceAccessControlAttributeConfiguration(id: string, props: InstanceAccessControlAttributeConfigurationProps): Promise<InstanceAccessControlAttributeConfiguration>;
  }
  namespace SSO {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html
     */
    interface PermissionSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html#cfn-sso-permissionset-relaystatetype
       */
      RelayStateType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html#cfn-sso-permissionset-customermanagedpolicyreferences
       */
      CustomerManagedPolicyReferences?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html#cfn-sso-permissionset-sessionduration
       */
      SessionDuration?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html#cfn-sso-permissionset-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html#cfn-sso-permissionset-instancearn
       */
      InstanceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html#cfn-sso-permissionset-inlinepolicy
       */
      InlinePolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html#cfn-sso-permissionset-managedpolicies
       */
      ManagedPolicies?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html#cfn-sso-permissionset-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html#cfn-sso-permissionset-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html#cfn-sso-permissionset-permissionsboundary
       */
      PermissionsBoundary?: {};
    }
    
    
    interface PermissionSet extends Resource<"AWS::SSO::PermissionSet">, PermissionSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PermissionSet(id: string, props: PermissionSetProps): Promise<PermissionSet>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html
     */
    interface AppProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html#cfn-sagemaker-app-domainid
       */
      DomainId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html#cfn-sagemaker-app-resourcespec
       */
      ResourceSpec?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html#cfn-sagemaker-app-apptype
       */
      AppType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html#cfn-sagemaker-app-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html#cfn-sagemaker-app-userprofilename
       */
      UserProfileName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html#cfn-sagemaker-app-appname
       */
      AppName: string;
    }
    
    
    interface App extends Resource<"AWS::SageMaker::App">, AppProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function App(id: string, props: AppProps): Promise<App>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html
     */
    interface AppImageConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html#cfn-sagemaker-appimageconfig-kernelgatewayimageconfig
       */
      KernelGatewayImageConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html#cfn-sagemaker-appimageconfig-codeeditorappimageconfig
       */
      CodeEditorAppImageConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html#cfn-sagemaker-appimageconfig-appimageconfigname
       */
      AppImageConfigName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html#cfn-sagemaker-appimageconfig-jupyterlabappimageconfig
       */
      JupyterLabAppImageConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-appimageconfig.html#cfn-sagemaker-appimageconfig-tags
       */
      Tags?: {}[];
    }
    
    
    interface AppImageConfig extends Resource<"AWS::SageMaker::AppImageConfig">, AppImageConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AppImageConfig(id: string, props: AppImageConfigProps): Promise<AppImageConfig>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html
     */
    interface ClusterProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html#cfn-sagemaker-cluster-vpcconfig
       */
      VpcConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html#cfn-sagemaker-cluster-noderecovery
       */
      NodeRecovery?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html#cfn-sagemaker-cluster-instancegroups
       */
      InstanceGroups: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html#cfn-sagemaker-cluster-clustername
       */
      ClusterName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html#cfn-sagemaker-cluster-orchestrator
       */
      Orchestrator?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html#cfn-sagemaker-cluster-tags
       */
      Tags?: {}[];
    }
    
    
    interface Cluster extends Resource<"AWS::SageMaker::Cluster">, ClusterProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Cluster(id: string, props: ClusterProps): Promise<Cluster>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-coderepository.html
     */
    interface CodeRepositoryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-coderepository.html#cfn-sagemaker-coderepository-coderepositoryname
       */
      CodeRepositoryName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-coderepository.html#cfn-sagemaker-coderepository-gitconfig
       */
      GitConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-coderepository.html#cfn-sagemaker-coderepository-tags
       */
      Tags?: {}[];
    }
    
    
    interface CodeRepository extends Resource<"AWS::SageMaker::CodeRepository">, CodeRepositoryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CodeRepository(id: string, props: CodeRepositoryProps): Promise<CodeRepository>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html
     */
    interface DataQualityJobDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html#cfn-sagemaker-dataqualityjobdefinition-dataqualityjobinput
       */
      DataQualityJobInput: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html#cfn-sagemaker-dataqualityjobdefinition-dataqualityappspecification
       */
      DataQualityAppSpecification: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html#cfn-sagemaker-dataqualityjobdefinition-endpointname
       */
      EndpointName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html#cfn-sagemaker-dataqualityjobdefinition-stoppingcondition
       */
      StoppingCondition?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html#cfn-sagemaker-dataqualityjobdefinition-jobdefinitionname
       */
      JobDefinitionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html#cfn-sagemaker-dataqualityjobdefinition-jobresources
       */
      JobResources: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html#cfn-sagemaker-dataqualityjobdefinition-networkconfig
       */
      NetworkConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html#cfn-sagemaker-dataqualityjobdefinition-dataqualityjoboutputconfig
       */
      DataQualityJobOutputConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html#cfn-sagemaker-dataqualityjobdefinition-dataqualitybaselineconfig
       */
      DataQualityBaselineConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html#cfn-sagemaker-dataqualityjobdefinition-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html#cfn-sagemaker-dataqualityjobdefinition-tags
       */
      Tags?: {}[];
    }
    
    
    interface DataQualityJobDefinition extends Resource<"AWS::SageMaker::DataQualityJobDefinition">, DataQualityJobDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataQualityJobDefinition(id: string, props: DataQualityJobDefinitionProps): Promise<DataQualityJobDefinition>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-device.html
     */
    interface DeviceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-device.html#cfn-sagemaker-device-devicefleetname
       */
      DeviceFleetName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-device.html#cfn-sagemaker-device-device
       */
      Device?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-device.html#cfn-sagemaker-device-tags
       */
      Tags?: {}[];
    }
    
    
    interface Device extends Resource<"AWS::SageMaker::Device">, DeviceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Device(id: string, props: DeviceProps): Promise<Device>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-devicefleet.html
     */
    interface DeviceFleetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-devicefleet.html#cfn-sagemaker-devicefleet-devicefleetname
       */
      DeviceFleetName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-devicefleet.html#cfn-sagemaker-devicefleet-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-devicefleet.html#cfn-sagemaker-devicefleet-outputconfig
       */
      OutputConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-devicefleet.html#cfn-sagemaker-devicefleet-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-devicefleet.html#cfn-sagemaker-devicefleet-tags
       */
      Tags?: {}[];
    }
    
    
    interface DeviceFleet extends Resource<"AWS::SageMaker::DeviceFleet">, DeviceFleetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DeviceFleet(id: string, props: DeviceFleetProps): Promise<DeviceFleet>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html
     */
    interface DomainProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-appnetworkaccesstype
       */
      AppNetworkAccessType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-defaultspacesettings
       */
      DefaultSpaceSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-domainname
       */
      DomainName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-appsecuritygroupmanagement
       */
      AppSecurityGroupManagement?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-defaultusersettings
       */
      DefaultUserSettings: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-authmode
       */
      AuthMode: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-domainsettings
       */
      DomainSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-tagpropagation
       */
      TagPropagation?: string;
    }
    
    
    interface Domain extends Resource<"AWS::SageMaker::Domain">, DomainProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Domain(id: string, props: DomainProps): Promise<Domain>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html
     */
    interface EndpointProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-retainallvariantproperties
       */
      RetainAllVariantProperties?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-endpointname
       */
      EndpointName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-excluderetainedvariantproperties
       */
      ExcludeRetainedVariantProperties?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-endpointconfigname
       */
      EndpointConfigName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-deploymentconfig
       */
      DeploymentConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-retaindeploymentconfig
       */
      RetainDeploymentConfig?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-tags
       */
      Tags?: {}[];
    }
    
    
    interface Endpoint extends Resource<"AWS::SageMaker::Endpoint">, EndpointProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Endpoint(id: string, props: EndpointProps): Promise<Endpoint>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html
     */
    interface EndpointConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html#cfn-sagemaker-endpointconfig-shadowproductionvariants
       */
      ShadowProductionVariants?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html#cfn-sagemaker-endpointconfig-datacaptureconfig
       */
      DataCaptureConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html#cfn-sagemaker-endpointconfig-executionrolearn
       */
      ExecutionRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html#cfn-sagemaker-endpointconfig-enablenetworkisolation
       */
      EnableNetworkIsolation?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html#cfn-sagemaker-endpointconfig-productionvariants
       */
      ProductionVariants: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html#cfn-sagemaker-endpointconfig-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html#cfn-sagemaker-endpointconfig-asyncinferenceconfig
       */
      AsyncInferenceConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html#cfn-sagemaker-endpointconfig-vpcconfig
       */
      VpcConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html#cfn-sagemaker-endpointconfig-endpointconfigname
       */
      EndpointConfigName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html#cfn-sagemaker-endpointconfig-explainerconfig
       */
      ExplainerConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpointconfig.html#cfn-sagemaker-endpointconfig-tags
       */
      Tags?: {}[];
    }
    
    
    interface EndpointConfig extends Resource<"AWS::SageMaker::EndpointConfig">, EndpointConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function EndpointConfig(id: string, props: EndpointConfigProps): Promise<EndpointConfig>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-featuregroup.html
     */
    interface FeatureGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-featuregroup.html#cfn-sagemaker-featuregroup-throughputconfig
       */
      ThroughputConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-featuregroup.html#cfn-sagemaker-featuregroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-featuregroup.html#cfn-sagemaker-featuregroup-offlinestoreconfig
       */
      OfflineStoreConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-featuregroup.html#cfn-sagemaker-featuregroup-featuredefinitions
       */
      FeatureDefinitions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-featuregroup.html#cfn-sagemaker-featuregroup-recordidentifierfeaturename
       */
      RecordIdentifierFeatureName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-featuregroup.html#cfn-sagemaker-featuregroup-eventtimefeaturename
       */
      EventTimeFeatureName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-featuregroup.html#cfn-sagemaker-featuregroup-featuregroupname
       */
      FeatureGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-featuregroup.html#cfn-sagemaker-featuregroup-onlinestoreconfig
       */
      OnlineStoreConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-featuregroup.html#cfn-sagemaker-featuregroup-rolearn
       */
      RoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-featuregroup.html#cfn-sagemaker-featuregroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface FeatureGroup extends Resource<"AWS::SageMaker::FeatureGroup">, FeatureGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FeatureGroup(id: string, props: FeatureGroupProps): Promise<FeatureGroup>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html
     */
    interface ImageProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html#cfn-sagemaker-image-imagename
       */
      ImageName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html#cfn-sagemaker-image-imagedisplayname
       */
      ImageDisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html#cfn-sagemaker-image-imagerolearn
       */
      ImageRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html#cfn-sagemaker-image-imagedescription
       */
      ImageDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html#cfn-sagemaker-image-tags
       */
      Tags?: {}[];
    }
    
    
    interface Image extends Resource<"AWS::SageMaker::Image">, ImageProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Image(id: string, props: ImageProps): Promise<Image>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html
     */
    interface ImageVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html#cfn-sagemaker-imageversion-imagename
       */
      ImageName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html#cfn-sagemaker-imageversion-horovod
       */
      Horovod?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html#cfn-sagemaker-imageversion-processor
       */
      Processor?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html#cfn-sagemaker-imageversion-jobtype
       */
      JobType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html#cfn-sagemaker-imageversion-alias
       */
      Alias?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html#cfn-sagemaker-imageversion-programminglang
       */
      ProgrammingLang?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html#cfn-sagemaker-imageversion-vendorguidance
       */
      VendorGuidance?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html#cfn-sagemaker-imageversion-mlframework
       */
      MLFramework?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html#cfn-sagemaker-imageversion-aliases
       */
      Aliases?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html#cfn-sagemaker-imageversion-releasenotes
       */
      ReleaseNotes?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-imageversion.html#cfn-sagemaker-imageversion-baseimage
       */
      BaseImage: string;
    }
    
    
    interface ImageVersion extends Resource<"AWS::SageMaker::ImageVersion">, ImageVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ImageVersion(id: string, props: ImageVersionProps): Promise<ImageVersion>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html
     */
    interface InferenceComponentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-endpointname
       */
      EndpointName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-variantname
       */
      VariantName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-inferencecomponentname
       */
      InferenceComponentName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-specification
       */
      Specification: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-runtimeconfig
       */
      RuntimeConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-deploymentconfig
       */
      DeploymentConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-endpointarn
       */
      EndpointArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-tags
       */
      Tags?: {}[];
    }
    
    
    interface InferenceComponent extends Resource<"AWS::SageMaker::InferenceComponent">, InferenceComponentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InferenceComponent(id: string, props: InferenceComponentProps): Promise<InferenceComponent>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html
     */
    interface InferenceExperimentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-datastorageconfig
       */
      DataStorageConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-statusreason
       */
      StatusReason?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-modelvariants
       */
      ModelVariants: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-shadowmodeconfig
       */
      ShadowModeConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-endpointname
       */
      EndpointName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-desiredstate
       */
      DesiredState?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-schedule
       */
      Schedule?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-kmskey
       */
      KmsKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-tags
       */
      Tags?: {}[];
    }
    
    
    interface InferenceExperiment extends Resource<"AWS::SageMaker::InferenceExperiment">, InferenceExperimentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InferenceExperiment(id: string, props: InferenceExperimentProps): Promise<InferenceExperiment>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-mlflowtrackingserver.html
     */
    interface MlflowTrackingServerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-mlflowtrackingserver.html#cfn-sagemaker-mlflowtrackingserver-trackingservername
       */
      TrackingServerName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-mlflowtrackingserver.html#cfn-sagemaker-mlflowtrackingserver-mlflowversion
       */
      MlflowVersion?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-mlflowtrackingserver.html#cfn-sagemaker-mlflowtrackingserver-weeklymaintenancewindowstart
       */
      WeeklyMaintenanceWindowStart?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-mlflowtrackingserver.html#cfn-sagemaker-mlflowtrackingserver-trackingserversize
       */
      TrackingServerSize?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-mlflowtrackingserver.html#cfn-sagemaker-mlflowtrackingserver-artifactstoreuri
       */
      ArtifactStoreUri: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-mlflowtrackingserver.html#cfn-sagemaker-mlflowtrackingserver-automaticmodelregistration
       */
      AutomaticModelRegistration?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-mlflowtrackingserver.html#cfn-sagemaker-mlflowtrackingserver-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-mlflowtrackingserver.html#cfn-sagemaker-mlflowtrackingserver-tags
       */
      Tags?: {}[];
    }
    
    
    interface MlflowTrackingServer extends Resource<"AWS::SageMaker::MlflowTrackingServer">, MlflowTrackingServerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MlflowTrackingServer(id: string, props: MlflowTrackingServerProps): Promise<MlflowTrackingServer>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html
     */
    interface ModelProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-executionrolearn
       */
      ExecutionRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-enablenetworkisolation
       */
      EnableNetworkIsolation?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-primarycontainer
       */
      PrimaryContainer?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-modelname
       */
      ModelName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-vpcconfig
       */
      VpcConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-containers
       */
      Containers?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-inferenceexecutionconfig
       */
      InferenceExecutionConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-tags
       */
      Tags?: {}[];
    }
    
    
    interface Model extends Resource<"AWS::SageMaker::Model">, ModelProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Model(id: string, props: ModelProps): Promise<Model>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html
     */
    interface ModelBiasJobDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html#cfn-sagemaker-modelbiasjobdefinition-modelbiasjobinput
       */
      ModelBiasJobInput: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html#cfn-sagemaker-modelbiasjobdefinition-modelbiasjoboutputconfig
       */
      ModelBiasJobOutputConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html#cfn-sagemaker-modelbiasjobdefinition-endpointname
       */
      EndpointName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html#cfn-sagemaker-modelbiasjobdefinition-stoppingcondition
       */
      StoppingCondition?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html#cfn-sagemaker-modelbiasjobdefinition-jobdefinitionname
       */
      JobDefinitionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html#cfn-sagemaker-modelbiasjobdefinition-jobresources
       */
      JobResources: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html#cfn-sagemaker-modelbiasjobdefinition-networkconfig
       */
      NetworkConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html#cfn-sagemaker-modelbiasjobdefinition-modelbiasbaselineconfig
       */
      ModelBiasBaselineConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html#cfn-sagemaker-modelbiasjobdefinition-modelbiasappspecification
       */
      ModelBiasAppSpecification: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html#cfn-sagemaker-modelbiasjobdefinition-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelbiasjobdefinition.html#cfn-sagemaker-modelbiasjobdefinition-tags
       */
      Tags?: {}[];
    }
    
    
    interface ModelBiasJobDefinition extends Resource<"AWS::SageMaker::ModelBiasJobDefinition">, ModelBiasJobDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ModelBiasJobDefinition(id: string, props: ModelBiasJobDefinitionProps): Promise<ModelBiasJobDefinition>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelcard.html
     */
    interface ModelCardProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelcard.html#cfn-sagemaker-modelcard-lastmodifiedby
       */
      LastModifiedBy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelcard.html#cfn-sagemaker-modelcard-modelcardname
       */
      ModelCardName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelcard.html#cfn-sagemaker-modelcard-modelcardstatus
       */
      ModelCardStatus: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelcard.html#cfn-sagemaker-modelcard-createdby
       */
      CreatedBy?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelcard.html#cfn-sagemaker-modelcard-securityconfig
       */
      SecurityConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelcard.html#cfn-sagemaker-modelcard-content
       */
      Content: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelcard.html#cfn-sagemaker-modelcard-tags
       */
      Tags?: {}[];
    }
    
    
    interface ModelCard extends Resource<"AWS::SageMaker::ModelCard">, ModelCardProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ModelCard(id: string, props: ModelCardProps): Promise<ModelCard>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html
     */
    interface ModelExplainabilityJobDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityjoboutputconfig
       */
      ModelExplainabilityJobOutputConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html#cfn-sagemaker-modelexplainabilityjobdefinition-endpointname
       */
      EndpointName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html#cfn-sagemaker-modelexplainabilityjobdefinition-stoppingcondition
       */
      StoppingCondition?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilitybaselineconfig
       */
      ModelExplainabilityBaselineConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html#cfn-sagemaker-modelexplainabilityjobdefinition-jobdefinitionname
       */
      JobDefinitionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html#cfn-sagemaker-modelexplainabilityjobdefinition-jobresources
       */
      JobResources: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html#cfn-sagemaker-modelexplainabilityjobdefinition-networkconfig
       */
      NetworkConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html#cfn-sagemaker-modelexplainabilityjobdefinition-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityjobinput
       */
      ModelExplainabilityJobInput: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html#cfn-sagemaker-modelexplainabilityjobdefinition-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelexplainabilityjobdefinition.html#cfn-sagemaker-modelexplainabilityjobdefinition-modelexplainabilityappspecification
       */
      ModelExplainabilityAppSpecification: {};
    }
    
    
    interface ModelExplainabilityJobDefinition extends Resource<"AWS::SageMaker::ModelExplainabilityJobDefinition">, ModelExplainabilityJobDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ModelExplainabilityJobDefinition(id: string, props: ModelExplainabilityJobDefinitionProps): Promise<ModelExplainabilityJobDefinition>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html
     */
    interface ModelPackageProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-driftcheckbaselines
       */
      DriftCheckBaselines?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-modelmetrics
       */
      ModelMetrics?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-task
       */
      Task?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-customermetadataproperties
       */
      CustomerMetadataProperties?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-sourceuri
       */
      SourceUri?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-modelapprovalstatus
       */
      ModelApprovalStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-modelpackageversion
       */
      ModelPackageVersion?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-metadataproperties
       */
      MetadataProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-sourcealgorithmspecification
       */
      SourceAlgorithmSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-modelpackagestatusdetails
       */
      ModelPackageStatusDetails?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-modelpackagedescription
       */
      ModelPackageDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-additionalinferencespecificationstoadd
       */
      AdditionalInferenceSpecificationsToAdd?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-securityconfig
       */
      SecurityConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-inferencespecification
       */
      InferenceSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-samplepayloadurl
       */
      SamplePayloadUrl?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-certifyformarketplace
       */
      CertifyForMarketplace?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-modelpackagegroupname
       */
      ModelPackageGroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-approvaldescription
       */
      ApprovalDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-modelcard
       */
      ModelCard?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-validationspecification
       */
      ValidationSpecification?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-skipmodelvalidation
       */
      SkipModelValidation?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-modelpackagename
       */
      ModelPackageName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-lastmodifiedtime
       */
      LastModifiedTime?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-clienttoken
       */
      ClientToken?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-domain
       */
      Domain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackage.html#cfn-sagemaker-modelpackage-additionalinferencespecifications
       */
      AdditionalInferenceSpecifications?: {}[];
    }
    
    
    interface ModelPackage extends Resource<"AWS::SageMaker::ModelPackage">, ModelPackageProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ModelPackage(id: string, props: ModelPackageProps): Promise<ModelPackage>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackagegroup.html
     */
    interface ModelPackageGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackagegroup.html#cfn-sagemaker-modelpackagegroup-modelpackagegroupname
       */
      ModelPackageGroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackagegroup.html#cfn-sagemaker-modelpackagegroup-modelpackagegroupdescription
       */
      ModelPackageGroupDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackagegroup.html#cfn-sagemaker-modelpackagegroup-modelpackagegrouppolicy
       */
      ModelPackageGroupPolicy?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackagegroup.html#cfn-sagemaker-modelpackagegroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface ModelPackageGroup extends Resource<"AWS::SageMaker::ModelPackageGroup">, ModelPackageGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ModelPackageGroup(id: string, props: ModelPackageGroupProps): Promise<ModelPackageGroup>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html
     */
    interface ModelQualityJobDefinitionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html#cfn-sagemaker-modelqualityjobdefinition-modelqualityappspecification
       */
      ModelQualityAppSpecification: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html#cfn-sagemaker-modelqualityjobdefinition-endpointname
       */
      EndpointName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html#cfn-sagemaker-modelqualityjobdefinition-stoppingcondition
       */
      StoppingCondition?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html#cfn-sagemaker-modelqualityjobdefinition-modelqualitybaselineconfig
       */
      ModelQualityBaselineConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html#cfn-sagemaker-modelqualityjobdefinition-jobdefinitionname
       */
      JobDefinitionName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html#cfn-sagemaker-modelqualityjobdefinition-modelqualityjobinput
       */
      ModelQualityJobInput: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html#cfn-sagemaker-modelqualityjobdefinition-jobresources
       */
      JobResources: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html#cfn-sagemaker-modelqualityjobdefinition-networkconfig
       */
      NetworkConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html#cfn-sagemaker-modelqualityjobdefinition-modelqualityjoboutputconfig
       */
      ModelQualityJobOutputConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html#cfn-sagemaker-modelqualityjobdefinition-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelqualityjobdefinition.html#cfn-sagemaker-modelqualityjobdefinition-tags
       */
      Tags?: {}[];
    }
    
    
    interface ModelQualityJobDefinition extends Resource<"AWS::SageMaker::ModelQualityJobDefinition">, ModelQualityJobDefinitionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ModelQualityJobDefinition(id: string, props: ModelQualityJobDefinitionProps): Promise<ModelQualityJobDefinition>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html
     */
    interface MonitoringScheduleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringschedulestatus
       */
      MonitoringScheduleStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig
       */
      MonitoringScheduleConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringschedulename
       */
      MonitoringScheduleName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-endpointname
       */
      EndpointName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-failurereason
       */
      FailureReason?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-lastmonitoringexecutionsummary
       */
      LastMonitoringExecutionSummary?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-tags
       */
      Tags?: {}[];
    }
    
    
    interface MonitoringSchedule extends Resource<"AWS::SageMaker::MonitoringSchedule">, MonitoringScheduleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MonitoringSchedule(id: string, props: MonitoringScheduleProps): Promise<MonitoringSchedule>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html
     */
    interface NotebookInstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-volumesizeingb
       */
      VolumeSizeInGB?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-additionalcoderepositories
       */
      AdditionalCodeRepositories?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-defaultcoderepository
       */
      DefaultCodeRepository?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-directinternetaccess
       */
      DirectInternetAccess?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-platformidentifier
       */
      PlatformIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-acceleratortypes
       */
      AcceleratorTypes?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-subnetid
       */
      SubnetId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-instancemetadataserviceconfiguration
       */
      InstanceMetadataServiceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-rootaccess
       */
      RootAccess?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-notebookinstancename
       */
      NotebookInstanceName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-instancetype
       */
      InstanceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-lifecycleconfigname
       */
      LifecycleConfigName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-tags
       */
      Tags?: {}[];
    }
    
    
    interface NotebookInstance extends Resource<"AWS::SageMaker::NotebookInstance">, NotebookInstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NotebookInstance(id: string, props: NotebookInstanceProps): Promise<NotebookInstance>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstancelifecycleconfig.html
     */
    interface NotebookInstanceLifecycleConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstancelifecycleconfig.html#cfn-sagemaker-notebookinstancelifecycleconfig-onstart
       */
      OnStart?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstancelifecycleconfig.html#cfn-sagemaker-notebookinstancelifecycleconfig-notebookinstancelifecycleconfigname
       */
      NotebookInstanceLifecycleConfigName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstancelifecycleconfig.html#cfn-sagemaker-notebookinstancelifecycleconfig-oncreate
       */
      OnCreate?: {}[];
    }
    
    
    interface NotebookInstanceLifecycleConfig extends Resource<"AWS::SageMaker::NotebookInstanceLifecycleConfig">, NotebookInstanceLifecycleConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NotebookInstanceLifecycleConfig(id: string, props: NotebookInstanceLifecycleConfigProps): Promise<NotebookInstanceLifecycleConfig>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-partnerapp.html
     */
    interface PartnerAppProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-partnerapp.html#cfn-sagemaker-partnerapp-executionrolearn
       */
      ExecutionRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-partnerapp.html#cfn-sagemaker-partnerapp-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-partnerapp.html#cfn-sagemaker-partnerapp-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-partnerapp.html#cfn-sagemaker-partnerapp-enableiamsessionbasedidentity
       */
      EnableIamSessionBasedIdentity?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-partnerapp.html#cfn-sagemaker-partnerapp-tier
       */
      Tier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-partnerapp.html#cfn-sagemaker-partnerapp-applicationconfig
       */
      ApplicationConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-partnerapp.html#cfn-sagemaker-partnerapp-authtype
       */
      AuthType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-partnerapp.html#cfn-sagemaker-partnerapp-maintenanceconfig
       */
      MaintenanceConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-partnerapp.html#cfn-sagemaker-partnerapp-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-partnerapp.html#cfn-sagemaker-partnerapp-name
       */
      Name: string;
    }
    
    
    interface PartnerApp extends Resource<"AWS::SageMaker::PartnerApp">, PartnerAppProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PartnerApp(id: string, props: PartnerAppProps): Promise<PartnerApp>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html
     */
    interface PipelineProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html#cfn-sagemaker-pipeline-pipelinename
       */
      PipelineName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html#cfn-sagemaker-pipeline-parallelismconfiguration
       */
      ParallelismConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html#cfn-sagemaker-pipeline-pipelinedescription
       */
      PipelineDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html#cfn-sagemaker-pipeline-pipelinedisplayname
       */
      PipelineDisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html#cfn-sagemaker-pipeline-pipelinedefinition
       */
      PipelineDefinition: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html#cfn-sagemaker-pipeline-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html#cfn-sagemaker-pipeline-tags
       */
      Tags?: {}[];
    }
    
    
    interface Pipeline extends Resource<"AWS::SageMaker::Pipeline">, PipelineProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Pipeline(id: string, props: PipelineProps): Promise<Pipeline>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-project.html
     */
    interface ProjectProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-project.html#cfn-sagemaker-project-projectname
       */
      ProjectName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-project.html#cfn-sagemaker-project-servicecatalogprovisionedproductdetails
       */
      ServiceCatalogProvisionedProductDetails?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-project.html#cfn-sagemaker-project-servicecatalogprovisioningdetails
       */
      ServiceCatalogProvisioningDetails: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-project.html#cfn-sagemaker-project-projectdescription
       */
      ProjectDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-project.html#cfn-sagemaker-project-tags
       */
      Tags?: {}[];
    }
    
    
    interface Project extends Resource<"AWS::SageMaker::Project">, ProjectProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Project(id: string, props: ProjectProps): Promise<Project>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-space.html
     */
    interface SpaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-space.html#cfn-sagemaker-space-domainid
       */
      DomainId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-space.html#cfn-sagemaker-space-spacename
       */
      SpaceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-space.html#cfn-sagemaker-space-spacesettings
       */
      SpaceSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-space.html#cfn-sagemaker-space-spacedisplayname
       */
      SpaceDisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-space.html#cfn-sagemaker-space-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-space.html#cfn-sagemaker-space-spacesharingsettings
       */
      SpaceSharingSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-space.html#cfn-sagemaker-space-ownershipsettings
       */
      OwnershipSettings?: {};
    }
    
    
    interface Space extends Resource<"AWS::SageMaker::Space">, SpaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Space(id: string, props: SpaceProps): Promise<Space>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-studiolifecycleconfig.html
     */
    interface StudioLifecycleConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-studiolifecycleconfig.html#cfn-sagemaker-studiolifecycleconfig-studiolifecycleconfigapptype
       */
      StudioLifecycleConfigAppType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-studiolifecycleconfig.html#cfn-sagemaker-studiolifecycleconfig-studiolifecycleconfigname
       */
      StudioLifecycleConfigName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-studiolifecycleconfig.html#cfn-sagemaker-studiolifecycleconfig-studiolifecycleconfigcontent
       */
      StudioLifecycleConfigContent: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-studiolifecycleconfig.html#cfn-sagemaker-studiolifecycleconfig-tags
       */
      Tags?: {}[];
    }
    
    
    interface StudioLifecycleConfig extends Resource<"AWS::SageMaker::StudioLifecycleConfig">, StudioLifecycleConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StudioLifecycleConfig(id: string, props: StudioLifecycleConfigProps): Promise<StudioLifecycleConfig>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html
     */
    interface UserProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html#cfn-sagemaker-userprofile-domainid
       */
      DomainId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html#cfn-sagemaker-userprofile-singlesignonuservalue
       */
      SingleSignOnUserValue?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html#cfn-sagemaker-userprofile-usersettings
       */
      UserSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html#cfn-sagemaker-userprofile-singlesignonuseridentifier
       */
      SingleSignOnUserIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html#cfn-sagemaker-userprofile-userprofilename
       */
      UserProfileName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html#cfn-sagemaker-userprofile-tags
       */
      Tags?: {}[];
    }
    
    
    interface UserProfile extends Resource<"AWS::SageMaker::UserProfile">, UserProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserProfile(id: string, props: UserProfileProps): Promise<UserProfile>;
  }
  namespace SageMaker {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-workteam.html
     */
    interface WorkteamProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-workteam.html#cfn-sagemaker-workteam-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-workteam.html#cfn-sagemaker-workteam-notificationconfiguration
       */
      NotificationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-workteam.html#cfn-sagemaker-workteam-workteamname
       */
      WorkteamName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-workteam.html#cfn-sagemaker-workteam-memberdefinitions
       */
      MemberDefinitions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-workteam.html#cfn-sagemaker-workteam-workforcename
       */
      WorkforceName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-workteam.html#cfn-sagemaker-workteam-tags
       */
      Tags?: {}[];
    }
    
    
    interface Workteam extends Resource<"AWS::SageMaker::Workteam">, WorkteamProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Workteam(id: string, props: WorkteamProps): Promise<Workteam>;
  }
  namespace Scheduler {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedule.html
     */
    interface ScheduleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedule.html#cfn-scheduler-schedule-groupname
       */
      GroupName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedule.html#cfn-scheduler-schedule-startdate
       */
      StartDate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedule.html#cfn-scheduler-schedule-scheduleexpression
       */
      ScheduleExpression: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedule.html#cfn-scheduler-schedule-target
       */
      Target: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedule.html#cfn-scheduler-schedule-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedule.html#cfn-scheduler-schedule-kmskeyarn
       */
      KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedule.html#cfn-scheduler-schedule-state
       */
      State?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedule.html#cfn-scheduler-schedule-flexibletimewindow
       */
      FlexibleTimeWindow: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedule.html#cfn-scheduler-schedule-scheduleexpressiontimezone
       */
      ScheduleExpressionTimezone?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedule.html#cfn-scheduler-schedule-enddate
       */
      EndDate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedule.html#cfn-scheduler-schedule-name
       */
      Name?: string;
    }
    
    
    interface Schedule extends Resource<"AWS::Scheduler::Schedule">, ScheduleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Schedule(id: string, props: ScheduleProps): Promise<Schedule>;
  }
  namespace Scheduler {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedulegroup.html
     */
    interface ScheduleGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedulegroup.html#cfn-scheduler-schedulegroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-scheduler-schedulegroup.html#cfn-scheduler-schedulegroup-name
       */
      Name?: string;
    }
    
    
    interface ScheduleGroup extends Resource<"AWS::Scheduler::ScheduleGroup">, ScheduleGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ScheduleGroup(id: string, props: ScheduleGroupProps): Promise<ScheduleGroup>;
  }
  namespace SecretsManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html
     */
    interface ResourcePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html#cfn-secretsmanager-resourcepolicy-blockpublicpolicy
       */
      BlockPublicPolicy?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html#cfn-secretsmanager-resourcepolicy-secretid
       */
      SecretId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html#cfn-secretsmanager-resourcepolicy-resourcepolicy
       */
      ResourcePolicy: {
        [k: string]: unknown;
      };
    }
    
    
    interface ResourcePolicy extends Resource<"AWS::SecretsManager::ResourcePolicy">, ResourcePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourcePolicy(id: string, props: ResourcePolicyProps): Promise<ResourcePolicy>;
  }
  namespace SecretsManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html
     */
    interface RotationScheduleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-hostedrotationlambda
       */
      HostedRotationLambda?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-secretid
       */
      SecretId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotateimmediatelyonupdate
       */
      RotateImmediatelyOnUpdate?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotationlambdaarn
       */
      RotationLambdaARN?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotationrules
       */
      RotationRules?: {};
    }
    
    
    interface RotationSchedule extends Resource<"AWS::SecretsManager::RotationSchedule">, RotationScheduleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RotationSchedule(id: string, props: RotationScheduleProps): Promise<RotationSchedule>;
  }
  namespace SecretsManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html
     */
    interface SecretProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-secretstring
       */
      SecretString?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-generatesecretstring
       */
      GenerateSecretString?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-replicaregions
       */
      ReplicaRegions?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-name
       */
      Name?: string;
    }
    
    
    interface Secret extends Resource<"AWS::SecretsManager::Secret">, SecretProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Secret(id: string, props: SecretProps): Promise<Secret>;
  }
  namespace SecretsManager {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html
     */
    interface SecretTargetAttachmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-secretid
       */
      SecretId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-targettype
       */
      TargetType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-targetid
       */
      TargetId: string;
    }
    
    
    interface SecretTargetAttachment extends Resource<"AWS::SecretsManager::SecretTargetAttachment">, SecretTargetAttachmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecretTargetAttachment(id: string, props: SecretTargetAttachmentProps): Promise<SecretTargetAttachment>;
  }
  namespace SecurityHub {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-automationrule.html
     */
    interface AutomationRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-automationrule.html#cfn-securityhub-automationrule-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-automationrule.html#cfn-securityhub-automationrule-actions
       */
      Actions: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-automationrule.html#cfn-securityhub-automationrule-isterminal
       */
      IsTerminal?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-automationrule.html#cfn-securityhub-automationrule-rulestatus
       */
      RuleStatus?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-automationrule.html#cfn-securityhub-automationrule-criteria
       */
      Criteria: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-automationrule.html#cfn-securityhub-automationrule-ruleorder
       */
      RuleOrder: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-automationrule.html#cfn-securityhub-automationrule-rulename
       */
      RuleName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-automationrule.html#cfn-securityhub-automationrule-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface AutomationRule extends Resource<"AWS::SecurityHub::AutomationRule">, AutomationRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AutomationRule(id: string, props: AutomationRuleProps): Promise<AutomationRule>;
  }
  namespace SecurityHub {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-configurationpolicy.html
     */
    interface ConfigurationPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-configurationpolicy.html#cfn-securityhub-configurationpolicy-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-configurationpolicy.html#cfn-securityhub-configurationpolicy-configurationpolicy
       */
      ConfigurationPolicy: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-configurationpolicy.html#cfn-securityhub-configurationpolicy-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-configurationpolicy.html#cfn-securityhub-configurationpolicy-name
       */
      Name: string;
    }
    
    
    interface ConfigurationPolicy extends Resource<"AWS::SecurityHub::ConfigurationPolicy">, ConfigurationPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConfigurationPolicy(id: string, props: ConfigurationPolicyProps): Promise<ConfigurationPolicy>;
  }
  namespace SecurityHub {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-delegatedadmin.html
     */
    interface DelegatedAdminProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-delegatedadmin.html#cfn-securityhub-delegatedadmin-adminaccountid
       */
      AdminAccountId: string;
    }
    
    
    interface DelegatedAdmin extends Resource<"AWS::SecurityHub::DelegatedAdmin">, DelegatedAdminProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DelegatedAdmin(id: string, props: DelegatedAdminProps): Promise<DelegatedAdmin>;
  }
  namespace SecurityHub {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-findingaggregator.html
     */
    interface FindingAggregatorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-findingaggregator.html#cfn-securityhub-findingaggregator-regionlinkingmode
       */
      RegionLinkingMode: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-findingaggregator.html#cfn-securityhub-findingaggregator-regions
       */
      Regions?: string[];
    }
    
    
    interface FindingAggregator extends Resource<"AWS::SecurityHub::FindingAggregator">, FindingAggregatorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function FindingAggregator(id: string, props: FindingAggregatorProps): Promise<FindingAggregator>;
  }
  namespace SecurityHub {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-hub.html
     */
    interface HubProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-hub.html#cfn-securityhub-hub-controlfindinggenerator
       */
      ControlFindingGenerator?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-hub.html#cfn-securityhub-hub-enabledefaultstandards
       */
      EnableDefaultStandards?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-hub.html#cfn-securityhub-hub-autoenablecontrols
       */
      AutoEnableControls?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-hub.html#cfn-securityhub-hub-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
    }
    
    
    interface Hub extends Resource<"AWS::SecurityHub::Hub">, HubProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Hub(id: string, props: HubProps): Promise<Hub>;
  }
  namespace SecurityHub {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-insight.html
     */
    interface InsightProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-insight.html#cfn-securityhub-insight-filters
       */
      Filters: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-insight.html#cfn-securityhub-insight-groupbyattribute
       */
      GroupByAttribute: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-insight.html#cfn-securityhub-insight-name
       */
      Name: string;
    }
    
    
    interface Insight extends Resource<"AWS::SecurityHub::Insight">, InsightProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Insight(id: string, props: InsightProps): Promise<Insight>;
  }
  namespace SecurityHub {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-organizationconfiguration.html
     */
    interface OrganizationConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-organizationconfiguration.html#cfn-securityhub-organizationconfiguration-autoenable
       */
      AutoEnable: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-organizationconfiguration.html#cfn-securityhub-organizationconfiguration-configurationtype
       */
      ConfigurationType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-organizationconfiguration.html#cfn-securityhub-organizationconfiguration-autoenablestandards
       */
      AutoEnableStandards?: string;
    }
    
    
    interface OrganizationConfiguration extends Resource<"AWS::SecurityHub::OrganizationConfiguration">, OrganizationConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function OrganizationConfiguration(id: string, props: OrganizationConfigurationProps): Promise<OrganizationConfiguration>;
  }
  namespace SecurityHub {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-policyassociation.html
     */
    interface PolicyAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-policyassociation.html#cfn-securityhub-policyassociation-configurationpolicyid
       */
      ConfigurationPolicyId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-policyassociation.html#cfn-securityhub-policyassociation-targettype
       */
      TargetType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-policyassociation.html#cfn-securityhub-policyassociation-targetid
       */
      TargetId: string;
    }
    
    
    interface PolicyAssociation extends Resource<"AWS::SecurityHub::PolicyAssociation">, PolicyAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PolicyAssociation(id: string, props: PolicyAssociationProps): Promise<PolicyAssociation>;
  }
  namespace SecurityHub {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-productsubscription.html
     */
    interface ProductSubscriptionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-productsubscription.html#cfn-securityhub-productsubscription-productarn
       */
      ProductArn: string;
    }
    
    
    interface ProductSubscription extends Resource<"AWS::SecurityHub::ProductSubscription">, ProductSubscriptionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ProductSubscription(id: string, props: ProductSubscriptionProps): Promise<ProductSubscription>;
  }
  namespace SecurityHub {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-securitycontrol.html
     */
    interface SecurityControlProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-securitycontrol.html#cfn-securityhub-securitycontrol-securitycontrolid
       */
      SecurityControlId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-securitycontrol.html#cfn-securityhub-securitycontrol-lastupdatereason
       */
      LastUpdateReason?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-securitycontrol.html#cfn-securityhub-securitycontrol-parameters
       */
      Parameters: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-securitycontrol.html#cfn-securityhub-securitycontrol-securitycontrolarn
       */
      SecurityControlArn?: string;
    }
    
    
    interface SecurityControl extends Resource<"AWS::SecurityHub::SecurityControl">, SecurityControlProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SecurityControl(id: string, props: SecurityControlProps): Promise<SecurityControl>;
  }
  namespace SecurityHub {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-standard.html
     */
    interface StandardProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-standard.html#cfn-securityhub-standard-standardsarn
       */
      StandardsArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securityhub-standard.html#cfn-securityhub-standard-disabledstandardscontrols
       */
      DisabledStandardsControls?: {}[];
    }
    
    
    interface Standard extends Resource<"AWS::SecurityHub::Standard">, StandardProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Standard(id: string, props: StandardProps): Promise<Standard>;
  }
  namespace SecurityLake {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-awslogsource.html
     */
    interface AwsLogSourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-awslogsource.html#cfn-securitylake-awslogsource-sourcename
       */
      SourceName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-awslogsource.html#cfn-securitylake-awslogsource-sourceversion
       */
      SourceVersion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-awslogsource.html#cfn-securitylake-awslogsource-accounts
       */
      Accounts?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-awslogsource.html#cfn-securitylake-awslogsource-datalakearn
       */
      DataLakeArn: string;
    }
    
    
    interface AwsLogSource extends Resource<"AWS::SecurityLake::AwsLogSource">, AwsLogSourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AwsLogSource(id: string, props: AwsLogSourceProps): Promise<AwsLogSource>;
  }
  namespace SecurityLake {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-datalake.html
     */
    interface DataLakeProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-datalake.html#cfn-securitylake-datalake-encryptionconfiguration
       */
      EncryptionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-datalake.html#cfn-securitylake-datalake-lifecycleconfiguration
       */
      LifecycleConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-datalake.html#cfn-securitylake-datalake-replicationconfiguration
       */
      ReplicationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-datalake.html#cfn-securitylake-datalake-metastoremanagerrolearn
       */
      MetaStoreManagerRoleArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-datalake.html#cfn-securitylake-datalake-tags
       */
      Tags?: {}[];
    }
    
    
    interface DataLake extends Resource<"AWS::SecurityLake::DataLake">, DataLakeProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataLake(id: string, props: DataLakeProps): Promise<DataLake>;
  }
  namespace SecurityLake {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-subscriber.html
     */
    interface SubscriberProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-subscriber.html#cfn-securitylake-subscriber-subscriberidentity
       */
      SubscriberIdentity: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-subscriber.html#cfn-securitylake-subscriber-subscribername
       */
      SubscriberName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-subscriber.html#cfn-securitylake-subscriber-subscriberdescription
       */
      SubscriberDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-subscriber.html#cfn-securitylake-subscriber-accesstypes
       */
      AccessTypes: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-subscriber.html#cfn-securitylake-subscriber-sources
       */
      Sources: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-subscriber.html#cfn-securitylake-subscriber-datalakearn
       */
      DataLakeArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-subscriber.html#cfn-securitylake-subscriber-tags
       */
      Tags?: {}[];
    }
    
    
    interface Subscriber extends Resource<"AWS::SecurityLake::Subscriber">, SubscriberProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Subscriber(id: string, props: SubscriberProps): Promise<Subscriber>;
  }
  namespace SecurityLake {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-subscribernotification.html
     */
    interface SubscriberNotificationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-subscribernotification.html#cfn-securitylake-subscribernotification-subscriberarn
       */
      SubscriberArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-subscribernotification.html#cfn-securitylake-subscribernotification-notificationconfiguration
       */
      NotificationConfiguration: {};
    }
    
    
    interface SubscriberNotification extends Resource<"AWS::SecurityLake::SubscriberNotification">, SubscriberNotificationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SubscriberNotification(id: string, props: SubscriberNotificationProps): Promise<SubscriberNotification>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-acceptedportfolioshare.html
     */
    interface AcceptedPortfolioShareProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-acceptedportfolioshare.html#cfn-servicecatalog-acceptedportfolioshare-acceptlanguage
       */
      AcceptLanguage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-acceptedportfolioshare.html#cfn-servicecatalog-acceptedportfolioshare-portfolioid
       */
      PortfolioId: string;
    }
    
    
    interface AcceptedPortfolioShare extends Resource<"AWS::ServiceCatalog::AcceptedPortfolioShare">, AcceptedPortfolioShareProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AcceptedPortfolioShare(id: string, props: AcceptedPortfolioShareProps): Promise<AcceptedPortfolioShare>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html
     */
    interface CloudFormationProductProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html#cfn-servicecatalog-cloudformationproduct-owner
       */
      Owner: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html#cfn-servicecatalog-cloudformationproduct-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html#cfn-servicecatalog-cloudformationproduct-supportemail
       */
      SupportEmail?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html#cfn-servicecatalog-cloudformationproduct-producttype
       */
      ProductType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html#cfn-servicecatalog-cloudformationproduct-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html#cfn-servicecatalog-cloudformationproduct-replaceprovisioningartifacts
       */
      ReplaceProvisioningArtifacts?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html#cfn-servicecatalog-cloudformationproduct-supportdescription
       */
      SupportDescription?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html#cfn-servicecatalog-cloudformationproduct-distributor
       */
      Distributor?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html#cfn-servicecatalog-cloudformationproduct-acceptlanguage
       */
      AcceptLanguage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html#cfn-servicecatalog-cloudformationproduct-supporturl
       */
      SupportUrl?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html#cfn-servicecatalog-cloudformationproduct-sourceconnection
       */
      SourceConnection?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html#cfn-servicecatalog-cloudformationproduct-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationproduct.html#cfn-servicecatalog-cloudformationproduct-provisioningartifactparameters
       */
      ProvisioningArtifactParameters?: {}[];
    }
    
    
    interface CloudFormationProduct extends Resource<"AWS::ServiceCatalog::CloudFormationProduct">, CloudFormationProductProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CloudFormationProduct(id: string, props: CloudFormationProductProps): Promise<CloudFormationProduct>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html
     */
    interface CloudFormationProvisionedProductProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html#cfn-servicecatalog-cloudformationprovisionedproduct-pathid
       */
      PathId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html#cfn-servicecatalog-cloudformationprovisionedproduct-provisioningparameters
       */
      ProvisioningParameters?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html#cfn-servicecatalog-cloudformationprovisionedproduct-provisioningpreferences
       */
      ProvisioningPreferences?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html#cfn-servicecatalog-cloudformationprovisionedproduct-productname
       */
      ProductName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html#cfn-servicecatalog-cloudformationprovisionedproduct-provisioningartifactname
       */
      ProvisioningArtifactName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html#cfn-servicecatalog-cloudformationprovisionedproduct-notificationarns
       */
      NotificationArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html#cfn-servicecatalog-cloudformationprovisionedproduct-acceptlanguage
       */
      AcceptLanguage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html#cfn-servicecatalog-cloudformationprovisionedproduct-productid
       */
      ProductId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html#cfn-servicecatalog-cloudformationprovisionedproduct-pathname
       */
      PathName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html#cfn-servicecatalog-cloudformationprovisionedproduct-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html#cfn-servicecatalog-cloudformationprovisionedproduct-provisionedproductname
       */
      ProvisionedProductName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html#cfn-servicecatalog-cloudformationprovisionedproduct-provisioningartifactid
       */
      ProvisioningArtifactId?: string;
    }
    
    
    interface CloudFormationProvisionedProduct extends Resource<"AWS::ServiceCatalog::CloudFormationProvisionedProduct">, CloudFormationProvisionedProductProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function CloudFormationProvisionedProduct(id: string, props: CloudFormationProvisionedProductProps): Promise<CloudFormationProvisionedProduct>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchnotificationconstraint.html
     */
    interface LaunchNotificationConstraintProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchnotificationconstraint.html#cfn-servicecatalog-launchnotificationconstraint-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchnotificationconstraint.html#cfn-servicecatalog-launchnotificationconstraint-notificationarns
       */
      NotificationArns: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchnotificationconstraint.html#cfn-servicecatalog-launchnotificationconstraint-acceptlanguage
       */
      AcceptLanguage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchnotificationconstraint.html#cfn-servicecatalog-launchnotificationconstraint-portfolioid
       */
      PortfolioId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchnotificationconstraint.html#cfn-servicecatalog-launchnotificationconstraint-productid
       */
      ProductId: string;
    }
    
    
    interface LaunchNotificationConstraint extends Resource<"AWS::ServiceCatalog::LaunchNotificationConstraint">, LaunchNotificationConstraintProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LaunchNotificationConstraint(id: string, props: LaunchNotificationConstraintProps): Promise<LaunchNotificationConstraint>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchroleconstraint.html
     */
    interface LaunchRoleConstraintProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchroleconstraint.html#cfn-servicecatalog-launchroleconstraint-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchroleconstraint.html#cfn-servicecatalog-launchroleconstraint-localrolename
       */
      LocalRoleName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchroleconstraint.html#cfn-servicecatalog-launchroleconstraint-acceptlanguage
       */
      AcceptLanguage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchroleconstraint.html#cfn-servicecatalog-launchroleconstraint-portfolioid
       */
      PortfolioId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchroleconstraint.html#cfn-servicecatalog-launchroleconstraint-productid
       */
      ProductId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchroleconstraint.html#cfn-servicecatalog-launchroleconstraint-rolearn
       */
      RoleArn?: string;
    }
    
    
    interface LaunchRoleConstraint extends Resource<"AWS::ServiceCatalog::LaunchRoleConstraint">, LaunchRoleConstraintProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LaunchRoleConstraint(id: string, props: LaunchRoleConstraintProps): Promise<LaunchRoleConstraint>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchtemplateconstraint.html
     */
    interface LaunchTemplateConstraintProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchtemplateconstraint.html#cfn-servicecatalog-launchtemplateconstraint-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchtemplateconstraint.html#cfn-servicecatalog-launchtemplateconstraint-acceptlanguage
       */
      AcceptLanguage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchtemplateconstraint.html#cfn-servicecatalog-launchtemplateconstraint-portfolioid
       */
      PortfolioId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchtemplateconstraint.html#cfn-servicecatalog-launchtemplateconstraint-productid
       */
      ProductId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-launchtemplateconstraint.html#cfn-servicecatalog-launchtemplateconstraint-rules
       */
      Rules: string;
    }
    
    
    interface LaunchTemplateConstraint extends Resource<"AWS::ServiceCatalog::LaunchTemplateConstraint">, LaunchTemplateConstraintProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LaunchTemplateConstraint(id: string, props: LaunchTemplateConstraintProps): Promise<LaunchTemplateConstraint>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolio.html
     */
    interface PortfolioProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolio.html#cfn-servicecatalog-portfolio-providername
       */
      ProviderName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolio.html#cfn-servicecatalog-portfolio-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolio.html#cfn-servicecatalog-portfolio-displayname
       */
      DisplayName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolio.html#cfn-servicecatalog-portfolio-acceptlanguage
       */
      AcceptLanguage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolio.html#cfn-servicecatalog-portfolio-tags
       */
      Tags?: {}[];
    }
    
    
    interface Portfolio extends Resource<"AWS::ServiceCatalog::Portfolio">, PortfolioProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Portfolio(id: string, props: PortfolioProps): Promise<Portfolio>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioprincipalassociation.html
     */
    interface PortfolioPrincipalAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioprincipalassociation.html#cfn-servicecatalog-portfolioprincipalassociation-principalarn
       */
      PrincipalARN: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioprincipalassociation.html#cfn-servicecatalog-portfolioprincipalassociation-acceptlanguage
       */
      AcceptLanguage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioprincipalassociation.html#cfn-servicecatalog-portfolioprincipalassociation-portfolioid
       */
      PortfolioId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioprincipalassociation.html#cfn-servicecatalog-portfolioprincipalassociation-principaltype
       */
      PrincipalType: string;
    }
    
    
    interface PortfolioPrincipalAssociation extends Resource<"AWS::ServiceCatalog::PortfolioPrincipalAssociation">, PortfolioPrincipalAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PortfolioPrincipalAssociation(id: string, props: PortfolioPrincipalAssociationProps): Promise<PortfolioPrincipalAssociation>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioproductassociation.html
     */
    interface PortfolioProductAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioproductassociation.html#cfn-servicecatalog-portfolioproductassociation-sourceportfolioid
       */
      SourcePortfolioId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioproductassociation.html#cfn-servicecatalog-portfolioproductassociation-acceptlanguage
       */
      AcceptLanguage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioproductassociation.html#cfn-servicecatalog-portfolioproductassociation-portfolioid
       */
      PortfolioId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioproductassociation.html#cfn-servicecatalog-portfolioproductassociation-productid
       */
      ProductId: string;
    }
    
    
    interface PortfolioProductAssociation extends Resource<"AWS::ServiceCatalog::PortfolioProductAssociation">, PortfolioProductAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PortfolioProductAssociation(id: string, props: PortfolioProductAssociationProps): Promise<PortfolioProductAssociation>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioshare.html
     */
    interface PortfolioShareProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioshare.html#cfn-servicecatalog-portfolioshare-accountid
       */
      AccountId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioshare.html#cfn-servicecatalog-portfolioshare-acceptlanguage
       */
      AcceptLanguage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioshare.html#cfn-servicecatalog-portfolioshare-portfolioid
       */
      PortfolioId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-portfolioshare.html#cfn-servicecatalog-portfolioshare-sharetagoptions
       */
      ShareTagOptions?: boolean;
    }
    
    
    interface PortfolioShare extends Resource<"AWS::ServiceCatalog::PortfolioShare">, PortfolioShareProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PortfolioShare(id: string, props: PortfolioShareProps): Promise<PortfolioShare>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-resourceupdateconstraint.html
     */
    interface ResourceUpdateConstraintProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-resourceupdateconstraint.html#cfn-servicecatalog-resourceupdateconstraint-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-resourceupdateconstraint.html#cfn-servicecatalog-resourceupdateconstraint-acceptlanguage
       */
      AcceptLanguage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-resourceupdateconstraint.html#cfn-servicecatalog-resourceupdateconstraint-tagupdateonprovisionedproduct
       */
      TagUpdateOnProvisionedProduct: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-resourceupdateconstraint.html#cfn-servicecatalog-resourceupdateconstraint-portfolioid
       */
      PortfolioId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-resourceupdateconstraint.html#cfn-servicecatalog-resourceupdateconstraint-productid
       */
      ProductId: string;
    }
    
    
    interface ResourceUpdateConstraint extends Resource<"AWS::ServiceCatalog::ResourceUpdateConstraint">, ResourceUpdateConstraintProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceUpdateConstraint(id: string, props: ResourceUpdateConstraintProps): Promise<ResourceUpdateConstraint>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html
     */
    interface ServiceActionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-definition
       */
      Definition: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-acceptlanguage
       */
      AcceptLanguage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-definitiontype
       */
      DefinitionType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceaction.html#cfn-servicecatalog-serviceaction-name
       */
      Name: string;
    }
    
    
    interface ServiceAction extends Resource<"AWS::ServiceCatalog::ServiceAction">, ServiceActionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ServiceAction(id: string, props: ServiceActionProps): Promise<ServiceAction>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceactionassociation.html
     */
    interface ServiceActionAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceactionassociation.html#cfn-servicecatalog-serviceactionassociation-serviceactionid
       */
      ServiceActionId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceactionassociation.html#cfn-servicecatalog-serviceactionassociation-productid
       */
      ProductId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-serviceactionassociation.html#cfn-servicecatalog-serviceactionassociation-provisioningartifactid
       */
      ProvisioningArtifactId: string;
    }
    
    
    interface ServiceActionAssociation extends Resource<"AWS::ServiceCatalog::ServiceActionAssociation">, ServiceActionAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ServiceActionAssociation(id: string, props: ServiceActionAssociationProps): Promise<ServiceActionAssociation>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html
     */
    interface StackSetConstraintProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-description
       */
      Description: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-stackinstancecontrol
       */
      StackInstanceControl: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-acceptlanguage
       */
      AcceptLanguage?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-portfolioid
       */
      PortfolioId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-productid
       */
      ProductId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-regionlist
       */
      RegionList: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-adminrole
       */
      AdminRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-accountlist
       */
      AccountList: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-executionrole
       */
      ExecutionRole: string;
    }
    
    
    interface StackSetConstraint extends Resource<"AWS::ServiceCatalog::StackSetConstraint">, StackSetConstraintProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StackSetConstraint(id: string, props: StackSetConstraintProps): Promise<StackSetConstraint>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoption.html
     */
    interface TagOptionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoption.html#cfn-servicecatalog-tagoption-active
       */
      Active?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoption.html#cfn-servicecatalog-tagoption-value
       */
      Value: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoption.html#cfn-servicecatalog-tagoption-key
       */
      Key: string;
    }
    
    
    interface TagOption extends Resource<"AWS::ServiceCatalog::TagOption">, TagOptionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TagOption(id: string, props: TagOptionProps): Promise<TagOption>;
  }
  namespace ServiceCatalog {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoptionassociation.html
     */
    interface TagOptionAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoptionassociation.html#cfn-servicecatalog-tagoptionassociation-tagoptionid
       */
      TagOptionId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-tagoptionassociation.html#cfn-servicecatalog-tagoptionassociation-resourceid
       */
      ResourceId: string;
    }
    
    
    interface TagOptionAssociation extends Resource<"AWS::ServiceCatalog::TagOptionAssociation">, TagOptionAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TagOptionAssociation(id: string, props: TagOptionAssociationProps): Promise<TagOptionAssociation>;
  }
  namespace ServiceCatalogAppRegistry {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-application.html#cfn-servicecatalogappregistry-application-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-application.html#cfn-servicecatalogappregistry-application-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-application.html#cfn-servicecatalogappregistry-application-name
       */
      Name: string;
    }
    
    
    interface Application extends Resource<"AWS::ServiceCatalogAppRegistry::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace ServiceCatalogAppRegistry {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroup.html
     */
    interface AttributeGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroup.html#cfn-servicecatalogappregistry-attributegroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroup.html#cfn-servicecatalogappregistry-attributegroup-attributes
       */
      Attributes: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroup.html#cfn-servicecatalogappregistry-attributegroup-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroup.html#cfn-servicecatalogappregistry-attributegroup-name
       */
      Name: string;
    }
    
    
    interface AttributeGroup extends Resource<"AWS::ServiceCatalogAppRegistry::AttributeGroup">, AttributeGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AttributeGroup(id: string, props: AttributeGroupProps): Promise<AttributeGroup>;
  }
  namespace ServiceCatalogAppRegistry {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html
     */
    interface AttributeGroupAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html#cfn-servicecatalogappregistry-attributegroupassociation-attributegroup
       */
      AttributeGroup: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html#cfn-servicecatalogappregistry-attributegroupassociation-application
       */
      Application: string;
    }
    
    
    interface AttributeGroupAssociation extends Resource<"AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation">, AttributeGroupAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AttributeGroupAssociation(id: string, props: AttributeGroupAssociationProps): Promise<AttributeGroupAssociation>;
  }
  namespace ServiceCatalogAppRegistry {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-resourceassociation.html
     */
    interface ResourceAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-resourceassociation.html#cfn-servicecatalogappregistry-resourceassociation-resource
       */
      Resource: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-resourceassociation.html#cfn-servicecatalogappregistry-resourceassociation-resourcetype
       */
      ResourceType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-resourceassociation.html#cfn-servicecatalogappregistry-resourceassociation-application
       */
      Application: string;
    }
    
    
    interface ResourceAssociation extends Resource<"AWS::ServiceCatalogAppRegistry::ResourceAssociation">, ResourceAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceAssociation(id: string, props: ResourceAssociationProps): Promise<ResourceAssociation>;
  }
  namespace ServiceDiscovery {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html
     */
    interface HttpNamespaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html#cfn-servicediscovery-httpnamespace-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html#cfn-servicediscovery-httpnamespace-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-httpnamespace.html#cfn-servicediscovery-httpnamespace-name
       */
      Name: string;
    }
    
    
    interface HttpNamespace extends Resource<"AWS::ServiceDiscovery::HttpNamespace">, HttpNamespaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function HttpNamespace(id: string, props: HttpNamespaceProps): Promise<HttpNamespace>;
  }
  namespace ServiceDiscovery {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html
     */
    interface InstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html#cfn-servicediscovery-instance-instanceattributes
       */
      InstanceAttributes: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html#cfn-servicediscovery-instance-instanceid
       */
      InstanceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-instance.html#cfn-servicediscovery-instance-serviceid
       */
      ServiceId: string;
    }
    
    
    interface Instance extends Resource<"AWS::ServiceDiscovery::Instance">, InstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Instance(id: string, props: InstanceProps): Promise<Instance>;
  }
  namespace ServiceDiscovery {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html
     */
    interface PrivateDnsNamespaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html#cfn-servicediscovery-privatednsnamespace-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html#cfn-servicediscovery-privatednsnamespace-vpc
       */
      Vpc: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html#cfn-servicediscovery-privatednsnamespace-properties
       */
      Properties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html#cfn-servicediscovery-privatednsnamespace-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-privatednsnamespace.html#cfn-servicediscovery-privatednsnamespace-name
       */
      Name: string;
    }
    
    
    interface PrivateDnsNamespace extends Resource<"AWS::ServiceDiscovery::PrivateDnsNamespace">, PrivateDnsNamespaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PrivateDnsNamespace(id: string, props: PrivateDnsNamespaceProps): Promise<PrivateDnsNamespace>;
  }
  namespace ServiceDiscovery {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html
     */
    interface PublicDnsNamespaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html#cfn-servicediscovery-publicdnsnamespace-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html#cfn-servicediscovery-publicdnsnamespace-properties
       */
      Properties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html#cfn-servicediscovery-publicdnsnamespace-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-publicdnsnamespace.html#cfn-servicediscovery-publicdnsnamespace-name
       */
      Name: string;
    }
    
    
    interface PublicDnsNamespace extends Resource<"AWS::ServiceDiscovery::PublicDnsNamespace">, PublicDnsNamespaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PublicDnsNamespace(id: string, props: PublicDnsNamespaceProps): Promise<PublicDnsNamespace>;
  }
  namespace ServiceDiscovery {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html
     */
    interface ServiceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-type
       */
      Type?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-healthcheckcustomconfig
       */
      HealthCheckCustomConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-dnsconfig
       */
      DnsConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-serviceattributes
       */
      ServiceAttributes?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-namespaceid
       */
      NamespaceId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-healthcheckconfig
       */
      HealthCheckConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicediscovery-service.html#cfn-servicediscovery-service-name
       */
      Name?: string;
    }
    
    
    interface Service extends Resource<"AWS::ServiceDiscovery::Service">, ServiceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Service(id: string, props: ServiceProps): Promise<Service>;
  }
  namespace Shield {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-drtaccess.html
     */
    interface DRTAccessProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-drtaccess.html#cfn-shield-drtaccess-logbucketlist
       */
      LogBucketList?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-drtaccess.html#cfn-shield-drtaccess-rolearn
       */
      RoleArn: string;
    }
    
    
    interface DRTAccess extends Resource<"AWS::Shield::DRTAccess">, DRTAccessProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DRTAccess(id: string, props: DRTAccessProps): Promise<DRTAccess>;
  }
  namespace Shield {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-proactiveengagement.html
     */
    interface ProactiveEngagementProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-proactiveengagement.html#cfn-shield-proactiveengagement-proactiveengagementstatus
       */
      ProactiveEngagementStatus: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-proactiveengagement.html#cfn-shield-proactiveengagement-emergencycontactlist
       */
      EmergencyContactList: {}[];
    }
    
    
    interface ProactiveEngagement extends Resource<"AWS::Shield::ProactiveEngagement">, ProactiveEngagementProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ProactiveEngagement(id: string, props: ProactiveEngagementProps): Promise<ProactiveEngagement>;
  }
  namespace Shield {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protection.html
     */
    interface ProtectionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protection.html#cfn-shield-protection-resourcearn
       */
      ResourceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protection.html#cfn-shield-protection-healthcheckarns
       */
      HealthCheckArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protection.html#cfn-shield-protection-applicationlayerautomaticresponseconfiguration
       */
      ApplicationLayerAutomaticResponseConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protection.html#cfn-shield-protection-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protection.html#cfn-shield-protection-name
       */
      Name: string;
    }
    
    
    interface Protection extends Resource<"AWS::Shield::Protection">, ProtectionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Protection(id: string, props: ProtectionProps): Promise<Protection>;
  }
  namespace Shield {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protectiongroup.html
     */
    interface ProtectionGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protectiongroup.html#cfn-shield-protectiongroup-aggregation
       */
      Aggregation: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protectiongroup.html#cfn-shield-protectiongroup-pattern
       */
      Pattern: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protectiongroup.html#cfn-shield-protectiongroup-protectiongroupid
       */
      ProtectionGroupId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protectiongroup.html#cfn-shield-protectiongroup-resourcetype
       */
      ResourceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protectiongroup.html#cfn-shield-protectiongroup-members
       */
      Members?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-shield-protectiongroup.html#cfn-shield-protectiongroup-tags
       */
      Tags?: {}[];
    }
    
    
    interface ProtectionGroup extends Resource<"AWS::Shield::ProtectionGroup">, ProtectionGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ProtectionGroup(id: string, props: ProtectionGroupProps): Promise<ProtectionGroup>;
  }
  namespace Signer {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html
     */
    interface ProfilePermissionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-action
       */
      Action: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-statementid
       */
      StatementId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-profilename
       */
      ProfileName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-principal
       */
      Principal: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-profilepermission.html#cfn-signer-profilepermission-profileversion
       */
      ProfileVersion?: string;
    }
    
    
    interface ProfilePermission extends Resource<"AWS::Signer::ProfilePermission">, ProfilePermissionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ProfilePermission(id: string, props: ProfilePermissionProps): Promise<ProfilePermission>;
  }
  namespace Signer {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html
     */
    interface SigningProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html#cfn-signer-signingprofile-signaturevalidityperiod
       */
      SignatureValidityPeriod?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html#cfn-signer-signingprofile-platformid
       */
      PlatformId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-signer-signingprofile.html#cfn-signer-signingprofile-tags
       */
      Tags?: {}[];
    }
    
    
    interface SigningProfile extends Resource<"AWS::Signer::SigningProfile">, SigningProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SigningProfile(id: string, props: SigningProfileProps): Promise<SigningProfile>;
  }
  namespace SimSpaceWeaver {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-simspaceweaver-simulation.html
     */
    interface SimulationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-simspaceweaver-simulation.html#cfn-simspaceweaver-simulation-schemas3location
       */
      SchemaS3Location?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-simspaceweaver-simulation.html#cfn-simspaceweaver-simulation-snapshots3location
       */
      SnapshotS3Location?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-simspaceweaver-simulation.html#cfn-simspaceweaver-simulation-maximumduration
       */
      MaximumDuration?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-simspaceweaver-simulation.html#cfn-simspaceweaver-simulation-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-simspaceweaver-simulation.html#cfn-simspaceweaver-simulation-name
       */
      Name: string;
    }
    
    
    interface Simulation extends Resource<"AWS::SimSpaceWeaver::Simulation">, SimulationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Simulation(id: string, props: SimulationProps): Promise<Simulation>;
  }
  namespace StepFunctions {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-activity.html
     */
    interface ActivityProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-activity.html#cfn-stepfunctions-activity-encryptionconfiguration
       */
      EncryptionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-activity.html#cfn-stepfunctions-activity-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-activity.html#cfn-stepfunctions-activity-name
       */
      Name: string;
    }
    
    
    interface Activity extends Resource<"AWS::StepFunctions::Activity">, ActivityProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Activity(id: string, props: ActivityProps): Promise<Activity>;
  }
  namespace StepFunctions {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html
     */
    interface StateMachineProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html#cfn-stepfunctions-statemachine-encryptionconfiguration
       */
      EncryptionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html#cfn-stepfunctions-statemachine-definitionstring
       */
      DefinitionString?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html#cfn-stepfunctions-statemachine-loggingconfiguration
       */
      LoggingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html#cfn-stepfunctions-statemachine-definitionsubstitutions
       */
      DefinitionSubstitutions?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html#cfn-stepfunctions-statemachine-definition
       */
      Definition?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html#cfn-stepfunctions-statemachine-definitions3location
       */
      DefinitionS3Location?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html#cfn-stepfunctions-statemachine-statemachinename
       */
      StateMachineName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html#cfn-stepfunctions-statemachine-rolearn
       */
      RoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html#cfn-stepfunctions-statemachine-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html#cfn-stepfunctions-statemachine-statemachinetype
       */
      StateMachineType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html#cfn-stepfunctions-statemachine-tracingconfiguration
       */
      TracingConfiguration?: {};
    }
    
    
    interface StateMachine extends Resource<"AWS::StepFunctions::StateMachine">, StateMachineProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StateMachine(id: string, props: StateMachineProps): Promise<StateMachine>;
  }
  namespace StepFunctions {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachinealias.html
     */
    interface StateMachineAliasProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachinealias.html#cfn-stepfunctions-statemachinealias-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachinealias.html#cfn-stepfunctions-statemachinealias-routingconfiguration
       */
      RoutingConfiguration?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachinealias.html#cfn-stepfunctions-statemachinealias-deploymentpreference
       */
      DeploymentPreference?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachinealias.html#cfn-stepfunctions-statemachinealias-name
       */
      Name?: string;
    }
    
    
    interface StateMachineAlias extends Resource<"AWS::StepFunctions::StateMachineAlias">, StateMachineAliasProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StateMachineAlias(id: string, props: StateMachineAliasProps): Promise<StateMachineAlias>;
  }
  namespace StepFunctions {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachineversion.html
     */
    interface StateMachineVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachineversion.html#cfn-stepfunctions-statemachineversion-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachineversion.html#cfn-stepfunctions-statemachineversion-statemachinerevisionid
       */
      StateMachineRevisionId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachineversion.html#cfn-stepfunctions-statemachineversion-statemachinearn
       */
      StateMachineArn: string;
    }
    
    
    interface StateMachineVersion extends Resource<"AWS::StepFunctions::StateMachineVersion">, StateMachineVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function StateMachineVersion(id: string, props: StateMachineVersionProps): Promise<StateMachineVersion>;
  }
  namespace SupportApp {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-accountalias.html
     */
    interface AccountAliasProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-accountalias.html#cfn-supportapp-accountalias-accountalias
       */
      AccountAlias: string;
    }
    
    
    interface AccountAlias extends Resource<"AWS::SupportApp::AccountAlias">, AccountAliasProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccountAlias(id: string, props: AccountAliasProps): Promise<AccountAlias>;
  }
  namespace SupportApp {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html
     */
    interface SlackChannelConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-channelname
       */
      ChannelName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-notifyonaddcorrespondencetocase
       */
      NotifyOnAddCorrespondenceToCase?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-channelrolearn
       */
      ChannelRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-notifyonresolvecase
       */
      NotifyOnResolveCase?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-notifyoncaseseverity
       */
      NotifyOnCaseSeverity: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-teamid
       */
      TeamId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-channelid
       */
      ChannelId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-notifyoncreateorreopencase
       */
      NotifyOnCreateOrReopenCase?: boolean;
    }
    
    
    interface SlackChannelConfiguration extends Resource<"AWS::SupportApp::SlackChannelConfiguration">, SlackChannelConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SlackChannelConfiguration(id: string, props: SlackChannelConfigurationProps): Promise<SlackChannelConfiguration>;
  }
  namespace SupportApp {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackworkspaceconfiguration.html
     */
    interface SlackWorkspaceConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackworkspaceconfiguration.html#cfn-supportapp-slackworkspaceconfiguration-versionid
       */
      VersionId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackworkspaceconfiguration.html#cfn-supportapp-slackworkspaceconfiguration-teamid
       */
      TeamId: string;
    }
    
    
    interface SlackWorkspaceConfiguration extends Resource<"AWS::SupportApp::SlackWorkspaceConfiguration">, SlackWorkspaceConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SlackWorkspaceConfiguration(id: string, props: SlackWorkspaceConfigurationProps): Promise<SlackWorkspaceConfiguration>;
  }
  namespace Synthetics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html
     */
    interface CanaryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-visualreference
       */
      VisualReference?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-artifactconfig
       */
      ArtifactConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-successretentionperiod
       */
      SuccessRetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-runtimeversion
       */
      RuntimeVersion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-vpcconfig
       */
      VPCConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-runconfig
       */
      RunConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-failureretentionperiod
       */
      FailureRetentionPeriod?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-code
       */
      Code: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-resourcestoreplicatetags
       */
      ResourcesToReplicateTags?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-provisionedresourcecleanup
       */
      ProvisionedResourceCleanup?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-executionrolearn
       */
      ExecutionRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-schedule
       */
      Schedule: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-artifacts3location
       */
      ArtifactS3Location: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-canary.html#cfn-synthetics-canary-startcanaryaftercreation
       */
      StartCanaryAfterCreation?: boolean;
    }
    
    
    interface Canary extends Resource<"AWS::Synthetics::Canary">, CanaryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Canary(id: string, props: CanaryProps): Promise<Canary>;
  }
  namespace Synthetics {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-group.html
     */
    interface GroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-group.html#cfn-synthetics-group-resourcearns
       */
      ResourceArns?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-group.html#cfn-synthetics-group-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-synthetics-group.html#cfn-synthetics-group-name
       */
      Name: string;
    }
    
    
    interface Group extends Resource<"AWS::Synthetics::Group">, GroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Group(id: string, props: GroupProps): Promise<Group>;
  }
  namespace SystemsManagerSAP {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html
     */
    interface ApplicationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-instances
       */
      Instances?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-applicationtype
       */
      ApplicationType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-databasearn
       */
      DatabaseArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-sapinstancenumber
       */
      SapInstanceNumber?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-applicationid
       */
      ApplicationId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-credentials
       */
      Credentials?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-componentsinfo
       */
      ComponentsInfo?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-sid
       */
      Sid?: string;
    }
    
    
    interface Application extends Resource<"AWS::SystemsManagerSAP::Application">, ApplicationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Application(id: string, props: ApplicationProps): Promise<Application>;
  }
  namespace Timestream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-database.html
     */
    interface DatabaseProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-database.html#cfn-timestream-database-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-database.html#cfn-timestream-database-databasename
       */
      DatabaseName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-database.html#cfn-timestream-database-tags
       */
      Tags?: {}[];
    }
    
    
    interface Database extends Resource<"AWS::Timestream::Database">, DatabaseProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Database(id: string, props: DatabaseProps): Promise<Database>;
  }
  namespace Timestream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html
     */
    interface InfluxDBInstanceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-dbparametergroupidentifier
       */
      DbParameterGroupIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-organization
       */
      Organization?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-port
       */
      Port?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-dbinstancetype
       */
      DbInstanceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-vpcsubnetids
       */
      VpcSubnetIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-deploymenttype
       */
      DeploymentType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-allocatedstorage
       */
      AllocatedStorage?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-dbstoragetype
       */
      DbStorageType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-logdeliveryconfiguration
       */
      LogDeliveryConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-username
       */
      Username?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-bucket
       */
      Bucket?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-vpcsecuritygroupids
       */
      VpcSecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-networktype
       */
      NetworkType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-publiclyaccessible
       */
      PubliclyAccessible?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-influxdbinstance.html#cfn-timestream-influxdbinstance-password
       */
      Password?: string;
    }
    
    
    interface InfluxDBInstance extends Resource<"AWS::Timestream::InfluxDBInstance">, InfluxDBInstanceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function InfluxDBInstance(id: string, props: InfluxDBInstanceProps): Promise<InfluxDBInstance>;
  }
  namespace Timestream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-scheduledquery.html
     */
    interface ScheduledQueryProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-scheduledquery.html#cfn-timestream-scheduledquery-scheduledqueryexecutionrolearn
       */
      ScheduledQueryExecutionRoleArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-scheduledquery.html#cfn-timestream-scheduledquery-errorreportconfiguration
       */
      ErrorReportConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-scheduledquery.html#cfn-timestream-scheduledquery-scheduleconfiguration
       */
      ScheduleConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-scheduledquery.html#cfn-timestream-scheduledquery-targetconfiguration
       */
      TargetConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-scheduledquery.html#cfn-timestream-scheduledquery-kmskeyid
       */
      KmsKeyId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-scheduledquery.html#cfn-timestream-scheduledquery-querystring
       */
      QueryString: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-scheduledquery.html#cfn-timestream-scheduledquery-notificationconfiguration
       */
      NotificationConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-scheduledquery.html#cfn-timestream-scheduledquery-scheduledqueryname
       */
      ScheduledQueryName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-scheduledquery.html#cfn-timestream-scheduledquery-clienttoken
       */
      ClientToken?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-scheduledquery.html#cfn-timestream-scheduledquery-tags
       */
      Tags?: {}[];
    }
    
    
    interface ScheduledQuery extends Resource<"AWS::Timestream::ScheduledQuery">, ScheduledQueryProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ScheduledQuery(id: string, props: ScheduledQueryProps): Promise<ScheduledQuery>;
  }
  namespace Timestream {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html
     */
    interface TableProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html#cfn-timestream-table-tablename
       */
      TableName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html#cfn-timestream-table-retentionproperties
       */
      RetentionProperties?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html#cfn-timestream-table-schema
       */
      Schema?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html#cfn-timestream-table-databasename
       */
      DatabaseName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html#cfn-timestream-table-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html#cfn-timestream-table-magneticstorewriteproperties
       */
      MagneticStoreWriteProperties?: {};
    }
    
    
    interface Table extends Resource<"AWS::Timestream::Table">, TableProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Table(id: string, props: TableProps): Promise<Table>;
  }
  namespace Transfer {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html
     */
    interface AgreementProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-status
       */
      Status?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-basedirectory
       */
      BaseDirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-serverid
       */
      ServerId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-customdirectories
       */
      CustomDirectories?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-accessrole
       */
      AccessRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-partnerprofileid
       */
      PartnerProfileId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-localprofileid
       */
      LocalProfileId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-enforcemessagesigning
       */
      EnforceMessageSigning?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-preservefilename
       */
      PreserveFilename?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-tags
       */
      Tags?: {}[];
    }
    
    
    interface Agreement extends Resource<"AWS::Transfer::Agreement">, AgreementProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Agreement(id: string, props: AgreementProps): Promise<Agreement>;
  }
  namespace Transfer {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-certificate.html
     */
    interface CertificateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-certificate.html#cfn-transfer-certificate-inactivedate
       */
      InactiveDate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-certificate.html#cfn-transfer-certificate-usage
       */
      Usage: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-certificate.html#cfn-transfer-certificate-privatekey
       */
      PrivateKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-certificate.html#cfn-transfer-certificate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-certificate.html#cfn-transfer-certificate-certificatechain
       */
      CertificateChain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-certificate.html#cfn-transfer-certificate-activedate
       */
      ActiveDate?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-certificate.html#cfn-transfer-certificate-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-certificate.html#cfn-transfer-certificate-certificate
       */
      Certificate: string;
    }
    
    
    interface Certificate extends Resource<"AWS::Transfer::Certificate">, CertificateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Certificate(id: string, props: CertificateProps): Promise<Certificate>;
  }
  namespace Transfer {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html
     */
    interface ConnectorProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html#cfn-transfer-connector-as2config
       */
      As2Config?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html#cfn-transfer-connector-loggingrole
       */
      LoggingRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html#cfn-transfer-connector-accessrole
       */
      AccessRole: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html#cfn-transfer-connector-securitypolicyname
       */
      SecurityPolicyName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html#cfn-transfer-connector-sftpconfig
       */
      SftpConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html#cfn-transfer-connector-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html#cfn-transfer-connector-url
       */
      Url: string;
    }
    
    
    interface Connector extends Resource<"AWS::Transfer::Connector">, ConnectorProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Connector(id: string, props: ConnectorProps): Promise<Connector>;
  }
  namespace Transfer {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-profile.html
     */
    interface ProfileProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-profile.html#cfn-transfer-profile-as2id
       */
      As2Id: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-profile.html#cfn-transfer-profile-profiletype
       */
      ProfileType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-profile.html#cfn-transfer-profile-certificateids
       */
      CertificateIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-profile.html#cfn-transfer-profile-tags
       */
      Tags?: {}[];
    }
    
    
    interface Profile extends Resource<"AWS::Transfer::Profile">, ProfileProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Profile(id: string, props: ProfileProps): Promise<Profile>;
  }
  namespace Transfer {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html
     */
    interface ServerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-loggingrole
       */
      LoggingRole?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-protocols
       */
      Protocols?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-identityproviderdetails
       */
      IdentityProviderDetails?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-endpointdetails
       */
      EndpointDetails?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-structuredlogdestinations
       */
      StructuredLogDestinations?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-preauthenticationloginbanner
       */
      PreAuthenticationLoginBanner?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-postauthenticationloginbanner
       */
      PostAuthenticationLoginBanner?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-endpointtype
       */
      EndpointType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-securitypolicyname
       */
      SecurityPolicyName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-protocoldetails
       */
      ProtocolDetails?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-s3storageoptions
       */
      S3StorageOptions?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-workflowdetails
       */
      WorkflowDetails?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-domain
       */
      Domain?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-identityprovidertype
       */
      IdentityProviderType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-certificate
       */
      Certificate?: string;
    }
    
    
    interface Server extends Resource<"AWS::Transfer::Server">, ServerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Server(id: string, props: ServerProps): Promise<Server>;
  }
  namespace Transfer {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html
     */
    interface UserProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html#cfn-transfer-user-policy
       */
      Policy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html#cfn-transfer-user-role
       */
      Role: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html#cfn-transfer-user-homedirectory
       */
      HomeDirectory?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html#cfn-transfer-user-homedirectorytype
       */
      HomeDirectoryType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html#cfn-transfer-user-serverid
       */
      ServerId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html#cfn-transfer-user-username
       */
      UserName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html#cfn-transfer-user-homedirectorymappings
       */
      HomeDirectoryMappings?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html#cfn-transfer-user-posixprofile
       */
      PosixProfile?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html#cfn-transfer-user-sshpublickeys
       */
      SshPublicKeys?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-user.html#cfn-transfer-user-tags
       */
      Tags?: {}[];
    }
    
    
    interface User extends Resource<"AWS::Transfer::User">, UserProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function User(id: string, props: UserProps): Promise<User>;
  }
  namespace Transfer {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-webapp.html
     */
    interface WebAppProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-webapp.html#cfn-transfer-webapp-webappcustomization
       */
      WebAppCustomization?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-webapp.html#cfn-transfer-webapp-identityproviderdetails
       */
      IdentityProviderDetails: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-webapp.html#cfn-transfer-webapp-webappunits
       */
      WebAppUnits?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-webapp.html#cfn-transfer-webapp-webappendpointpolicy
       */
      WebAppEndpointPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-webapp.html#cfn-transfer-webapp-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-webapp.html#cfn-transfer-webapp-accessendpoint
       */
      AccessEndpoint?: string;
    }
    
    
    interface WebApp extends Resource<"AWS::Transfer::WebApp">, WebAppProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WebApp(id: string, props: WebAppProps): Promise<WebApp>;
  }
  namespace Transfer {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-workflow.html
     */
    interface WorkflowProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-workflow.html#cfn-transfer-workflow-steps
       */
      Steps: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-workflow.html#cfn-transfer-workflow-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-workflow.html#cfn-transfer-workflow-onexceptionsteps
       */
      OnExceptionSteps?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-workflow.html#cfn-transfer-workflow-tags
       */
      Tags?: {}[];
    }
    
    
    interface Workflow extends Resource<"AWS::Transfer::Workflow">, WorkflowProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Workflow(id: string, props: WorkflowProps): Promise<Workflow>;
  }
  namespace VerifiedPermissions {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-identitysource.html
     */
    interface IdentitySourceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-identitysource.html#cfn-verifiedpermissions-identitysource-principalentitytype
       */
      PrincipalEntityType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-identitysource.html#cfn-verifiedpermissions-identitysource-configuration
       */
      Configuration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-identitysource.html#cfn-verifiedpermissions-identitysource-policystoreid
       */
      PolicyStoreId: string;
    }
    
    
    interface IdentitySource extends Resource<"AWS::VerifiedPermissions::IdentitySource">, IdentitySourceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IdentitySource(id: string, props: IdentitySourceProps): Promise<IdentitySource>;
  }
  namespace VerifiedPermissions {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-policy.html
     */
    interface PolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-policy.html#cfn-verifiedpermissions-policy-definition
       */
      Definition: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-policy.html#cfn-verifiedpermissions-policy-policystoreid
       */
      PolicyStoreId: string;
    }
    
    
    interface Policy extends Resource<"AWS::VerifiedPermissions::Policy">, PolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Policy(id: string, props: PolicyProps): Promise<Policy>;
  }
  namespace VerifiedPermissions {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-policystore.html
     */
    interface PolicyStoreProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-policystore.html#cfn-verifiedpermissions-policystore-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-policystore.html#cfn-verifiedpermissions-policystore-validationsettings
       */
      ValidationSettings: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-policystore.html#cfn-verifiedpermissions-policystore-schema
       */
      Schema?: {};
    }
    
    
    interface PolicyStore extends Resource<"AWS::VerifiedPermissions::PolicyStore">, PolicyStoreProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PolicyStore(id: string, props: PolicyStoreProps): Promise<PolicyStore>;
  }
  namespace VerifiedPermissions {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-policytemplate.html
     */
    interface PolicyTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-policytemplate.html#cfn-verifiedpermissions-policytemplate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-policytemplate.html#cfn-verifiedpermissions-policytemplate-statement
       */
      Statement: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-verifiedpermissions-policytemplate.html#cfn-verifiedpermissions-policytemplate-policystoreid
       */
      PolicyStoreId: string;
    }
    
    
    interface PolicyTemplate extends Resource<"AWS::VerifiedPermissions::PolicyTemplate">, PolicyTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function PolicyTemplate(id: string, props: PolicyTemplateProps): Promise<PolicyTemplate>;
  }
  namespace VoiceID {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-voiceid-domain.html
     */
    interface DomainProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-voiceid-domain.html#cfn-voiceid-domain-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-voiceid-domain.html#cfn-voiceid-domain-serversideencryptionconfiguration
       */
      ServerSideEncryptionConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-voiceid-domain.html#cfn-voiceid-domain-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-voiceid-domain.html#cfn-voiceid-domain-name
       */
      Name: string;
    }
    
    
    interface Domain extends Resource<"AWS::VoiceID::Domain">, DomainProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Domain(id: string, props: DomainProps): Promise<Domain>;
  }
  namespace VpcLattice {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-accesslogsubscription.html
     */
    interface AccessLogSubscriptionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-accesslogsubscription.html#cfn-vpclattice-accesslogsubscription-resourceidentifier
       */
      ResourceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-accesslogsubscription.html#cfn-vpclattice-accesslogsubscription-servicenetworklogtype
       */
      ServiceNetworkLogType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-accesslogsubscription.html#cfn-vpclattice-accesslogsubscription-destinationarn
       */
      DestinationArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-accesslogsubscription.html#cfn-vpclattice-accesslogsubscription-tags
       */
      Tags?: {}[];
    }
    
    
    interface AccessLogSubscription extends Resource<"AWS::VpcLattice::AccessLogSubscription">, AccessLogSubscriptionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AccessLogSubscription(id: string, props: AccessLogSubscriptionProps): Promise<AccessLogSubscription>;
  }
  namespace VpcLattice {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-authpolicy.html
     */
    interface AuthPolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-authpolicy.html#cfn-vpclattice-authpolicy-policy
       */
      Policy: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-authpolicy.html#cfn-vpclattice-authpolicy-resourceidentifier
       */
      ResourceIdentifier: string;
    }
    
    
    interface AuthPolicy extends Resource<"AWS::VpcLattice::AuthPolicy">, AuthPolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AuthPolicy(id: string, props: AuthPolicyProps): Promise<AuthPolicy>;
  }
  namespace VpcLattice {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-listener.html
     */
    interface ListenerProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-listener.html#cfn-vpclattice-listener-defaultaction
       */
      DefaultAction: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-listener.html#cfn-vpclattice-listener-port
       */
      Port?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-listener.html#cfn-vpclattice-listener-serviceidentifier
       */
      ServiceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-listener.html#cfn-vpclattice-listener-protocol
       */
      Protocol: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-listener.html#cfn-vpclattice-listener-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-listener.html#cfn-vpclattice-listener-name
       */
      Name?: string;
    }
    
    
    interface Listener extends Resource<"AWS::VpcLattice::Listener">, ListenerProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Listener(id: string, props: ListenerProps): Promise<Listener>;
  }
  namespace VpcLattice {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourceconfiguration.html
     */
    interface ResourceConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourceconfiguration.html#cfn-vpclattice-resourceconfiguration-allowassociationtosharableservicenetwork
       */
      AllowAssociationToSharableServiceNetwork?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourceconfiguration.html#cfn-vpclattice-resourceconfiguration-protocoltype
       */
      ProtocolType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourceconfiguration.html#cfn-vpclattice-resourceconfiguration-resourceconfigurationtype
       */
      ResourceConfigurationType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourceconfiguration.html#cfn-vpclattice-resourceconfiguration-portranges
       */
      PortRanges?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourceconfiguration.html#cfn-vpclattice-resourceconfiguration-resourceconfigurationdefinition
       */
      ResourceConfigurationDefinition?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourceconfiguration.html#cfn-vpclattice-resourceconfiguration-resourcegatewayid
       */
      ResourceGatewayId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourceconfiguration.html#cfn-vpclattice-resourceconfiguration-resourceconfigurationauthtype
       */
      ResourceConfigurationAuthType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourceconfiguration.html#cfn-vpclattice-resourceconfiguration-resourceconfigurationgroupid
       */
      ResourceConfigurationGroupId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourceconfiguration.html#cfn-vpclattice-resourceconfiguration-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourceconfiguration.html#cfn-vpclattice-resourceconfiguration-name
       */
      Name: string;
    }
    
    
    interface ResourceConfiguration extends Resource<"AWS::VpcLattice::ResourceConfiguration">, ResourceConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceConfiguration(id: string, props: ResourceConfigurationProps): Promise<ResourceConfiguration>;
  }
  namespace VpcLattice {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourcegateway.html
     */
    interface ResourceGatewayProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourcegateway.html#cfn-vpclattice-resourcegateway-ipaddresstype
       */
      IpAddressType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourcegateway.html#cfn-vpclattice-resourcegateway-vpcidentifier
       */
      VpcIdentifier: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourcegateway.html#cfn-vpclattice-resourcegateway-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourcegateway.html#cfn-vpclattice-resourcegateway-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourcegateway.html#cfn-vpclattice-resourcegateway-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourcegateway.html#cfn-vpclattice-resourcegateway-name
       */
      Name: string;
    }
    
    
    interface ResourceGateway extends Resource<"AWS::VpcLattice::ResourceGateway">, ResourceGatewayProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourceGateway(id: string, props: ResourceGatewayProps): Promise<ResourceGateway>;
  }
  namespace VpcLattice {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourcepolicy.html
     */
    interface ResourcePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourcepolicy.html#cfn-vpclattice-resourcepolicy-policy
       */
      Policy: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-resourcepolicy.html#cfn-vpclattice-resourcepolicy-resourcearn
       */
      ResourceArn: string;
    }
    
    
    interface ResourcePolicy extends Resource<"AWS::VpcLattice::ResourcePolicy">, ResourcePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourcePolicy(id: string, props: ResourcePolicyProps): Promise<ResourcePolicy>;
  }
  namespace VpcLattice {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-rule.html
     */
    interface RuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-rule.html#cfn-vpclattice-rule-action
       */
      Action: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-rule.html#cfn-vpclattice-rule-priority
       */
      Priority: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-rule.html#cfn-vpclattice-rule-serviceidentifier
       */
      ServiceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-rule.html#cfn-vpclattice-rule-listeneridentifier
       */
      ListenerIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-rule.html#cfn-vpclattice-rule-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-rule.html#cfn-vpclattice-rule-match
       */
      Match: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-rule.html#cfn-vpclattice-rule-name
       */
      Name?: string;
    }
    
    
    interface Rule extends Resource<"AWS::VpcLattice::Rule">, RuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Rule(id: string, props: RuleProps): Promise<Rule>;
  }
  namespace VpcLattice {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-service.html
     */
    interface ServiceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-service.html#cfn-vpclattice-service-dnsentry
       */
      DnsEntry?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-service.html#cfn-vpclattice-service-customdomainname
       */
      CustomDomainName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-service.html#cfn-vpclattice-service-authtype
       */
      AuthType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-service.html#cfn-vpclattice-service-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-service.html#cfn-vpclattice-service-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-service.html#cfn-vpclattice-service-certificatearn
       */
      CertificateArn?: string;
    }
    
    
    interface Service extends Resource<"AWS::VpcLattice::Service">, ServiceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Service(id: string, props: ServiceProps): Promise<Service>;
  }
  namespace VpcLattice {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetwork.html
     */
    interface ServiceNetworkProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetwork.html#cfn-vpclattice-servicenetwork-sharingconfig
       */
      SharingConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetwork.html#cfn-vpclattice-servicenetwork-authtype
       */
      AuthType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetwork.html#cfn-vpclattice-servicenetwork-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetwork.html#cfn-vpclattice-servicenetwork-name
       */
      Name?: string;
    }
    
    
    interface ServiceNetwork extends Resource<"AWS::VpcLattice::ServiceNetwork">, ServiceNetworkProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ServiceNetwork(id: string, props: ServiceNetworkProps): Promise<ServiceNetwork>;
  }
  namespace VpcLattice {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkresourceassociation.html
     */
    interface ServiceNetworkResourceAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkresourceassociation.html#cfn-vpclattice-servicenetworkresourceassociation-resourceconfigurationid
       */
      ResourceConfigurationId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkresourceassociation.html#cfn-vpclattice-servicenetworkresourceassociation-servicenetworkid
       */
      ServiceNetworkId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkresourceassociation.html#cfn-vpclattice-servicenetworkresourceassociation-tags
       */
      Tags?: {}[];
    }
    
    
    interface ServiceNetworkResourceAssociation extends Resource<"AWS::VpcLattice::ServiceNetworkResourceAssociation">, ServiceNetworkResourceAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ServiceNetworkResourceAssociation(id: string, props: ServiceNetworkResourceAssociationProps): Promise<ServiceNetworkResourceAssociation>;
  }
  namespace VpcLattice {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkserviceassociation.html
     */
    interface ServiceNetworkServiceAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkserviceassociation.html#cfn-vpclattice-servicenetworkserviceassociation-servicenetworkidentifier
       */
      ServiceNetworkIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkserviceassociation.html#cfn-vpclattice-servicenetworkserviceassociation-dnsentry
       */
      DnsEntry?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkserviceassociation.html#cfn-vpclattice-servicenetworkserviceassociation-serviceidentifier
       */
      ServiceIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkserviceassociation.html#cfn-vpclattice-servicenetworkserviceassociation-tags
       */
      Tags?: {}[];
    }
    
    
    interface ServiceNetworkServiceAssociation extends Resource<"AWS::VpcLattice::ServiceNetworkServiceAssociation">, ServiceNetworkServiceAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ServiceNetworkServiceAssociation(id: string, props: ServiceNetworkServiceAssociationProps): Promise<ServiceNetworkServiceAssociation>;
  }
  namespace VpcLattice {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkvpcassociation.html
     */
    interface ServiceNetworkVpcAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkvpcassociation.html#cfn-vpclattice-servicenetworkvpcassociation-servicenetworkidentifier
       */
      ServiceNetworkIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkvpcassociation.html#cfn-vpclattice-servicenetworkvpcassociation-vpcidentifier
       */
      VpcIdentifier?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkvpcassociation.html#cfn-vpclattice-servicenetworkvpcassociation-securitygroupids
       */
      SecurityGroupIds?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-servicenetworkvpcassociation.html#cfn-vpclattice-servicenetworkvpcassociation-tags
       */
      Tags?: {}[];
    }
    
    
    interface ServiceNetworkVpcAssociation extends Resource<"AWS::VpcLattice::ServiceNetworkVpcAssociation">, ServiceNetworkVpcAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ServiceNetworkVpcAssociation(id: string, props: ServiceNetworkVpcAssociationProps): Promise<ServiceNetworkVpcAssociation>;
  }
  namespace VpcLattice {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-targetgroup.html
     */
    interface TargetGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-targetgroup.html#cfn-vpclattice-targetgroup-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-targetgroup.html#cfn-vpclattice-targetgroup-config
       */
      Config?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-targetgroup.html#cfn-vpclattice-targetgroup-targets
       */
      Targets?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-targetgroup.html#cfn-vpclattice-targetgroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-targetgroup.html#cfn-vpclattice-targetgroup-name
       */
      Name?: string;
    }
    
    
    interface TargetGroup extends Resource<"AWS::VpcLattice::TargetGroup">, TargetGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TargetGroup(id: string, props: TargetGroupProps): Promise<TargetGroup>;
  }
  namespace WAF {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-bytematchset.html
     */
    interface ByteMatchSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-bytematchset.html#cfn-waf-bytematchset-bytematchtuples
       */
      ByteMatchTuples?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-bytematchset.html#cfn-waf-bytematchset-name
       */
      Name: string;
    }
    
    
    interface ByteMatchSet extends Resource<"AWS::WAF::ByteMatchSet">, ByteMatchSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ByteMatchSet(id: string, props: ByteMatchSetProps): Promise<ByteMatchSet>;
  }
  namespace WAF {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-ipset.html
     */
    interface IPSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-ipset.html#cfn-waf-ipset-ipsetdescriptors
       */
      IPSetDescriptors?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-ipset.html#cfn-waf-ipset-name
       */
      Name: string;
    }
    
    
    interface IPSet extends Resource<"AWS::WAF::IPSet">, IPSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IPSet(id: string, props: IPSetProps): Promise<IPSet>;
  }
  namespace WAF {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-rule.html
     */
    interface RuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-rule.html#cfn-waf-rule-metricname
       */
      MetricName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-rule.html#cfn-waf-rule-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-rule.html#cfn-waf-rule-predicates
       */
      Predicates?: {}[];
    }
    
    
    interface Rule extends Resource<"AWS::WAF::Rule">, RuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Rule(id: string, props: RuleProps): Promise<Rule>;
  }
  namespace WAF {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sizeconstraintset.html
     */
    interface SizeConstraintSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sizeconstraintset.html#cfn-waf-sizeconstraintset-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sizeconstraintset.html#cfn-waf-sizeconstraintset-sizeconstraints
       */
      SizeConstraints: {}[];
    }
    
    
    interface SizeConstraintSet extends Resource<"AWS::WAF::SizeConstraintSet">, SizeConstraintSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SizeConstraintSet(id: string, props: SizeConstraintSetProps): Promise<SizeConstraintSet>;
  }
  namespace WAF {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sqlinjectionmatchset.html
     */
    interface SqlInjectionMatchSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sqlinjectionmatchset.html#cfn-waf-sqlinjectionmatchset-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-sqlinjectionmatchset.html#cfn-waf-sqlinjectionmatchset-sqlinjectionmatchtuples
       */
      SqlInjectionMatchTuples?: {}[];
    }
    
    
    interface SqlInjectionMatchSet extends Resource<"AWS::WAF::SqlInjectionMatchSet">, SqlInjectionMatchSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SqlInjectionMatchSet(id: string, props: SqlInjectionMatchSetProps): Promise<SqlInjectionMatchSet>;
  }
  namespace WAF {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-webacl.html
     */
    interface WebACLProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-webacl.html#cfn-waf-webacl-defaultaction
       */
      DefaultAction: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-webacl.html#cfn-waf-webacl-metricname
       */
      MetricName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-webacl.html#cfn-waf-webacl-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-webacl.html#cfn-waf-webacl-rules
       */
      Rules?: {}[];
    }
    
    
    interface WebACL extends Resource<"AWS::WAF::WebACL">, WebACLProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WebACL(id: string, props: WebACLProps): Promise<WebACL>;
  }
  namespace WAF {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-xssmatchset.html
     */
    interface XssMatchSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-xssmatchset.html#cfn-waf-xssmatchset-name
       */
      Name: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-waf-xssmatchset.html#cfn-waf-xssmatchset-xssmatchtuples
       */
      XssMatchTuples: {}[];
    }
    
    
    interface XssMatchSet extends Resource<"AWS::WAF::XssMatchSet">, XssMatchSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function XssMatchSet(id: string, props: XssMatchSetProps): Promise<XssMatchSet>;
  }
  namespace WAFRegional {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-bytematchset.html
     */
    interface ByteMatchSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-bytematchset.html#cfn-wafregional-bytematchset-bytematchtuples
       */
      ByteMatchTuples?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-bytematchset.html#cfn-wafregional-bytematchset-name
       */
      Name: string;
    }
    
    
    interface ByteMatchSet extends Resource<"AWS::WAFRegional::ByteMatchSet">, ByteMatchSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ByteMatchSet(id: string, props: ByteMatchSetProps): Promise<ByteMatchSet>;
  }
  namespace WAFRegional {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-geomatchset.html
     */
    interface GeoMatchSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-geomatchset.html#cfn-wafregional-geomatchset-geomatchconstraints
       */
      GeoMatchConstraints?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-geomatchset.html#cfn-wafregional-geomatchset-name
       */
      Name: string;
    }
    
    
    interface GeoMatchSet extends Resource<"AWS::WAFRegional::GeoMatchSet">, GeoMatchSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function GeoMatchSet(id: string, props: GeoMatchSetProps): Promise<GeoMatchSet>;
  }
  namespace WAFRegional {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ipset.html
     */
    interface IPSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ipset.html#cfn-wafregional-ipset-ipsetdescriptors
       */
      IPSetDescriptors?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ipset.html#cfn-wafregional-ipset-name
       */
      Name: string;
    }
    
    
    interface IPSet extends Resource<"AWS::WAFRegional::IPSet">, IPSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IPSet(id: string, props: IPSetProps): Promise<IPSet>;
  }
  namespace WAFRegional {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ratebasedrule.html
     */
    interface RateBasedRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ratebasedrule.html#cfn-wafregional-ratebasedrule-metricname
       */
      MetricName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ratebasedrule.html#cfn-wafregional-ratebasedrule-ratelimit
       */
      RateLimit: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ratebasedrule.html#cfn-wafregional-ratebasedrule-matchpredicates
       */
      MatchPredicates?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ratebasedrule.html#cfn-wafregional-ratebasedrule-ratekey
       */
      RateKey: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-ratebasedrule.html#cfn-wafregional-ratebasedrule-name
       */
      Name: string;
    }
    
    
    interface RateBasedRule extends Resource<"AWS::WAFRegional::RateBasedRule">, RateBasedRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RateBasedRule(id: string, props: RateBasedRuleProps): Promise<RateBasedRule>;
  }
  namespace WAFRegional {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-regexpatternset.html
     */
    interface RegexPatternSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-regexpatternset.html#cfn-wafregional-regexpatternset-regexpatternstrings
       */
      RegexPatternStrings: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-regexpatternset.html#cfn-wafregional-regexpatternset-name
       */
      Name: string;
    }
    
    
    interface RegexPatternSet extends Resource<"AWS::WAFRegional::RegexPatternSet">, RegexPatternSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RegexPatternSet(id: string, props: RegexPatternSetProps): Promise<RegexPatternSet>;
  }
  namespace WAFRegional {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-rule.html
     */
    interface RuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-rule.html#cfn-wafregional-rule-metricname
       */
      MetricName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-rule.html#cfn-wafregional-rule-predicates
       */
      Predicates?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-rule.html#cfn-wafregional-rule-name
       */
      Name: string;
    }
    
    
    interface Rule extends Resource<"AWS::WAFRegional::Rule">, RuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Rule(id: string, props: RuleProps): Promise<Rule>;
  }
  namespace WAFRegional {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sizeconstraintset.html
     */
    interface SizeConstraintSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sizeconstraintset.html#cfn-wafregional-sizeconstraintset-sizeconstraints
       */
      SizeConstraints?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sizeconstraintset.html#cfn-wafregional-sizeconstraintset-name
       */
      Name: string;
    }
    
    
    interface SizeConstraintSet extends Resource<"AWS::WAFRegional::SizeConstraintSet">, SizeConstraintSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SizeConstraintSet(id: string, props: SizeConstraintSetProps): Promise<SizeConstraintSet>;
  }
  namespace WAFRegional {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sqlinjectionmatchset.html
     */
    interface SqlInjectionMatchSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sqlinjectionmatchset.html#cfn-wafregional-sqlinjectionmatchset-sqlinjectionmatchtuples
       */
      SqlInjectionMatchTuples?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-sqlinjectionmatchset.html#cfn-wafregional-sqlinjectionmatchset-name
       */
      Name: string;
    }
    
    
    interface SqlInjectionMatchSet extends Resource<"AWS::WAFRegional::SqlInjectionMatchSet">, SqlInjectionMatchSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SqlInjectionMatchSet(id: string, props: SqlInjectionMatchSetProps): Promise<SqlInjectionMatchSet>;
  }
  namespace WAFRegional {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webacl.html
     */
    interface WebACLProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webacl.html#cfn-wafregional-webacl-metricname
       */
      MetricName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webacl.html#cfn-wafregional-webacl-defaultaction
       */
      DefaultAction: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webacl.html#cfn-wafregional-webacl-rules
       */
      Rules?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webacl.html#cfn-wafregional-webacl-name
       */
      Name: string;
    }
    
    
    interface WebACL extends Resource<"AWS::WAFRegional::WebACL">, WebACLProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WebACL(id: string, props: WebACLProps): Promise<WebACL>;
  }
  namespace WAFRegional {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webaclassociation.html
     */
    interface WebACLAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webaclassociation.html#cfn-wafregional-webaclassociation-resourcearn
       */
      ResourceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webaclassociation.html#cfn-wafregional-webaclassociation-webaclid
       */
      WebACLId: string;
    }
    
    
    interface WebACLAssociation extends Resource<"AWS::WAFRegional::WebACLAssociation">, WebACLAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WebACLAssociation(id: string, props: WebACLAssociationProps): Promise<WebACLAssociation>;
  }
  namespace WAFRegional {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-xssmatchset.html
     */
    interface XssMatchSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-xssmatchset.html#cfn-wafregional-xssmatchset-xssmatchtuples
       */
      XssMatchTuples?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-xssmatchset.html#cfn-wafregional-xssmatchset-name
       */
      Name: string;
    }
    
    
    interface XssMatchSet extends Resource<"AWS::WAFRegional::XssMatchSet">, XssMatchSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function XssMatchSet(id: string, props: XssMatchSetProps): Promise<XssMatchSet>;
  }
  namespace WAFv2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html
     */
    interface IPSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-addresses
       */
      Addresses: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-scope
       */
      Scope: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-ipaddressversion
       */
      IPAddressVersion: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-ipset.html#cfn-wafv2-ipset-name
       */
      Name?: string;
    }
    
    
    interface IPSet extends Resource<"AWS::WAFv2::IPSet">, IPSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IPSet(id: string, props: IPSetProps): Promise<IPSet>;
  }
  namespace WAFv2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html
     */
    interface LoggingConfigurationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html#cfn-wafv2-loggingconfiguration-resourcearn
       */
      ResourceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html#cfn-wafv2-loggingconfiguration-logdestinationconfigs
       */
      LogDestinationConfigs: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html#cfn-wafv2-loggingconfiguration-redactedfields
       */
      RedactedFields?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-loggingconfiguration.html#cfn-wafv2-loggingconfiguration-loggingfilter
       */
      LoggingFilter?: {};
    }
    
    
    interface LoggingConfiguration extends Resource<"AWS::WAFv2::LoggingConfiguration">, LoggingConfigurationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function LoggingConfiguration(id: string, props: LoggingConfigurationProps): Promise<LoggingConfiguration>;
  }
  namespace WAFv2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html
     */
    interface RegexPatternSetProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-regularexpressionlist
       */
      RegularExpressionList: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-scope
       */
      Scope: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-regexpatternset.html#cfn-wafv2-regexpatternset-name
       */
      Name?: string;
    }
    
    
    interface RegexPatternSet extends Resource<"AWS::WAFv2::RegexPatternSet">, RegexPatternSetProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RegexPatternSet(id: string, props: RegexPatternSetProps): Promise<RegexPatternSet>;
  }
  namespace WAFv2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html
     */
    interface RuleGroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-scope
       */
      Scope: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-capacity
       */
      Capacity: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-availablelabels
       */
      AvailableLabels?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-customresponsebodies
       */
      CustomResponseBodies?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-consumedlabels
       */
      ConsumedLabels?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-rules
       */
      Rules?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-visibilityconfig
       */
      VisibilityConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-name
       */
      Name?: string;
    }
    
    
    interface RuleGroup extends Resource<"AWS::WAFv2::RuleGroup">, RuleGroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function RuleGroup(id: string, props: RuleGroupProps): Promise<RuleGroup>;
  }
  namespace WAFv2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html
     */
    interface WebACLProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-associationconfig
       */
      AssociationConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-challengeconfig
       */
      ChallengeConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-dataprotectionconfig
       */
      DataProtectionConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-rules
       */
      Rules?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-visibilityconfig
       */
      VisibilityConfig: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-name
       */
      Name?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-tokendomains
       */
      TokenDomains?: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-defaultaction
       */
      DefaultAction: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-scope
       */
      Scope: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-customresponsebodies
       */
      CustomResponseBodies?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-captchaconfig
       */
      CaptchaConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webacl.html#cfn-wafv2-webacl-tags
       */
      Tags?: {}[];
    }
    
    
    interface WebACL extends Resource<"AWS::WAFv2::WebACL">, WebACLProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WebACL(id: string, props: WebACLProps): Promise<WebACL>;
  }
  namespace WAFv2 {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webaclassociation.html
     */
    interface WebACLAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webaclassociation.html#cfn-wafv2-webaclassociation-resourcearn
       */
      ResourceArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webaclassociation.html#cfn-wafv2-webaclassociation-webaclarn
       */
      WebACLArn: string;
    }
    
    
    interface WebACLAssociation extends Resource<"AWS::WAFv2::WebACLAssociation">, WebACLAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WebACLAssociation(id: string, props: WebACLAssociationProps): Promise<WebACLAssociation>;
  }
  namespace Wisdom {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagent.html
     */
    interface AIAgentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagent.html#cfn-wisdom-aiagent-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagent.html#cfn-wisdom-aiagent-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagent.html#cfn-wisdom-aiagent-configuration
       */
      Configuration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagent.html#cfn-wisdom-aiagent-assistantid
       */
      AssistantId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagent.html#cfn-wisdom-aiagent-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagent.html#cfn-wisdom-aiagent-name
       */
      Name?: string;
    }
    
    
    interface AIAgent extends Resource<"AWS::Wisdom::AIAgent">, AIAgentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AIAgent(id: string, props: AIAgentProps): Promise<AIAgent>;
  }
  namespace Wisdom {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagentversion.html
     */
    interface AIAgentVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagentversion.html#cfn-wisdom-aiagentversion-assistantid
       */
      AssistantId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagentversion.html#cfn-wisdom-aiagentversion-aiagentid
       */
      AIAgentId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagentversion.html#cfn-wisdom-aiagentversion-modifiedtimeseconds
       */
      ModifiedTimeSeconds?: number;
    }
    
    
    interface AIAgentVersion extends Resource<"AWS::Wisdom::AIAgentVersion">, AIAgentVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AIAgentVersion(id: string, props: AIAgentVersionProps): Promise<AIAgentVersion>;
  }
  namespace Wisdom {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrail.html
     */
    interface AIGuardrailProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrail.html#cfn-wisdom-aiguardrail-topicpolicyconfig
       */
      TopicPolicyConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrail.html#cfn-wisdom-aiguardrail-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrail.html#cfn-wisdom-aiguardrail-wordpolicyconfig
       */
      WordPolicyConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrail.html#cfn-wisdom-aiguardrail-contextualgroundingpolicyconfig
       */
      ContextualGroundingPolicyConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrail.html#cfn-wisdom-aiguardrail-blockedinputmessaging
       */
      BlockedInputMessaging: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrail.html#cfn-wisdom-aiguardrail-assistantid
       */
      AssistantId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrail.html#cfn-wisdom-aiguardrail-blockedoutputsmessaging
       */
      BlockedOutputsMessaging: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrail.html#cfn-wisdom-aiguardrail-sensitiveinformationpolicyconfig
       */
      SensitiveInformationPolicyConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrail.html#cfn-wisdom-aiguardrail-contentpolicyconfig
       */
      ContentPolicyConfig?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrail.html#cfn-wisdom-aiguardrail-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrail.html#cfn-wisdom-aiguardrail-name
       */
      Name?: string;
    }
    
    
    interface AIGuardrail extends Resource<"AWS::Wisdom::AIGuardrail">, AIGuardrailProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AIGuardrail(id: string, props: AIGuardrailProps): Promise<AIGuardrail>;
  }
  namespace Wisdom {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrailversion.html
     */
    interface AIGuardrailVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrailversion.html#cfn-wisdom-aiguardrailversion-aiguardrailid
       */
      AIGuardrailId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrailversion.html#cfn-wisdom-aiguardrailversion-assistantid
       */
      AssistantId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiguardrailversion.html#cfn-wisdom-aiguardrailversion-modifiedtimeseconds
       */
      ModifiedTimeSeconds?: number;
    }
    
    
    interface AIGuardrailVersion extends Resource<"AWS::Wisdom::AIGuardrailVersion">, AIGuardrailVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AIGuardrailVersion(id: string, props: AIGuardrailVersionProps): Promise<AIGuardrailVersion>;
  }
  namespace Wisdom {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html
     */
    interface AIPromptProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-apiformat
       */
      ApiFormat: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-assistantid
       */
      AssistantId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-templateconfiguration
       */
      TemplateConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-templatetype
       */
      TemplateType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-modelid
       */
      ModelId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-tags
       */
      Tags?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-name
       */
      Name?: string;
    }
    
    
    interface AIPrompt extends Resource<"AWS::Wisdom::AIPrompt">, AIPromptProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AIPrompt(id: string, props: AIPromptProps): Promise<AIPrompt>;
  }
  namespace Wisdom {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aipromptversion.html
     */
    interface AIPromptVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aipromptversion.html#cfn-wisdom-aipromptversion-assistantid
       */
      AssistantId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aipromptversion.html#cfn-wisdom-aipromptversion-modifiedtimeseconds
       */
      ModifiedTimeSeconds?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aipromptversion.html#cfn-wisdom-aipromptversion-aipromptid
       */
      AIPromptId: string;
    }
    
    
    interface AIPromptVersion extends Resource<"AWS::Wisdom::AIPromptVersion">, AIPromptVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AIPromptVersion(id: string, props: AIPromptVersionProps): Promise<AIPromptVersion>;
  }
  namespace Wisdom {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistant.html
     */
    interface AssistantProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistant.html#cfn-wisdom-assistant-type
       */
      Type: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistant.html#cfn-wisdom-assistant-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistant.html#cfn-wisdom-assistant-serversideencryptionconfiguration
       */
      ServerSideEncryptionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistant.html#cfn-wisdom-assistant-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistant.html#cfn-wisdom-assistant-name
       */
      Name: string;
    }
    
    
    interface Assistant extends Resource<"AWS::Wisdom::Assistant">, AssistantProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Assistant(id: string, props: AssistantProps): Promise<Assistant>;
  }
  namespace Wisdom {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistantassociation.html
     */
    interface AssistantAssociationProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistantassociation.html#cfn-wisdom-assistantassociation-association
       */
      Association: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistantassociation.html#cfn-wisdom-assistantassociation-associationtype
       */
      AssociationType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistantassociation.html#cfn-wisdom-assistantassociation-assistantid
       */
      AssistantId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-assistantassociation.html#cfn-wisdom-assistantassociation-tags
       */
      Tags?: {}[];
    }
    
    
    interface AssistantAssociation extends Resource<"AWS::Wisdom::AssistantAssociation">, AssistantAssociationProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function AssistantAssociation(id: string, props: AssistantAssociationProps): Promise<AssistantAssociation>;
  }
  namespace Wisdom {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-knowledgebase.html
     */
    interface KnowledgeBaseProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-knowledgebase.html#cfn-wisdom-knowledgebase-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-knowledgebase.html#cfn-wisdom-knowledgebase-knowledgebasetype
       */
      KnowledgeBaseType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-knowledgebase.html#cfn-wisdom-knowledgebase-sourceconfiguration
       */
      SourceConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-knowledgebase.html#cfn-wisdom-knowledgebase-serversideencryptionconfiguration
       */
      ServerSideEncryptionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-knowledgebase.html#cfn-wisdom-knowledgebase-vectoringestionconfiguration
       */
      VectorIngestionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-knowledgebase.html#cfn-wisdom-knowledgebase-renderingconfiguration
       */
      RenderingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-knowledgebase.html#cfn-wisdom-knowledgebase-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-knowledgebase.html#cfn-wisdom-knowledgebase-name
       */
      Name: string;
    }
    
    
    interface KnowledgeBase extends Resource<"AWS::Wisdom::KnowledgeBase">, KnowledgeBaseProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function KnowledgeBase(id: string, props: KnowledgeBaseProps): Promise<KnowledgeBase>;
  }
  namespace Wisdom {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html
     */
    interface MessageTemplateProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-language
       */
      Language?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-content
       */
      Content: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-groupingconfiguration
       */
      GroupingConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-knowledgebasearn
       */
      KnowledgeBaseArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-channelsubtype
       */
      ChannelSubtype: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-defaultattributes
       */
      DefaultAttributes?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-name
       */
      Name: string;
    }
    
    
    interface MessageTemplate extends Resource<"AWS::Wisdom::MessageTemplate">, MessageTemplateProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MessageTemplate(id: string, props: MessageTemplateProps): Promise<MessageTemplate>;
  }
  namespace Wisdom {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplateversion.html
     */
    interface MessageTemplateVersionProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplateversion.html#cfn-wisdom-messagetemplateversion-messagetemplatearn
       */
      MessageTemplateArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplateversion.html#cfn-wisdom-messagetemplateversion-messagetemplatecontentsha256
       */
      MessageTemplateContentSha256?: string;
    }
    
    
    interface MessageTemplateVersion extends Resource<"AWS::Wisdom::MessageTemplateVersion">, MessageTemplateVersionProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function MessageTemplateVersion(id: string, props: MessageTemplateVersionProps): Promise<MessageTemplateVersion>;
  }
  namespace WorkSpaces {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html
     */
    interface ConnectionAliasProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html#cfn-workspaces-connectionalias-connectionstring
       */
      ConnectionString: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html#cfn-workspaces-connectionalias-tags
       */
      Tags?: {}[];
    }
    
    
    interface ConnectionAlias extends Resource<"AWS::WorkSpaces::ConnectionAlias">, ConnectionAliasProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ConnectionAlias(id: string, props: ConnectionAliasProps): Promise<ConnectionAlias>;
  }
  namespace WorkSpaces {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html
     */
    interface WorkspaceProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-bundleid
       */
      BundleId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-directoryid
       */
      DirectoryId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-rootvolumeencryptionenabled
       */
      RootVolumeEncryptionEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-username
       */
      UserName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-uservolumeencryptionenabled
       */
      UserVolumeEncryptionEnabled?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-volumeencryptionkey
       */
      VolumeEncryptionKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspace.html#cfn-workspaces-workspace-workspaceproperties
       */
      WorkspaceProperties?: {};
    }
    
    
    interface Workspace extends Resource<"AWS::WorkSpaces::Workspace">, WorkspaceProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Workspace(id: string, props: WorkspaceProps): Promise<Workspace>;
  }
  namespace WorkSpaces {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspacespool.html
     */
    interface WorkspacesPoolProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspacespool.html#cfn-workspaces-workspacespool-applicationsettings
       */
      ApplicationSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspacespool.html#cfn-workspaces-workspacespool-bundleid
       */
      BundleId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspacespool.html#cfn-workspaces-workspacespool-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspacespool.html#cfn-workspaces-workspacespool-directoryid
       */
      DirectoryId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspacespool.html#cfn-workspaces-workspacespool-timeoutsettings
       */
      TimeoutSettings?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspacespool.html#cfn-workspaces-workspacespool-capacity
       */
      Capacity: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-workspacespool.html#cfn-workspaces-workspacespool-poolname
       */
      PoolName: string;
    }
    
    
    interface WorkspacesPool extends Resource<"AWS::WorkSpaces::WorkspacesPool">, WorkspacesPoolProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function WorkspacesPool(id: string, props: WorkspacesPoolProps): Promise<WorkspacesPool>;
  }
  namespace WorkSpacesThinClient {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesthinclient-environment.html
     */
    interface EnvironmentProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesthinclient-environment.html#cfn-workspacesthinclient-environment-desiredsoftwaresetid
       */
      DesiredSoftwareSetId?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesthinclient-environment.html#cfn-workspacesthinclient-environment-kmskeyarn
       */
      KmsKeyArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesthinclient-environment.html#cfn-workspacesthinclient-environment-desktoparn
       */
      DesktopArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesthinclient-environment.html#cfn-workspacesthinclient-environment-devicecreationtags
       */
      DeviceCreationTags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesthinclient-environment.html#cfn-workspacesthinclient-environment-softwaresetupdatemode
       */
      SoftwareSetUpdateMode?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesthinclient-environment.html#cfn-workspacesthinclient-environment-softwaresetupdateschedule
       */
      SoftwareSetUpdateSchedule?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesthinclient-environment.html#cfn-workspacesthinclient-environment-maintenancewindow
       */
      MaintenanceWindow?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesthinclient-environment.html#cfn-workspacesthinclient-environment-desktopendpoint
       */
      DesktopEndpoint?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesthinclient-environment.html#cfn-workspacesthinclient-environment-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesthinclient-environment.html#cfn-workspacesthinclient-environment-name
       */
      Name?: string;
    }
    
    
    interface Environment extends Resource<"AWS::WorkSpacesThinClient::Environment">, EnvironmentProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Environment(id: string, props: EnvironmentProps): Promise<Environment>;
  }
  namespace WorkSpacesWeb {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-browsersettings.html
     */
    interface BrowserSettingsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-browsersettings.html#cfn-workspacesweb-browsersettings-browserpolicy
       */
      BrowserPolicy?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-browsersettings.html#cfn-workspacesweb-browsersettings-customermanagedkey
       */
      CustomerManagedKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-browsersettings.html#cfn-workspacesweb-browsersettings-additionalencryptioncontext
       */
      AdditionalEncryptionContext?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-browsersettings.html#cfn-workspacesweb-browsersettings-tags
       */
      Tags?: {}[];
    }
    
    
    interface BrowserSettings extends Resource<"AWS::WorkSpacesWeb::BrowserSettings">, BrowserSettingsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function BrowserSettings(id: string, props: BrowserSettingsProps): Promise<BrowserSettings>;
  }
  namespace WorkSpacesWeb {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-dataprotectionsettings.html
     */
    interface DataProtectionSettingsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-dataprotectionsettings.html#cfn-workspacesweb-dataprotectionsettings-inlineredactionconfiguration
       */
      InlineRedactionConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-dataprotectionsettings.html#cfn-workspacesweb-dataprotectionsettings-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-dataprotectionsettings.html#cfn-workspacesweb-dataprotectionsettings-customermanagedkey
       */
      CustomerManagedKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-dataprotectionsettings.html#cfn-workspacesweb-dataprotectionsettings-additionalencryptioncontext
       */
      AdditionalEncryptionContext?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-dataprotectionsettings.html#cfn-workspacesweb-dataprotectionsettings-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-dataprotectionsettings.html#cfn-workspacesweb-dataprotectionsettings-tags
       */
      Tags?: {}[];
    }
    
    
    interface DataProtectionSettings extends Resource<"AWS::WorkSpacesWeb::DataProtectionSettings">, DataProtectionSettingsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function DataProtectionSettings(id: string, props: DataProtectionSettingsProps): Promise<DataProtectionSettings>;
  }
  namespace WorkSpacesWeb {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-identityprovider.html
     */
    interface IdentityProviderProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-identityprovider.html#cfn-workspacesweb-identityprovider-identityproviderdetails
       */
      IdentityProviderDetails: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-identityprovider.html#cfn-workspacesweb-identityprovider-portalarn
       */
      PortalArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-identityprovider.html#cfn-workspacesweb-identityprovider-identityprovidername
       */
      IdentityProviderName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-identityprovider.html#cfn-workspacesweb-identityprovider-identityprovidertype
       */
      IdentityProviderType: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-identityprovider.html#cfn-workspacesweb-identityprovider-tags
       */
      Tags?: {}[];
    }
    
    
    interface IdentityProvider extends Resource<"AWS::WorkSpacesWeb::IdentityProvider">, IdentityProviderProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IdentityProvider(id: string, props: IdentityProviderProps): Promise<IdentityProvider>;
  }
  namespace WorkSpacesWeb {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html
     */
    interface IpAccessSettingsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html#cfn-workspacesweb-ipaccesssettings-iprules
       */
      IpRules: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html#cfn-workspacesweb-ipaccesssettings-description
       */
      Description?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html#cfn-workspacesweb-ipaccesssettings-customermanagedkey
       */
      CustomerManagedKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html#cfn-workspacesweb-ipaccesssettings-additionalencryptioncontext
       */
      AdditionalEncryptionContext?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html#cfn-workspacesweb-ipaccesssettings-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html#cfn-workspacesweb-ipaccesssettings-tags
       */
      Tags?: {}[];
    }
    
    
    interface IpAccessSettings extends Resource<"AWS::WorkSpacesWeb::IpAccessSettings">, IpAccessSettingsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function IpAccessSettings(id: string, props: IpAccessSettingsProps): Promise<IpAccessSettings>;
  }
  namespace WorkSpacesWeb {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-networksettings.html
     */
    interface NetworkSettingsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-networksettings.html#cfn-workspacesweb-networksettings-vpcid
       */
      VpcId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-networksettings.html#cfn-workspacesweb-networksettings-securitygroupids
       */
      SecurityGroupIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-networksettings.html#cfn-workspacesweb-networksettings-subnetids
       */
      SubnetIds: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-networksettings.html#cfn-workspacesweb-networksettings-tags
       */
      Tags?: {}[];
    }
    
    
    interface NetworkSettings extends Resource<"AWS::WorkSpacesWeb::NetworkSettings">, NetworkSettingsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function NetworkSettings(id: string, props: NetworkSettingsProps): Promise<NetworkSettings>;
  }
  namespace WorkSpacesWeb {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html
     */
    interface PortalProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-truststorearn
       */
      TrustStoreArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-useraccessloggingsettingsarn
       */
      UserAccessLoggingSettingsArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-browsersettingsarn
       */
      BrowserSettingsArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-ipaccesssettingsarn
       */
      IpAccessSettingsArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-networksettingsarn
       */
      NetworkSettingsArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-customermanagedkey
       */
      CustomerManagedKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-additionalencryptioncontext
       */
      AdditionalEncryptionContext?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-displayname
       */
      DisplayName?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-usersettingsarn
       */
      UserSettingsArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-dataprotectionsettingsarn
       */
      DataProtectionSettingsArn?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-instancetype
       */
      InstanceType?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-maxconcurrentsessions
       */
      MaxConcurrentSessions?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-tags
       */
      Tags?: {}[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-authenticationtype
       */
      AuthenticationType?: string;
    }
    
    
    interface Portal extends Resource<"AWS::WorkSpacesWeb::Portal">, PortalProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Portal(id: string, props: PortalProps): Promise<Portal>;
  }
  namespace WorkSpacesWeb {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-truststore.html
     */
    interface TrustStoreProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-truststore.html#cfn-workspacesweb-truststore-certificatelist
       */
      CertificateList: string[];
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-truststore.html#cfn-workspacesweb-truststore-tags
       */
      Tags?: {}[];
    }
    
    
    interface TrustStore extends Resource<"AWS::WorkSpacesWeb::TrustStore">, TrustStoreProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TrustStore(id: string, props: TrustStoreProps): Promise<TrustStore>;
  }
  namespace WorkSpacesWeb {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-useraccessloggingsettings.html
     */
    interface UserAccessLoggingSettingsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-useraccessloggingsettings.html#cfn-workspacesweb-useraccessloggingsettings-kinesisstreamarn
       */
      KinesisStreamArn: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-useraccessloggingsettings.html#cfn-workspacesweb-useraccessloggingsettings-tags
       */
      Tags?: {}[];
    }
    
    
    interface UserAccessLoggingSettings extends Resource<"AWS::WorkSpacesWeb::UserAccessLoggingSettings">, UserAccessLoggingSettingsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserAccessLoggingSettings(id: string, props: UserAccessLoggingSettingsProps): Promise<UserAccessLoggingSettings>;
  }
  namespace WorkSpacesWeb {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html
     */
    interface UserSettingsProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html#cfn-workspacesweb-usersettings-idledisconnecttimeoutinminutes
       */
      IdleDisconnectTimeoutInMinutes?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html#cfn-workspacesweb-usersettings-deeplinkallowed
       */
      DeepLinkAllowed?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html#cfn-workspacesweb-usersettings-printallowed
       */
      PrintAllowed: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html#cfn-workspacesweb-usersettings-copyallowed
       */
      CopyAllowed: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html#cfn-workspacesweb-usersettings-downloadallowed
       */
      DownloadAllowed: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html#cfn-workspacesweb-usersettings-toolbarconfiguration
       */
      ToolbarConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html#cfn-workspacesweb-usersettings-uploadallowed
       */
      UploadAllowed: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html#cfn-workspacesweb-usersettings-customermanagedkey
       */
      CustomerManagedKey?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html#cfn-workspacesweb-usersettings-additionalencryptioncontext
       */
      AdditionalEncryptionContext?: {
        [k: string]: unknown;
      };
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html#cfn-workspacesweb-usersettings-disconnecttimeoutinminutes
       */
      DisconnectTimeoutInMinutes?: number;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html#cfn-workspacesweb-usersettings-cookiesynchronizationconfiguration
       */
      CookieSynchronizationConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html#cfn-workspacesweb-usersettings-pasteallowed
       */
      PasteAllowed: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-usersettings.html#cfn-workspacesweb-usersettings-tags
       */
      Tags?: {}[];
    }
    
    
    interface UserSettings extends Resource<"AWS::WorkSpacesWeb::UserSettings">, UserSettingsProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function UserSettings(id: string, props: UserSettingsProps): Promise<UserSettings>;
  }
  namespace XRay {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-group.html
     */
    interface GroupProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-group.html#cfn-xray-group-groupname
       */
      GroupName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-group.html#cfn-xray-group-insightsconfiguration
       */
      InsightsConfiguration?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-group.html#cfn-xray-group-filterexpression
       */
      FilterExpression?: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-group.html#cfn-xray-group-tags
       */
      Tags?: {}[];
    }
    
    
    interface Group extends Resource<"AWS::XRay::Group">, GroupProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function Group(id: string, props: GroupProps): Promise<Group>;
  }
  namespace XRay {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-resourcepolicy.html
     */
    interface ResourcePolicyProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-resourcepolicy.html#cfn-xray-resourcepolicy-bypasspolicylockoutcheck
       */
      BypassPolicyLockoutCheck?: boolean;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-resourcepolicy.html#cfn-xray-resourcepolicy-policyname
       */
      PolicyName: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-resourcepolicy.html#cfn-xray-resourcepolicy-policydocument
       */
      PolicyDocument: string;
    }
    
    
    interface ResourcePolicy extends Resource<"AWS::XRay::ResourcePolicy">, ResourcePolicyProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ResourcePolicy(id: string, props: ResourcePolicyProps): Promise<ResourcePolicy>;
  }
  namespace XRay {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-samplingrule.html
     */
    interface SamplingRuleProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-samplingrule.html#cfn-xray-samplingrule-samplingrule
       */
      SamplingRule?: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-samplingrule.html#cfn-xray-samplingrule-tags
       */
      Tags?: {}[];
    }
    
    
    interface SamplingRule extends Resource<"AWS::XRay::SamplingRule">, SamplingRuleProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function SamplingRule(id: string, props: SamplingRuleProps): Promise<SamplingRule>;
  }
  namespace XRay {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-transactionsearchconfig.html
     */
    interface TransactionSearchConfigProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-xray-transactionsearchconfig.html#cfn-xray-transactionsearchconfig-indexingpercentage
       */
      IndexingPercentage?: number;
    }
    
    
    interface TransactionSearchConfig extends Resource<"AWS::XRay::TransactionSearchConfig">, TransactionSearchConfigProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function TransactionSearchConfig(id: string, props: TransactionSearchConfigProps): Promise<TransactionSearchConfig>;
  }
  namespace Alexa {
    /**
     * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html
     */
    interface ASKProps {
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-authenticationconfiguration
       */
      AuthenticationConfiguration: {};
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-vendorid
       */
      VendorId: string;
      /**
       * http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-skillpackage
       */
      SkillPackage: {};
    }
    
    
    interface ASK extends Resource<"AWS::Alexa::ASK">, ASKProps {
      // Additional properties from Cloud Control API
      Arn?: string;
      CreationTime?: string;
      LastUpdateTime?: string;
    }

    function ASK(id: string, props: ASKProps): Promise<ASK>;
  }
}

export = AWS;