// Generated by scripts/generate-aws-control-types.ts
// DO NOT EDIT THIS FILE DIRECTLY

// Update types for AWS resource properties
const updateTypes = {
  ACMPCA: {
    Certificate: {
      TemplateArn: "Immutable",
      CertificateAuthorityArn: "Immutable",
      Validity: "Immutable",
      CertificateSigningRequest: "Immutable",
      SigningAlgorithm: "Immutable",
      ApiPassthrough: "Immutable",
      ValidityNotBefore: "Immutable",
    },
    CertificateAuthority: {
      CsrExtensions: "Immutable",
      Type: "Immutable",
      RevocationConfiguration: "Mutable",
      UsageMode: "Immutable",
      SigningAlgorithm: "Immutable",
      KeyStorageSecurityStandard: "Immutable",
      Subject: "Immutable",
      Tags: "Mutable",
      KeyAlgorithm: "Immutable",
    },
    CertificateAuthorityActivation: {
      Status: "Mutable",
      CertificateAuthorityArn: "Immutable",
      CertificateChain: "Mutable",
      Certificate: "Mutable",
    },
    Permission: {
      CertificateAuthorityArn: "Immutable",
      Actions: "Immutable",
      SourceAccount: "Immutable",
      Principal: "Immutable",
    },
  },
  AIOps: {
    InvestigationGroup: {
      RetentionInDays: "Immutable",
      CrossAccountConfigurations: "Mutable",
      InvestigationGroupPolicy: "Mutable",
      ChatbotNotificationChannels: "Mutable",
      IsCloudTrailEventHistoryEnabled: "Mutable",
      TagKeyBoundaries: "Mutable",
      EncryptionConfig: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  APS: {
    ResourcePolicy: {
      WorkspaceArn: "Immutable",
      PolicyDocument: "Mutable",
    },
    RuleGroupsNamespace: {
      Data: "Mutable",
      Tags: "Mutable",
      Workspace: "Immutable",
      Name: "Immutable",
    },
    Scraper: {
      ScrapeConfiguration: "Mutable",
      Destination: "Mutable",
      ScraperLoggingConfiguration: "Mutable",
      Alias: "Mutable",
      RoleConfiguration: "Mutable",
      Source: "Immutable",
      Tags: "Mutable",
    },
    Workspace: {
      KmsKeyArn: "Immutable",
      QueryLoggingConfiguration: "Mutable",
      Alias: "Mutable",
      LoggingConfiguration: "Mutable",
      WorkspaceConfiguration: "Mutable",
      AlertManagerDefinition: "Mutable",
      Tags: "Mutable",
    },
  },
  ARCRegionSwitch: {
    Plan: {
      Description: "Mutable",
      PrimaryRegion: "Immutable",
      Workflows: "Mutable",
      RecoveryTimeObjectiveMinutes: "Mutable",
      Regions: "Immutable",
      Triggers: "Mutable",
      AssociatedAlarms: "Mutable",
      RecoveryApproach: "Immutable",
      ExecutionRole: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  ARCZonalShift: {
    AutoshiftObserverNotificationStatus: {
      Status: "Immutable",
    },
    ZonalAutoshiftConfiguration: {
      ResourceIdentifier: "Immutable",
      ZonalAutoshiftStatus: "Mutable",
      PracticeRunConfiguration: "Mutable",
    },
  },
  AccessAnalyzer: {
    Analyzer: {
      ArchiveRules: "Mutable",
      Type: "Immutable",
      AnalyzerName: "Immutable",
      Tags: "Mutable",
      AnalyzerConfiguration: "Conditional",
    },
  },
  AmazonMQ: {
    Broker: {
      SecurityGroups: "Mutable",
      DataReplicationPrimaryBrokerArn: "Mutable",
      StorageType: "Immutable",
      EngineVersion: "Mutable",
      Configuration: "Mutable",
      AuthenticationStrategy: "Immutable",
      MaintenanceWindowStartTime: "Mutable",
      HostInstanceType: "Mutable",
      AutoMinorVersionUpgrade: "Mutable",
      Users: "Mutable",
      Logs: "Mutable",
      SubnetIds: "Immutable",
      DataReplicationMode: "Mutable",
      BrokerName: "Immutable",
      LdapServerMetadata: "Mutable",
      DeploymentMode: "Immutable",
      EngineType: "Immutable",
      PubliclyAccessible: "Immutable",
      EncryptionOptions: "Immutable",
      Tags: "Mutable",
    },
    Configuration: {
      EngineVersion: "Immutable",
      Description: "Mutable",
      AuthenticationStrategy: "Immutable",
      EngineType: "Immutable",
      Data: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ConfigurationAssociation: {
      Broker: "Immutable",
      Configuration: "Mutable",
    },
  },
  Amplify: {
    App: {
      AutoBranchCreationConfig: "Mutable",
      OauthToken: "Mutable",
      Description: "Mutable",
      Platform: "Mutable",
      EnableBranchAutoDeletion: "Mutable",
      JobConfig: "Mutable",
      Name: "Mutable",
      ComputeRoleArn: "Mutable",
      Repository: "Mutable",
      EnvironmentVariables: "Mutable",
      AccessToken: "Mutable",
      BuildSpec: "Mutable",
      CustomRules: "Mutable",
      BasicAuthConfig: "Mutable",
      CacheConfig: "Mutable",
      CustomHeaders: "Mutable",
      Tags: "Mutable",
      IAMServiceRole: "Mutable",
    },
    Branch: {
      Description: "Mutable",
      EnablePerformanceMode: "Mutable",
      ComputeRoleArn: "Mutable",
      Backend: "Mutable",
      EnvironmentVariables: "Mutable",
      AppId: "Immutable",
      PullRequestEnvironmentName: "Mutable",
      EnablePullRequestPreview: "Mutable",
      EnableSkewProtection: "Mutable",
      EnableAutoBuild: "Mutable",
      BuildSpec: "Mutable",
      Stage: "Mutable",
      BranchName: "Immutable",
      BasicAuthConfig: "Mutable",
      Framework: "Mutable",
      Tags: "Mutable",
    },
    Domain: {
      SubDomainSettings: "Mutable",
      AppId: "Immutable",
      AutoSubDomainIAMRole: "Mutable",
      DomainName: "Immutable",
      CertificateSettings: "Mutable",
      EnableAutoSubDomain: "Mutable",
      AutoSubDomainCreationPatterns: "Mutable",
    },
  },
  AmplifyUIBuilder: {
    Component: {
      ComponentType: "Mutable",
      SchemaVersion: "Mutable",
      EnvironmentName: "Immutable",
      BindingProperties: "Mutable",
      SourceId: "Mutable",
      Properties: "Mutable",
      CollectionProperties: "Mutable",
      Name: "Mutable",
      Variants: "Mutable",
      AppId: "Immutable",
      Events: "Mutable",
      Overrides: "Mutable",
      Children: "Mutable",
      Tags: "Mutable",
    },
    Form: {
      FormActionType: "Mutable",
      Cta: "Mutable",
      Fields: "Mutable",
      SchemaVersion: "Mutable",
      AppId: "Immutable",
      EnvironmentName: "Immutable",
      LabelDecorator: "Mutable",
      SectionalElements: "Mutable",
      DataType: "Mutable",
      Style: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Theme: {
      AppId: "Immutable",
      EnvironmentName: "Immutable",
      Values: "Mutable",
      Overrides: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  ApiGateway: {
    Account: {
      CloudWatchRoleArn: "Mutable",
    },
    ApiKey: {
      Description: "Mutable",
      StageKeys: "Mutable",
      Value: "Immutable",
      Enabled: "Mutable",
      CustomerId: "Mutable",
      GenerateDistinctId: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Authorizer: {
      ProviderARNs: "Mutable",
      AuthorizerCredentials: "Mutable",
      IdentityValidationExpression: "Mutable",
      Type: "Mutable",
      AuthorizerUri: "Mutable",
      AuthorizerResultTtlInSeconds: "Mutable",
      RestApiId: "Immutable",
      IdentitySource: "Mutable",
      AuthType: "Mutable",
      Name: "Mutable",
    },
    BasePathMapping: {
      DomainName: "Immutable",
      RestApiId: "Mutable",
      Stage: "Mutable",
      BasePath: "Immutable",
      Id: "Mutable",
    },
    BasePathMappingV2: {
      DomainNameArn: "Immutable",
      RestApiId: "Mutable",
      Stage: "Mutable",
      BasePath: "Immutable",
    },
    ClientCertificate: {
      Description: "Mutable",
      Tags: "Mutable",
    },
    Deployment: {
      Description: "Mutable",
      StageDescription: "Mutable",
      StageName: "Mutable",
      RestApiId: "Immutable",
      DeploymentCanarySettings: "Immutable",
    },
    DocumentationPart: {
      RestApiId: "Immutable",
      Properties: "Mutable",
      Location: "Immutable",
    },
    DocumentationVersion: {
      Description: "Mutable",
      DocumentationVersion: "Immutable",
      RestApiId: "Immutable",
    },
    DomainName: {
      OwnershipVerificationCertificateArn: "Mutable",
      MutualTlsAuthentication: "Mutable",
      RoutingMode: "Mutable",
      DomainName: "Immutable",
      SecurityPolicy: "Mutable",
      EndpointConfiguration: "Mutable",
      RegionalCertificateArn: "Mutable",
      Tags: "Mutable",
      CertificateArn: "Mutable",
    },
    DomainNameAccessAssociation: {
      DomainNameArn: "Immutable",
      AccessAssociationSource: "Immutable",
      AccessAssociationSourceType: "Immutable",
      Tags: "Immutable",
    },
    DomainNameV2: {
      Policy: "Mutable",
      RoutingMode: "Mutable",
      DomainName: "Immutable",
      SecurityPolicy: "Immutable",
      EndpointConfiguration: "Immutable",
      Tags: "Mutable",
      CertificateArn: "Mutable",
    },
    GatewayResponse: {
      ResponseTemplates: "Mutable",
      ResponseParameters: "Mutable",
      RestApiId: "Immutable",
      StatusCode: "Mutable",
      ResponseType: "Immutable",
    },
    Method: {
      Integration: "Mutable",
      OperationName: "Mutable",
      RequestModels: "Mutable",
      RestApiId: "Immutable",
      AuthorizationScopes: "Mutable",
      RequestValidatorId: "Mutable",
      RequestParameters: "Mutable",
      MethodResponses: "Mutable",
      AuthorizerId: "Mutable",
      ResourceId: "Immutable",
      ApiKeyRequired: "Mutable",
      AuthorizationType: "Mutable",
      HttpMethod: "Immutable",
    },
    Model: {
      Description: "Mutable",
      ContentType: "Immutable",
      Schema: "Mutable",
      RestApiId: "Immutable",
      Name: "Immutable",
    },
    RequestValidator: {
      ValidateRequestParameters: "Mutable",
      RestApiId: "Immutable",
      ValidateRequestBody: "Mutable",
      Name: "Immutable",
    },
    Resource: {
      ParentId: "Immutable",
      PathPart: "Immutable",
      RestApiId: "Immutable",
    },
    RestApi: {
      Policy: "Mutable",
      BodyS3Location: "Mutable",
      Description: "Mutable",
      MinimumCompressionSize: "Mutable",
      Parameters: "Mutable",
      CloneFrom: "Mutable",
      Mode: "Mutable",
      DisableExecuteApiEndpoint: "Mutable",
      FailOnWarnings: "Mutable",
      BinaryMediaTypes: "Mutable",
      Name: "Mutable",
      ApiKeySourceType: "Mutable",
      EndpointConfiguration: "Mutable",
      Body: "Mutable",
      Tags: "Mutable",
    },
    Stage: {
      DeploymentId: "Mutable",
      Description: "Mutable",
      StageName: "Immutable",
      RestApiId: "Immutable",
      CanarySetting: "Mutable",
      ClientCertificateId: "Mutable",
      Variables: "Mutable",
      DocumentationVersion: "Mutable",
      TracingEnabled: "Mutable",
      MethodSettings: "Mutable",
      AccessLogSetting: "Mutable",
      CacheClusterSize: "Mutable",
      Tags: "Mutable",
      CacheClusterEnabled: "Mutable",
    },
    UsagePlan: {
      Description: "Mutable",
      Quota: "Mutable",
      ApiStages: "Mutable",
      Tags: "Mutable",
      Throttle: "Mutable",
      UsagePlanName: "Mutable",
    },
    UsagePlanKey: {
      KeyType: "Immutable",
      UsagePlanId: "Immutable",
      KeyId: "Immutable",
    },
    VpcLink: {
      Description: "Mutable",
      TargetArns: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  ApiGatewayV2: {
    Api: {
      IpAddressType: "Mutable",
      RouteSelectionExpression: "Mutable",
      BodyS3Location: "Mutable",
      Description: "Mutable",
      BasePath: "Mutable",
      FailOnWarnings: "Mutable",
      DisableExecuteApiEndpoint: "Mutable",
      DisableSchemaValidation: "Mutable",
      Name: "Mutable",
      Target: "Mutable",
      CredentialsArn: "Mutable",
      CorsConfiguration: "Mutable",
      Version: "Mutable",
      ProtocolType: "Immutable",
      RouteKey: "Mutable",
      Body: "Mutable",
      Tags: "Mutable",
      ApiKeySelectionExpression: "Mutable",
    },
    ApiGatewayManagedOverrides: {
      Integration: "Mutable",
      Stage: "Mutable",
      ApiId: "Immutable",
      Route: "Mutable",
    },
    ApiMapping: {
      DomainName: "Immutable",
      Stage: "Mutable",
      ApiMappingKey: "Mutable",
      ApiId: "Mutable",
    },
    Authorizer: {
      IdentityValidationExpression: "Mutable",
      AuthorizerUri: "Mutable",
      AuthorizerCredentialsArn: "Mutable",
      AuthorizerType: "Mutable",
      JwtConfiguration: "Mutable",
      AuthorizerResultTtlInSeconds: "Mutable",
      IdentitySource: "Mutable",
      AuthorizerPayloadFormatVersion: "Mutable",
      EnableSimpleResponses: "Mutable",
      ApiId: "Immutable",
      Name: "Mutable",
    },
    Deployment: {
      Description: "Mutable",
      StageName: "Mutable",
      ApiId: "Immutable",
    },
    DomainName: {
      MutualTlsAuthentication: "Mutable",
      RoutingMode: "Mutable",
      DomainName: "Immutable",
      DomainNameConfigurations: "Mutable",
      Tags: "Mutable",
    },
    Integration: {
      Description: "Mutable",
      TemplateSelectionExpression: "Mutable",
      ConnectionType: "Mutable",
      ResponseParameters: "Mutable",
      IntegrationMethod: "Mutable",
      PassthroughBehavior: "Mutable",
      RequestParameters: "Mutable",
      ConnectionId: "Mutable",
      IntegrationUri: "Mutable",
      PayloadFormatVersion: "Mutable",
      CredentialsArn: "Mutable",
      RequestTemplates: "Mutable",
      TimeoutInMillis: "Mutable",
      TlsConfig: "Mutable",
      ContentHandlingStrategy: "Mutable",
      IntegrationSubtype: "Mutable",
      ApiId: "Immutable",
      IntegrationType: "Mutable",
    },
    IntegrationResponse: {
      ResponseTemplates: "Mutable",
      TemplateSelectionExpression: "Mutable",
      ResponseParameters: "Mutable",
      ContentHandlingStrategy: "Mutable",
      IntegrationId: "Immutable",
      IntegrationResponseKey: "Mutable",
      ApiId: "Immutable",
    },
    Model: {
      Description: "Mutable",
      ContentType: "Mutable",
      Schema: "Mutable",
      ApiId: "Immutable",
      Name: "Mutable",
    },
    Route: {
      Target: "Mutable",
      RouteResponseSelectionExpression: "Mutable",
      RequestModels: "Mutable",
      OperationName: "Mutable",
      AuthorizerId: "Mutable",
      AuthorizationScopes: "Mutable",
      ApiKeyRequired: "Mutable",
      RouteKey: "Mutable",
      AuthorizationType: "Mutable",
      ModelSelectionExpression: "Mutable",
      ApiId: "Immutable",
      RequestParameters: "Mutable",
    },
    RouteResponse: {
      RouteResponseKey: "Mutable",
      ResponseParameters: "Mutable",
      RouteId: "Immutable",
      ModelSelectionExpression: "Mutable",
      ApiId: "Immutable",
      ResponseModels: "Mutable",
    },
    RoutingRule: {
      Actions: "Mutable",
      Priority: "Mutable",
      DomainNameArn: "Immutable",
      Conditions: "Mutable",
    },
    Stage: {
      ClientCertificateId: "Mutable",
      DeploymentId: "Mutable",
      Description: "Mutable",
      AccessLogSettings: "Mutable",
      AutoDeploy: "Mutable",
      RouteSettings: "Mutable",
      StageName: "Immutable",
      StageVariables: "Mutable",
      AccessPolicyId: "Mutable",
      ApiId: "Immutable",
      DefaultRouteSettings: "Mutable",
      Tags: "Mutable",
    },
    VpcLink: {
      SubnetIds: "Immutable",
      SecurityGroupIds: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  AppConfig: {
    Application: {
      Description: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    ConfigurationProfile: {
      LocationUri: "Immutable",
      Type: "Immutable",
      KmsKeyIdentifier: "Mutable",
      Description: "Mutable",
      Validators: "Mutable",
      RetrievalRoleArn: "Mutable",
      DeletionProtectionCheck: "Mutable",
      ApplicationId: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Deployment: {
      DeploymentStrategyId: "Immutable",
      ConfigurationProfileId: "Immutable",
      EnvironmentId: "Immutable",
      KmsKeyIdentifier: "Immutable",
      Description: "Immutable",
      ConfigurationVersion: "Immutable",
      ApplicationId: "Immutable",
      DynamicExtensionParameters: "Immutable",
      Tags: "Immutable",
    },
    DeploymentStrategy: {
      ReplicateTo: "Immutable",
      GrowthType: "Mutable",
      Description: "Mutable",
      DeploymentDurationInMinutes: "Mutable",
      GrowthFactor: "Mutable",
      FinalBakeTimeInMinutes: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Environment: {
      Description: "Mutable",
      Monitors: "Mutable",
      DeletionProtectionCheck: "Mutable",
      ApplicationId: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Extension: {
      Description: "Mutable",
      Parameters: "Mutable",
      Actions: "Mutable",
      LatestVersionNumber: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ExtensionAssociation: {
      ResourceIdentifier: "Immutable",
      Parameters: "Mutable",
      ExtensionIdentifier: "Immutable",
      ExtensionVersionNumber: "Immutable",
      Tags: "Mutable",
    },
    HostedConfigurationVersion: {
      ConfigurationProfileId: "Immutable",
      Description: "Immutable",
      ContentType: "Immutable",
      LatestVersionNumber: "Immutable",
      Content: "Immutable",
      VersionLabel: "Immutable",
      ApplicationId: "Immutable",
    },
  },
  AppFlow: {
    Connector: {
      ConnectorLabel: "Immutable",
      ConnectorProvisioningType: "Mutable",
      Description: "Mutable",
      ConnectorProvisioningConfig: "Mutable",
    },
    ConnectorProfile: {
      ConnectorLabel: "Immutable",
      ConnectorProfileName: "Immutable",
      KMSArn: "Mutable",
      ConnectorType: "Immutable",
      ConnectionMode: "Mutable",
      ConnectorProfileConfig: "Mutable",
    },
    Flow: {
      Description: "Mutable",
      KMSArn: "Immutable",
      Tasks: "Mutable",
      FlowName: "Immutable",
      TriggerConfig: "Mutable",
      DestinationFlowConfigList: "Mutable",
      SourceFlowConfig: "Mutable",
      FlowStatus: "Mutable",
      Tags: "Mutable",
      MetadataCatalogConfig: "Mutable",
    },
  },
  AppIntegrations: {
    Application: {
      ApplicationSourceConfig: "Mutable",
      Description: "Mutable",
      InitializationTimeout: "Mutable",
      ApplicationConfig: "Mutable",
      IframeConfig: "Mutable",
      Permissions: "Mutable",
      IsService: "Mutable",
      Namespace: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    DataIntegration: {
      ScheduleConfig: "Immutable",
      FileConfiguration: "Mutable",
      Description: "Mutable",
      SourceURI: "Immutable",
      ObjectConfiguration: "Mutable",
      KmsKey: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    EventIntegration: {
      Description: "Mutable",
      EventBridgeBus: "Immutable",
      EventFilter: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  AppMesh: {
    GatewayRoute: {
      MeshName: "Immutable",
      VirtualGatewayName: "Immutable",
      MeshOwner: "Immutable",
      GatewayRouteName: "Immutable",
      Spec: "Mutable",
      Tags: "Mutable",
    },
    Mesh: {
      MeshName: "Immutable",
      Spec: "Mutable",
      Tags: "Mutable",
    },
    Route: {
      MeshName: "Immutable",
      VirtualRouterName: "Immutable",
      MeshOwner: "Immutable",
      RouteName: "Immutable",
      Spec: "Mutable",
      Tags: "Mutable",
    },
    VirtualGateway: {
      VirtualGatewayName: "Immutable",
      MeshName: "Immutable",
      MeshOwner: "Immutable",
      Spec: "Mutable",
      Tags: "Mutable",
    },
    VirtualNode: {
      MeshName: "Immutable",
      MeshOwner: "Immutable",
      Spec: "Mutable",
      VirtualNodeName: "Immutable",
      Tags: "Mutable",
    },
    VirtualRouter: {
      MeshName: "Immutable",
      VirtualRouterName: "Immutable",
      MeshOwner: "Immutable",
      Spec: "Mutable",
      Tags: "Mutable",
    },
    VirtualService: {
      MeshName: "Immutable",
      MeshOwner: "Immutable",
      VirtualServiceName: "Immutable",
      Spec: "Mutable",
      Tags: "Mutable",
    },
  },
  AppRunner: {
    AutoScalingConfiguration: {
      MinSize: "Immutable",
      MaxConcurrency: "Immutable",
      AutoScalingConfigurationName: "Immutable",
      MaxSize: "Immutable",
      Tags: "Immutable",
    },
    ObservabilityConfiguration: {
      TraceConfiguration: "Immutable",
      ObservabilityConfigurationName: "Immutable",
      Tags: "Immutable",
    },
    Service: {
      HealthCheckConfiguration: "Mutable",
      InstanceConfiguration: "Mutable",
      EncryptionConfiguration: "Immutable",
      ServiceName: "Immutable",
      ObservabilityConfiguration: "Mutable",
      SourceConfiguration: "Mutable",
      AutoScalingConfigurationArn: "Mutable",
      NetworkConfiguration: "Mutable",
      Tags: "Mutable",
    },
    VpcConnector: {
      SecurityGroups: "Immutable",
      Subnets: "Immutable",
      VpcConnectorName: "Immutable",
      Tags: "Immutable",
    },
    VpcIngressConnection: {
      VpcIngressConnectionName: "Immutable",
      ServiceArn: "Immutable",
      Tags: "Immutable",
      IngressVpcConfiguration: "Mutable",
    },
  },
  AppStream: {
    AppBlock: {
      SetupScriptDetails: "Immutable",
      Description: "Immutable",
      PostSetupScriptDetails: "Immutable",
      DisplayName: "Immutable",
      SourceS3Location: "Immutable",
      Tags: "Mutable",
      PackagingType: "Immutable",
      Name: "Immutable",
    },
    AppBlockBuilder: {
      Description: "Mutable",
      Platform: "Mutable",
      VpcConfig: "Mutable",
      AppBlockArns: "Mutable",
      EnableDefaultInternetAccess: "Mutable",
      DisplayName: "Mutable",
      IamRoleArn: "Mutable",
      InstanceType: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      AccessEndpoints: "Mutable",
    },
    Application: {
      WorkingDirectory: "Mutable",
      Platforms: "Immutable",
      AppBlockArn: "Mutable",
      Description: "Mutable",
      InstanceFamilies: "Immutable",
      AttributesToDelete: "Mutable",
      DisplayName: "Mutable",
      LaunchPath: "Mutable",
      LaunchParameters: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      IconS3Location: "Mutable",
    },
    ApplicationEntitlementAssociation: {
      EntitlementName: "Immutable",
      ApplicationIdentifier: "Immutable",
      StackName: "Immutable",
    },
    ApplicationFleetAssociation: {
      FleetName: "Immutable",
      ApplicationArn: "Immutable",
    },
    DirectoryConfig: {
      OrganizationalUnitDistinguishedNames: "Mutable",
      ServiceAccountCredentials: "Mutable",
      CertificateBasedAuthProperties: "Mutable",
      DirectoryName: "Immutable",
    },
    Entitlement: {
      AppVisibility: "Mutable",
      Description: "Mutable",
      Attributes: "Mutable",
      StackName: "Immutable",
      Name: "Immutable",
    },
    Fleet: {
      Description: "Mutable",
      ComputeCapacity: "Mutable",
      Platform: "Mutable",
      VpcConfig: "Mutable",
      FleetType: "Immutable",
      EnableDefaultInternetAccess: "Mutable",
      DomainJoinInfo: "Mutable",
      SessionScriptS3Location: "Mutable",
      Name: "Immutable",
      ImageName: "Mutable",
      MaxUserDurationInSeconds: "Mutable",
      IdleDisconnectTimeoutInSeconds: "Mutable",
      UsbDeviceFilterStrings: "Mutable",
      DisconnectTimeoutInSeconds: "Mutable",
      DisplayName: "Mutable",
      StreamView: "Mutable",
      IamRoleArn: "Mutable",
      MaxSessionsPerInstance: "Mutable",
      InstanceType: "Mutable",
      MaxConcurrentSessions: "Mutable",
      Tags: "Mutable",
      ImageArn: "Mutable",
    },
    ImageBuilder: {
      Description: "Mutable",
      VpcConfig: "Mutable",
      EnableDefaultInternetAccess: "Mutable",
      DomainJoinInfo: "Mutable",
      AppstreamAgentVersion: "Mutable",
      Name: "Mutable",
      ImageName: "Mutable",
      DisplayName: "Mutable",
      IamRoleArn: "Mutable",
      InstanceType: "Mutable",
      Tags: "Mutable",
      ImageArn: "Mutable",
      AccessEndpoints: "Mutable",
    },
    Stack: {
      Description: "Mutable",
      StorageConnectors: "Mutable",
      DeleteStorageConnectors: "Mutable",
      EmbedHostDomains: "Mutable",
      UserSettings: "Mutable",
      AttributesToDelete: "Mutable",
      RedirectURL: "Mutable",
      StreamingExperienceSettings: "Mutable",
      Name: "Immutable",
      FeedbackURL: "Mutable",
      ApplicationSettings: "Mutable",
      DisplayName: "Mutable",
      Tags: "Mutable",
      AccessEndpoints: "Mutable",
    },
    StackFleetAssociation: {
      FleetName: "Mutable",
      StackName: "Mutable",
    },
    StackUserAssociation: {
      SendEmailNotification: "Immutable",
      UserName: "Immutable",
      StackName: "Immutable",
      AuthenticationType: "Immutable",
    },
    User: {
      UserName: "Immutable",
      FirstName: "Immutable",
      MessageAction: "Immutable",
      LastName: "Immutable",
      AuthenticationType: "Immutable",
    },
  },
  AppSync: {
    Api: {
      OwnerContact: "Mutable",
      EventConfig: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    ApiCache: {
      Type: "Mutable",
      TransitEncryptionEnabled: "Mutable",
      HealthMetricsConfig: "Mutable",
      AtRestEncryptionEnabled: "Mutable",
      ApiId: "Immutable",
      ApiCachingBehavior: "Mutable",
      Ttl: "Mutable",
    },
    ApiKey: {
      Description: "Mutable",
      ApiKeyId: "Mutable",
      Expires: "Mutable",
      ApiId: "Immutable",
    },
    ChannelNamespace: {
      SubscribeAuthModes: "Mutable",
      CodeS3Location: "Mutable",
      PublishAuthModes: "Mutable",
      CodeHandlers: "Mutable",
      HandlerConfigs: "Mutable",
      ApiId: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    DataSource: {
      OpenSearchServiceConfig: "Mutable",
      Description: "Mutable",
      ServiceRoleArn: "Mutable",
      MetricsConfig: "Mutable",
      Name: "Immutable",
      Type: "Mutable",
      EventBridgeConfig: "Mutable",
      HttpConfig: "Mutable",
      RelationalDatabaseConfig: "Mutable",
      LambdaConfig: "Mutable",
      ApiId: "Immutable",
      DynamoDBConfig: "Mutable",
      ElasticsearchConfig: "Mutable",
    },
    DomainName: {
      Description: "Mutable",
      DomainName: "Immutable",
      Tags: "Mutable",
      CertificateArn: "Immutable",
    },
    DomainNameApiAssociation: {
      DomainName: "Immutable",
      ApiId: "Mutable",
    },
    FunctionConfiguration: {
      Description: "Mutable",
      RequestMappingTemplate: "Mutable",
      ResponseMappingTemplate: "Mutable",
      MaxBatchSize: "Mutable",
      SyncConfig: "Mutable",
      Code: "Mutable",
      Name: "Mutable",
      ResponseMappingTemplateS3Location: "Mutable",
      Runtime: "Mutable",
      CodeS3Location: "Mutable",
      DataSourceName: "Mutable",
      FunctionVersion: "Mutable",
      RequestMappingTemplateS3Location: "Mutable",
      ApiId: "Immutable",
    },
    GraphQLApi: {
      QueryDepthLimit: "Mutable",
      OpenIDConnectConfig: "Mutable",
      IntrospectionConfig: "Mutable",
      MergedApiExecutionRoleArn: "Mutable",
      EnhancedMetricsConfig: "Mutable",
      OwnerContact: "Mutable",
      ResolverCountLimit: "Mutable",
      Name: "Mutable",
      AdditionalAuthenticationProviders: "Mutable",
      EnvironmentVariables: "Mutable",
      ApiType: "Mutable",
      LambdaAuthorizerConfig: "Mutable",
      XrayEnabled: "Mutable",
      Visibility: "Mutable",
      UserPoolConfig: "Mutable",
      Tags: "Mutable",
      AuthenticationType: "Mutable",
      LogConfig: "Mutable",
    },
    GraphQLSchema: {
      Definition: "Mutable",
      DefinitionS3Location: "Mutable",
      ApiId: "Immutable",
    },
    Resolver: {
      TypeName: "Immutable",
      PipelineConfig: "Mutable",
      RequestMappingTemplate: "Mutable",
      ResponseMappingTemplate: "Mutable",
      MaxBatchSize: "Mutable",
      SyncConfig: "Mutable",
      Code: "Mutable",
      MetricsConfig: "Mutable",
      ResponseMappingTemplateS3Location: "Mutable",
      Runtime: "Mutable",
      CodeS3Location: "Mutable",
      DataSourceName: "Mutable",
      Kind: "Mutable",
      CachingConfig: "Mutable",
      RequestMappingTemplateS3Location: "Mutable",
      ApiId: "Immutable",
      FieldName: "Immutable",
    },
    SourceApiAssociation: {
      Description: "Mutable",
      SourceApiAssociationConfig: "Mutable",
      MergedApiIdentifier: "Immutable",
      SourceApiIdentifier: "Immutable",
    },
  },
  AppTest: {
    TestCase: {
      Steps: "Mutable",
      Description: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  ApplicationAutoScaling: {
    ScalableTarget: {
      ScheduledActions: "Mutable",
      ResourceId: "Immutable",
      ServiceNamespace: "Immutable",
      ScalableDimension: "Immutable",
      SuspendedState: "Mutable",
      MinCapacity: "Mutable",
      RoleARN: "Mutable",
      MaxCapacity: "Mutable",
    },
    ScalingPolicy: {
      PolicyType: "Mutable",
      ResourceId: "Immutable",
      ScalingTargetId: "Immutable",
      PolicyName: "Immutable",
      ServiceNamespace: "Immutable",
      ScalableDimension: "Immutable",
      TargetTrackingScalingPolicyConfiguration: "Mutable",
      StepScalingPolicyConfiguration: "Mutable",
      PredictiveScalingPolicyConfiguration: "Mutable",
    },
  },
  ApplicationInsights: {
    Application: {
      AutoConfigurationEnabled: "Mutable",
      OpsItemSNSTopicArn: "Mutable",
      OpsCenterEnabled: "Mutable",
      CustomComponents: "Mutable",
      SNSNotificationArn: "Mutable",
      AttachMissingPermission: "Mutable",
      LogPatternSets: "Mutable",
      GroupingType: "Immutable",
      ComponentMonitoringSettings: "Mutable",
      CWEMonitorEnabled: "Mutable",
      Tags: "Mutable",
      ResourceGroupName: "Immutable",
    },
  },
  ApplicationSignals: {
    ServiceLevelObjective: {
      BurnRateConfigurations: "Mutable",
      Sli: "Mutable",
      Goal: "Mutable",
      Description: "Mutable",
      RequestBasedSli: "Mutable",
      ExclusionWindows: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  Athena: {
    CapacityReservation: {
      TargetDpus: "Mutable",
      CapacityAssignmentConfiguration: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    DataCatalog: {
      Status: "Mutable",
      Type: "Mutable",
      Description: "Mutable",
      Parameters: "Mutable",
      ConnectionType: "Mutable",
      Error: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    NamedQuery: {
      WorkGroup: "Immutable",
      Description: "Immutable",
      QueryString: "Immutable",
      Database: "Immutable",
      Name: "Immutable",
    },
    PreparedStatement: {
      StatementName: "Immutable",
      WorkGroup: "Immutable",
      Description: "Mutable",
      QueryStatement: "Mutable",
    },
    WorkGroup: {
      RecursiveDeleteOption: "Mutable",
      WorkGroupConfiguration: "Mutable",
      Description: "Mutable",
      State: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  AuditManager: {
    Assessment: {
      Status: "Mutable",
      AssessmentReportsDestination: "Mutable",
      Delegations: "Mutable",
      Description: "Mutable",
      Scope: "Mutable",
      AwsAccount: "Immutable",
      Roles: "Mutable",
      FrameworkId: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  AutoScaling: {
    AutoScalingGroup: {
      LifecycleHookSpecificationList: "Mutable",
      LoadBalancerNames: "Mutable",
      LaunchConfigurationName: "Conditional",
      ServiceLinkedRoleARN: "Mutable",
      AvailabilityZoneImpairmentPolicy: "Mutable",
      TargetGroupARNs: "Mutable",
      Cooldown: "Mutable",
      NotificationConfigurations: "Mutable",
      DesiredCapacity: "Mutable",
      HealthCheckGracePeriod: "Mutable",
      DefaultInstanceWarmup: "Mutable",
      SkipZonalShiftValidation: "Mutable",
      NewInstancesProtectedFromScaleIn: "Mutable",
      LaunchTemplate: "Conditional",
      MixedInstancesPolicy: "Conditional",
      VPCZoneIdentifier: "Conditional",
      Tags: "Mutable",
      Context: "Mutable",
      CapacityRebalance: "Mutable",
      InstanceId: "Immutable",
      AvailabilityZones: "Mutable",
      AvailabilityZoneDistribution: "Mutable",
      MetricsCollection: "Mutable",
      InstanceMaintenancePolicy: "Mutable",
      MaxSize: "Mutable",
      MinSize: "Mutable",
      TerminationPolicies: "Mutable",
      AutoScalingGroupName: "Immutable",
      TrafficSources: "Mutable",
      DesiredCapacityType: "Mutable",
      PlacementGroup: "Mutable",
      CapacityReservationSpecification: "Mutable",
      HealthCheckType: "Mutable",
      MaxInstanceLifetime: "Mutable",
    },
    LaunchConfiguration: {
      PlacementTenancy: "Immutable",
      SecurityGroups: "Immutable",
      LaunchConfigurationName: "Immutable",
      MetadataOptions: "Immutable",
      InstanceId: "Immutable",
      UserData: "Immutable",
      ClassicLinkVPCSecurityGroups: "Immutable",
      BlockDeviceMappings: "Immutable",
      IamInstanceProfile: "Immutable",
      KernelId: "Immutable",
      AssociatePublicIpAddress: "Immutable",
      ClassicLinkVPCId: "Immutable",
      EbsOptimized: "Immutable",
      KeyName: "Immutable",
      SpotPrice: "Immutable",
      ImageId: "Immutable",
      InstanceType: "Immutable",
      RamDiskId: "Immutable",
      InstanceMonitoring: "Immutable",
    },
    LifecycleHook: {
      LifecycleHookName: "Immutable",
      LifecycleTransition: "Mutable",
      AutoScalingGroupName: "Immutable",
      HeartbeatTimeout: "Mutable",
      NotificationMetadata: "Mutable",
      DefaultResult: "Mutable",
      NotificationTargetARN: "Mutable",
      RoleARN: "Mutable",
    },
    ScalingPolicy: {
      MetricAggregationType: "Mutable",
      PolicyType: "Mutable",
      PredictiveScalingConfiguration: "Mutable",
      ScalingAdjustment: "Mutable",
      Cooldown: "Mutable",
      StepAdjustments: "Mutable",
      AutoScalingGroupName: "Immutable",
      MinAdjustmentMagnitude: "Mutable",
      TargetTrackingConfiguration: "Mutable",
      EstimatedInstanceWarmup: "Mutable",
      AdjustmentType: "Mutable",
    },
    ScheduledAction: {
      MinSize: "Mutable",
      Recurrence: "Mutable",
      TimeZone: "Mutable",
      EndTime: "Mutable",
      AutoScalingGroupName: "Immutable",
      StartTime: "Mutable",
      DesiredCapacity: "Mutable",
      MaxSize: "Mutable",
    },
    WarmPool: {
      MinSize: "Mutable",
      MaxGroupPreparedCapacity: "Mutable",
      AutoScalingGroupName: "Immutable",
      PoolState: "Mutable",
      InstanceReusePolicy: "Mutable",
    },
  },
  AutoScalingPlans: {
    ScalingPlan: {
      ApplicationSource: "Mutable",
      ScalingInstructions: "Mutable",
    },
  },
  B2BI: {
    Capability: {
      Type: "Immutable",
      Configuration: "Mutable",
      InstructionsDocuments: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Partnership: {
      ProfileId: "Immutable",
      Email: "Immutable",
      Capabilities: "Mutable",
      Phone: "Immutable",
      CapabilityOptions: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Profile: {
      Logging: "Immutable",
      Email: "Mutable",
      BusinessName: "Mutable",
      Phone: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Transformer: {
      Status: "Mutable",
      Mapping: "Mutable",
      InputConversion: "Mutable",
      SampleDocuments: "Mutable",
      OutputConversion: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  BCMDataExports: {
    Export: {
      Export: "Mutable",
      Tags: "Mutable",
    },
  },
  Backup: {
    BackupPlan: {
      BackupPlan: "Mutable",
      BackupPlanTags: "Mutable",
    },
    BackupSelection: {
      BackupSelection: "Immutable",
      BackupPlanId: "Immutable",
    },
    BackupVault: {
      BackupVaultTags: "Mutable",
      BackupVaultName: "Immutable",
      EncryptionKeyArn: "Immutable",
      LockConfiguration: "Mutable",
      Notifications: "Mutable",
      AccessPolicy: "Mutable",
    },
    Framework: {
      FrameworkControls: "Mutable",
      FrameworkName: "Immutable",
      FrameworkTags: "Mutable",
      FrameworkDescription: "Mutable",
    },
    LogicallyAirGappedBackupVault: {
      BackupVaultTags: "Mutable",
      BackupVaultName: "Immutable",
      MaxRetentionDays: "Immutable",
      MinRetentionDays: "Immutable",
      Notifications: "Mutable",
      AccessPolicy: "Mutable",
    },
    ReportPlan: {
      ReportSetting: "Mutable",
      ReportPlanDescription: "Mutable",
      ReportPlanName: "Immutable",
      ReportDeliveryChannel: "Mutable",
      ReportPlanTags: "Mutable",
    },
    RestoreTestingPlan: {
      ScheduleExpression: "Mutable",
      StartWindowHours: "Mutable",
      RecoveryPointSelection: "Mutable",
      RestoreTestingPlanName: "Immutable",
      ScheduleExpressionTimezone: "Mutable",
      Tags: "Mutable",
    },
    RestoreTestingSelection: {
      ProtectedResourceConditions: "Mutable",
      ProtectedResourceType: "Immutable",
      RestoreMetadataOverrides: "Mutable",
      RestoreTestingSelectionName: "Immutable",
      ProtectedResourceArns: "Mutable",
      RestoreTestingPlanName: "Immutable",
      IamRoleArn: "Mutable",
      ValidationWindowHours: "Mutable",
    },
  },
  BackupGateway: {
    Hypervisor: {
      KmsKeyArn: "Immutable",
      Username: "Mutable",
      Host: "Mutable",
      LogGroupArn: "Mutable",
      Tags: "Immutable",
      Name: "Mutable",
      Password: "Mutable",
    },
  },
  Batch: {
    ComputeEnvironment: {
      Context: "Mutable",
      UnmanagedvCpus: "Mutable",
      Type: "Immutable",
      ReplaceComputeEnvironment: "Mutable",
      ServiceRole: "Mutable",
      UpdatePolicy: "Mutable",
      EksConfiguration: "Immutable",
      ComputeEnvironmentName: "Immutable",
      ComputeResources: "Mutable",
      State: "Mutable",
      Tags: "Immutable",
    },
    ConsumableResource: {
      TotalQuantity: "Mutable",
      ConsumableResourceName: "Immutable",
      ResourceType: "Immutable",
      Tags: "Immutable",
    },
    JobDefinition: {
      Parameters: "Mutable",
      Timeout: "Mutable",
      JobDefinitionName: "Immutable",
      PropagateTags: "Mutable",
      PlatformCapabilities: "Mutable",
      EksProperties: "Mutable",
      ConsumableResourceProperties: "Mutable",
      Type: "Mutable",
      NodeProperties: "Mutable",
      SchedulingPriority: "Mutable",
      ContainerProperties: "Mutable",
      EcsProperties: "Mutable",
      RetryStrategy: "Mutable",
      Tags: "Mutable",
    },
    JobQueue: {
      ComputeEnvironmentOrder: "Mutable",
      Priority: "Mutable",
      State: "Mutable",
      JobQueueType: "Immutable",
      ServiceEnvironmentOrder: "Mutable",
      SchedulingPolicyArn: "Mutable",
      JobStateTimeLimitActions: "Mutable",
      JobQueueName: "Immutable",
      Tags: "Immutable",
    },
    SchedulingPolicy: {
      FairsharePolicy: "Mutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    ServiceEnvironment: {
      ServiceEnvironmentName: "Immutable",
      State: "Mutable",
      ServiceEnvironmentType: "Immutable",
      CapacityLimits: "Mutable",
      Tags: "Mutable",
    },
  },
  Bedrock: {
    Agent: {
      AgentCollaborators: "Mutable",
      Description: "Mutable",
      SkipResourceInUseCheckOnDelete: "Mutable",
      GuardrailConfiguration: "Mutable",
      PromptOverrideConfiguration: "Mutable",
      MemoryConfiguration: "Mutable",
      AgentCollaboration: "Mutable",
      Instruction: "Mutable",
      CustomOrchestration: "Mutable",
      TestAliasTags: "Mutable",
      AgentResourceRoleArn: "Mutable",
      OrchestrationType: "Mutable",
      IdleSessionTTLInSeconds: "Mutable",
      FoundationModel: "Mutable",
      CustomerEncryptionKeyArn: "Mutable",
      AgentName: "Mutable",
      KnowledgeBases: "Mutable",
      ActionGroups: "Mutable",
      AutoPrepare: "Mutable",
      Tags: "Mutable",
    },
    AgentAlias: {
      AgentAliasName: "Mutable",
      Description: "Mutable",
      RoutingConfiguration: "Mutable",
      AgentId: "Immutable",
      Tags: "Mutable",
    },
    ApplicationInferenceProfile: {
      Description: "Immutable",
      InferenceProfileName: "Immutable",
      ModelSource: "Immutable",
      Tags: "Mutable",
    },
    AutomatedReasoningPolicy: {
      Description: "Mutable",
      PolicyDefinition: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    AutomatedReasoningPolicyVersion: {
      LastUpdatedDefinitionHash: "Immutable",
      PolicyArn: "Immutable",
      Tags: "Immutable",
    },
    Blueprint: {
      Type: "Immutable",
      BlueprintName: "Immutable",
      KmsKeyId: "Mutable",
      Schema: "Mutable",
      KmsEncryptionContext: "Mutable",
      Tags: "Mutable",
    },
    DataAutomationProject: {
      KmsKeyId: "Mutable",
      ProjectName: "Immutable",
      StandardOutputConfiguration: "Mutable",
      OverrideConfiguration: "Mutable",
      KmsEncryptionContext: "Mutable",
      CustomOutputConfiguration: "Mutable",
      ProjectDescription: "Mutable",
      Tags: "Mutable",
    },
    DataSource: {
      DataDeletionPolicy: "Mutable",
      Description: "Mutable",
      KnowledgeBaseId: "Immutable",
      ServerSideEncryptionConfiguration: "Mutable",
      VectorIngestionConfiguration: "Mutable",
      DataSourceConfiguration: "Mutable",
      Name: "Mutable",
    },
    Flow: {
      TestAliasTags: "Mutable",
      ExecutionRoleArn: "Mutable",
      Description: "Mutable",
      DefinitionString: "Mutable",
      Definition: "Mutable",
      DefinitionSubstitutions: "Mutable",
      CustomerEncryptionKeyArn: "Mutable",
      DefinitionS3Location: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    FlowAlias: {
      Description: "Mutable",
      ConcurrencyConfiguration: "Mutable",
      RoutingConfiguration: "Mutable",
      FlowArn: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    FlowVersion: {
      Description: "Immutable",
      FlowArn: "Immutable",
    },
    Guardrail: {
      TopicPolicyConfig: "Mutable",
      Description: "Mutable",
      CrossRegionConfig: "Mutable",
      Name: "Mutable",
      WordPolicyConfig: "Mutable",
      ContextualGroundingPolicyConfig: "Mutable",
      KmsKeyArn: "Mutable",
      BlockedInputMessaging: "Mutable",
      BlockedOutputsMessaging: "Mutable",
      SensitiveInformationPolicyConfig: "Mutable",
      ContentPolicyConfig: "Mutable",
      Tags: "Mutable",
      AutomatedReasoningPolicyConfig: "Mutable",
    },
    GuardrailVersion: {
      GuardrailIdentifier: "Immutable",
      Description: "Immutable",
    },
    IntelligentPromptRouter: {
      Description: "Immutable",
      PromptRouterName: "Immutable",
      FallbackModel: "Immutable",
      RoutingCriteria: "Immutable",
      Models: "Immutable",
      Tags: "Mutable",
    },
    KnowledgeBase: {
      Description: "Mutable",
      KnowledgeBaseConfiguration: "Mutable",
      StorageConfiguration: "Immutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Prompt: {
      Variants: "Mutable",
      Description: "Mutable",
      CustomerEncryptionKeyArn: "Mutable",
      DefaultVariant: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    PromptVersion: {
      Description: "Immutable",
      PromptArn: "Immutable",
      Tags: "Immutable",
    },
  },
  Billing: {
    BillingView: {
      Description: "Immutable",
      SourceViews: "Immutable",
      DataFilterExpression: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  BillingConductor: {
    BillingGroup: {
      Description: "Mutable",
      PrimaryAccountId: "Immutable",
      ComputationPreference: "Mutable",
      AccountGrouping: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    CustomLineItem: {
      BillingPeriodRange: "Mutable",
      Description: "Mutable",
      AccountId: "Immutable",
      BillingGroupArn: "Immutable",
      CustomLineItemChargeDetails: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    PricingPlan: {
      Description: "Mutable",
      PricingRuleArns: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    PricingRule: {
      Type: "Mutable",
      Description: "Mutable",
      Scope: "Immutable",
      Service: "Immutable",
      ModifierPercentage: "Mutable",
      Operation: "Immutable",
      Tiering: "Mutable",
      BillingEntity: "Immutable",
      UsageType: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  Budgets: {
    Budget: {
      NotificationsWithSubscribers: "Immutable",
      ResourceTags: "Mutable",
      Budget: "Mutable",
    },
    BudgetsAction: {
      ExecutionRoleArn: "Mutable",
      ActionType: "Immutable",
      ResourceTags: "Mutable",
      NotificationType: "Mutable",
      ActionThreshold: "Mutable",
      Definition: "Mutable",
      ApprovalModel: "Mutable",
      Subscribers: "Mutable",
      BudgetName: "Immutable",
    },
  },
  CE: {
    AnomalyMonitor: {
      MonitorType: "Immutable",
      ResourceTags: "Immutable",
      MonitorName: "Mutable",
      MonitorSpecification: "Immutable",
      MonitorDimension: "Immutable",
    },
    AnomalySubscription: {
      MonitorArnList: "Mutable",
      ResourceTags: "Immutable",
      Frequency: "Mutable",
      SubscriptionName: "Mutable",
      Subscribers: "Mutable",
      Threshold: "Mutable",
      ThresholdExpression: "Mutable",
    },
    CostCategory: {
      DefaultValue: "Mutable",
      SplitChargeRules: "Mutable",
      RuleVersion: "Mutable",
      Rules: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  CUR: {
    ReportDefinition: {
      AdditionalArtifacts: "Mutable",
      ReportName: "Immutable",
      Compression: "Mutable",
      Format: "Mutable",
      RefreshClosedReports: "Mutable",
      S3Bucket: "Mutable",
      ReportVersioning: "Immutable",
      S3Region: "Mutable",
      TimeUnit: "Immutable",
      BillingViewArn: "Immutable",
      S3Prefix: "Mutable",
      AdditionalSchemaElements: "Immutable",
    },
  },
  Cassandra: {
    Keyspace: {
      ClientSideTimestampsEnabled: "Mutable",
      KeyspaceName: "Immutable",
      ReplicationSpecification: "Mutable",
      Tags: "Mutable",
    },
    Table: {
      ReplicaSpecifications: "Mutable",
      ClusteringKeyColumns: "Immutable",
      KeyspaceName: "Immutable",
      EncryptionSpecification: "Mutable",
      TableName: "Immutable",
      PointInTimeRecoveryEnabled: "Mutable",
      CdcSpecification: "Mutable",
      AutoScalingSpecifications: "Mutable",
      ClientSideTimestampsEnabled: "Immutable",
      PartitionKeyColumns: "Immutable",
      BillingMode: "Mutable",
      DefaultTimeToLive: "Mutable",
      RegularColumns: "Mutable",
      Tags: "Mutable",
    },
    Type: {
      TypeName: "Immutable",
      Fields: "Immutable",
      KeyspaceName: "Immutable",
    },
  },
  CertificateManager: {
    Account: {
      ExpiryEventsConfiguration: "Mutable",
    },
    Certificate: {
      CertificateAuthorityArn: "Immutable",
      CertificateExport: "Mutable",
      CertificateTransparencyLoggingPreference: "Mutable",
      DomainName: "Immutable",
      DomainValidationOptions: "Immutable",
      KeyAlgorithm: "Immutable",
      SubjectAlternativeNames: "Immutable",
      Tags: "Mutable",
      ValidationMethod: "Immutable",
    },
  },
  Chatbot: {
    CustomAction: {
      ActionName: "Immutable",
      AliasName: "Mutable",
      Definition: "Mutable",
      Attachments: "Mutable",
      Tags: "Mutable",
    },
    MicrosoftTeamsChannelConfiguration: {
      UserRoleRequired: "Mutable",
      LoggingLevel: "Mutable",
      TeamsChannelName: "Mutable",
      CustomizationResourceArns: "Mutable",
      SnsTopicArns: "Mutable",
      GuardrailPolicies: "Mutable",
      IamRoleArn: "Mutable",
      TeamId: "Immutable",
      ConfigurationName: "Immutable",
      TeamsTenantId: "Immutable",
      Tags: "Mutable",
      TeamsChannelId: "Mutable",
    },
    SlackChannelConfiguration: {
      UserRoleRequired: "Mutable",
      LoggingLevel: "Mutable",
      CustomizationResourceArns: "Mutable",
      SnsTopicArns: "Mutable",
      GuardrailPolicies: "Mutable",
      SlackWorkspaceId: "Immutable",
      SlackChannelId: "Mutable",
      IamRoleArn: "Mutable",
      ConfigurationName: "Immutable",
      Tags: "Mutable",
    },
  },
  CleanRooms: {
    AnalysisTemplate: {
      MembershipIdentifier: "Immutable",
      Description: "Mutable",
      Format: "Immutable",
      SourceMetadata: "Mutable",
      ErrorMessageConfiguration: "Immutable",
      AnalysisParameters: "Immutable",
      Schema: "Immutable",
      Source: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Collaboration: {
      AnalyticsEngine: "Mutable",
      CreatorDisplayName: "Immutable",
      CreatorMemberAbilities: "Immutable",
      Description: "Mutable",
      CreatorMLMemberAbilities: "Immutable",
      Name: "Mutable",
      JobLogStatus: "Immutable",
      QueryLogStatus: "Immutable",
      AutoApprovedChangeTypes: "Immutable",
      CreatorPaymentConfiguration: "Immutable",
      DataEncryptionMetadata: "Immutable",
      Tags: "Mutable",
      Members: "Immutable",
    },
    ConfiguredTable: {
      SelectedAnalysisMethods: "Mutable",
      AnalysisMethod: "Mutable",
      TableReference: "Mutable",
      Description: "Mutable",
      AnalysisRules: "Mutable",
      AllowedColumns: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    ConfiguredTableAssociation: {
      MembershipIdentifier: "Immutable",
      Description: "Mutable",
      ConfiguredTableAssociationAnalysisRules: "Mutable",
      ConfiguredTableIdentifier: "Immutable",
      Tags: "Mutable",
      RoleArn: "Mutable",
      Name: "Immutable",
    },
    IdMappingTable: {
      MembershipIdentifier: "Immutable",
      Description: "Mutable",
      KmsKeyArn: "Mutable",
      InputReferenceConfig: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    IdNamespaceAssociation: {
      IdMappingConfig: "Mutable",
      MembershipIdentifier: "Immutable",
      Description: "Mutable",
      InputReferenceConfig: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Membership: {
      CollaborationIdentifier: "Immutable",
      JobLogStatus: "Mutable",
      DefaultResultConfiguration: "Mutable",
      QueryLogStatus: "Mutable",
      DefaultJobResultConfiguration: "Mutable",
      Tags: "Mutable",
      PaymentConfiguration: "Mutable",
    },
    PrivacyBudgetTemplate: {
      PrivacyBudgetType: "Immutable",
      MembershipIdentifier: "Immutable",
      Parameters: "Mutable",
      Tags: "Mutable",
      AutoRefresh: "Immutable",
    },
  },
  CleanRoomsML: {
    TrainingDataset: {
      Description: "Immutable",
      TrainingData: "Immutable",
      RoleArn: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  Cloud9: {
    EnvironmentEC2: {
      Repositories: "Immutable",
      OwnerArn: "Immutable",
      Description: "Mutable",
      ConnectionType: "Immutable",
      AutomaticStopTimeMinutes: "Immutable",
      ImageId: "Immutable",
      SubnetId: "Immutable",
      InstanceType: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  CloudFormation: {
    CustomResource: {
      ServiceTimeout: "Mutable",
      ServiceToken: "Immutable",
    },
    GuardHook: {
      Options: "Mutable",
      RuleLocation: "Mutable",
      HookStatus: "Mutable",
      Alias: "Immutable",
      StackFilters: "Mutable",
      TargetOperations: "Mutable",
      TargetFilters: "Mutable",
      LogBucket: "Mutable",
      ExecutionRole: "Immutable",
      FailureMode: "Mutable",
    },
    HookDefaultVersion: {
      VersionId: "Mutable",
      TypeName: "Mutable",
      TypeVersionArn: "Mutable",
    },
    HookTypeConfig: {
      TypeName: "Mutable",
      Configuration: "Mutable",
      TypeArn: "Mutable",
      ConfigurationAlias: "Immutable",
    },
    HookVersion: {
      ExecutionRoleArn: "Immutable",
      TypeName: "Immutable",
      LoggingConfig: "Immutable",
      SchemaHandlerPackage: "Immutable",
    },
    LambdaHook: {
      HookStatus: "Mutable",
      Alias: "Immutable",
      StackFilters: "Mutable",
      TargetOperations: "Mutable",
      TargetFilters: "Mutable",
      LambdaFunction: "Mutable",
      ExecutionRole: "Mutable",
      FailureMode: "Mutable",
    },
    Macro: {
      Description: "Mutable",
      FunctionName: "Mutable",
      LogGroupName: "Mutable",
      LogRoleARN: "Mutable",
      Name: "Immutable",
    },
    ModuleDefaultVersion: {
      VersionId: "Immutable",
      ModuleName: "Immutable",
      Arn: "Immutable",
    },
    ModuleVersion: {
      ModulePackage: "Immutable",
      ModuleName: "Immutable",
    },
    PublicTypeVersion: {
      TypeName: "Immutable",
      LogDeliveryBucket: "Immutable",
      Type: "Immutable",
      PublicVersionNumber: "Immutable",
      Arn: "Immutable",
    },
    Publisher: {
      AcceptTermsAndConditions: "Immutable",
      ConnectionArn: "Immutable",
    },
    ResourceDefaultVersion: {
      VersionId: "Mutable",
      TypeName: "Mutable",
      TypeVersionArn: "Mutable",
    },
    ResourceVersion: {
      ExecutionRoleArn: "Immutable",
      TypeName: "Immutable",
      LoggingConfig: "Immutable",
      SchemaHandlerPackage: "Immutable",
    },
    Stack: {
      NotificationARNs: "Mutable",
      Parameters: "Mutable",
      Tags: "Mutable",
      TemplateURL: "Mutable",
      TimeoutInMinutes: "Mutable",
    },
    StackSet: {
      Description: "Mutable",
      Parameters: "Mutable",
      StackInstancesGroup: "Mutable",
      TemplateBody: "Mutable",
      StackSetName: "Immutable",
      CallAs: "Mutable",
      OperationPreferences: "Mutable",
      TemplateURL: "Mutable",
      AutoDeployment: "Mutable",
      Capabilities: "Mutable",
      PermissionModel: "Immutable",
      AdministrationRoleARN: "Mutable",
      ExecutionRoleName: "Mutable",
      ManagedExecution: "Mutable",
      Tags: "Mutable",
    },
    TypeActivation: {
      MajorVersion: "Mutable",
      ExecutionRoleArn: "Mutable",
      TypeName: "Mutable",
      Type: "Mutable",
      PublicTypeArn: "Mutable",
      AutoUpdate: "Mutable",
      LoggingConfig: "Immutable",
      PublisherId: "Mutable",
      VersionBump: "Mutable",
      TypeNameAlias: "Mutable",
    },
    WaitCondition: {
      Count: "Mutable",
      Handle: "Mutable",
      Timeout: "Mutable",
    },
  },
  CloudFront: {
    AnycastIpList: {
      IpCount: "Immutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    CachePolicy: {
      CachePolicyConfig: "Mutable",
    },
    CloudFrontOriginAccessIdentity: {
      CloudFrontOriginAccessIdentityConfig: "Mutable",
    },
    ConnectionGroup: {
      Ipv6Enabled: "Mutable",
      AnycastIpListId: "Mutable",
      Enabled: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ContinuousDeploymentPolicy: {
      ContinuousDeploymentPolicyConfig: "Mutable",
    },
    Distribution: {
      DistributionConfig: "Mutable",
      Tags: "Mutable",
    },
    DistributionTenant: {
      Domains: "Mutable",
      Parameters: "Mutable",
      Customizations: "Mutable",
      Enabled: "Mutable",
      ManagedCertificateRequest: "Mutable",
      DistributionId: "Mutable",
      ConnectionGroupId: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Function: {
      FunctionConfig: "Mutable",
      FunctionMetadata: "Mutable",
      AutoPublish: "Mutable",
      FunctionCode: "Mutable",
      Name: "Immutable",
    },
    KeyGroup: {
      KeyGroupConfig: "Mutable",
    },
    KeyValueStore: {
      Comment: "Mutable",
      ImportSource: "Mutable",
      Name: "Immutable",
    },
    MonitoringSubscription: {
      MonitoringSubscription: "Mutable",
      DistributionId: "Immutable",
    },
    OriginAccessControl: {
      OriginAccessControlConfig: "Mutable",
    },
    OriginRequestPolicy: {
      OriginRequestPolicyConfig: "Mutable",
    },
    PublicKey: {
      PublicKeyConfig: "Mutable",
    },
    RealtimeLogConfig: {
      Fields: "Mutable",
      EndPoints: "Mutable",
      SamplingRate: "Mutable",
      Name: "Immutable",
    },
    ResponseHeadersPolicy: {
      ResponseHeadersPolicyConfig: "Mutable",
    },
    StreamingDistribution: {
      StreamingDistributionConfig: "Mutable",
      Tags: "Mutable",
    },
    VpcOrigin: {
      VpcOriginEndpointConfig: "Mutable",
      Tags: "Mutable",
    },
  },
  CloudTrail: {
    Channel: {
      Destinations: "Mutable",
      Source: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Dashboard: {
      Widgets: "Mutable",
      TerminationProtectionEnabled: "Mutable",
      RefreshSchedule: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    EventDataStore: {
      MaxEventSize: "Mutable",
      KmsKeyId: "Mutable",
      AdvancedEventSelectors: "Mutable",
      TerminationProtectionEnabled: "Mutable",
      MultiRegionEnabled: "Mutable",
      RetentionPeriod: "Mutable",
      FederationEnabled: "Mutable",
      IngestionEnabled: "Mutable",
      Name: "Mutable",
      InsightSelectors: "Mutable",
      OrganizationEnabled: "Mutable",
      FederationRoleArn: "Mutable",
      InsightsDestination: "Mutable",
      BillingMode: "Mutable",
      ContextKeySelectors: "Mutable",
      Tags: "Mutable",
    },
    ResourcePolicy: {
      ResourceArn: "Immutable",
      ResourcePolicy: "Mutable",
    },
    Trail: {
      IncludeGlobalServiceEvents: "Mutable",
      EventSelectors: "Mutable",
      KMSKeyId: "Mutable",
      CloudWatchLogsRoleArn: "Mutable",
      S3KeyPrefix: "Mutable",
      AdvancedEventSelectors: "Mutable",
      TrailName: "Immutable",
      IsOrganizationTrail: "Mutable",
      InsightSelectors: "Mutable",
      CloudWatchLogsLogGroupArn: "Mutable",
      SnsTopicName: "Mutable",
      IsMultiRegionTrail: "Mutable",
      S3BucketName: "Mutable",
      EnableLogFileValidation: "Mutable",
      Tags: "Mutable",
      IsLogging: "Mutable",
    },
  },
  CloudWatch: {
    Alarm: {
      ThresholdMetricId: "Mutable",
      EvaluateLowSampleCountPercentile: "Mutable",
      ExtendedStatistic: "Mutable",
      ComparisonOperator: "Mutable",
      TreatMissingData: "Mutable",
      Dimensions: "Mutable",
      Period: "Mutable",
      EvaluationPeriods: "Mutable",
      Unit: "Mutable",
      Namespace: "Mutable",
      OKActions: "Mutable",
      AlarmActions: "Mutable",
      MetricName: "Mutable",
      ActionsEnabled: "Mutable",
      Metrics: "Mutable",
      AlarmDescription: "Mutable",
      AlarmName: "Immutable",
      Statistic: "Mutable",
      InsufficientDataActions: "Mutable",
      DatapointsToAlarm: "Mutable",
      Tags: "Mutable",
      Threshold: "Mutable",
    },
    AnomalyDetector: {
      MetricCharacteristics: "Immutable",
      MetricName: "Immutable",
      Stat: "Immutable",
      Configuration: "Mutable",
      MetricMathAnomalyDetector: "Immutable",
      Dimensions: "Immutable",
      Namespace: "Immutable",
      SingleMetricAnomalyDetector: "Immutable",
    },
    CompositeAlarm: {
      AlarmActions: "Mutable",
      ActionsSuppressorWaitPeriod: "Mutable",
      ActionsEnabled: "Mutable",
      AlarmName: "Immutable",
      AlarmDescription: "Mutable",
      ActionsSuppressor: "Mutable",
      AlarmRule: "Mutable",
      InsufficientDataActions: "Mutable",
      OKActions: "Mutable",
      ActionsSuppressorExtensionPeriod: "Mutable",
      Tags: "Mutable",
    },
    Dashboard: {
      DashboardName: "Immutable",
      DashboardBody: "Mutable",
    },
    InsightRule: {
      RuleState: "Mutable",
      RuleBody: "Mutable",
      ApplyOnTransformedLogs: "Mutable",
      RuleName: "Immutable",
      Tags: "Mutable",
    },
    MetricStream: {
      StatisticsConfigurations: "Mutable",
      FirehoseArn: "Mutable",
      IncludeLinkedAccountsMetrics: "Mutable",
      IncludeFilters: "Mutable",
      OutputFormat: "Mutable",
      ExcludeFilters: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  CodeArtifact: {
    Domain: {
      PermissionsPolicyDocument: "Mutable",
      DomainName: "Immutable",
      Tags: "Mutable",
      EncryptionKey: "Immutable",
    },
    PackageGroup: {
      Pattern: "Immutable",
      Description: "Mutable",
      DomainName: "Immutable",
      OriginConfiguration: "Mutable",
      ContactInfo: "Mutable",
      DomainOwner: "Mutable",
      Tags: "Mutable",
    },
    Repository: {
      Description: "Mutable",
      PermissionsPolicyDocument: "Mutable",
      DomainName: "Immutable",
      Upstreams: "Mutable",
      RepositoryName: "Immutable",
      ExternalConnections: "Mutable",
      Tags: "Mutable",
      DomainOwner: "Immutable",
    },
  },
  CodeBuild: {
    Fleet: {
      FleetServiceRole: "Mutable",
      EnvironmentType: "Mutable",
      OverflowBehavior: "Mutable",
      ImageId: "Mutable",
      ScalingConfiguration: "Mutable",
      BaseCapacity: "Mutable",
      FleetProxyConfiguration: "Mutable",
      ComputeConfiguration: "Mutable",
      ComputeType: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
      FleetVpcConfig: "Mutable",
    },
    Project: {
      Description: "Mutable",
      ResourceAccessRole: "Mutable",
      VpcConfig: "Mutable",
      SecondarySources: "Mutable",
      EncryptionKey: "Mutable",
      SecondaryArtifacts: "Mutable",
      Source: "Mutable",
      Name: "Immutable",
      LogsConfig: "Mutable",
      ServiceRole: "Mutable",
      QueuedTimeoutInMinutes: "Mutable",
      SecondarySourceVersions: "Mutable",
      Tags: "Mutable",
      AutoRetryLimit: "Mutable",
      SourceVersion: "Mutable",
      Triggers: "Mutable",
      Artifacts: "Mutable",
      BadgeEnabled: "Mutable",
      FileSystemLocations: "Mutable",
      Environment: "Mutable",
      ConcurrentBuildLimit: "Mutable",
      Visibility: "Mutable",
      BuildBatchConfig: "Mutable",
      TimeoutInMinutes: "Mutable",
      Cache: "Mutable",
    },
    ReportGroup: {
      Type: "Immutable",
      ExportConfig: "Mutable",
      DeleteReports: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    SourceCredential: {
      ServerType: "Immutable",
      Username: "Mutable",
      Token: "Mutable",
      AuthType: "Mutable",
    },
  },
  CodeCommit: {
    Repository: {
      KmsKeyId: "Mutable",
      RepositoryName: "Mutable",
      Triggers: "Conditional",
      Code: "Mutable",
      RepositoryDescription: "Mutable",
      Tags: "Mutable",
    },
  },
  CodeConnections: {
    Connection: {
      ConnectionName: "Immutable",
      HostArn: "Immutable",
      ProviderType: "Immutable",
      Tags: "Mutable",
    },
  },
  CodeDeploy: {
    Application: {
      ApplicationName: "Immutable",
      ComputePlatform: "Immutable",
      Tags: "Mutable",
    },
    DeploymentConfig: {
      ComputePlatform: "Immutable",
      ZonalConfig: "Immutable",
      DeploymentConfigName: "Immutable",
      TrafficRoutingConfig: "Immutable",
      MinimumHealthyHosts: "Immutable",
    },
    DeploymentGroup: {
      AlarmConfiguration: "Mutable",
      ApplicationName: "Immutable",
      AutoRollbackConfiguration: "Mutable",
      AutoScalingGroups: "Mutable",
      BlueGreenDeploymentConfiguration: "Mutable",
      Deployment: "Mutable",
      DeploymentConfigName: "Mutable",
      DeploymentGroupName: "Immutable",
      DeploymentStyle: "Mutable",
      ECSServices: "Mutable",
      Ec2TagFilters: "Mutable",
      Ec2TagSet: "Mutable",
      LoadBalancerInfo: "Mutable",
      OnPremisesInstanceTagFilters: "Mutable",
      OnPremisesTagSet: "Mutable",
      OutdatedInstancesStrategy: "Mutable",
      ServiceRoleArn: "Mutable",
      Tags: "Mutable",
      TerminationHookEnabled: "Mutable",
      TriggerConfigurations: "Mutable",
    },
  },
  CodeGuruProfiler: {
    ProfilingGroup: {
      AnomalyDetectionNotificationConfiguration: "Mutable",
      AgentPermissions: "Mutable",
      ComputePlatform: "Immutable",
      ProfilingGroupName: "Immutable",
      Tags: "Mutable",
    },
  },
  CodeGuruReviewer: {
    RepositoryAssociation: {
      Type: "Immutable",
      Owner: "Immutable",
      BucketName: "Immutable",
      ConnectionArn: "Immutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
  },
  CodePipeline: {
    CustomActionType: {
      Category: "Immutable",
      InputArtifactDetails: "Immutable",
      Version: "Immutable",
      OutputArtifactDetails: "Immutable",
      ConfigurationProperties: "Immutable",
      Settings: "Immutable",
      Tags: "Mutable",
      Provider: "Immutable",
    },
    Pipeline: {
      Variables: "Mutable",
      ArtifactStores: "Mutable",
      ArtifactStore: "Mutable",
      DisableInboundStageTransitions: "Mutable",
      Stages: "Mutable",
      PipelineType: "Mutable",
      ExecutionMode: "Mutable",
      RestartExecutionOnUpdate: "Mutable",
      Triggers: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Webhook: {
      AuthenticationConfiguration: "Mutable",
      Filters: "Mutable",
      Authentication: "Mutable",
      TargetPipeline: "Mutable",
      TargetAction: "Mutable",
      Name: "Immutable",
      TargetPipelineVersion: "Mutable",
      RegisterWithThirdParty: "Mutable",
    },
  },
  CodeStar: {
    GitHubRepository: {
      EnableIssues: "Mutable",
      ConnectionArn: "Mutable",
      RepositoryName: "Mutable",
      RepositoryAccessToken: "Mutable",
      RepositoryOwner: "Mutable",
      IsPrivate: "Mutable",
      Code: "Mutable",
      RepositoryDescription: "Mutable",
    },
  },
  CodeStarConnections: {
    Connection: {
      ConnectionName: "Immutable",
      HostArn: "Immutable",
      ProviderType: "Immutable",
      Tags: "Mutable",
    },
    RepositoryLink: {
      OwnerId: "Immutable",
      EncryptionKeyArn: "Mutable",
      ConnectionArn: "Mutable",
      RepositoryName: "Immutable",
      Tags: "Mutable",
    },
    SyncConfiguration: {
      ConfigFile: "Mutable",
      ResourceName: "Immutable",
      Branch: "Mutable",
      SyncType: "Immutable",
      TriggerResourceUpdateOn: "Mutable",
      RepositoryLinkId: "Mutable",
      RoleArn: "Mutable",
      PublishDeploymentStatus: "Mutable",
    },
  },
  CodeStarNotifications: {
    NotificationRule: {
      EventTypeIds: "Mutable",
      Status: "Mutable",
      CreatedBy: "Mutable",
      DetailType: "Mutable",
      Resource: "Immutable",
      EventTypeId: "Mutable",
      TargetAddress: "Mutable",
      Targets: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  Cognito: {
    IdentityPool: {
      PushSync: "Mutable",
      CognitoIdentityProviders: "Mutable",
      CognitoEvents: "Mutable",
      DeveloperProviderName: "Mutable",
      CognitoStreams: "Mutable",
      IdentityPoolName: "Mutable",
      SupportedLoginProviders: "Mutable",
      AllowUnauthenticatedIdentities: "Mutable",
      IdentityPoolTags: "Mutable",
      SamlProviderARNs: "Mutable",
      OpenIdConnectProviderARNs: "Mutable",
      AllowClassicFlow: "Mutable",
    },
    IdentityPoolPrincipalTag: {
      PrincipalTags: "Mutable",
      UseDefaults: "Mutable",
      IdentityProviderName: "Immutable",
      IdentityPoolId: "Immutable",
    },
    IdentityPoolRoleAttachment: {
      RoleMappings: "Mutable",
      IdentityPoolId: "Immutable",
      Roles: "Mutable",
    },
    LogDeliveryConfiguration: {
      UserPoolId: "Immutable",
      LogConfigurations: "Mutable",
    },
    ManagedLoginBranding: {
      UserPoolId: "Immutable",
      UseCognitoProvidedValues: "Mutable",
      Assets: "Mutable",
      ClientId: "Immutable",
      Settings: "Mutable",
      ReturnMergedResources: "Mutable",
    },
    UserPool: {
      UserPoolTags: "Mutable",
      Policies: "Mutable",
      Schema: "Mutable",
      AdminCreateUserConfig: "Mutable",
      UserPoolTier: "Mutable",
      UsernameConfiguration: "Mutable",
      UserPoolName: "Mutable",
      SmsVerificationMessage: "Mutable",
      UserAttributeUpdateSettings: "Mutable",
      EmailConfiguration: "Mutable",
      SmsConfiguration: "Mutable",
      EmailVerificationSubject: "Mutable",
      WebAuthnRelyingPartyID: "Mutable",
      EmailAuthenticationSubject: "Mutable",
      AccountRecoverySetting: "Mutable",
      VerificationMessageTemplate: "Mutable",
      MfaConfiguration: "Mutable",
      DeletionProtection: "Mutable",
      SmsAuthenticationMessage: "Mutable",
      WebAuthnUserVerification: "Mutable",
      UserPoolAddOns: "Mutable",
      EmailAuthenticationMessage: "Mutable",
      AliasAttributes: "Mutable",
      EnabledMfas: "Mutable",
      LambdaConfig: "Mutable",
      UsernameAttributes: "Mutable",
      AutoVerifiedAttributes: "Mutable",
      DeviceConfiguration: "Mutable",
      EmailVerificationMessage: "Mutable",
    },
    UserPoolClient: {
      AnalyticsConfiguration: "Mutable",
      GenerateSecret: "Immutable",
      CallbackURLs: "Mutable",
      EnablePropagateAdditionalUserContextData: "Mutable",
      IdTokenValidity: "Mutable",
      AuthSessionValidity: "Mutable",
      RefreshTokenRotation: "Mutable",
      AllowedOAuthScopes: "Mutable",
      TokenValidityUnits: "Mutable",
      ReadAttributes: "Mutable",
      AllowedOAuthFlowsUserPoolClient: "Mutable",
      DefaultRedirectURI: "Mutable",
      SupportedIdentityProviders: "Mutable",
      ClientName: "Mutable",
      UserPoolId: "Immutable",
      AllowedOAuthFlows: "Mutable",
      ExplicitAuthFlows: "Mutable",
      LogoutURLs: "Mutable",
      AccessTokenValidity: "Mutable",
      RefreshTokenValidity: "Mutable",
      WriteAttributes: "Mutable",
      PreventUserExistenceErrors: "Mutable",
      EnableTokenRevocation: "Mutable",
    },
    UserPoolDomain: {
      UserPoolId: "Immutable",
      CustomDomainConfig: "Mutable",
      Domain: "Immutable",
      ManagedLoginVersion: "Mutable",
    },
    UserPoolGroup: {
      GroupName: "Immutable",
      Description: "Mutable",
      UserPoolId: "Immutable",
      Precedence: "Mutable",
      RoleArn: "Mutable",
    },
    UserPoolIdentityProvider: {
      ProviderName: "Immutable",
      UserPoolId: "Immutable",
      AttributeMapping: "Mutable",
      ProviderDetails: "Mutable",
      ProviderType: "Immutable",
      IdpIdentifiers: "Mutable",
    },
    UserPoolResourceServer: {
      UserPoolId: "Immutable",
      Identifier: "Immutable",
      Scopes: "Mutable",
      Name: "Mutable",
    },
    UserPoolRiskConfigurationAttachment: {
      CompromisedCredentialsRiskConfiguration: "Mutable",
      UserPoolId: "Immutable",
      ClientId: "Immutable",
      AccountTakeoverRiskConfiguration: "Mutable",
      RiskExceptionConfiguration: "Mutable",
    },
    UserPoolUICustomizationAttachment: {
      CSS: "Mutable",
      UserPoolId: "Immutable",
      ClientId: "Immutable",
    },
    UserPoolUser: {
      ValidationData: "Immutable",
      UserPoolId: "Immutable",
      Username: "Immutable",
      MessageAction: "Immutable",
      ClientMetadata: "Immutable",
      DesiredDeliveryMediums: "Immutable",
      ForceAliasCreation: "Immutable",
      UserAttributes: "Immutable",
    },
    UserPoolUserToGroupAttachment: {
      GroupName: "Immutable",
      UserPoolId: "Immutable",
      Username: "Immutable",
    },
  },
  Comprehend: {
    DocumentClassifier: {
      LanguageCode: "Immutable",
      DataAccessRoleArn: "Immutable",
      OutputDataConfig: "Immutable",
      VpcConfig: "Immutable",
      DocumentClassifierName: "Immutable",
      Mode: "Immutable",
      VolumeKmsKeyId: "Immutable",
      ModelKmsKeyId: "Immutable",
      VersionName: "Immutable",
      ModelPolicy: "Mutable",
      InputDataConfig: "Immutable",
      Tags: "Mutable",
    },
    Flywheel: {
      DataLakeS3Uri: "Immutable",
      DataAccessRoleArn: "Mutable",
      FlywheelName: "Immutable",
      ModelType: "Immutable",
      TaskConfig: "Immutable",
      ActiveModelArn: "Mutable",
      DataSecurityConfig: "Mutable",
      Tags: "Mutable",
    },
  },
  Config: {
    AggregationAuthorization: {
      AuthorizedAccountId: "Immutable",
      AuthorizedAwsRegion: "Immutable",
      Tags: "Mutable",
    },
    ConfigRule: {
      EvaluationModes: "Mutable",
      Description: "Mutable",
      Scope: "Mutable",
      Compliance: "Mutable",
      ConfigRuleName: "Immutable",
      MaximumExecutionFrequency: "Mutable",
      Source: "Mutable",
      InputParameters: "Mutable",
    },
    ConfigurationAggregator: {
      AccountAggregationSources: "Mutable",
      ConfigurationAggregatorName: "Immutable",
      OrganizationAggregationSource: "Mutable",
      Tags: "Mutable",
    },
    ConfigurationRecorder: {
      Name: "Immutable",
      RecordingGroup: "Mutable",
      RecordingMode: "Mutable",
      RoleARN: "Mutable",
    },
    ConformancePack: {
      ConformancePackInputParameters: "Mutable",
      TemplateSSMDocumentDetails: "Mutable",
      DeliveryS3Bucket: "Mutable",
      ConformancePackName: "Immutable",
      DeliveryS3KeyPrefix: "Mutable",
      TemplateBody: "Mutable",
      TemplateS3Uri: "Mutable",
    },
    DeliveryChannel: {
      ConfigSnapshotDeliveryProperties: "Mutable",
      Name: "Immutable",
      S3BucketName: "Mutable",
      S3KeyPrefix: "Mutable",
      S3KmsKeyArn: "Mutable",
      SnsTopicARN: "Mutable",
    },
    OrganizationConfigRule: {
      OrganizationManagedRuleMetadata: "Mutable",
      OrganizationConfigRuleName: "Immutable",
      OrganizationCustomRuleMetadata: "Mutable",
      ExcludedAccounts: "Mutable",
      OrganizationCustomPolicyRuleMetadata: "Mutable",
    },
    OrganizationConformancePack: {
      ConformancePackInputParameters: "Mutable",
      DeliveryS3Bucket: "Mutable",
      ExcludedAccounts: "Mutable",
      DeliveryS3KeyPrefix: "Mutable",
      TemplateBody: "Mutable",
      OrganizationConformancePackName: "Immutable",
      TemplateS3Uri: "Mutable",
    },
    RemediationConfiguration: {
      TargetVersion: "Mutable",
      ExecutionControls: "Mutable",
      Parameters: "Mutable",
      TargetType: "Mutable",
      ConfigRuleName: "Immutable",
      ResourceType: "Mutable",
      RetryAttemptSeconds: "Mutable",
      MaximumAutomaticAttempts: "Mutable",
      TargetId: "Mutable",
      Automatic: "Mutable",
    },
    StoredQuery: {
      QueryDescription: "Mutable",
      QueryExpression: "Mutable",
      Tags: "Mutable",
      QueryName: "Immutable",
    },
  },
  Connect: {
    AgentStatus: {
      ResetOrderNumber: "Mutable",
      Type: "Mutable",
      Description: "Mutable",
      DisplayOrder: "Mutable",
      State: "Mutable",
      InstanceArn: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    ApprovedOrigin: {
      Origin: "Immutable",
      InstanceId: "Immutable",
    },
    ContactFlow: {
      Type: "Immutable",
      Description: "Mutable",
      Content: "Mutable",
      State: "Mutable",
      InstanceArn: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    ContactFlowModule: {
      Description: "Mutable",
      Content: "Mutable",
      State: "Mutable",
      InstanceArn: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    ContactFlowVersion: {
      Description: "Immutable",
      ContactFlowId: "Immutable",
    },
    EmailAddress: {
      Description: "Mutable",
      InstanceArn: "Mutable",
      DisplayName: "Mutable",
      EmailAddress: "Immutable",
      Tags: "Mutable",
    },
    EvaluationForm: {
      ScoringStrategy: "Mutable",
      Status: "Mutable",
      AutoEvaluationConfiguration: "Mutable",
      Description: "Mutable",
      InstanceArn: "Mutable",
      Title: "Mutable",
      Items: "Mutable",
      Tags: "Mutable",
    },
    HoursOfOperation: {
      TimeZone: "Mutable",
      Description: "Mutable",
      Config: "Mutable",
      InstanceArn: "Mutable",
      Tags: "Mutable",
      HoursOfOperationOverrides: "Mutable",
      Name: "Mutable",
    },
    Instance: {
      DirectoryId: "Immutable",
      IdentityManagementType: "Immutable",
      InstanceAlias: "Immutable",
      Attributes: "Mutable",
      Tags: "Mutable",
    },
    InstanceStorageConfig: {
      KinesisStreamConfig: "Mutable",
      S3Config: "Mutable",
      StorageType: "Mutable",
      InstanceArn: "Immutable",
      ResourceType: "Immutable",
      KinesisVideoStreamConfig: "Mutable",
      KinesisFirehoseConfig: "Mutable",
    },
    IntegrationAssociation: {
      IntegrationArn: "Immutable",
      InstanceId: "Immutable",
      IntegrationType: "Immutable",
    },
    PhoneNumber: {
      Type: "Immutable",
      Description: "Mutable",
      TargetArn: "Mutable",
      Prefix: "Immutable",
      CountryCode: "Immutable",
      SourcePhoneNumberArn: "Immutable",
      Tags: "Mutable",
    },
    PredefinedAttribute: {
      AttributeConfiguration: "Mutable",
      InstanceArn: "Immutable",
      Values: "Mutable",
      Purposes: "Mutable",
      Name: "Immutable",
    },
    Prompt: {
      Description: "Mutable",
      S3Uri: "Mutable",
      InstanceArn: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Queue: {
      Status: "Mutable",
      HoursOfOperationArn: "Mutable",
      Description: "Mutable",
      InstanceArn: "Mutable",
      OutboundEmailConfig: "Mutable",
      QuickConnectArns: "Mutable",
      OutboundCallerConfig: "Mutable",
      MaxContacts: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    QuickConnect: {
      Description: "Mutable",
      QuickConnectConfig: "Mutable",
      InstanceArn: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    RoutingProfile: {
      ManualAssignmentQueueConfigs: "Mutable",
      Description: "Mutable",
      MediaConcurrencies: "Mutable",
      InstanceArn: "Mutable",
      AgentAvailabilityTimer: "Mutable",
      QueueConfigs: "Mutable",
      DefaultOutboundQueueArn: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Rule: {
      Function: "Mutable",
      TriggerEventSource: "Immutable",
      Actions: "Mutable",
      InstanceArn: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
      PublishStatus: "Mutable",
    },
    SecurityKey: {
      InstanceId: "Immutable",
      Key: "Immutable",
    },
    SecurityProfile: {
      Description: "Mutable",
      AllowedAccessControlTags: "Mutable",
      Applications: "Mutable",
      AllowedAccessControlHierarchyGroupId: "Mutable",
      InstanceArn: "Immutable",
      Permissions: "Mutable",
      SecurityProfileName: "Immutable",
      TagRestrictedResources: "Mutable",
      Tags: "Mutable",
      HierarchyRestrictedResources: "Mutable",
    },
    TaskTemplate: {
      Status: "Mutable",
      Description: "Mutable",
      Constraints: "Mutable",
      Defaults: "Mutable",
      Fields: "Mutable",
      InstanceArn: "Mutable",
      ContactFlowArn: "Mutable",
      ClientToken: "Mutable",
      SelfAssignContactFlowArn: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    TrafficDistributionGroup: {
      Description: "Immutable",
      InstanceArn: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    User: {
      RoutingProfileArn: "Mutable",
      Username: "Mutable",
      PhoneConfig: "Mutable",
      InstanceArn: "Mutable",
      DirectoryUserId: "Mutable",
      IdentityInfo: "Mutable",
      HierarchyGroupArn: "Mutable",
      SecurityProfileArns: "Mutable",
      Tags: "Mutable",
      UserProficiencies: "Mutable",
      Password: "Mutable",
    },
    UserHierarchyGroup: {
      InstanceArn: "Mutable",
      ParentGroupArn: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    UserHierarchyStructure: {
      UserHierarchyStructure: "Mutable",
      InstanceArn: "Immutable",
    },
    View: {
      Description: "Mutable",
      Actions: "Mutable",
      InstanceArn: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
      Template: "Mutable",
    },
    ViewVersion: {
      ViewArn: "Immutable",
      VersionDescription: "Mutable",
      ViewContentSha256: "Immutable",
    },
  },
  ConnectCampaigns: {
    Campaign: {
      OutboundCallConfig: "Mutable",
      ConnectInstanceArn: "Immutable",
      DialerConfig: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  ConnectCampaignsV2: {
    Campaign: {
      CommunicationLimitsOverride: "Mutable",
      ChannelSubtypeConfig: "Mutable",
      ConnectCampaignFlowArn: "Mutable",
      Schedule: "Mutable",
      CommunicationTimeConfig: "Mutable",
      ConnectInstanceId: "Immutable",
      Source: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  ControlTower: {
    EnabledBaseline: {
      BaselineVersion: "Mutable",
      Parameters: "Mutable",
      BaselineIdentifier: "Immutable",
      TargetIdentifier: "Immutable",
      Tags: "Mutable",
    },
    EnabledControl: {
      Parameters: "Mutable",
      ControlIdentifier: "Immutable",
      TargetIdentifier: "Immutable",
      Tags: "Mutable",
    },
    LandingZone: {
      Version: "Mutable",
      Manifest: "Mutable",
      Tags: "Mutable",
    },
  },
  CustomerProfiles: {
    CalculatedAttributeDefinition: {
      UseHistoricalData: "Immutable",
      Description: "Mutable",
      AttributeDetails: "Mutable",
      Statistic: "Mutable",
      DomainName: "Immutable",
      DisplayName: "Mutable",
      CalculatedAttributeName: "Immutable",
      Conditions: "Mutable",
      Tags: "Mutable",
    },
    Domain: {
      Matching: "Mutable",
      DefaultExpirationDays: "Mutable",
      DomainName: "Immutable",
      DeadLetterQueueUrl: "Mutable",
      DefaultEncryptionKey: "Mutable",
      RuleBasedMatching: "Mutable",
      Tags: "Mutable",
    },
    EventStream: {
      DomainName: "Immutable",
      EventStreamName: "Immutable",
      Uri: "Immutable",
      Tags: "Mutable",
    },
    EventTrigger: {
      EventTriggerLimits: "Mutable",
      Description: "Mutable",
      DomainName: "Immutable",
      ObjectTypeName: "Mutable",
      SegmentFilter: "Mutable",
      EventTriggerConditions: "Mutable",
      EventTriggerName: "Immutable",
      Tags: "Mutable",
    },
    Integration: {
      EventTriggerNames: "Mutable",
      ObjectTypeNames: "Mutable",
      DomainName: "Immutable",
      ObjectTypeName: "Mutable",
      Uri: "Immutable",
      FlowDefinition: "Mutable",
      Tags: "Mutable",
    },
    ObjectType: {
      MaxProfileObjectCount: "Mutable",
      Description: "Mutable",
      Fields: "Mutable",
      DomainName: "Immutable",
      AllowProfileCreation: "Mutable",
      ObjectTypeName: "Immutable",
      Keys: "Mutable",
      SourceLastUpdatedTimestampFormat: "Mutable",
      EncryptionKey: "Mutable",
      Tags: "Mutable",
      TemplateId: "Mutable",
      ExpirationDays: "Mutable",
    },
    SegmentDefinition: {
      Description: "Mutable",
      DomainName: "Immutable",
      SegmentGroups: "Immutable",
      DisplayName: "Immutable",
      SegmentDefinitionName: "Immutable",
      Tags: "Mutable",
    },
  },
  DAX: {
    Cluster: {
      SSESpecification: "Immutable",
      Description: "Mutable",
      ReplicationFactor: "Mutable",
      ParameterGroupName: "Mutable",
      AvailabilityZones: "Mutable",
      IAMRoleARN: "Immutable",
      SubnetGroupName: "Immutable",
      PreferredMaintenanceWindow: "Mutable",
      ClusterEndpointEncryptionType: "Immutable",
      NotificationTopicARN: "Mutable",
      SecurityGroupIds: "Mutable",
      NetworkType: "Immutable",
      NodeType: "Immutable",
      ClusterName: "Immutable",
      Tags: "Mutable",
    },
    ParameterGroup: {
      ParameterNameValues: "Mutable",
      Description: "Mutable",
      ParameterGroupName: "Immutable",
    },
    SubnetGroup: {
      Description: "Mutable",
      SubnetGroupName: "Immutable",
      SubnetIds: "Mutable",
    },
  },
  DLM: {
    LifecyclePolicy: {
      ExecutionRoleArn: "Mutable",
      DefaultPolicy: "Mutable",
      CreateInterval: "Mutable",
      Description: "Mutable",
      ExtendDeletion: "Mutable",
      Exclusions: "Mutable",
      State: "Mutable",
      CrossRegionCopyTargets: "Mutable",
      PolicyDetails: "Mutable",
      Tags: "Mutable",
      RetainInterval: "Mutable",
      CopyTags: "Mutable",
    },
  },
  DMS: {
    Certificate: {
      CertificateIdentifier: "Immutable",
      CertificatePem: "Immutable",
      CertificateWallet: "Immutable",
    },
    DataMigration: {
      DataMigrationType: "Mutable",
      DataMigrationSettings: "Mutable",
      DataMigrationName: "Mutable",
      MigrationProjectIdentifier: "Mutable",
      SourceDataSettings: "Mutable",
      ServiceAccessRoleArn: "Mutable",
      Tags: "Mutable",
      DataMigrationIdentifier: "Mutable",
    },
    DataProvider: {
      DataProviderName: "Mutable",
      Description: "Mutable",
      ExactSettings: "Mutable",
      Engine: "Mutable",
      Settings: "Mutable",
      Tags: "Mutable",
      DataProviderIdentifier: "Mutable",
    },
    Endpoint: {
      SybaseSettings: "Mutable",
      RedisSettings: "Mutable",
      OracleSettings: "Mutable",
      KafkaSettings: "Mutable",
      Port: "Mutable",
      MySqlSettings: "Mutable",
      S3Settings: "Mutable",
      ResourceIdentifier: "Immutable",
      KinesisSettings: "Mutable",
      SslMode: "Mutable",
      RedshiftSettings: "Mutable",
      EndpointType: "Mutable",
      Tags: "Mutable",
      Password: "Mutable",
      MongoDbSettings: "Mutable",
      IbmDb2Settings: "Mutable",
      KmsKeyId: "Immutable",
      DatabaseName: "Mutable",
      NeptuneSettings: "Mutable",
      ElasticsearchSettings: "Mutable",
      EngineName: "Mutable",
      DocDbSettings: "Mutable",
      DynamoDbSettings: "Mutable",
      Username: "Mutable",
      MicrosoftSqlServerSettings: "Mutable",
      GcpMySQLSettings: "Mutable",
      ServerName: "Mutable",
      ExtraConnectionAttributes: "Mutable",
      EndpointIdentifier: "Mutable",
      CertificateArn: "Mutable",
      PostgreSqlSettings: "Mutable",
    },
    EventSubscription: {
      SourceType: "Mutable",
      EventCategories: "Mutable",
      Enabled: "Mutable",
      SubscriptionName: "Immutable",
      SnsTopicArn: "Mutable",
      SourceIds: "Immutable",
      Tags: "Mutable",
    },
    InstanceProfile: {
      SubnetGroupIdentifier: "Mutable",
      Description: "Mutable",
      InstanceProfileName: "Mutable",
      KmsKeyArn: "Mutable",
      NetworkType: "Mutable",
      AvailabilityZone: "Mutable",
      PubliclyAccessible: "Mutable",
      VpcSecurityGroups: "Mutable",
      Tags: "Mutable",
      InstanceProfileIdentifier: "Mutable",
    },
    MigrationProject: {
      TargetDataProviderDescriptors: "Mutable",
      MigrationProjectName: "Mutable",
      InstanceProfileName: "Mutable",
      Description: "Mutable",
      MigrationProjectIdentifier: "Mutable",
      SourceDataProviderDescriptors: "Mutable",
      TransformationRules: "Mutable",
      SchemaConversionApplicationAttributes: "Mutable",
      InstanceProfileArn: "Mutable",
      Tags: "Mutable",
      InstanceProfileIdentifier: "Mutable",
    },
    ReplicationConfig: {
      ReplicationSettings: "Mutable",
      ResourceIdentifier: "Immutable",
      ReplicationConfigIdentifier: "Mutable",
      ComputeConfig: "Mutable",
      ReplicationType: "Mutable",
      TableMappings: "Mutable",
      SourceEndpointArn: "Mutable",
      SupplementalSettings: "Mutable",
      TargetEndpointArn: "Mutable",
      Tags: "Mutable",
    },
    ReplicationInstance: {
      DnsNameServers: "Immutable",
      ReplicationInstanceIdentifier: "Mutable",
      EngineVersion: "Mutable",
      KmsKeyId: "Immutable",
      AvailabilityZone: "Mutable",
      PreferredMaintenanceWindow: "Mutable",
      AutoMinorVersionUpgrade: "Mutable",
      ReplicationSubnetGroupIdentifier: "Immutable",
      AllocatedStorage: "Mutable",
      ResourceIdentifier: "Immutable",
      VpcSecurityGroupIds: "Mutable",
      NetworkType: "Mutable",
      AllowMajorVersionUpgrade: "Mutable",
      ReplicationInstanceClass: "Mutable",
      PubliclyAccessible: "Immutable",
      MultiAZ: "Mutable",
      Tags: "Mutable",
    },
    ReplicationSubnetGroup: {
      ReplicationSubnetGroupDescription: "Mutable",
      ReplicationSubnetGroupIdentifier: "Immutable",
      SubnetIds: "Mutable",
      Tags: "Mutable",
    },
    ReplicationTask: {
      ReplicationTaskSettings: "Mutable",
      CdcStartPosition: "Mutable",
      CdcStopPosition: "Mutable",
      MigrationType: "Mutable",
      TargetEndpointArn: "Immutable",
      ReplicationInstanceArn: "Immutable",
      TaskData: "Mutable",
      CdcStartTime: "Mutable",
      ResourceIdentifier: "Immutable",
      TableMappings: "Mutable",
      ReplicationTaskIdentifier: "Mutable",
      SourceEndpointArn: "Immutable",
      Tags: "Mutable",
    },
  },
  DSQL: {
    Cluster: {
      KmsEncryptionKey: "Mutable",
      DeletionProtectionEnabled: "Mutable",
      Tags: "Mutable",
      MultiRegionProperties: "Mutable",
    },
  },
  DataBrew: {
    Dataset: {
      Input: "Mutable",
      Format: "Mutable",
      FormatOptions: "Mutable",
      Source: "Mutable",
      PathOptions: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Job: {
      MaxRetries: "Mutable",
      ProjectName: "Mutable",
      Recipe: "Mutable",
      EncryptionKeyArn: "Mutable",
      LogSubscription: "Mutable",
      Timeout: "Mutable",
      DatabaseOutputs: "Mutable",
      OutputLocation: "Mutable",
      RoleArn: "Mutable",
      Name: "Immutable",
      Type: "Immutable",
      DatasetName: "Mutable",
      ProfileConfiguration: "Mutable",
      Outputs: "Mutable",
      ValidationConfigurations: "Mutable",
      Tags: "Mutable",
      JobSample: "Mutable",
      EncryptionMode: "Mutable",
      MaxCapacity: "Mutable",
      DataCatalogOutputs: "Mutable",
    },
    Project: {
      RecipeName: "Mutable",
      DatasetName: "Mutable",
      Sample: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Recipe: {
      Steps: "Mutable",
      Description: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Ruleset: {
      Description: "Mutable",
      TargetArn: "Immutable",
      Rules: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Schedule: {
      JobNames: "Mutable",
      CronExpression: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  DataPipeline: {
    Pipeline: {
      PipelineTags: "Mutable",
      ParameterObjects: "Mutable",
      Description: "Immutable",
      Activate: "Mutable",
      PipelineObjects: "Mutable",
      ParameterValues: "Mutable",
      Name: "Immutable",
    },
  },
  DataSync: {
    Agent: {
      SubnetArns: "Immutable",
      AgentName: "Mutable",
      VpcEndpointId: "Immutable",
      ActivationKey: "Immutable",
      SecurityGroupArns: "Immutable",
      Tags: "Mutable",
    },
    LocationAzureBlob: {
      CmkSecretConfig: "Mutable",
      AzureAccessTier: "Mutable",
      Subdirectory: "Mutable",
      AzureBlobSasConfiguration: "Mutable",
      AzureBlobType: "Mutable",
      AzureBlobContainerUrl: "Immutable",
      CustomSecretConfig: "Mutable",
      AgentArns: "Mutable",
      Tags: "Mutable",
      AzureBlobAuthenticationType: "Mutable",
    },
    LocationEFS: {
      EfsFilesystemArn: "Immutable",
      Ec2Config: "Immutable",
      AccessPointArn: "Mutable",
      Subdirectory: "Mutable",
      InTransitEncryption: "Mutable",
      FileSystemAccessRoleArn: "Mutable",
      Tags: "Mutable",
    },
    LocationFSxLustre: {
      Subdirectory: "Mutable",
      FsxFilesystemArn: "Immutable",
      SecurityGroupArns: "Immutable",
      Tags: "Mutable",
    },
    LocationFSxONTAP: {
      StorageVirtualMachineArn: "Immutable",
      Subdirectory: "Mutable",
      Protocol: "Mutable",
      SecurityGroupArns: "Immutable",
      Tags: "Mutable",
    },
    LocationFSxOpenZFS: {
      Subdirectory: "Mutable",
      FsxFilesystemArn: "Immutable",
      Protocol: "Mutable",
      SecurityGroupArns: "Immutable",
      Tags: "Mutable",
    },
    LocationFSxWindows: {
      User: "Mutable",
      Subdirectory: "Mutable",
      FsxFilesystemArn: "Immutable",
      Domain: "Mutable",
      SecurityGroupArns: "Immutable",
      Tags: "Mutable",
      Password: "Mutable",
    },
    LocationHDFS: {
      KmsKeyProviderUri: "Mutable",
      QopConfiguration: "Mutable",
      KerberosPrincipal: "Mutable",
      SimpleUser: "Mutable",
      ReplicationFactor: "Mutable",
      KerberosKeytab: "Mutable",
      NameNodes: "Mutable",
      Subdirectory: "Mutable",
      KerberosKrb5Conf: "Mutable",
      BlockSize: "Mutable",
      Tags: "Mutable",
      AgentArns: "Mutable",
      AuthenticationType: "Mutable",
    },
    LocationNFS: {
      Subdirectory: "Mutable",
      ServerHostname: "Mutable",
      MountOptions: "Mutable",
      OnPremConfig: "Mutable",
      Tags: "Mutable",
    },
    LocationObjectStorage: {
      ServerCertificate: "Mutable",
      SecretKey: "Mutable",
      BucketName: "Immutable",
      CmkSecretConfig: "Mutable",
      Subdirectory: "Mutable",
      ServerHostname: "Mutable",
      AccessKey: "Mutable",
      CustomSecretConfig: "Mutable",
      ServerProtocol: "Mutable",
      AgentArns: "Mutable",
      ServerPort: "Mutable",
      Tags: "Mutable",
    },
    LocationS3: {
      S3StorageClass: "Mutable",
      S3Config: "Mutable",
      Subdirectory: "Mutable",
      S3BucketArn: "Immutable",
      Tags: "Mutable",
    },
    LocationSMB: {
      KerberosPrincipal: "Mutable",
      User: "Mutable",
      KerberosKeytab: "Mutable",
      Subdirectory: "Mutable",
      ServerHostname: "Mutable",
      KerberosKrb5Conf: "Mutable",
      Domain: "Mutable",
      DnsIpAddresses: "Mutable",
      MountOptions: "Mutable",
      AgentArns: "Mutable",
      Tags: "Mutable",
      Password: "Mutable",
      AuthenticationType: "Mutable",
    },
    Task: {
      Includes: "Mutable",
      DestinationLocationArn: "Immutable",
      Options: "Mutable",
      Schedule: "Mutable",
      CloudWatchLogGroupArn: "Mutable",
      SourceLocationArn: "Immutable",
      TaskReportConfig: "Mutable",
      Excludes: "Mutable",
      TaskMode: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
      ManifestConfig: "Mutable",
    },
  },
  DataZone: {
    Connection: {
      Description: "Mutable",
      EnvironmentIdentifier: "Immutable",
      Props: "Mutable",
      AwsLocation: "Mutable",
      Name: "Immutable",
      DomainIdentifier: "Immutable",
    },
    DataSource: {
      ProjectIdentifier: "Immutable",
      PublishOnImport: "Mutable",
      Description: "Mutable",
      EnvironmentIdentifier: "Immutable",
      Configuration: "Mutable",
      AssetFormsInput: "Mutable",
      Recommendation: "Mutable",
      Name: "Mutable",
      Type: "Immutable",
      EnableSetting: "Mutable",
      ConnectionIdentifier: "Immutable",
      Schedule: "Mutable",
      DomainIdentifier: "Immutable",
    },
    Domain: {
      DomainExecutionRole: "Mutable",
      KmsKeyIdentifier: "Immutable",
      Description: "Mutable",
      ServiceRole: "Mutable",
      DomainVersion: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
      SingleSignOn: "Mutable",
    },
    DomainUnit: {
      Description: "Mutable",
      ParentDomainUnitIdentifier: "Immutable",
      DomainIdentifier: "Immutable",
      Name: "Mutable",
    },
    Environment: {
      ProjectIdentifier: "Immutable",
      EnvironmentAccountRegion: "Immutable",
      UserParameters: "Immutable",
      EnvironmentRoleArn: "Mutable",
      Description: "Mutable",
      EnvironmentProfileIdentifier: "Immutable",
      GlossaryTerms: "Mutable",
      EnvironmentAccountIdentifier: "Immutable",
      Name: "Mutable",
      DomainIdentifier: "Immutable",
    },
    EnvironmentActions: {
      Description: "Mutable",
      EnvironmentIdentifier: "Immutable",
      Identifier: "Mutable",
      Parameters: "Mutable",
      DomainIdentifier: "Immutable",
      Name: "Mutable",
    },
    EnvironmentBlueprintConfiguration: {
      RegionalParameters: "Mutable",
      ProvisioningRoleArn: "Mutable",
      ProvisioningConfigurations: "Mutable",
      EnabledRegions: "Mutable",
      EnvironmentBlueprintIdentifier: "Immutable",
      DomainIdentifier: "Immutable",
      EnvironmentRolePermissionBoundary: "Mutable",
      ManageAccessRoleArn: "Mutable",
    },
    EnvironmentProfile: {
      ProjectIdentifier: "Immutable",
      UserParameters: "Mutable",
      Description: "Mutable",
      AwsAccountRegion: "Mutable",
      AwsAccountId: "Mutable",
      EnvironmentBlueprintIdentifier: "Immutable",
      Name: "Mutable",
      DomainIdentifier: "Immutable",
    },
    GroupProfile: {
      Status: "Mutable",
      DomainIdentifier: "Immutable",
      GroupIdentifier: "Immutable",
    },
    Owner: {
      EntityType: "Immutable",
      Owner: "Immutable",
      EntityIdentifier: "Immutable",
      DomainIdentifier: "Immutable",
    },
    PolicyGrant: {
      EntityType: "Immutable",
      PolicyType: "Immutable",
      EntityIdentifier: "Immutable",
      Detail: "Immutable",
      Principal: "Immutable",
      DomainIdentifier: "Immutable",
    },
    Project: {
      DomainUnitId: "Mutable",
      ProjectProfileId: "Immutable",
      UserParameters: "Mutable",
      Description: "Mutable",
      GlossaryTerms: "Mutable",
      ProjectProfileVersion: "Mutable",
      Name: "Mutable",
      DomainIdentifier: "Immutable",
    },
    ProjectMembership: {
      ProjectIdentifier: "Immutable",
      Designation: "Mutable",
      Member: "Immutable",
      DomainIdentifier: "Immutable",
    },
    ProjectProfile: {
      Status: "Mutable",
      EnvironmentConfigurations: "Mutable",
      Description: "Mutable",
      DomainUnitIdentifier: "Mutable",
      Name: "Mutable",
      DomainIdentifier: "Immutable",
    },
    SubscriptionTarget: {
      Type: "Immutable",
      EnvironmentIdentifier: "Immutable",
      ManageAccessRole: "Mutable",
      SubscriptionTargetConfig: "Mutable",
      ApplicableAssetTypes: "Mutable",
      AuthorizedPrincipals: "Mutable",
      Name: "Mutable",
      Provider: "Mutable",
      DomainIdentifier: "Immutable",
    },
    UserProfile: {
      Status: "Mutable",
      UserIdentifier: "Immutable",
      UserType: "Immutable",
      DomainIdentifier: "Immutable",
    },
  },
  Deadline: {
    Farm: {
      Description: "Mutable",
      KmsKeyArn: "Immutable",
      DisplayName: "Mutable",
      Tags: "Mutable",
    },
    Fleet: {
      Description: "Mutable",
      Configuration: "Mutable",
      HostConfiguration: "Mutable",
      MaxWorkerCount: "Mutable",
      DisplayName: "Mutable",
      MinWorkerCount: "Mutable",
      FarmId: "Immutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    LicenseEndpoint: {
      VpcId: "Immutable",
      SecurityGroupIds: "Immutable",
      SubnetIds: "Immutable",
      Tags: "Mutable",
    },
    Limit: {
      Description: "Mutable",
      AmountRequirementName: "Immutable",
      DisplayName: "Mutable",
      MaxCount: "Mutable",
      FarmId: "Immutable",
    },
    MeteredProduct: {
      LicenseEndpointId: "Immutable",
      ProductId: "Immutable",
    },
    Monitor: {
      IdentityCenterInstanceArn: "Immutable",
      Subdomain: "Mutable",
      DisplayName: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    Queue: {
      JobRunAsUser: "Mutable",
      AllowedStorageProfileIds: "Mutable",
      Description: "Mutable",
      JobAttachmentSettings: "Mutable",
      DefaultBudgetAction: "Mutable",
      DisplayName: "Mutable",
      RequiredFileSystemLocationNames: "Mutable",
      FarmId: "Immutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    QueueEnvironment: {
      Priority: "Mutable",
      QueueId: "Immutable",
      TemplateType: "Mutable",
      FarmId: "Immutable",
      Template: "Mutable",
    },
    QueueFleetAssociation: {
      FleetId: "Immutable",
      QueueId: "Immutable",
      FarmId: "Immutable",
    },
    QueueLimitAssociation: {
      LimitId: "Immutable",
      QueueId: "Immutable",
      FarmId: "Immutable",
    },
    StorageProfile: {
      DisplayName: "Mutable",
      FileSystemLocations: "Mutable",
      FarmId: "Immutable",
      OsFamily: "Mutable",
    },
  },
  Detective: {
    Graph: {
      AutoEnableMembers: "Mutable",
      Tags: "Mutable",
    },
    MemberInvitation: {
      MemberId: "Immutable",
      Message: "Mutable",
      GraphArn: "Immutable",
      DisableEmailNotification: "Mutable",
      MemberEmailAddress: "Mutable",
    },
    OrganizationAdmin: {
      AccountId: "Immutable",
    },
  },
  DevOpsGuru: {
    NotificationChannel: {
      Config: "Immutable",
    },
    ResourceCollection: {
      ResourceCollectionFilter: "Mutable",
    },
  },
  DirectoryService: {
    MicrosoftAD: {
      CreateAlias: "Immutable",
      Edition: "Immutable",
      EnableSso: "Mutable",
      Name: "Immutable",
      Password: "Immutable",
      ShortName: "Immutable",
      VpcSettings: "Immutable",
    },
    SimpleAD: {
      Description: "Immutable",
      VpcSettings: "Immutable",
      Size: "Immutable",
      CreateAlias: "Immutable",
      EnableSso: "Mutable",
      ShortName: "Immutable",
      Name: "Immutable",
      Password: "Immutable",
    },
  },
  DocDB: {
    DBCluster: {
      StorageEncrypted: "Immutable",
      RestoreToTime: "Mutable",
      SnapshotIdentifier: "Immutable",
      Port: "Mutable",
      DBClusterIdentifier: "Immutable",
      PreferredBackupWindow: "Mutable",
      RotateMasterUserPassword: "Mutable",
      VpcSecurityGroupIds: "Mutable",
      NetworkType: "Mutable",
      CopyTagsToSnapshot: "Mutable",
      GlobalClusterIdentifier: "Immutable",
      RestoreType: "Mutable",
      Tags: "Mutable",
      EngineVersion: "Mutable",
      StorageType: "Mutable",
      KmsKeyId: "Immutable",
      AvailabilityZones: "Immutable",
      ServerlessV2ScalingConfiguration: "Mutable",
      PreferredMaintenanceWindow: "Mutable",
      MasterUserSecretKmsKeyId: "Mutable",
      DBSubnetGroupName: "Immutable",
      DeletionProtection: "Mutable",
      UseLatestRestorableTime: "Mutable",
      ManageMasterUserPassword: "Mutable",
      MasterUserPassword: "Mutable",
      SourceDBClusterIdentifier: "Immutable",
      MasterUsername: "Immutable",
      DBClusterParameterGroupName: "Mutable",
      BackupRetentionPeriod: "Mutable",
      EnableCloudwatchLogsExports: "Mutable",
    },
    DBClusterParameterGroup: {
      Description: "Immutable",
      Parameters: "Mutable",
      Family: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    DBInstance: {
      CACertificateIdentifier: "Mutable",
      CertificateRotationRestart: "Mutable",
      DBInstanceClass: "Mutable",
      DBClusterIdentifier: "Immutable",
      AvailabilityZone: "Immutable",
      PreferredMaintenanceWindow: "Mutable",
      EnablePerformanceInsights: "Mutable",
      AutoMinorVersionUpgrade: "Mutable",
      DBInstanceIdentifier: "Immutable",
      Tags: "Mutable",
    },
    DBSubnetGroup: {
      DBSubnetGroupName: "Immutable",
      DBSubnetGroupDescription: "Mutable",
      SubnetIds: "Mutable",
      Tags: "Mutable",
    },
    EventSubscription: {
      SourceType: "Mutable",
      Enabled: "Mutable",
      EventCategories: "Mutable",
      SubscriptionName: "Immutable",
      SnsTopicArn: "Immutable",
      SourceIds: "Mutable",
    },
  },
  DocDBElastic: {
    Cluster: {
      AdminUserName: "Immutable",
      KmsKeyId: "Immutable",
      AdminUserPassword: "Mutable",
      PreferredMaintenanceWindow: "Mutable",
      ShardInstanceCount: "Mutable",
      SubnetIds: "Mutable",
      PreferredBackupWindow: "Mutable",
      ShardCount: "Mutable",
      ShardCapacity: "Mutable",
      VpcSecurityGroupIds: "Mutable",
      ClusterName: "Immutable",
      BackupRetentionPeriod: "Mutable",
      AuthType: "Immutable",
      Tags: "Mutable",
    },
  },
  DynamoDB: {
    GlobalTable: {
      MultiRegionConsistency: "Mutable",
      SSESpecification: "Mutable",
      StreamSpecification: "Mutable",
      GlobalTableSettingsReplicationMode: "Mutable",
      WarmThroughput: "Mutable",
      Replicas: "Mutable",
      WriteProvisionedThroughputSettings: "Mutable",
      GlobalTableSourceArn: "Immutable",
      WriteOnDemandThroughputSettings: "Mutable",
      GlobalTableWitnesses: "Mutable",
      TableName: "Immutable",
      AttributeDefinitions: "Mutable",
      BillingMode: "Mutable",
      GlobalSecondaryIndexes: "Mutable",
      KeySchema: "Immutable",
      LocalSecondaryIndexes: "Immutable",
      TimeToLiveSpecification: "Mutable",
    },
    Table: {
      OnDemandThroughput: "Mutable",
      SSESpecification: "Mutable",
      KinesisStreamSpecification: "Mutable",
      StreamSpecification: "Mutable",
      ContributorInsightsSpecification: "Mutable",
      ImportSourceSpecification: "Immutable",
      GlobalTableSettingsReplicationMode: "Mutable",
      PointInTimeRecoverySpecification: "Mutable",
      ProvisionedThroughput: "Mutable",
      WarmThroughput: "Mutable",
      TableName: "Immutable",
      AttributeDefinitions: "Mutable",
      GlobalSecondaryIndexes: "Mutable",
      BillingMode: "Mutable",
      ResourcePolicy: "Mutable",
      LocalSecondaryIndexes: "Mutable",
      KeySchema: "Immutable",
      DeletionProtectionEnabled: "Mutable",
      TableClass: "Mutable",
      Tags: "Mutable",
      TimeToLiveSpecification: "Mutable",
    },
  },
  EC2: {
    CapacityReservation: {
      Tenancy: "Immutable",
      EndDateType: "Mutable",
      TagSpecifications: "Immutable",
      UnusedReservationBillingOwnerId: "Mutable",
      AvailabilityZoneId: "Immutable",
      AvailabilityZone: "Immutable",
      EndDate: "Mutable",
      EbsOptimized: "Immutable",
      OutPostArn: "Immutable",
      InstanceCount: "Mutable",
      PlacementGroupArn: "Immutable",
      InstancePlatform: "Immutable",
      InstanceType: "Immutable",
      EphemeralStorage: "Immutable",
      InstanceMatchCriteria: "Mutable",
    },
    CapacityReservationFleet: {
      Tenancy: "Immutable",
      TotalTargetCapacity: "Mutable",
      AllocationStrategy: "Immutable",
      TagSpecifications: "Immutable",
      NoRemoveEndDate: "Mutable",
      InstanceTypeSpecifications: "Immutable",
      RemoveEndDate: "Mutable",
      InstanceMatchCriteria: "Immutable",
      EndDate: "Immutable",
    },
    CarrierGateway: {
      VpcId: "Immutable",
      Tags: "Mutable",
    },
    ClientVpnAuthorizationRule: {
      ClientVpnEndpointId: "Immutable",
      Description: "Immutable",
      AccessGroupId: "Immutable",
      TargetNetworkCidr: "Immutable",
      AuthorizeAllGroups: "Immutable",
    },
    ClientVpnEndpoint: {
      ClientCidrBlock: "Immutable",
      ClientConnectOptions: "Mutable",
      Description: "Mutable",
      ClientRouteEnforcementOptions: "Mutable",
      TagSpecifications: "Immutable",
      AuthenticationOptions: "Immutable",
      ServerCertificateArn: "Mutable",
      SessionTimeoutHours: "Mutable",
      DnsServers: "Mutable",
      SecurityGroupIds: "Mutable",
      DisconnectOnSessionTimeout: "Mutable",
      ConnectionLogOptions: "Mutable",
      SplitTunnel: "Mutable",
      ClientLoginBannerOptions: "Mutable",
      VpcId: "Mutable",
      SelfServicePortal: "Mutable",
      TransportProtocol: "Immutable",
      VpnPort: "Mutable",
    },
    ClientVpnRoute: {
      ClientVpnEndpointId: "Immutable",
      TargetVpcSubnetId: "Immutable",
      Description: "Immutable",
      DestinationCidrBlock: "Immutable",
    },
    ClientVpnTargetNetworkAssociation: {
      ClientVpnEndpointId: "Immutable",
      SubnetId: "Immutable",
    },
    CustomerGateway: {
      Type: "Immutable",
      IpAddress: "Immutable",
      BgpAsnExtended: "Immutable",
      BgpAsn: "Immutable",
      Tags: "Mutable",
      CertificateArn: "Immutable",
      DeviceName: "Immutable",
    },
    DHCPOptions: {
      NetbiosNameServers: "Immutable",
      NtpServers: "Immutable",
      DomainName: "Immutable",
      Ipv6AddressPreferredLeaseTime: "Immutable",
      NetbiosNodeType: "Immutable",
      DomainNameServers: "Immutable",
      Tags: "Mutable",
    },
    EC2Fleet: {
      Context: "Mutable",
      TargetCapacitySpecification: "Mutable",
      OnDemandOptions: "Immutable",
      Type: "Immutable",
      ExcessCapacityTerminationPolicy: "Mutable",
      TagSpecifications: "Immutable",
      SpotOptions: "Immutable",
      ValidFrom: "Immutable",
      ReplaceUnhealthyInstances: "Immutable",
      LaunchTemplateConfigs: "Immutable",
      TerminateInstancesWithExpiration: "Immutable",
      ValidUntil: "Immutable",
    },
    EIP: {
      Address: "Immutable",
      InstanceId: "Mutable",
      IpamPoolId: "Immutable",
      PublicIpv4Pool: "Mutable",
      TransferAddress: "Immutable",
      Domain: "Mutable",
      Tags: "Mutable",
      NetworkBorderGroup: "Immutable",
    },
    EIPAssociation: {
      PrivateIpAddress: "Immutable",
      InstanceId: "Immutable",
      AllocationId: "Immutable",
      NetworkInterfaceId: "Immutable",
    },
    EgressOnlyInternetGateway: {
      VpcId: "Immutable",
      Tags: "Mutable",
    },
    EnclaveCertificateIamRoleAssociation: {
      RoleArn: "Immutable",
      CertificateArn: "Immutable",
    },
    FlowLog: {
      LogFormat: "Immutable",
      ResourceId: "Immutable",
      MaxAggregationInterval: "Immutable",
      DestinationOptions: "Immutable",
      ResourceType: "Immutable",
      DeliverCrossAccountRole: "Immutable",
      LogDestination: "Immutable",
      LogGroupName: "Immutable",
      DeliverLogsPermissionArn: "Immutable",
      LogDestinationType: "Immutable",
      Tags: "Mutable",
      TrafficType: "Immutable",
    },
    GatewayRouteTableAssociation: {
      RouteTableId: "Mutable",
      GatewayId: "Immutable",
    },
    Host: {
      HostRecovery: "Mutable",
      InstanceFamily: "Immutable",
      AutoPlacement: "Mutable",
      OutpostArn: "Immutable",
      HostMaintenance: "Mutable",
      AvailabilityZone: "Immutable",
      InstanceType: "Immutable",
      AssetId: "Immutable",
      Tags: "Mutable",
    },
    IPAM: {
      DefaultResourceDiscoveryOrganizationalUnitExclusions: "Mutable",
      Description: "Mutable",
      MeteredAccount: "Mutable",
      Tier: "Mutable",
      EnablePrivateGua: "Mutable",
      Tags: "Mutable",
      OperatingRegions: "Mutable",
    },
    IPAMAllocation: {
      Description: "Immutable",
      Cidr: "Immutable",
      NetmaskLength: "Immutable",
      IpamPoolId: "Immutable",
    },
    IPAMPool: {
      AwsService: "Immutable",
      Locale: "Immutable",
      PublicIpSource: "Immutable",
      Description: "Mutable",
      SourceResource: "Immutable",
      SourceIpamPoolId: "Immutable",
      AllocationMinNetmaskLength: "Mutable",
      IpamScopeId: "Immutable",
      ProvisionedCidrs: "Mutable",
      AllocationMaxNetmaskLength: "Mutable",
      AllocationDefaultNetmaskLength: "Mutable",
      AutoImport: "Mutable",
      AddressFamily: "Immutable",
      AllocationResourceTags: "Mutable",
      PubliclyAdvertisable: "Immutable",
      Tags: "Mutable",
    },
    IPAMPoolCidr: {
      Cidr: "Immutable",
      NetmaskLength: "Immutable",
      IpamPoolId: "Immutable",
    },
    IPAMResourceDiscovery: {
      OrganizationalUnitExclusions: "Mutable",
      Description: "Mutable",
      Tags: "Mutable",
      OperatingRegions: "Mutable",
    },
    IPAMResourceDiscoveryAssociation: {
      IpamId: "Immutable",
      Tags: "Mutable",
      IpamResourceDiscoveryId: "Immutable",
    },
    IPAMScope: {
      Description: "Mutable",
      IpamId: "Immutable",
      Tags: "Mutable",
    },
    Instance: {
      Tenancy: "Conditional",
      SecurityGroups: "Immutable",
      PrivateIpAddress: "Immutable",
      UserData: "Conditional",
      BlockDeviceMappings: "Conditional",
      IamInstanceProfile: "Mutable",
      Ipv6Addresses: "Immutable",
      KernelId: "Conditional",
      SubnetId: "Immutable",
      EbsOptimized: "Conditional",
      PropagateTagsToVolumeOnCreation: "Mutable",
      ElasticGpuSpecifications: "Immutable",
      ElasticInferenceAccelerators: "Immutable",
      Volumes: "Mutable",
      Ipv6AddressCount: "Immutable",
      LaunchTemplate: "Immutable",
      EnclaveOptions: "Immutable",
      NetworkInterfaces: "Immutable",
      ImageId: "Immutable",
      InstanceType: "Conditional",
      Tags: "Mutable",
      Monitoring: "Mutable",
      AdditionalInfo: "Conditional",
      HibernationOptions: "Immutable",
      LicenseSpecifications: "Immutable",
      MetadataOptions: "Mutable",
      InstanceInitiatedShutdownBehavior: "Mutable",
      CpuOptions: "Immutable",
      AvailabilityZone: "Immutable",
      PrivateDnsNameOptions: "Conditional",
      HostId: "Conditional",
      HostResourceGroupArn: "Immutable",
      SecurityGroupIds: "Conditional",
      DisableApiTermination: "Mutable",
      KeyName: "Immutable",
      RamdiskId: "Conditional",
      SourceDestCheck: "Mutable",
      PlacementGroupName: "Immutable",
      SsmAssociations: "Mutable",
      Affinity: "Conditional",
      CreditSpecification: "Mutable",
    },
    InstanceConnectEndpoint: {
      PreserveClientIp: "Immutable",
      SubnetId: "Immutable",
      ClientToken: "Immutable",
      SecurityGroupIds: "Immutable",
      Tags: "Mutable",
    },
    InternetGateway: {
      Tags: "Mutable",
    },
    IpPoolRouteTableAssociation: {
      RouteTableId: "Immutable",
      PublicIpv4Pool: "Immutable",
    },
    KeyPair: {
      KeyName: "Immutable",
      KeyType: "Immutable",
      KeyFormat: "Immutable",
      PublicKeyMaterial: "Immutable",
      Tags: "Immutable",
    },
    LaunchTemplate: {
      LaunchTemplateName: "Immutable",
      LaunchTemplateData: "Mutable",
      VersionDescription: "Mutable",
      TagSpecifications: "Mutable",
    },
    LocalGatewayRoute: {
      LocalGatewayRouteTableId: "Immutable",
      DestinationCidrBlock: "Immutable",
      NetworkInterfaceId: "Mutable",
      LocalGatewayVirtualInterfaceGroupId: "Mutable",
    },
    LocalGatewayRouteTable: {
      LocalGatewayId: "Immutable",
      Mode: "Immutable",
      Tags: "Mutable",
    },
    LocalGatewayRouteTableVPCAssociation: {
      VpcId: "Immutable",
      LocalGatewayRouteTableId: "Immutable",
      Tags: "Mutable",
    },
    LocalGatewayRouteTableVirtualInterfaceGroupAssociation: {
      LocalGatewayRouteTableId: "Immutable",
      Tags: "Mutable",
      LocalGatewayVirtualInterfaceGroupId: "Immutable",
    },
    NatGateway: {
      SecondaryAllocationIds: "Mutable",
      PrivateIpAddress: "Immutable",
      SecondaryPrivateIpAddressCount: "Mutable",
      ConnectivityType: "Immutable",
      SecondaryPrivateIpAddresses: "Mutable",
      AllocationId: "Immutable",
      SubnetId: "Immutable",
      Tags: "Mutable",
      MaxDrainDurationSeconds: "Mutable",
    },
    NetworkAcl: {
      VpcId: "Immutable",
      Tags: "Mutable",
    },
    NetworkAclEntry: {
      PortRange: "Mutable",
      NetworkAclId: "Immutable",
      RuleAction: "Mutable",
      CidrBlock: "Mutable",
      Egress: "Immutable",
      RuleNumber: "Immutable",
      Ipv6CidrBlock: "Mutable",
      Protocol: "Mutable",
      Icmp: "Mutable",
    },
    NetworkInsightsAccessScope: {
      ExcludePaths: "Immutable",
      MatchPaths: "Immutable",
      Tags: "Mutable",
    },
    NetworkInsightsAccessScopeAnalysis: {
      NetworkInsightsAccessScopeId: "Immutable",
      Tags: "Mutable",
    },
    NetworkInsightsAnalysis: {
      FilterOutArns: "Immutable",
      NetworkInsightsPathId: "Immutable",
      FilterInArns: "Immutable",
      AdditionalAccounts: "Mutable",
      Tags: "Mutable",
    },
    NetworkInsightsPath: {
      Destination: "Immutable",
      DestinationIp: "Immutable",
      SourceIp: "Immutable",
      FilterAtDestination: "Immutable",
      FilterAtSource: "Immutable",
      Protocol: "Immutable",
      DestinationPort: "Immutable",
      Source: "Immutable",
      Tags: "Mutable",
    },
    NetworkInterface: {
      Description: "Mutable",
      PrivateIpAddress: "Immutable",
      PrivateIpAddresses: "Conditional",
      SecondaryPrivateIpAddressCount: "Mutable",
      Ipv6PrefixCount: "Mutable",
      Ipv4Prefixes: "Mutable",
      Ipv4PrefixCount: "Mutable",
      GroupSet: "Mutable",
      Ipv6Addresses: "Mutable",
      Ipv6Prefixes: "Mutable",
      SubnetId: "Immutable",
      SourceDestCheck: "Mutable",
      InterfaceType: "Immutable",
      Ipv6AddressCount: "Mutable",
      Tags: "Mutable",
      ConnectionTrackingSpecification: "Conditional",
    },
    NetworkInterfaceAttachment: {
      EnaSrdSpecification: "Mutable",
      InstanceId: "Immutable",
      DeviceIndex: "Immutable",
      NetworkInterfaceId: "Immutable",
      DeleteOnTermination: "Mutable",
    },
    NetworkInterfacePermission: {
      AwsAccountId: "Immutable",
      NetworkInterfaceId: "Immutable",
      Permission: "Immutable",
    },
    NetworkPerformanceMetricSubscription: {
      Destination: "Immutable",
      Statistic: "Immutable",
      Metric: "Immutable",
      Source: "Immutable",
    },
    PlacementGroup: {
      SpreadLevel: "Immutable",
      Strategy: "Immutable",
      PartitionCount: "Immutable",
      Tags: "Immutable",
    },
    PrefixList: {
      MaxEntries: "Mutable",
      PrefixListName: "Mutable",
      Entries: "Mutable",
      AddressFamily: "Mutable",
      Tags: "Mutable",
    },
    Route: {
      DestinationIpv6CidrBlock: "Immutable",
      RouteTableId: "Immutable",
      InstanceId: "Mutable",
      LocalGatewayId: "Mutable",
      CarrierGatewayId: "Mutable",
      DestinationCidrBlock: "Immutable",
      GatewayId: "Mutable",
      NetworkInterfaceId: "Mutable",
      VpcEndpointId: "Mutable",
      CoreNetworkArn: "Mutable",
      TransitGatewayId: "Mutable",
      VpcPeeringConnectionId: "Mutable",
      EgressOnlyInternetGatewayId: "Mutable",
      DestinationPrefixListId: "Immutable",
      NatGatewayId: "Mutable",
    },
    RouteServer: {
      PersistRoutes: "Mutable",
      SnsNotificationsEnabled: "Mutable",
      PersistRoutesDuration: "Mutable",
      AmazonSideAsn: "Immutable",
      Tags: "Mutable",
    },
    RouteServerAssociation: {
      VpcId: "Immutable",
      RouteServerId: "Immutable",
    },
    RouteServerEndpoint: {
      SubnetId: "Immutable",
      RouteServerId: "Immutable",
      Tags: "Mutable",
    },
    RouteServerPeer: {
      PeerAddress: "Immutable",
      BgpOptions: "Immutable",
      RouteServerEndpointId: "Immutable",
      Tags: "Mutable",
    },
    RouteServerPropagation: {
      RouteTableId: "Immutable",
      RouteServerId: "Immutable",
    },
    RouteTable: {
      VpcId: "Immutable",
      Tags: "Mutable",
    },
    SecurityGroup: {
      GroupDescription: "Immutable",
      GroupName: "Immutable",
      VpcId: "Immutable",
      SecurityGroupIngress: "Mutable",
      SecurityGroupEgress: "Mutable",
      Tags: "Mutable",
    },
    SecurityGroupEgress: {
      CidrIp: "Immutable",
      CidrIpv6: "Immutable",
      Description: "Mutable",
      FromPort: "Immutable",
      ToPort: "Immutable",
      IpProtocol: "Immutable",
      DestinationSecurityGroupId: "Immutable",
      DestinationPrefixListId: "Immutable",
      GroupId: "Immutable",
    },
    SecurityGroupIngress: {
      GroupName: "Immutable",
      CidrIp: "Immutable",
      CidrIpv6: "Immutable",
      Description: "Mutable",
      FromPort: "Immutable",
      SourceSecurityGroupName: "Immutable",
      ToPort: "Immutable",
      SourceSecurityGroupOwnerId: "Immutable",
      IpProtocol: "Immutable",
      SourceSecurityGroupId: "Immutable",
      SourcePrefixListId: "Immutable",
      GroupId: "Immutable",
    },
    SecurityGroupVpcAssociation: {
      VpcId: "Immutable",
      GroupId: "Immutable",
    },
    SnapshotBlockPublicAccess: {
      State: "Mutable",
    },
    SpotFleet: {
      SpotFleetRequestConfigData: "Mutable",
    },
    Subnet: {
      MapPublicIpOnLaunch: "Mutable",
      EnableDns64: "Mutable",
      AvailabilityZoneId: "Immutable",
      OutpostArn: "Immutable",
      AvailabilityZone: "Immutable",
      CidrBlock: "Immutable",
      EnableLniAtDeviceIndex: "Mutable",
      Ipv6NetmaskLength: "Immutable",
      Ipv6IpamPoolId: "Immutable",
      AssignIpv6AddressOnCreation: "Mutable",
      VpcId: "Immutable",
      Ipv4NetmaskLength: "Immutable",
      PrivateDnsNameOptionsOnLaunch: "Mutable",
      Ipv4IpamPoolId: "Immutable",
      Ipv6Native: "Immutable",
      Ipv6CidrBlock: "Conditional",
      Tags: "Mutable",
    },
    SubnetCidrBlock: {
      Ipv6NetmaskLength: "Immutable",
      Ipv6IpamPoolId: "Immutable",
      SubnetId: "Immutable",
      Ipv6CidrBlock: "Immutable",
    },
    SubnetNetworkAclAssociation: {
      NetworkAclId: "Immutable",
      SubnetId: "Immutable",
    },
    SubnetRouteTableAssociation: {
      RouteTableId: "Immutable",
      SubnetId: "Immutable",
    },
    TrafficMirrorFilter: {
      Description: "Immutable",
      NetworkServices: "Mutable",
      Tags: "Mutable",
    },
    TrafficMirrorFilterRule: {
      DestinationPortRange: "Mutable",
      Description: "Mutable",
      SourcePortRange: "Mutable",
      RuleAction: "Mutable",
      SourceCidrBlock: "Mutable",
      RuleNumber: "Mutable",
      DestinationCidrBlock: "Mutable",
      TrafficMirrorFilterId: "Immutable",
      TrafficDirection: "Mutable",
      Protocol: "Mutable",
      Tags: "Mutable",
    },
    TrafficMirrorSession: {
      TrafficMirrorTargetId: "Mutable",
      Description: "Mutable",
      OwnerId: "Mutable",
      SessionNumber: "Mutable",
      VirtualNetworkId: "Mutable",
      PacketLength: "Mutable",
      NetworkInterfaceId: "Mutable",
      TrafficMirrorFilterId: "Mutable",
      Tags: "Mutable",
    },
    TrafficMirrorTarget: {
      NetworkLoadBalancerArn: "Immutable",
      Description: "Immutable",
      NetworkInterfaceId: "Immutable",
      GatewayLoadBalancerEndpointId: "Immutable",
      Tags: "Mutable",
    },
    TransitGateway: {
      Description: "Mutable",
      AssociationDefaultRouteTableId: "Mutable",
      AutoAcceptSharedAttachments: "Mutable",
      DefaultRouteTablePropagation: "Mutable",
      TransitGatewayCidrBlocks: "Mutable",
      PropagationDefaultRouteTableId: "Mutable",
      DefaultRouteTableAssociation: "Mutable",
      VpnEcmpSupport: "Mutable",
      SecurityGroupReferencingSupport: "Mutable",
      DnsSupport: "Mutable",
      MulticastSupport: "Immutable",
      AmazonSideAsn: "Immutable",
      Tags: "Mutable",
    },
    TransitGatewayAttachment: {
      Options: "Mutable",
      TransitGatewayId: "Immutable",
      VpcId: "Immutable",
      SubnetIds: "Mutable",
      Tags: "Mutable",
    },
    TransitGatewayConnect: {
      Options: "Immutable",
      TransportTransitGatewayAttachmentId: "Immutable",
      Tags: "Mutable",
    },
    TransitGatewayConnectPeer: {
      ConnectPeerConfiguration: "Immutable",
      Tags: "Mutable",
      TransitGatewayAttachmentId: "Immutable",
    },
    TransitGatewayMulticastDomain: {
      Options: "Mutable",
      TransitGatewayId: "Immutable",
      Tags: "Mutable",
    },
    TransitGatewayMulticastDomainAssociation: {
      TransitGatewayMulticastDomainId: "Immutable",
      SubnetId: "Immutable",
      TransitGatewayAttachmentId: "Immutable",
    },
    TransitGatewayMulticastGroupMember: {
      TransitGatewayMulticastDomainId: "Immutable",
      NetworkInterfaceId: "Immutable",
      GroupIpAddress: "Immutable",
    },
    TransitGatewayMulticastGroupSource: {
      TransitGatewayMulticastDomainId: "Immutable",
      NetworkInterfaceId: "Immutable",
      GroupIpAddress: "Immutable",
    },
    TransitGatewayPeeringAttachment: {
      TransitGatewayId: "Immutable",
      PeerTransitGatewayId: "Immutable",
      PeerAccountId: "Immutable",
      PeerRegion: "Immutable",
      Tags: "Mutable",
    },
    TransitGatewayRoute: {
      TransitGatewayRouteTableId: "Immutable",
      DestinationCidrBlock: "Immutable",
      Blackhole: "Immutable",
      TransitGatewayAttachmentId: "Immutable",
    },
    TransitGatewayRouteTable: {
      TransitGatewayId: "Immutable",
      Tags: "Mutable",
    },
    TransitGatewayRouteTableAssociation: {
      TransitGatewayRouteTableId: "Immutable",
      TransitGatewayAttachmentId: "Immutable",
    },
    TransitGatewayRouteTablePropagation: {
      TransitGatewayRouteTableId: "Immutable",
      TransitGatewayAttachmentId: "Immutable",
    },
    TransitGatewayVpcAttachment: {
      Options: "Mutable",
      TransitGatewayId: "Immutable",
      VpcId: "Immutable",
      RemoveSubnetIds: "Mutable",
      SubnetIds: "Immutable",
      AddSubnetIds: "Mutable",
      Tags: "Mutable",
    },
    VPC: {
      InstanceTenancy: "Conditional",
      Ipv4NetmaskLength: "Immutable",
      CidrBlock: "Immutable",
      Ipv4IpamPoolId: "Immutable",
      EnableDnsSupport: "Mutable",
      EnableDnsHostnames: "Mutable",
      Tags: "Mutable",
    },
    VPCBlockPublicAccessExclusion: {
      InternetGatewayExclusionMode: "Mutable",
      VpcId: "Immutable",
      SubnetId: "Immutable",
      Tags: "Mutable",
    },
    VPCBlockPublicAccessOptions: {
      InternetGatewayBlockMode: "Mutable",
    },
    VPCCidrBlock: {
      Ipv6NetmaskLength: "Immutable",
      Ipv6IpamPoolId: "Immutable",
      VpcId: "Immutable",
      Ipv4NetmaskLength: "Immutable",
      Ipv6CidrBlockNetworkBorderGroup: "Immutable",
      CidrBlock: "Immutable",
      Ipv6Pool: "Immutable",
      Ipv4IpamPoolId: "Immutable",
      Ipv6CidrBlock: "Immutable",
      AmazonProvidedIpv6CidrBlock: "Immutable",
    },
    VPCDHCPOptionsAssociation: {
      VpcId: "Immutable",
      DhcpOptionsId: "Immutable",
    },
    VPCEndpoint: {
      PrivateDnsEnabled: "Mutable",
      IpAddressType: "Mutable",
      ServiceRegion: "Immutable",
      DnsOptions: "Mutable",
      ResourceConfigurationArn: "Immutable",
      SecurityGroupIds: "Mutable",
      SubnetIds: "Mutable",
      ServiceNetworkArn: "Immutable",
      VpcId: "Immutable",
      RouteTableIds: "Mutable",
      ServiceName: "Immutable",
      PolicyDocument: "Mutable",
      VpcEndpointType: "Immutable",
      Tags: "Mutable",
    },
    VPCEndpointConnectionNotification: {
      ConnectionEvents: "Mutable",
      VPCEndpointId: "Immutable",
      ConnectionNotificationArn: "Mutable",
      ServiceId: "Immutable",
    },
    VPCEndpointService: {
      NetworkLoadBalancerArns: "Mutable",
      PayerResponsibility: "Mutable",
      AcceptanceRequired: "Mutable",
      ContributorInsightsEnabled: "Mutable",
      SupportedIpAddressTypes: "Mutable",
      GatewayLoadBalancerArns: "Mutable",
      SupportedRegions: "Mutable",
      Tags: "Mutable",
    },
    VPCEndpointServicePermissions: {
      AllowedPrincipals: "Mutable",
      ServiceId: "Immutable",
    },
    VPCGatewayAttachment: {
      InternetGatewayId: "Mutable",
      VpcId: "Immutable",
      VpnGatewayId: "Mutable",
    },
    VPCPeeringConnection: {
      PeerRoleArn: "Immutable",
      VpcId: "Immutable",
      PeerVpcId: "Immutable",
      PeerRegion: "Immutable",
      PeerOwnerId: "Immutable",
      Tags: "Mutable",
    },
    VPNConnection: {
      RemoteIpv6NetworkCidr: "Immutable",
      RemoteIpv4NetworkCidr: "Immutable",
      VpnTunnelOptionsSpecifications: "Immutable",
      CustomerGatewayId: "Immutable",
      OutsideIpAddressType: "Immutable",
      StaticRoutesOnly: "Immutable",
      EnableAcceleration: "Immutable",
      TransitGatewayId: "Immutable",
      Type: "Immutable",
      LocalIpv4NetworkCidr: "Immutable",
      VpnGatewayId: "Immutable",
      PreSharedKeyStorage: "Immutable",
      TransportTransitGatewayAttachmentId: "Immutable",
      LocalIpv6NetworkCidr: "Immutable",
      TunnelInsideIpVersion: "Immutable",
      Tags: "Mutable",
    },
    VPNConnectionRoute: {
      DestinationCidrBlock: "Immutable",
      VpnConnectionId: "Immutable",
    },
    VPNGateway: {
      Type: "Immutable",
      AmazonSideAsn: "Immutable",
      Tags: "Mutable",
    },
    VPNGatewayRoutePropagation: {
      RouteTableIds: "Mutable",
      VpnGatewayId: "Mutable",
    },
    VerifiedAccessEndpoint: {
      AttachmentType: "Immutable",
      Description: "Mutable",
      DomainCertificateArn: "Immutable",
      VerifiedAccessGroupId: "Mutable",
      SecurityGroupIds: "Immutable",
      LoadBalancerOptions: "Mutable",
      ApplicationDomain: "Immutable",
      PolicyEnabled: "Mutable",
      CidrOptions: "Mutable",
      EndpointDomainPrefix: "Immutable",
      EndpointType: "Immutable",
      PolicyDocument: "Mutable",
      RdsOptions: "Mutable",
      SseSpecification: "Mutable",
      Tags: "Mutable",
      NetworkInterfaceOptions: "Mutable",
    },
    VerifiedAccessGroup: {
      Description: "Mutable",
      PolicyDocument: "Mutable",
      SseSpecification: "Mutable",
      VerifiedAccessInstanceId: "Mutable",
      Tags: "Mutable",
      PolicyEnabled: "Mutable",
    },
    VerifiedAccessInstance: {
      VerifiedAccessTrustProviders: "Mutable",
      Description: "Mutable",
      FipsEnabled: "Mutable",
      LoggingConfigurations: "Mutable",
      CidrEndpointsCustomSubDomain: "Mutable",
      VerifiedAccessTrustProviderIds: "Mutable",
      Tags: "Mutable",
    },
    VerifiedAccessTrustProvider: {
      PolicyReferenceName: "Immutable",
      DeviceOptions: "Immutable",
      NativeApplicationOidcOptions: "Mutable",
      DeviceTrustProviderType: "Immutable",
      Description: "Mutable",
      OidcOptions: "Mutable",
      TrustProviderType: "Immutable",
      SseSpecification: "Mutable",
      UserTrustProviderType: "Immutable",
      Tags: "Mutable",
    },
    Volume: {
      MultiAttachEnabled: "Mutable",
      KmsKeyId: "Mutable",
      Encrypted: "Mutable",
      Size: "Mutable",
      AutoEnableIO: "Mutable",
      OutpostArn: "Mutable",
      AvailabilityZone: "Mutable",
      Throughput: "Mutable",
      Iops: "Mutable",
      VolumeInitializationRate: "Mutable",
      SnapshotId: "Mutable",
      VolumeType: "Mutable",
      Tags: "Mutable",
    },
    VolumeAttachment: {
      VolumeId: "Immutable",
      InstanceId: "Immutable",
      Device: "Immutable",
    },
  },
  ECR: {
    PublicRepository: {
      RepositoryPolicyText: "Mutable",
      RepositoryName: "Immutable",
      RepositoryCatalogData: "Mutable",
      Tags: "Mutable",
    },
    PullThroughCacheRule: {
      UpstreamRegistryUrl: "Immutable",
      CustomRoleArn: "Immutable",
      UpstreamRepositoryPrefix: "Immutable",
      UpstreamRegistry: "Immutable",
      CredentialArn: "Immutable",
      EcrRepositoryPrefix: "Immutable",
    },
    RegistryPolicy: {
      PolicyText: "Mutable",
    },
    RegistryScanningConfiguration: {
      ScanType: "Mutable",
      Rules: "Mutable",
    },
    ReplicationConfiguration: {
      ReplicationConfiguration: "Mutable",
    },
    Repository: {
      EmptyOnDelete: "Mutable",
      ImageScanningConfiguration: "Mutable",
      ImageTagMutabilityExclusionFilters: "Mutable",
      EncryptionConfiguration: "Immutable",
      RepositoryPolicyText: "Mutable",
      LifecyclePolicy: "Mutable",
      RepositoryName: "Immutable",
      Tags: "Mutable",
      ImageTagMutability: "Mutable",
    },
    RepositoryCreationTemplate: {
      ImageTagMutabilityExclusionFilters: "Mutable",
      CustomRoleArn: "Mutable",
      Description: "Mutable",
      EncryptionConfiguration: "Mutable",
      ResourceTags: "Mutable",
      RepositoryPolicy: "Mutable",
      LifecyclePolicy: "Mutable",
      AppliedFor: "Mutable",
      Prefix: "Immutable",
      ImageTagMutability: "Mutable",
    },
  },
  ECS: {
    CapacityProvider: {
      AutoScalingGroupProvider: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Cluster: {
      ClusterSettings: "Mutable",
      DefaultCapacityProviderStrategy: "Mutable",
      Configuration: "Mutable",
      ServiceConnectDefaults: "Mutable",
      CapacityProviders: "Mutable",
      ClusterName: "Immutable",
      Tags: "Mutable",
    },
    ClusterCapacityProviderAssociations: {
      DefaultCapacityProviderStrategy: "Mutable",
      CapacityProviders: "Mutable",
      Cluster: "Immutable",
    },
    PrimaryTaskSet: {
      TaskSetId: "Mutable",
      Cluster: "Immutable",
      Service: "Immutable",
    },
    Service: {
      PlatformVersion: "Mutable",
      PropagateTags: "Mutable",
      PlacementStrategies: "Mutable",
      ServiceRegistries: "Mutable",
      VolumeConfigurations: "Mutable",
      CapacityProviderStrategy: "Mutable",
      LaunchType: "Immutable",
      AvailabilityZoneRebalancing: "Mutable",
      SchedulingStrategy: "Immutable",
      NetworkConfiguration: "Mutable",
      Tags: "Mutable",
      ForceNewDeployment: "Mutable",
      HealthCheckGracePeriodSeconds: "Mutable",
      EnableECSManagedTags: "Mutable",
      EnableExecuteCommand: "Mutable",
      PlacementConstraints: "Mutable",
      Cluster: "Immutable",
      LoadBalancers: "Mutable",
      ServiceConnectConfiguration: "Mutable",
      DesiredCount: "Mutable",
      VpcLatticeConfigurations: "Mutable",
      DeploymentController: "Mutable",
      Role: "Immutable",
      TaskDefinition: "Mutable",
      ServiceName: "Immutable",
      DeploymentConfiguration: "Mutable",
    },
    TaskDefinition: {
      TaskRoleArn: "Immutable",
      IpcMode: "Immutable",
      Memory: "Immutable",
      PlacementConstraints: "Immutable",
      Cpu: "Immutable",
      RequiresCompatibilities: "Immutable",
      NetworkMode: "Immutable",
      PidMode: "Immutable",
      EnableFaultInjection: "Immutable",
      ExecutionRoleArn: "Immutable",
      RuntimePlatform: "Immutable",
      ProxyConfiguration: "Immutable",
      Volumes: "Immutable",
      ContainerDefinitions: "Immutable",
      Family: "Immutable",
      EphemeralStorage: "Immutable",
      Tags: "Mutable",
    },
    TaskSet: {
      PlatformVersion: "Immutable",
      TaskDefinition: "Immutable",
      ExternalId: "Immutable",
      Cluster: "Immutable",
      LoadBalancers: "Immutable",
      Service: "Immutable",
      Scale: "Mutable",
      NetworkConfiguration: "Immutable",
      ServiceRegistries: "Immutable",
      CapacityProviderStrategy: "Immutable",
      LaunchType: "Immutable",
      Tags: "Mutable",
    },
  },
  EFS: {
    AccessPoint: {
      FileSystemId: "Immutable",
      RootDirectory: "Immutable",
      ClientToken: "Immutable",
      AccessPointTags: "Mutable",
      PosixUser: "Immutable",
    },
    FileSystem: {
      KmsKeyId: "Immutable",
      PerformanceMode: "Immutable",
      Encrypted: "Immutable",
      BypassPolicyLockoutSafetyCheck: "Mutable",
      FileSystemProtection: "Mutable",
      LifecyclePolicies: "Mutable",
      ThroughputMode: "Mutable",
      FileSystemTags: "Mutable",
      ProvisionedThroughputInMibps: "Mutable",
      FileSystemPolicy: "Mutable",
      AvailabilityZoneName: "Immutable",
      ReplicationConfiguration: "Mutable",
      BackupPolicy: "Mutable",
    },
    MountTarget: {
      IpAddressType: "Immutable",
      SecurityGroups: "Mutable",
      FileSystemId: "Immutable",
      IpAddress: "Immutable",
      SubnetId: "Immutable",
      Ipv6Address: "Immutable",
    },
  },
  EKS: {
    AccessEntry: {
      Type: "Immutable",
      PrincipalArn: "Immutable",
      KubernetesGroups: "Mutable",
      Username: "Mutable",
      ClusterName: "Immutable",
      AccessPolicies: "Mutable",
      Tags: "Mutable",
    },
    Addon: {
      NamespaceConfig: "Immutable",
      PreserveOnDelete: "Mutable",
      AddonVersion: "Mutable",
      ServiceAccountRoleArn: "Mutable",
      ClusterName: "Immutable",
      AddonName: "Immutable",
      PodIdentityAssociations: "Mutable",
      ResolveConflicts: "Mutable",
      Tags: "Mutable",
      ConfigurationValues: "Mutable",
    },
    Cluster: {
      Logging: "Mutable",
      ComputeConfig: "Mutable",
      Force: "Mutable",
      StorageConfig: "Mutable",
      BootstrapSelfManagedAddons: "Immutable",
      DeletionProtection: "Mutable",
      ZonalShiftConfig: "Mutable",
      AccessConfig: "Mutable",
      EncryptionConfig: "Immutable",
      KubernetesNetworkConfig: "Mutable",
      RoleArn: "Immutable",
      Name: "Immutable",
      UpgradePolicy: "Mutable",
      RemoteNetworkConfig: "Mutable",
      Version: "Mutable",
      OutpostConfig: "Immutable",
      Tags: "Mutable",
      ResourcesVpcConfig: "Mutable",
    },
    FargateProfile: {
      Subnets: "Immutable",
      FargateProfileName: "Immutable",
      ClusterName: "Immutable",
      PodExecutionRoleArn: "Immutable",
      Selectors: "Immutable",
      Tags: "Mutable",
    },
    IdentityProviderConfig: {
      Type: "Immutable",
      ClusterName: "Immutable",
      IdentityProviderConfigName: "Immutable",
      Oidc: "Immutable",
      Tags: "Mutable",
    },
    Nodegroup: {
      UpdateConfig: "Mutable",
      ScalingConfig: "Mutable",
      Labels: "Mutable",
      Taints: "Mutable",
      CapacityType: "Immutable",
      ReleaseVersion: "Mutable",
      NodeRepairConfig: "Mutable",
      NodegroupName: "Immutable",
      NodeRole: "Immutable",
      Subnets: "Immutable",
      AmiType: "Immutable",
      ForceUpdateEnabled: "Mutable",
      Version: "Mutable",
      LaunchTemplate: "Mutable",
      RemoteAccess: "Immutable",
      DiskSize: "Immutable",
      ClusterName: "Immutable",
      InstanceTypes: "Immutable",
      Tags: "Mutable",
    },
    PodIdentityAssociation: {
      ServiceAccount: "Immutable",
      TargetRoleArn: "Mutable",
      ClusterName: "Immutable",
      DisableSessionTags: "Mutable",
      RoleArn: "Mutable",
      Namespace: "Immutable",
      Tags: "Mutable",
    },
  },
  EMR: {
    Cluster: {
      AdditionalInfo: "Immutable",
      Applications: "Immutable",
      AutoScalingRole: "Immutable",
      AutoTerminationPolicy: "Mutable",
      BootstrapActions: "Immutable",
      Configurations: "Immutable",
      CustomAmiId: "Immutable",
      EbsRootVolumeIops: "Immutable",
      EbsRootVolumeSize: "Immutable",
      EbsRootVolumeThroughput: "Immutable",
      Instances: "Conditional",
      JobFlowRole: "Immutable",
      KerberosAttributes: "Immutable",
      LogEncryptionKmsKeyId: "Immutable",
      LogUri: "Immutable",
      ManagedScalingPolicy: "Mutable",
      Name: "Immutable",
      OSReleaseLabel: "Immutable",
      PlacementGroupConfigs: "Immutable",
      ReleaseLabel: "Immutable",
      ScaleDownBehavior: "Immutable",
      SecurityConfiguration: "Immutable",
      ServiceRole: "Immutable",
      StepConcurrencyLevel: "Mutable",
      Steps: "Immutable",
      Tags: "Mutable",
      VisibleToAllUsers: "Mutable",
    },
    InstanceFleetConfig: {
      ClusterId: "Immutable",
      InstanceFleetType: "Immutable",
      InstanceTypeConfigs: "Mutable",
      LaunchSpecifications: "Immutable",
      Name: "Immutable",
      ResizeSpecifications: "Mutable",
      TargetOnDemandCapacity: "Mutable",
      TargetSpotCapacity: "Mutable",
    },
    InstanceGroupConfig: {
      AutoScalingPolicy: "Mutable",
      BidPrice: "Immutable",
      Configurations: "Immutable",
      CustomAmiId: "Immutable",
      EbsConfiguration: "Immutable",
      InstanceCount: "Mutable",
      InstanceRole: "Immutable",
      InstanceType: "Immutable",
      JobFlowId: "Immutable",
      Market: "Immutable",
      Name: "Immutable",
    },
    SecurityConfiguration: {
      SecurityConfiguration: "Immutable",
      Name: "Immutable",
    },
    Step: {
      JobFlowId: "Immutable",
      ActionOnFailure: "Immutable",
      HadoopJarStep: "Immutable",
      Name: "Immutable",
    },
    Studio: {
      WorkspaceSecurityGroupId: "Immutable",
      Description: "Mutable",
      EncryptionKeyArn: "Immutable",
      DefaultS3Location: "Mutable",
      SubnetIds: "Mutable",
      IdpAuthUrl: "Mutable",
      TrustedIdentityPropagationEnabled: "Immutable",
      Name: "Mutable",
      IdcUserAssignment: "Immutable",
      ServiceRole: "Immutable",
      VpcId: "Immutable",
      EngineSecurityGroupId: "Immutable",
      UserRole: "Immutable",
      IdpRelayStateParameterName: "Mutable",
      AuthMode: "Immutable",
      Tags: "Mutable",
      IdcInstanceArn: "Immutable",
    },
    StudioSessionMapping: {
      IdentityType: "Immutable",
      SessionPolicyArn: "Mutable",
      StudioId: "Immutable",
      IdentityName: "Immutable",
    },
    WALWorkspace: {
      WALWorkspaceName: "Immutable",
      Tags: "Mutable",
    },
  },
  EMRContainers: {
    VirtualCluster: {
      SecurityConfigurationId: "Mutable",
      ContainerProvider: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  EMRServerless: {
    Application: {
      AutoStartConfiguration: "Conditional",
      Architecture: "Conditional",
      WorkerTypeSpecifications: "Conditional",
      MonitoringConfiguration: "Conditional",
      MaximumCapacity: "Conditional",
      AutoStopConfiguration: "Conditional",
      RuntimeConfiguration: "Conditional",
      Name: "Immutable",
      Type: "Immutable",
      SchedulerConfiguration: "Conditional",
      InitialCapacity: "Conditional",
      InteractiveConfiguration: "Conditional",
      ImageConfiguration: "Conditional",
      NetworkConfiguration: "Conditional",
      ReleaseLabel: "Conditional",
      IdentityCenterConfiguration: "Mutable",
      Tags: "Mutable",
    },
  },
  EVS: {
    Environment: {
      LicenseInfo: "Immutable",
      Hosts: "Mutable",
      SiteId: "Immutable",
      KmsKeyId: "Immutable",
      EnvironmentName: "Immutable",
      ConnectivityInfo: "Immutable",
      InitialVlans: "Mutable",
      ServiceAccessSecurityGroups: "Immutable",
      VpcId: "Immutable",
      TermsAccepted: "Immutable",
      VcfVersion: "Immutable",
      VcfHostnames: "Immutable",
      ServiceAccessSubnetId: "Immutable",
      Tags: "Mutable",
    },
  },
  ElastiCache: {
    CacheCluster: {
      AZMode: "Conditional",
      AutoMinorVersionUpgrade: "Mutable",
      CacheNodeType: "Mutable",
      CacheParameterGroupName: "Mutable",
      CacheSecurityGroupNames: "Mutable",
      CacheSubnetGroupName: "Immutable",
      ClusterName: "Immutable",
      Engine: "Immutable",
      EngineVersion: "Mutable",
      IpDiscovery: "Mutable",
      LogDeliveryConfigurations: "Mutable",
      NetworkType: "Immutable",
      NotificationTopicArn: "Mutable",
      NumCacheNodes: "Conditional",
      Port: "Immutable",
      PreferredAvailabilityZone: "Conditional",
      PreferredAvailabilityZones: "Conditional",
      PreferredMaintenanceWindow: "Mutable",
      SnapshotArns: "Immutable",
      SnapshotName: "Immutable",
      SnapshotRetentionLimit: "Mutable",
      SnapshotWindow: "Mutable",
      Tags: "Mutable",
      TransitEncryptionEnabled: "Mutable",
      VpcSecurityGroupIds: "Mutable",
    },
    GlobalReplicationGroup: {
      GlobalReplicationGroupIdSuffix: "Mutable",
      CacheNodeType: "Mutable",
      EngineVersion: "Mutable",
      GlobalReplicationGroupDescription: "Mutable",
      RegionalConfigurations: "Mutable",
      CacheParameterGroupName: "Mutable",
      Engine: "Mutable",
      Members: "Mutable",
      AutomaticFailoverEnabled: "Mutable",
      GlobalNodeGroupCount: "Mutable",
    },
    ParameterGroup: {
      Description: "Mutable",
      Properties: "Mutable",
      Tags: "Mutable",
      CacheParameterGroupFamily: "Immutable",
    },
    ReplicationGroup: {
      AtRestEncryptionEnabled: "Immutable",
      AuthToken: "Conditional",
      AutoMinorVersionUpgrade: "Mutable",
      AutomaticFailoverEnabled: "Mutable",
      CacheNodeType: "Mutable",
      CacheParameterGroupName: "Mutable",
      CacheSecurityGroupNames: "Mutable",
      CacheSubnetGroupName: "Immutable",
      ClusterMode: "Mutable",
      DataTieringEnabled: "Immutable",
      Engine: "Mutable",
      EngineVersion: "Mutable",
      GlobalReplicationGroupId: "Immutable",
      IpDiscovery: "Mutable",
      KmsKeyId: "Immutable",
      LogDeliveryConfigurations: "Mutable",
      MultiAZEnabled: "Mutable",
      NetworkType: "Immutable",
      NodeGroupConfiguration: "Conditional",
      NotificationTopicArn: "Mutable",
      NumCacheClusters: "Mutable",
      NumNodeGroups: "Conditional",
      Port: "Immutable",
      PreferredCacheClusterAZs: "Immutable",
      PreferredMaintenanceWindow: "Mutable",
      PrimaryClusterId: "Mutable",
      ReplicasPerNodeGroup: "Immutable",
      ReplicationGroupDescription: "Mutable",
      ReplicationGroupId: "Immutable",
      SecurityGroupIds: "Mutable",
      SnapshotArns: "Immutable",
      SnapshotName: "Immutable",
      SnapshotRetentionLimit: "Mutable",
      SnapshotWindow: "Mutable",
      SnapshottingClusterId: "Mutable",
      Tags: "Mutable",
      TransitEncryptionEnabled: "Mutable",
      TransitEncryptionMode: "Mutable",
      UserGroupIds: "Mutable",
    },
    SecurityGroup: {
      Description: "Mutable",
      Tags: "Mutable",
    },
    SecurityGroupIngress: {
      CacheSecurityGroupName: "Mutable",
      EC2SecurityGroupName: "Mutable",
      EC2SecurityGroupOwnerId: "Mutable",
    },
    ServerlessCache: {
      Description: "Mutable",
      KmsKeyId: "Immutable",
      FinalSnapshotName: "Mutable",
      UserGroupId: "Mutable",
      CacheUsageLimits: "Mutable",
      SecurityGroupIds: "Mutable",
      SnapshotArnsToRestore: "Immutable",
      SubnetIds: "Immutable",
      DailySnapshotTime: "Mutable",
      ReaderEndpoint: "Mutable",
      SnapshotRetentionLimit: "Mutable",
      Endpoint: "Mutable",
      ServerlessCacheName: "Immutable",
      MajorEngineVersion: "Mutable",
      Engine: "Mutable",
      Tags: "Mutable",
    },
    SubnetGroup: {
      Description: "Mutable",
      CacheSubnetGroupName: "Immutable",
      SubnetIds: "Mutable",
      Tags: "Mutable",
    },
    User: {
      AuthenticationMode: "Mutable",
      UserName: "Immutable",
      NoPasswordRequired: "Mutable",
      AccessString: "Mutable",
      UserId: "Immutable",
      Passwords: "Mutable",
      Engine: "Mutable",
      Tags: "Mutable",
    },
    UserGroup: {
      UserGroupId: "Immutable",
      Engine: "Mutable",
      UserIds: "Mutable",
      Tags: "Mutable",
    },
  },
  ElasticBeanstalk: {
    Application: {
      ApplicationName: "Immutable",
      Description: "Mutable",
      ResourceLifecycleConfig: "Mutable",
    },
    ApplicationVersion: {
      ApplicationName: "Immutable",
      Description: "Mutable",
      SourceBundle: "Immutable",
    },
    ConfigurationTemplate: {
      EnvironmentId: "Immutable",
      PlatformArn: "Immutable",
      ApplicationName: "Immutable",
      Description: "Mutable",
      OptionSettings: "Mutable",
      SourceConfiguration: "Immutable",
      SolutionStackName: "Immutable",
    },
    Environment: {
      PlatformArn: "Mutable",
      ApplicationName: "Immutable",
      Description: "Mutable",
      EnvironmentName: "Immutable",
      OperationsRole: "Mutable",
      Tier: "Mutable",
      OptionSettings: "Mutable",
      VersionLabel: "Mutable",
      TemplateName: "Mutable",
      SolutionStackName: "Immutable",
      CNAMEPrefix: "Immutable",
      Tags: "Mutable",
    },
  },
  ElasticLoadBalancing: {
    LoadBalancer: {
      AccessLoggingPolicy: "Mutable",
      AppCookieStickinessPolicy: "Mutable",
      AvailabilityZones: "Conditional",
      ConnectionDrainingPolicy: "Mutable",
      ConnectionSettings: "Mutable",
      CrossZone: "Mutable",
      HealthCheck: "Conditional",
      Instances: "Mutable",
      LBCookieStickinessPolicy: "Mutable",
      Listeners: "Mutable",
      LoadBalancerName: "Immutable",
      Policies: "Mutable",
      Scheme: "Immutable",
      SecurityGroups: "Mutable",
      Subnets: "Conditional",
      Tags: "Mutable",
    },
  },
  ElasticLoadBalancingV2: {
    Listener: {
      MutualAuthentication: "Mutable",
      ListenerAttributes: "Mutable",
      AlpnPolicy: "Mutable",
      SslPolicy: "Mutable",
      LoadBalancerArn: "Immutable",
      DefaultActions: "Mutable",
      Port: "Mutable",
      Certificates: "Mutable",
      Protocol: "Mutable",
    },
    ListenerCertificate: {
      Certificates: "Mutable",
      ListenerArn: "Immutable",
    },
    ListenerRule: {
      ListenerArn: "Immutable",
      Actions: "Mutable",
      Priority: "Mutable",
      Conditions: "Mutable",
    },
    LoadBalancer: {
      IpAddressType: "Mutable",
      SecurityGroups: "Mutable",
      LoadBalancerAttributes: "Mutable",
      Scheme: "Immutable",
      Name: "Immutable",
      EnableCapacityReservationProvisionStabilize: "Mutable",
      Subnets: "Mutable",
      Type: "Immutable",
      MinimumLoadBalancerCapacity: "Mutable",
      EnablePrefixForIpv6SourceNat: "Mutable",
      Ipv4IpamPoolId: "Mutable",
      EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic: "Mutable",
      Tags: "Mutable",
      SubnetMappings: "Mutable",
    },
    TargetGroup: {
      IpAddressType: "Immutable",
      HealthCheckIntervalSeconds: "Mutable",
      Matcher: "Mutable",
      HealthCheckPath: "Mutable",
      Port: "Immutable",
      Targets: "Mutable",
      HealthCheckEnabled: "Mutable",
      ProtocolVersion: "Immutable",
      UnhealthyThresholdCount: "Mutable",
      HealthCheckTimeoutSeconds: "Mutable",
      Name: "Immutable",
      VpcId: "Immutable",
      HealthyThresholdCount: "Mutable",
      HealthCheckProtocol: "Mutable",
      TargetGroupAttributes: "Mutable",
      TargetType: "Immutable",
      HealthCheckPort: "Mutable",
      Protocol: "Immutable",
      Tags: "Mutable",
    },
    TrustStore: {
      CaCertificatesBundleS3Bucket: "Mutable",
      CaCertificatesBundleS3ObjectVersion: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      CaCertificatesBundleS3Key: "Mutable",
    },
    TrustStoreRevocation: {
      RevocationContents: "Immutable",
      TrustStoreArn: "Immutable",
    },
  },
  Elasticsearch: {
    Domain: {
      AccessPolicies: "Mutable",
      AdvancedOptions: "Mutable",
      AdvancedSecurityOptions: "Conditional",
      CognitoOptions: "Mutable",
      DomainEndpointOptions: "Mutable",
      DomainName: "Immutable",
      EBSOptions: "Mutable",
      ElasticsearchClusterConfig: "Mutable",
      ElasticsearchVersion: "Conditional",
      EncryptionAtRestOptions: "Conditional",
      LogPublishingOptions: "Mutable",
      NodeToNodeEncryptionOptions: "Conditional",
      SnapshotOptions: "Mutable",
      Tags: "Mutable",
      VPCOptions: "Mutable",
    },
  },
  EntityResolution: {
    IdMappingWorkflow: {
      Description: "Mutable",
      InputSourceConfig: "Mutable",
      IdMappingTechniques: "Mutable",
      WorkflowName: "Immutable",
      OutputSourceConfig: "Mutable",
      IdMappingIncrementalRunConfig: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    IdNamespace: {
      IdNamespaceName: "Immutable",
      Type: "Mutable",
      Description: "Mutable",
      InputSourceConfig: "Mutable",
      IdMappingWorkflowProperties: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    MatchingWorkflow: {
      ResolutionTechniques: "Mutable",
      Description: "Mutable",
      InputSourceConfig: "Mutable",
      WorkflowName: "Immutable",
      IncrementalRunConfig: "Mutable",
      OutputSourceConfig: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    PolicyStatement: {
      Condition: "Mutable",
      Action: "Mutable",
      StatementId: "Immutable",
      Effect: "Mutable",
      Arn: "Immutable",
      Principal: "Mutable",
    },
    SchemaMapping: {
      Description: "Mutable",
      MappedInputFields: "Mutable",
      SchemaName: "Immutable",
      Tags: "Mutable",
    },
  },
  EventSchemas: {
    Discoverer: {
      CrossAccount: "Mutable",
      Description: "Mutable",
      SourceArn: "Immutable",
      Tags: "Mutable",
    },
    Registry: {
      Description: "Mutable",
      RegistryName: "Immutable",
      Tags: "Mutable",
    },
    RegistryPolicy: {
      Policy: "Mutable",
      RegistryName: "Mutable",
      RevisionId: "Mutable",
    },
    Schema: {
      Type: "Mutable",
      Description: "Mutable",
      Content: "Mutable",
      RegistryName: "Immutable",
      SchemaName: "Immutable",
      Tags: "Mutable",
    },
  },
  Events: {
    ApiDestination: {
      Description: "Mutable",
      ConnectionArn: "Mutable",
      InvocationEndpoint: "Mutable",
      HttpMethod: "Mutable",
      Name: "Immutable",
      InvocationRateLimitPerSecond: "Mutable",
    },
    Archive: {
      EventPattern: "Mutable",
      KmsKeyIdentifier: "Mutable",
      Description: "Mutable",
      SourceArn: "Immutable",
      ArchiveName: "Immutable",
      RetentionDays: "Mutable",
    },
    Connection: {
      AuthParameters: "Mutable",
      KmsKeyIdentifier: "Mutable",
      Description: "Mutable",
      InvocationConnectivityParameters: "Mutable",
      AuthorizationType: "Mutable",
      Name: "Immutable",
    },
    Endpoint: {
      EventBuses: "Mutable",
      Description: "Mutable",
      ReplicationConfig: "Mutable",
      RoutingConfig: "Mutable",
      RoleArn: "Mutable",
      Name: "Immutable",
    },
    EventBus: {
      Policy: "Mutable",
      KmsKeyIdentifier: "Mutable",
      Description: "Mutable",
      EventSourceName: "Mutable",
      DeadLetterConfig: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      LogConfig: "Mutable",
    },
    EventBusPolicy: {
      EventBusName: "Immutable",
      Condition: "Mutable",
      Action: "Mutable",
      StatementId: "Immutable",
      Statement: "Mutable",
      Principal: "Mutable",
    },
    Rule: {
      EventBusName: "Conditional",
      EventPattern: "Mutable",
      ScheduleExpression: "Mutable",
      Description: "Mutable",
      State: "Mutable",
      Targets: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  Evidently: {
    Experiment: {
      Project: "Immutable",
      RunningStatus: "Mutable",
      Description: "Mutable",
      MetricGoals: "Mutable",
      OnlineAbConfig: "Mutable",
      RemoveSegment: "Mutable",
      RandomizationSalt: "Mutable",
      Treatments: "Mutable",
      SamplingRate: "Mutable",
      Segment: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Feature: {
      Project: "Immutable",
      Description: "Mutable",
      EvaluationStrategy: "Mutable",
      DefaultVariation: "Mutable",
      EntityOverrides: "Mutable",
      Variations: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Launch: {
      Project: "Immutable",
      Description: "Mutable",
      ExecutionStatus: "Mutable",
      Groups: "Mutable",
      RandomizationSalt: "Mutable",
      MetricMonitors: "Mutable",
      ScheduledSplitsConfig: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Project: {
      DataDelivery: "Mutable",
      Description: "Mutable",
      AppConfigResource: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Segment: {
      Pattern: "Mutable",
      Description: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  FIS: {
    ExperimentTemplate: {
      ExperimentReportConfiguration: "Mutable",
      Description: "Mutable",
      Actions: "Mutable",
      ExperimentOptions: "Mutable",
      StopConditions: "Mutable",
      Targets: "Mutable",
      LogConfiguration: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    TargetAccountConfiguration: {
      AccountId: "Immutable",
      Description: "Mutable",
      ExperimentTemplateId: "Immutable",
      RoleArn: "Mutable",
    },
  },
  FMS: {
    NotificationChannel: {
      SnsTopicArn: "Mutable",
      SnsRoleName: "Mutable",
    },
    Policy: {
      ResourceTagLogicalOperator: "Mutable",
      ResourcesCleanUp: "Mutable",
      ResourceTags: "Mutable",
      ExcludeResourceTags: "Mutable",
      ResourceType: "Mutable",
      ResourceSetIds: "Mutable",
      SecurityServicePolicyData: "Mutable",
      RemediationEnabled: "Mutable",
      DeleteAllPolicyResources: "Mutable",
      ExcludeMap: "Mutable",
      IncludeMap: "Mutable",
      PolicyDescription: "Mutable",
      PolicyName: "Mutable",
      ResourceTypeList: "Mutable",
      Tags: "Mutable",
    },
    ResourceSet: {
      Description: "Mutable",
      ResourceTypeList: "Mutable",
      Resources: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  FSx: {
    DataRepositoryAssociation: {
      FileSystemPath: "Immutable",
      DataRepositoryPath: "Immutable",
      BatchImportMetaDataOnCreate: "Immutable",
      S3: "Mutable",
      FileSystemId: "Immutable",
      ImportedFileChunkSize: "Mutable",
      Tags: "Mutable",
    },
    FileSystem: {
      StorageType: "Mutable",
      KmsKeyId: "Immutable",
      StorageCapacity: "Mutable",
      LustreConfiguration: "Mutable",
      BackupId: "Immutable",
      OntapConfiguration: "Mutable",
      SubnetIds: "Immutable",
      SecurityGroupIds: "Immutable",
      WindowsConfiguration: "Mutable",
      FileSystemTypeVersion: "Mutable",
      OpenZFSConfiguration: "Mutable",
      NetworkType: "Mutable",
      FileSystemType: "Immutable",
      Tags: "Mutable",
    },
    S3AccessPointAttachment: {
      OpenZFSConfiguration: "Immutable",
      Type: "Immutable",
      S3AccessPoint: "Immutable",
      Name: "Immutable",
    },
    Snapshot: {
      VolumeId: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    StorageVirtualMachine: {
      SvmAdminPassword: "Mutable",
      ActiveDirectoryConfiguration: "Mutable",
      RootVolumeSecurityStyle: "Immutable",
      FileSystemId: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Volume: {
      OpenZFSConfiguration: "Mutable",
      VolumeType: "Immutable",
      BackupId: "Immutable",
      OntapConfiguration: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  FinSpace: {
    Environment: {
      Description: "Mutable",
      KmsKeyId: "Immutable",
      FederationParameters: "Immutable",
      FederationMode: "Mutable",
      SuperuserParameters: "Immutable",
      Tags: "Immutable",
      Name: "Mutable",
    },
  },
  Forecast: {
    Dataset: {
      DataFrequency: "Mutable",
      DatasetName: "Immutable",
      Schema: "Mutable",
      DatasetType: "Mutable",
      Domain: "Mutable",
      EncryptionConfig: "Mutable",
      Tags: "Mutable",
    },
    DatasetGroup: {
      DatasetArns: "Mutable",
      DatasetGroupName: "Immutable",
      Domain: "Mutable",
      Tags: "Mutable",
    },
  },
  FraudDetector: {
    Detector: {
      Description: "Mutable",
      DetectorVersionStatus: "Mutable",
      EventType: "Mutable",
      DetectorId: "Immutable",
      AssociatedModels: "Mutable",
      RuleExecutionMode: "Mutable",
      Rules: "Mutable",
      Tags: "Mutable",
    },
    EntityType: {
      Description: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    EventType: {
      EntityTypes: "Mutable",
      Description: "Mutable",
      Labels: "Mutable",
      EventVariables: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Label: {
      Description: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    List: {
      Description: "Mutable",
      VariableType: "Mutable",
      Elements: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Outcome: {
      Description: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Variable: {
      DefaultValue: "Mutable",
      Description: "Mutable",
      VariableType: "Mutable",
      DataType: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      DataSource: "Mutable",
    },
  },
  GameLift: {
    Alias: {
      Description: "Mutable",
      RoutingStrategy: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Build: {
      OperatingSystem: "Immutable",
      Version: "Mutable",
      ServerSdkVersion: "Immutable",
      StorageLocation: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    ContainerFleet: {
      ScalingPolicies: "Mutable",
      GameServerContainerGroupDefinitionName: "Mutable",
      Description: "Mutable",
      FleetRoleArn: "Mutable",
      PerInstanceContainerGroupDefinitionName: "Mutable",
      Locations: "Mutable",
      GameSessionCreationLimitPolicy: "Mutable",
      NewGameSessionProtectionPolicy: "Mutable",
      GameServerContainerGroupsPerInstance: "Mutable",
      LogConfiguration: "Mutable",
      InstanceConnectionPortRange: "Mutable",
      MetricGroups: "Mutable",
      InstanceInboundPermissions: "Mutable",
      InstanceType: "Immutable",
      Tags: "Mutable",
      DeploymentConfiguration: "Mutable",
      BillingType: "Immutable",
    },
    ContainerGroupDefinition: {
      OperatingSystem: "Mutable",
      VersionDescription: "Mutable",
      GameServerContainerDefinition: "Mutable",
      TotalMemoryLimitMebibytes: "Mutable",
      SourceVersionNumber: "Mutable",
      TotalVcpuLimit: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      ContainerGroupType: "Immutable",
      SupportContainerDefinitions: "Mutable",
    },
    Fleet: {
      ScalingPolicies: "Mutable",
      Description: "Mutable",
      PeerVpcId: "Immutable",
      ApplyCapacity: "Mutable",
      FleetType: "Immutable",
      EC2InboundPermissions: "Mutable",
      Locations: "Mutable",
      NewGameSessionProtectionPolicy: "Mutable",
      ScriptId: "Immutable",
      ComputeType: "Immutable",
      RuntimeConfiguration: "Mutable",
      Name: "Mutable",
      PeerVpcAwsAccountId: "Immutable",
      AnywhereConfiguration: "Mutable",
      InstanceRoleARN: "Immutable",
      MetricGroups: "Mutable",
      BuildId: "Immutable",
      ResourceCreationLimitPolicy: "Mutable",
      EC2InstanceType: "Immutable",
      CertificateConfiguration: "Immutable",
      InstanceRoleCredentialsProvider: "Immutable",
      Tags: "Mutable",
    },
    GameServerGroup: {
      AutoScalingPolicy: "Mutable",
      MinSize: "Mutable",
      DeleteOption: "Mutable",
      BalancingStrategy: "Mutable",
      GameServerGroupName: "Mutable",
      LaunchTemplate: "Mutable",
      GameServerProtectionPolicy: "Mutable",
      VpcSubnets: "Mutable",
      MaxSize: "Mutable",
      InstanceDefinitions: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    GameSessionQueue: {
      TimeoutInSeconds: "Mutable",
      PlayerLatencyPolicies: "Mutable",
      Destinations: "Mutable",
      NotificationTarget: "Mutable",
      FilterConfiguration: "Mutable",
      CustomEventData: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      PriorityConfiguration: "Mutable",
    },
    Location: {
      Tags: "Mutable",
      LocationName: "Immutable",
    },
    MatchmakingConfiguration: {
      GameProperties: "Mutable",
      GameSessionData: "Mutable",
      Description: "Mutable",
      AcceptanceTimeoutSeconds: "Mutable",
      NotificationTarget: "Mutable",
      CustomEventData: "Mutable",
      Name: "Immutable",
      AdditionalPlayerCount: "Mutable",
      BackfillMode: "Mutable",
      RequestTimeoutSeconds: "Mutable",
      AcceptanceRequired: "Mutable",
      CreationTime: "Mutable",
      FlexMatchMode: "Mutable",
      RuleSetName: "Mutable",
      GameSessionQueueArns: "Mutable",
      Tags: "Mutable",
      RuleSetArn: "Mutable",
    },
    MatchmakingRuleSet: {
      RuleSetBody: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Script: {
      Version: "Mutable",
      StorageLocation: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  GlobalAccelerator: {
    Accelerator: {
      IpAddressType: "Mutable",
      IpAddresses: "Mutable",
      Enabled: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    CrossAccountAttachment: {
      Principals: "Mutable",
      Resources: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    EndpointGroup: {
      ListenerArn: "Immutable",
      PortOverrides: "Mutable",
      HealthCheckIntervalSeconds: "Mutable",
      EndpointGroupRegion: "Immutable",
      HealthCheckPath: "Mutable",
      TrafficDialPercentage: "Mutable",
      HealthCheckProtocol: "Mutable",
      ThresholdCount: "Mutable",
      HealthCheckPort: "Mutable",
      EndpointConfigurations: "Mutable",
    },
    Listener: {
      PortRanges: "Mutable",
      AcceleratorArn: "Immutable",
      Protocol: "Mutable",
      ClientAffinity: "Mutable",
    },
  },
  Glue: {
    Classifier: {
      XMLClassifier: "Mutable",
      JsonClassifier: "Mutable",
      CsvClassifier: "Mutable",
      GrokClassifier: "Mutable",
    },
    Connection: {
      ConnectionInput: "Mutable",
      CatalogId: "Immutable",
    },
    Crawler: {
      Classifiers: "Mutable",
      Description: "Mutable",
      SchemaChangePolicy: "Mutable",
      Configuration: "Mutable",
      RecrawlPolicy: "Mutable",
      DatabaseName: "Mutable",
      Targets: "Mutable",
      CrawlerSecurityConfiguration: "Mutable",
      Name: "Immutable",
      Role: "Mutable",
      LakeFormationConfiguration: "Mutable",
      Schedule: "Mutable",
      TablePrefix: "Mutable",
      Tags: "Mutable",
    },
    CustomEntityType: {
      ContextWords: "Mutable",
      RegexString: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    DataCatalogEncryptionSettings: {
      DataCatalogEncryptionSettings: "Mutable",
      CatalogId: "Immutable",
    },
    DataQualityRuleset: {
      Ruleset: "Mutable",
      Description: "Mutable",
      TargetTable: "Mutable",
      ClientToken: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Database: {
      DatabaseName: "Immutable",
      DatabaseInput: "Mutable",
      CatalogId: "Mutable",
    },
    DevEndpoint: {
      ExtraJarsS3Path: "Mutable",
      PublicKey: "Mutable",
      NumberOfNodes: "Mutable",
      Arguments: "Mutable",
      SubnetId: "Mutable",
      PublicKeys: "Mutable",
      SecurityGroupIds: "Mutable",
      RoleArn: "Mutable",
      WorkerType: "Mutable",
      EndpointName: "Immutable",
      GlueVersion: "Mutable",
      ExtraPythonLibsS3Path: "Mutable",
      SecurityConfiguration: "Mutable",
      NumberOfWorkers: "Mutable",
      Tags: "Mutable",
    },
    Job: {
      Connections: "Mutable",
      MaxRetries: "Mutable",
      JobMode: "Mutable",
      Description: "Mutable",
      Timeout: "Mutable",
      AllocatedCapacity: "Mutable",
      JobRunQueuingEnabled: "Mutable",
      Name: "Immutable",
      Role: "Mutable",
      DefaultArguments: "Mutable",
      NotificationProperty: "Mutable",
      WorkerType: "Mutable",
      ExecutionClass: "Mutable",
      LogUri: "Mutable",
      Command: "Mutable",
      GlueVersion: "Mutable",
      ExecutionProperty: "Mutable",
      SecurityConfiguration: "Mutable",
      MaintenanceWindow: "Mutable",
      NumberOfWorkers: "Mutable",
      Tags: "Mutable",
      MaxCapacity: "Mutable",
      NonOverridableArguments: "Mutable",
    },
    MLTransform: {
      MaxRetries: "Mutable",
      Description: "Mutable",
      TransformEncryption: "Mutable",
      Timeout: "Mutable",
      Name: "Mutable",
      Role: "Mutable",
      WorkerType: "Mutable",
      GlueVersion: "Mutable",
      TransformParameters: "Mutable",
      InputRecordTables: "Immutable",
      NumberOfWorkers: "Mutable",
      Tags: "Mutable",
      MaxCapacity: "Mutable",
    },
    Partition: {
      TableName: "Immutable",
      DatabaseName: "Immutable",
      CatalogId: "Immutable",
      PartitionInput: "Mutable",
    },
    Registry: {
      Description: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Schema: {
      SchemaDefinition: "Immutable",
      Description: "Mutable",
      DataFormat: "Immutable",
      Registry: "Immutable",
      Compatibility: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      CheckpointVersion: "Mutable",
    },
    SchemaVersion: {
      SchemaDefinition: "Immutable",
      Schema: "Immutable",
    },
    SchemaVersionMetadata: {
      SchemaVersionId: "Immutable",
      Value: "Immutable",
      Key: "Immutable",
    },
    SecurityConfiguration: {
      EncryptionConfiguration: "Mutable",
      Name: "Immutable",
    },
    Table: {
      TableInput: "Mutable",
      OpenTableFormatInput: "Mutable",
      DatabaseName: "Immutable",
      CatalogId: "Immutable",
    },
    TableOptimizer: {
      TableName: "Immutable",
      Type: "Immutable",
      DatabaseName: "Immutable",
      TableOptimizerConfiguration: "Mutable",
      CatalogId: "Immutable",
    },
    Trigger: {
      Type: "Immutable",
      StartOnCreation: "Mutable",
      Description: "Mutable",
      Actions: "Mutable",
      EventBatchingCondition: "Mutable",
      WorkflowName: "Immutable",
      Schedule: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      Predicate: "Mutable",
    },
    UsageProfile: {
      Description: "Mutable",
      Configuration: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Workflow: {
      Description: "Mutable",
      DefaultRunProperties: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      MaxConcurrentRuns: "Mutable",
    },
  },
  Grafana: {
    Workspace: {
      NotificationDestinations: "Mutable",
      PluginAdminEnabled: "Mutable",
      Description: "Mutable",
      PermissionType: "Mutable",
      AccountAccessType: "Mutable",
      StackSetName: "Mutable",
      SamlConfiguration: "Mutable",
      OrganizationalUnits: "Mutable",
      RoleArn: "Mutable",
      Name: "Mutable",
      GrafanaVersion: "Mutable",
      DataSources: "Mutable",
      AuthenticationProviders: "Mutable",
      OrganizationRoleName: "Mutable",
      VpcConfiguration: "Mutable",
      NetworkAccessControl: "Mutable",
      ClientToken: "Immutable",
    },
  },
  Greengrass: {
    ConnectorDefinition: {
      InitialVersion: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    ConnectorDefinitionVersion: {
      Connectors: "Immutable",
      ConnectorDefinitionId: "Immutable",
    },
    CoreDefinition: {
      InitialVersion: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    CoreDefinitionVersion: {
      Cores: "Immutable",
      CoreDefinitionId: "Immutable",
    },
    DeviceDefinition: {
      InitialVersion: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    DeviceDefinitionVersion: {
      DeviceDefinitionId: "Immutable",
      Devices: "Immutable",
    },
    FunctionDefinition: {
      InitialVersion: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    FunctionDefinitionVersion: {
      DefaultConfig: "Immutable",
      Functions: "Immutable",
      FunctionDefinitionId: "Immutable",
    },
    Group: {
      InitialVersion: "Immutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    GroupVersion: {
      LoggerDefinitionVersionArn: "Immutable",
      DeviceDefinitionVersionArn: "Immutable",
      FunctionDefinitionVersionArn: "Immutable",
      CoreDefinitionVersionArn: "Immutable",
      ResourceDefinitionVersionArn: "Immutable",
      ConnectorDefinitionVersionArn: "Immutable",
      SubscriptionDefinitionVersionArn: "Immutable",
      GroupId: "Immutable",
    },
    LoggerDefinition: {
      InitialVersion: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    LoggerDefinitionVersion: {
      LoggerDefinitionId: "Immutable",
      Loggers: "Immutable",
    },
    ResourceDefinition: {
      InitialVersion: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    ResourceDefinitionVersion: {
      Resources: "Immutable",
      ResourceDefinitionId: "Immutable",
    },
    SubscriptionDefinition: {
      InitialVersion: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    SubscriptionDefinitionVersion: {
      SubscriptionDefinitionId: "Immutable",
      Subscriptions: "Immutable",
    },
  },
  GreengrassV2: {
    ComponentVersion: {
      LambdaFunction: "Immutable",
      InlineRecipe: "Immutable",
      Tags: "Mutable",
    },
    Deployment: {
      Components: "Immutable",
      DeploymentName: "Immutable",
      IotJobConfiguration: "Immutable",
      DeploymentPolicies: "Immutable",
      TargetArn: "Immutable",
      ParentTargetArn: "Immutable",
      Tags: "Mutable",
    },
  },
  GroundStation: {
    Config: {
      ConfigData: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    DataflowEndpointGroup: {
      ContactPostPassDurationSeconds: "Immutable",
      EndpointDetails: "Immutable",
      Tags: "Mutable",
      ContactPrePassDurationSeconds: "Immutable",
    },
    MissionProfile: {
      StreamsKmsKey: "Mutable",
      ContactPostPassDurationSeconds: "Mutable",
      MinimumViableContactDurationSeconds: "Mutable",
      DataflowEdges: "Mutable",
      StreamsKmsRole: "Mutable",
      TrackingConfigArn: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
      ContactPrePassDurationSeconds: "Mutable",
    },
  },
  GuardDuty: {
    Detector: {
      FindingPublishingFrequency: "Mutable",
      DataSources: "Mutable",
      Enable: "Mutable",
      Features: "Mutable",
      Tags: "Mutable",
    },
    Filter: {
      Action: "Mutable",
      Description: "Mutable",
      DetectorId: "Immutable",
      FindingCriteria: "Mutable",
      Rank: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    IPSet: {
      Format: "Immutable",
      Activate: "Mutable",
      DetectorId: "Immutable",
      ExpectedBucketOwner: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
      Location: "Mutable",
    },
    MalwareProtectionPlan: {
      Role: "Mutable",
      ProtectedResource: "Mutable",
      Actions: "Mutable",
      Tags: "Mutable",
    },
    Master: {
      DetectorId: "Immutable",
      MasterId: "Immutable",
      InvitationId: "Immutable",
    },
    Member: {
      Status: "Mutable",
      MemberId: "Immutable",
      Email: "Mutable",
      Message: "Mutable",
      DisableEmailNotification: "Mutable",
      DetectorId: "Immutable",
    },
    PublishingDestination: {
      DestinationProperties: "Mutable",
      DetectorId: "Immutable",
      DestinationType: "Mutable",
      Tags: "Mutable",
    },
    ThreatEntitySet: {
      Format: "Immutable",
      Activate: "Mutable",
      DetectorId: "Immutable",
      ExpectedBucketOwner: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
      Location: "Mutable",
    },
    ThreatIntelSet: {
      Format: "Immutable",
      Activate: "Mutable",
      DetectorId: "Immutable",
      ExpectedBucketOwner: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
      Location: "Mutable",
    },
    TrustedEntitySet: {
      Format: "Immutable",
      Activate: "Mutable",
      DetectorId: "Immutable",
      ExpectedBucketOwner: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
      Location: "Mutable",
    },
  },
  HealthImaging: {
    Datastore: {
      KmsKeyArn: "Immutable",
      DatastoreName: "Immutable",
      Tags: "Immutable",
    },
  },
  HealthLake: {
    FHIRDatastore: {
      DatastoreTypeVersion: "Immutable",
      DatastoreName: "Immutable",
      IdentityProviderConfiguration: "Immutable",
      Tags: "Mutable",
      PreloadDataConfig: "Immutable",
      SseConfiguration: "Immutable",
    },
  },
  IAM: {
    AccessKey: {
      Serial: "Immutable",
      Status: "Mutable",
      UserName: "Immutable",
    },
    Group: {
      GroupName: "Immutable",
      Path: "Mutable",
      ManagedPolicyArns: "Mutable",
      Policies: "Mutable",
    },
    GroupPolicy: {
      GroupName: "Immutable",
      PolicyName: "Immutable",
      PolicyDocument: "Mutable",
    },
    InstanceProfile: {
      Path: "Immutable",
      InstanceProfileName: "Immutable",
      Roles: "Mutable",
    },
    ManagedPolicy: {
      ManagedPolicyName: "Immutable",
      Path: "Immutable",
      Description: "Immutable",
      Groups: "Mutable",
      PolicyDocument: "Mutable",
      Roles: "Mutable",
      Users: "Mutable",
    },
    OIDCProvider: {
      ClientIdList: "Mutable",
      ThumbprintList: "Mutable",
      Url: "Immutable",
      Tags: "Mutable",
    },
    Policy: {
      Groups: "Mutable",
      PolicyName: "Mutable",
      PolicyDocument: "Mutable",
      Roles: "Mutable",
      Users: "Mutable",
    },
    Role: {
      Path: "Immutable",
      ManagedPolicyArns: "Mutable",
      MaxSessionDuration: "Mutable",
      RoleName: "Immutable",
      Description: "Mutable",
      Policies: "Mutable",
      AssumeRolePolicyDocument: "Mutable",
      Tags: "Mutable",
      PermissionsBoundary: "Mutable",
    },
    RolePolicy: {
      RoleName: "Immutable",
      PolicyName: "Immutable",
      PolicyDocument: "Mutable",
    },
    SAMLProvider: {
      AddPrivateKey: "Immutable",
      RemovePrivateKey: "Immutable",
      AssertionEncryptionMode: "Mutable",
      SamlMetadataDocument: "Mutable",
      PrivateKeyList: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ServerCertificate: {
      CertificateBody: "Immutable",
      Path: "Mutable",
      PrivateKey: "Immutable",
      CertificateChain: "Immutable",
      ServerCertificateName: "Immutable",
      Tags: "Mutable",
    },
    ServiceLinkedRole: {
      CustomSuffix: "Immutable",
      Description: "Mutable",
      AWSServiceName: "Immutable",
    },
    User: {
      Path: "Mutable",
      ManagedPolicyArns: "Mutable",
      Policies: "Mutable",
      UserName: "Immutable",
      Groups: "Mutable",
      LoginProfile: "Mutable",
      Tags: "Mutable",
      PermissionsBoundary: "Mutable",
    },
    UserPolicy: {
      UserName: "Immutable",
      PolicyName: "Immutable",
      PolicyDocument: "Mutable",
    },
    UserToGroupAddition: {
      GroupName: "Mutable",
      Users: "Mutable",
    },
    VirtualMFADevice: {
      Path: "Immutable",
      VirtualMfaDeviceName: "Immutable",
      Users: "Mutable",
      Tags: "Mutable",
    },
  },
  IVS: {
    Channel: {
      Type: "Mutable",
      RecordingConfigurationArn: "Mutable",
      Authorized: "Mutable",
      MultitrackInputConfiguration: "Mutable",
      Preset: "Mutable",
      ContainerFormat: "Mutable",
      InsecureIngest: "Mutable",
      LatencyMode: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    EncoderConfiguration: {
      Video: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    IngestConfiguration: {
      UserId: "Immutable",
      IngestProtocol: "Immutable",
      StageArn: "Mutable",
      InsecureIngest: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    PlaybackKeyPair: {
      PublicKeyMaterial: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    PlaybackRestrictionPolicy: {
      AllowedOrigins: "Mutable",
      EnableStrictOriginEnforcement: "Mutable",
      AllowedCountries: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    PublicKey: {
      PublicKeyMaterial: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    RecordingConfiguration: {
      DestinationConfiguration: "Immutable",
      RenditionConfiguration: "Immutable",
      RecordingReconnectWindowSeconds: "Immutable",
      Tags: "Mutable",
      ThumbnailConfiguration: "Immutable",
      Name: "Immutable",
    },
    Stage: {
      AutoParticipantRecordingConfiguration: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    StorageConfiguration: {
      S3: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    StreamKey: {
      ChannelArn: "Immutable",
      Tags: "Mutable",
    },
  },
  IVSChat: {
    LoggingConfiguration: {
      DestinationConfiguration: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Room: {
      MaximumMessageRatePerSecond: "Mutable",
      MaximumMessageLength: "Mutable",
      MessageReviewHandler: "Mutable",
      LoggingConfigurationIdentifiers: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  IdentityStore: {
    Group: {
      Description: "Mutable",
      DisplayName: "Mutable",
      IdentityStoreId: "Immutable",
    },
    GroupMembership: {
      MemberId: "Immutable",
      IdentityStoreId: "Immutable",
      GroupId: "Immutable",
    },
  },
  ImageBuilder: {
    Component: {
      Description: "Immutable",
      SupportedOsVersions: "Immutable",
      Platform: "Immutable",
      KmsKeyId: "Immutable",
      Version: "Immutable",
      ChangeDescription: "Immutable",
      Data: "Immutable",
      Uri: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ContainerRecipe: {
      WorkingDirectory: "Immutable",
      ParentImage: "Immutable",
      Description: "Immutable",
      KmsKeyId: "Immutable",
      InstanceConfiguration: "Immutable",
      ContainerType: "Immutable",
      Name: "Immutable",
      DockerfileTemplateData: "Immutable",
      Components: "Immutable",
      TargetRepository: "Immutable",
      Version: "Immutable",
      PlatformOverride: "Immutable",
      ImageOsVersionOverride: "Immutable",
      Tags: "Mutable",
      DockerfileTemplateUri: "Immutable",
    },
    DistributionConfiguration: {
      Description: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      Distributions: "Mutable",
    },
    Image: {
      ImageScanningConfiguration: "Immutable",
      InfrastructureConfigurationArn: "Immutable",
      ImageRecipeArn: "Immutable",
      DistributionConfigurationArn: "Immutable",
      ContainerRecipeArn: "Immutable",
      Workflows: "Immutable",
      ImageTestsConfiguration: "Immutable",
      EnhancedImageMetadataEnabled: "Immutable",
      ExecutionRole: "Mutable",
      Tags: "Mutable",
    },
    ImagePipeline: {
      Status: "Mutable",
      ImageScanningConfiguration: "Mutable",
      Description: "Mutable",
      ContainerRecipeArn: "Mutable",
      Workflows: "Mutable",
      Name: "Immutable",
      InfrastructureConfigurationArn: "Mutable",
      ImageRecipeArn: "Mutable",
      DistributionConfigurationArn: "Mutable",
      Schedule: "Mutable",
      ImageTestsConfiguration: "Mutable",
      EnhancedImageMetadataEnabled: "Mutable",
      ExecutionRole: "Mutable",
      Tags: "Mutable",
    },
    ImageRecipe: {
      Components: "Immutable",
      WorkingDirectory: "Immutable",
      ParentImage: "Immutable",
      Description: "Immutable",
      Version: "Immutable",
      BlockDeviceMappings: "Immutable",
      AdditionalInstanceConfiguration: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    InfrastructureConfiguration: {
      Logging: "Mutable",
      KeyPair: "Mutable",
      Description: "Mutable",
      InstanceProfileName: "Mutable",
      ResourceTags: "Mutable",
      TerminateInstanceOnFailure: "Mutable",
      SubnetId: "Mutable",
      SecurityGroupIds: "Mutable",
      Name: "Immutable",
      Placement: "Mutable",
      InstanceMetadataOptions: "Mutable",
      InstanceTypes: "Mutable",
      SnsTopicArn: "Mutable",
      Tags: "Mutable",
    },
    LifecyclePolicy: {
      Status: "Mutable",
      Description: "Mutable",
      ResourceType: "Mutable",
      PolicyDetails: "Mutable",
      ExecutionRole: "Mutable",
      ResourceSelection: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Workflow: {
      Type: "Immutable",
      Description: "Immutable",
      KmsKeyId: "Immutable",
      Version: "Immutable",
      ChangeDescription: "Immutable",
      Data: "Immutable",
      Uri: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  Inspector: {
    AssessmentTarget: {
      AssessmentTargetName: "Immutable",
      ResourceGroupArn: "Mutable",
    },
    AssessmentTemplate: {
      AssessmentTargetArn: "Immutable",
      DurationInSeconds: "Immutable",
      AssessmentTemplateName: "Immutable",
      RulesPackageArns: "Immutable",
      UserAttributesForFindings: "Immutable",
    },
    ResourceGroup: {
      ResourceGroupTags: "Immutable",
    },
  },
  InspectorV2: {
    CisScanConfiguration: {
      SecurityLevel: "Mutable",
      Schedule: "Mutable",
      Targets: "Mutable",
      ScanName: "Mutable",
      Tags: "Mutable",
    },
    CodeSecurityIntegration: {
      Type: "Mutable",
      CreateIntegrationDetails: "Immutable",
      UpdateIntegrationDetails: "Mutable",
      Tags: "Immutable",
      Name: "Mutable",
    },
    CodeSecurityScanConfiguration: {
      ScopeSettings: "Immutable",
      Configuration: "Mutable",
      Level: "Immutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    Filter: {
      Description: "Mutable",
      FilterCriteria: "Mutable",
      FilterAction: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  InternetMonitor: {
    Monitor: {
      Status: "Mutable",
      LinkedAccountId: "Mutable",
      TrafficPercentageToMonitor: "Mutable",
      IncludeLinkedAccounts: "Mutable",
      HealthEventsConfig: "Mutable",
      ResourcesToAdd: "Mutable",
      InternetMeasurementsLogDelivery: "Mutable",
      MonitorName: "Immutable",
      ResourcesToRemove: "Mutable",
      Resources: "Mutable",
      MaxCityNetworksToMonitor: "Mutable",
      Tags: "Mutable",
    },
  },
  Invoicing: {
    InvoiceUnit: {
      Description: "Mutable",
      TaxInheritanceDisabled: "Mutable",
      ResourceTags: "Mutable",
      Rule: "Mutable",
      InvoiceReceiver: "Immutable",
      Name: "Immutable",
    },
  },
  IoT: {
    AccountAuditConfiguration: {
      AccountId: "Immutable",
      AuditCheckConfigurations: "Mutable",
      AuditNotificationTargetConfigurations: "Mutable",
      RoleArn: "Mutable",
    },
    Authorizer: {
      Status: "Mutable",
      TokenKeyName: "Mutable",
      EnableCachingForHttp: "Mutable",
      AuthorizerName: "Immutable",
      TokenSigningPublicKeys: "Mutable",
      SigningDisabled: "Immutable",
      Tags: "Mutable",
      AuthorizerFunctionArn: "Mutable",
    },
    BillingGroup: {
      BillingGroupName: "Immutable",
      BillingGroupProperties: "Mutable",
      Tags: "Mutable",
    },
    CACertificate: {
      Status: "Mutable",
      CACertificatePem: "Immutable",
      CertificateMode: "Immutable",
      AutoRegistrationStatus: "Mutable",
      RemoveAutoRegistration: "Mutable",
      RegistrationConfig: "Mutable",
      VerificationCertificatePem: "Immutable",
      Tags: "Mutable",
    },
    Certificate: {
      Status: "Mutable",
      CACertificatePem: "Immutable",
      CertificateMode: "Immutable",
      CertificateSigningRequest: "Immutable",
      CertificatePem: "Immutable",
    },
    CertificateProvider: {
      LambdaFunctionArn: "Mutable",
      CertificateProviderName: "Immutable",
      AccountDefaultForOperations: "Mutable",
      Tags: "Mutable",
    },
    Command: {
      Description: "Mutable",
      LastUpdatedAt: "Mutable",
      Deprecated: "Mutable",
      CreatedAt: "Mutable",
      DisplayName: "Mutable",
      Payload: "Mutable",
      CommandId: "Immutable",
      PendingDeletion: "Mutable",
      MandatoryParameters: "Mutable",
      Namespace: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    CustomMetric: {
      MetricName: "Immutable",
      MetricType: "Immutable",
      DisplayName: "Mutable",
      Tags: "Mutable",
    },
    Dimension: {
      Type: "Immutable",
      StringValues: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    DomainConfiguration: {
      ApplicationProtocol: "Mutable",
      ClientCertificateConfig: "Mutable",
      DomainConfigurationName: "Immutable",
      DomainName: "Immutable",
      DomainConfigurationStatus: "Mutable",
      ServerCertificateArns: "Immutable",
      ServerCertificateConfig: "Mutable",
      AuthorizerConfig: "Mutable",
      ServiceType: "Immutable",
      ValidationCertificateArn: "Immutable",
      TlsConfig: "Mutable",
      Tags: "Mutable",
      AuthenticationType: "Mutable",
    },
    EncryptionConfiguration: {
      EncryptionType: "Mutable",
      KmsKeyArn: "Mutable",
      KmsAccessRoleArn: "Mutable",
    },
    FleetMetric: {
      IndexName: "Mutable",
      MetricName: "Immutable",
      Description: "Mutable",
      QueryString: "Mutable",
      Period: "Mutable",
      QueryVersion: "Mutable",
      Unit: "Mutable",
      AggregationType: "Mutable",
      AggregationField: "Mutable",
      Tags: "Mutable",
    },
    JobTemplate: {
      TimeoutConfig: "Immutable",
      Description: "Immutable",
      JobExecutionsRetryConfig: "Immutable",
      AbortConfig: "Immutable",
      JobTemplateId: "Immutable",
      Document: "Immutable",
      DestinationPackageVersions: "Immutable",
      JobArn: "Immutable",
      JobExecutionsRolloutConfig: "Immutable",
      DocumentSource: "Immutable",
      MaintenanceWindows: "Immutable",
      PresignedUrlConfig: "Immutable",
      Tags: "Immutable",
    },
    Logging: {
      AccountId: "Immutable",
      RoleArn: "Mutable",
      DefaultLogLevel: "Mutable",
    },
    MitigationAction: {
      ActionName: "Immutable",
      ActionParams: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    Policy: {
      PolicyName: "Immutable",
      PolicyDocument: "Mutable",
      Tags: "Mutable",
    },
    PolicyPrincipalAttachment: {
      PolicyName: "Immutable",
      Principal: "Immutable",
    },
    ProvisioningTemplate: {
      ProvisioningRoleArn: "Mutable",
      Description: "Mutable",
      PreProvisioningHook: "Mutable",
      TemplateName: "Immutable",
      Enabled: "Mutable",
      TemplateBody: "Mutable",
      TemplateType: "Immutable",
      Tags: "Mutable",
    },
    ResourceSpecificLogging: {
      TargetType: "Immutable",
      TargetName: "Immutable",
      LogLevel: "Mutable",
    },
    RoleAlias: {
      RoleAlias: "Immutable",
      CredentialDurationSeconds: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    ScheduledAudit: {
      DayOfWeek: "Mutable",
      TargetCheckNames: "Mutable",
      ScheduledAuditName: "Immutable",
      DayOfMonth: "Mutable",
      Frequency: "Mutable",
      Tags: "Mutable",
    },
    SecurityProfile: {
      AdditionalMetricsToRetainV2: "Mutable",
      MetricsExportConfig: "Mutable",
      SecurityProfileDescription: "Mutable",
      Behaviors: "Mutable",
      SecurityProfileName: "Immutable",
      AlertTargets: "Mutable",
      TargetArns: "Mutable",
      Tags: "Mutable",
    },
    SoftwarePackage: {
      Description: "Mutable",
      PackageName: "Immutable",
      Tags: "Mutable",
    },
    SoftwarePackageVersion: {
      Description: "Mutable",
      PackageName: "Immutable",
      Recipe: "Mutable",
      Attributes: "Mutable",
      Sbom: "Mutable",
      VersionName: "Immutable",
      Artifact: "Mutable",
      Tags: "Mutable",
    },
    Thing: {
      AttributePayload: "Mutable",
      ThingName: "Immutable",
    },
    ThingGroup: {
      ParentGroupName: "Immutable",
      ThingGroupName: "Immutable",
      ThingGroupProperties: "Mutable",
      QueryString: "Mutable",
      Tags: "Mutable",
    },
    ThingPrincipalAttachment: {
      Principal: "Immutable",
      ThingName: "Immutable",
      ThingPrincipalType: "Mutable",
    },
    ThingType: {
      DeprecateThingType: "Mutable",
      ThingTypeName: "Immutable",
      ThingTypeProperties: "Mutable",
      Tags: "Mutable",
    },
    TopicRule: {
      TopicRulePayload: "Mutable",
      RuleName: "Immutable",
      Tags: "Mutable",
    },
    TopicRuleDestination: {
      Status: "Mutable",
      HttpUrlProperties: "Immutable",
      VpcProperties: "Immutable",
    },
  },
  IoTAnalytics: {
    Channel: {
      ChannelName: "Immutable",
      ChannelStorage: "Mutable",
      RetentionPeriod: "Mutable",
      Tags: "Mutable",
    },
    Dataset: {
      Actions: "Mutable",
      LateDataRules: "Mutable",
      DatasetName: "Immutable",
      ContentDeliveryRules: "Mutable",
      Triggers: "Mutable",
      VersioningConfiguration: "Mutable",
      RetentionPeriod: "Mutable",
      Tags: "Mutable",
    },
    Datastore: {
      DatastoreStorage: "Mutable",
      FileFormatConfiguration: "Mutable",
      DatastorePartitions: "Mutable",
      DatastoreName: "Immutable",
      RetentionPeriod: "Mutable",
      Tags: "Mutable",
    },
    Pipeline: {
      PipelineName: "Immutable",
      Tags: "Mutable",
      PipelineActivities: "Mutable",
    },
  },
  IoTCoreDeviceAdvisor: {
    SuiteDefinition: {
      SuiteDefinitionConfiguration: "Mutable",
      Tags: "Mutable",
    },
  },
  IoTEvents: {
    AlarmModel: {
      AlarmRule: "Mutable",
      AlarmModelName: "Immutable",
      AlarmModelDescription: "Mutable",
      Severity: "Mutable",
      AlarmCapabilities: "Mutable",
      RoleArn: "Mutable",
      Key: "Immutable",
      AlarmEventActions: "Mutable",
      Tags: "Mutable",
    },
    DetectorModel: {
      DetectorModelDefinition: "Mutable",
      EvaluationMethod: "Mutable",
      DetectorModelName: "Immutable",
      DetectorModelDescription: "Mutable",
      Key: "Immutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    Input: {
      InputDefinition: "Mutable",
      InputName: "Immutable",
      InputDescription: "Mutable",
      Tags: "Mutable",
    },
  },
  IoTFleetHub: {
    Application: {
      ApplicationName: "Mutable",
      ApplicationDescription: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
  },
  IoTFleetWise: {
    Campaign: {
      Action: "Mutable",
      Compression: "Immutable",
      Description: "Mutable",
      DataPartitions: "Immutable",
      Priority: "Immutable",
      SignalsToCollect: "Immutable",
      StartTime: "Immutable",
      SignalsToFetch: "Immutable",
      ExpiryTime: "Immutable",
      SpoolingMode: "Immutable",
      DataDestinationConfigs: "Immutable",
      SignalCatalogArn: "Immutable",
      Name: "Immutable",
      PostTriggerCollectionDuration: "Immutable",
      DataExtraDimensions: "Mutable",
      DiagnosticsMode: "Immutable",
      TargetArn: "Immutable",
      CollectionScheme: "Immutable",
      Tags: "Mutable",
    },
    DecoderManifest: {
      SignalDecoders: "Mutable",
      Status: "Mutable",
      Description: "Mutable",
      NetworkInterfaces: "Mutable",
      ModelManifestArn: "Immutable",
      DefaultForUnmappedSignals: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Fleet: {
      Description: "Mutable",
      Id: "Immutable",
      SignalCatalogArn: "Immutable",
      Tags: "Mutable",
    },
    ModelManifest: {
      Status: "Mutable",
      Description: "Mutable",
      SignalCatalogArn: "Mutable",
      Nodes: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    SignalCatalog: {
      Description: "Mutable",
      NodeCounts: "Mutable",
      Nodes: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    StateTemplate: {
      StateTemplateProperties: "Mutable",
      Description: "Mutable",
      DataExtraDimensions: "Mutable",
      SignalCatalogArn: "Immutable",
      MetadataExtraDimensions: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Vehicle: {
      AssociationBehavior: "Mutable",
      Attributes: "Mutable",
      DecoderManifestArn: "Mutable",
      StateTemplates: "Mutable",
      ModelManifestArn: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  IoTSiteWise: {
    AccessPolicy: {
      AccessPolicyResource: "Mutable",
      AccessPolicyIdentity: "Mutable",
      AccessPolicyPermission: "Mutable",
    },
    Asset: {
      AssetModelId: "Mutable",
      AssetDescription: "Mutable",
      AssetProperties: "Mutable",
      AssetExternalId: "Mutable",
      AssetName: "Mutable",
      Tags: "Mutable",
      AssetHierarchies: "Mutable",
    },
    AssetModel: {
      AssetModelDescription: "Mutable",
      AssetModelCompositeModels: "Mutable",
      EnforcedAssetModelInterfaceRelationships: "Mutable",
      AssetModelType: "Immutable",
      AssetModelName: "Mutable",
      AssetModelHierarchies: "Mutable",
      AssetModelProperties: "Mutable",
      AssetModelExternalId: "Mutable",
      Tags: "Mutable",
    },
    ComputationModel: {
      ComputationModelConfiguration: "Mutable",
      ComputationModelDescription: "Mutable",
      ComputationModelName: "Mutable",
      ComputationModelDataBinding: "Mutable",
      Tags: "Mutable",
    },
    Dashboard: {
      DashboardName: "Mutable",
      DashboardDefinition: "Mutable",
      ProjectId: "Immutable",
      DashboardDescription: "Mutable",
      Tags: "Mutable",
    },
    Dataset: {
      DatasetName: "Mutable",
      DatasetSource: "Mutable",
      DatasetDescription: "Mutable",
      Tags: "Mutable",
    },
    Gateway: {
      GatewayCapabilitySummaries: "Mutable",
      GatewayName: "Mutable",
      GatewayPlatform: "Immutable",
      GatewayVersion: "Immutable",
      Tags: "Mutable",
    },
    Portal: {
      PortalName: "Mutable",
      PortalAuthMode: "Immutable",
      NotificationSenderEmail: "Mutable",
      Alarms: "Mutable",
      PortalTypeConfiguration: "Mutable",
      PortalContactEmail: "Mutable",
      RoleArn: "Mutable",
      PortalType: "Immutable",
      Tags: "Mutable",
      PortalDescription: "Mutable",
    },
    Project: {
      AssetIds: "Mutable",
      ProjectName: "Mutable",
      PortalId: "Immutable",
      ProjectDescription: "Mutable",
      Tags: "Mutable",
    },
  },
  IoTThingsGraph: {
    FlowTemplate: {
      CompatibleNamespaceVersion: "Mutable",
      Definition: "Mutable",
    },
  },
  IoTTwinMaker: {
    ComponentType: {
      ExtendsFrom: "Mutable",
      Description: "Mutable",
      IsSingleton: "Mutable",
      PropertyDefinitions: "Mutable",
      PropertyGroups: "Mutable",
      WorkspaceId: "Immutable",
      ComponentTypeId: "Immutable",
      Functions: "Mutable",
      CompositeComponentTypes: "Mutable",
      Tags: "Mutable",
    },
    Entity: {
      EntityId: "Immutable",
      Components: "Mutable",
      ParentEntityId: "Mutable",
      CompositeComponents: "Mutable",
      Description: "Mutable",
      EntityName: "Mutable",
      WorkspaceId: "Immutable",
      Tags: "Mutable",
    },
    Scene: {
      SceneId: "Immutable",
      Description: "Mutable",
      SceneMetadata: "Mutable",
      ContentLocation: "Mutable",
      Capabilities: "Mutable",
      WorkspaceId: "Immutable",
      Tags: "Mutable",
    },
    SyncJob: {
      SyncSource: "Immutable",
      SyncRole: "Immutable",
      WorkspaceId: "Immutable",
      Tags: "Immutable",
    },
    Workspace: {
      Role: "Mutable",
      Description: "Mutable",
      WorkspaceId: "Immutable",
      S3Location: "Mutable",
      Tags: "Mutable",
    },
  },
  IoTWireless: {
    Destination: {
      Description: "Mutable",
      Expression: "Mutable",
      ExpressionType: "Mutable",
      Tags: "Mutable",
      RoleArn: "Mutable",
      Name: "Immutable",
    },
    DeviceProfile: {
      LoRaWAN: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    FuotaTask: {
      FirmwareUpdateImage: "Mutable",
      Description: "Mutable",
      LoRaWAN: "Mutable",
      FirmwareUpdateRole: "Mutable",
      AssociateMulticastGroup: "Mutable",
      DisassociateWirelessDevice: "Mutable",
      DisassociateMulticastGroup: "Mutable",
      AssociateWirelessDevice: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    MulticastGroup: {
      Description: "Mutable",
      LoRaWAN: "Mutable",
      DisassociateWirelessDevice: "Mutable",
      AssociateWirelessDevice: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    NetworkAnalyzerConfiguration: {
      Description: "Mutable",
      TraceContent: "Mutable",
      WirelessGateways: "Mutable",
      WirelessDevices: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    PartnerAccount: {
      PartnerType: "Mutable",
      SidewalkResponse: "Mutable",
      AccountLinked: "Mutable",
      Sidewalk: "Mutable",
      PartnerAccountId: "Immutable",
      SidewalkUpdate: "Mutable",
      Tags: "Mutable",
    },
    ServiceProfile: {
      LoRaWAN: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    TaskDefinition: {
      AutoCreateTasks: "Mutable",
      LoRaWANUpdateGatewayTaskEntry: "Mutable",
      Update: "Mutable",
      TaskDefinitionType: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    WirelessDevice: {
      LastUplinkReceivedAt: "Mutable",
      Positioning: "Mutable",
      Type: "Mutable",
      Description: "Mutable",
      LoRaWAN: "Mutable",
      DestinationName: "Mutable",
      ThingArn: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    WirelessDeviceImportTask: {
      DestinationName: "Mutable",
      Sidewalk: "Mutable",
      Tags: "Mutable",
    },
    WirelessGateway: {
      LastUplinkReceivedAt: "Mutable",
      Description: "Mutable",
      LoRaWAN: "Mutable",
      ThingArn: "Mutable",
      ThingName: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  KMS: {
    Alias: {
      TargetKeyId: "Mutable",
      AliasName: "Immutable",
    },
    Key: {
      Origin: "Mutable",
      MultiRegion: "Mutable",
      Description: "Mutable",
      PendingWindowInDays: "Mutable",
      BypassPolicyLockoutSafetyCheck: "Mutable",
      KeyPolicy: "Mutable",
      KeySpec: "Mutable",
      Enabled: "Mutable",
      KeyUsage: "Mutable",
      RotationPeriodInDays: "Mutable",
      EnableKeyRotation: "Mutable",
      Tags: "Mutable",
    },
    ReplicaKey: {
      Description: "Mutable",
      PendingWindowInDays: "Mutable",
      KeyPolicy: "Mutable",
      PrimaryKeyArn: "Immutable",
      Enabled: "Mutable",
      Tags: "Mutable",
    },
  },
  KafkaConnect: {
    Connector: {
      KafkaCluster: "Immutable",
      KafkaConnectVersion: "Immutable",
      ConnectorConfiguration: "Mutable",
      LogDelivery: "Immutable",
      WorkerConfiguration: "Immutable",
      Capacity: "Mutable",
      KafkaClusterEncryptionInTransit: "Immutable",
      ConnectorDescription: "Immutable",
      KafkaClusterClientAuthentication: "Immutable",
      ConnectorName: "Immutable",
      ServiceExecutionRoleArn: "Immutable",
      Tags: "Mutable",
      Plugins: "Immutable",
    },
    CustomPlugin: {
      Description: "Immutable",
      ContentType: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
      Location: "Immutable",
    },
    WorkerConfiguration: {
      PropertiesFileContent: "Immutable",
      Description: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  Kendra: {
    DataSource: {
      CustomDocumentEnrichmentConfiguration: "Mutable",
      IndexId: "Immutable",
      LanguageCode: "Mutable",
      Type: "Immutable",
      Description: "Mutable",
      Schedule: "Mutable",
      DataSourceConfiguration: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Faq: {
      IndexId: "Immutable",
      LanguageCode: "Mutable",
      Description: "Immutable",
      S3Path: "Immutable",
      FileFormat: "Immutable",
      RoleArn: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Index: {
      Description: "Mutable",
      UserContextPolicy: "Mutable",
      CapacityUnits: "Mutable",
      ServerSideEncryptionConfiguration: "Immutable",
      DocumentMetadataConfigurations: "Mutable",
      Tags: "Mutable",
      RoleArn: "Mutable",
      Edition: "Immutable",
      Name: "Mutable",
      UserTokenConfigurations: "Mutable",
    },
  },
  KendraRanking: {
    ExecutionPlan: {
      Description: "Mutable",
      CapacityUnits: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  Kinesis: {
    ResourcePolicy: {
      ResourceArn: "Immutable",
      ResourcePolicy: "Mutable",
    },
    Stream: {
      StreamModeDetails: "Mutable",
      StreamEncryption: "Mutable",
      RetentionPeriodHours: "Mutable",
      DesiredShardLevelMetrics: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      ShardCount: "Mutable",
    },
    StreamConsumer: {
      ConsumerName: "Immutable",
      StreamARN: "Immutable",
      Tags: "Immutable",
    },
  },
  KinesisAnalytics: {
    Application: {
      ApplicationName: "Immutable",
      Inputs: "Mutable",
      ApplicationDescription: "Mutable",
      ApplicationCode: "Mutable",
    },
    ApplicationOutput: {
      ApplicationName: "Immutable",
      Output: "Mutable",
    },
    ApplicationReferenceDataSource: {
      ApplicationName: "Immutable",
      ReferenceDataSource: "Mutable",
    },
  },
  KinesisAnalyticsV2: {
    Application: {
      ApplicationName: "Immutable",
      RuntimeEnvironment: "Mutable",
      RunConfiguration: "Mutable",
      ApplicationMode: "Immutable",
      ApplicationMaintenanceConfiguration: "Mutable",
      ApplicationConfiguration: "Mutable",
      ApplicationDescription: "Mutable",
      Tags: "Mutable",
      ServiceExecutionRole: "Mutable",
    },
    ApplicationCloudWatchLoggingOption: {
      ApplicationName: "Immutable",
      CloudWatchLoggingOption: "Mutable",
    },
    ApplicationOutput: {
      ApplicationName: "Immutable",
      Output: "Mutable",
    },
    ApplicationReferenceDataSource: {
      ApplicationName: "Immutable",
      ReferenceDataSource: "Mutable",
    },
  },
  KinesisFirehose: {
    DeliveryStream: {
      DeliveryStreamEncryptionConfigurationInput: "Mutable",
      HttpEndpointDestinationConfiguration: "Mutable",
      KinesisStreamSourceConfiguration: "Immutable",
      DeliveryStreamType: "Immutable",
      IcebergDestinationConfiguration: "Mutable",
      RedshiftDestinationConfiguration: "Mutable",
      AmazonopensearchserviceDestinationConfiguration: "Mutable",
      MSKSourceConfiguration: "Immutable",
      DirectPutSourceConfiguration: "Immutable",
      SplunkDestinationConfiguration: "Mutable",
      ExtendedS3DestinationConfiguration: "Mutable",
      AmazonOpenSearchServerlessDestinationConfiguration: "Mutable",
      ElasticsearchDestinationConfiguration: "Mutable",
      SnowflakeDestinationConfiguration: "Mutable",
      DatabaseSourceConfiguration: "Immutable",
      S3DestinationConfiguration: "Mutable",
      DeliveryStreamName: "Immutable",
      Tags: "Mutable",
    },
  },
  KinesisVideo: {
    SignalingChannel: {
      Type: "Mutable",
      MessageTtlSeconds: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Stream: {
      KmsKeyId: "Mutable",
      MediaType: "Mutable",
      DataRetentionInHours: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      DeviceName: "Mutable",
    },
  },
  LakeFormation: {
    DataCellsFilter: {
      TableName: "Immutable",
      ColumnNames: "Immutable",
      RowFilter: "Immutable",
      DatabaseName: "Immutable",
      TableCatalogId: "Immutable",
      Name: "Immutable",
      ColumnWildcard: "Immutable",
    },
    DataLakeSettings: {
      AllowExternalDataFiltering: "Mutable",
      ExternalDataFilteringAllowList: "Mutable",
      CreateTableDefaultPermissions: "Mutable",
      MutationType: "Mutable",
      Parameters: "Mutable",
      AllowFullTableExternalDataAccess: "Mutable",
      Admins: "Mutable",
      CreateDatabaseDefaultPermissions: "Mutable",
      AuthorizedSessionTagValueList: "Mutable",
      TrustedResourceOwners: "Mutable",
    },
    Permissions: {
      DataLakePrincipal: "Immutable",
      Resource: "Immutable",
      Permissions: "Mutable",
      PermissionsWithGrantOption: "Mutable",
    },
    PrincipalPermissions: {
      Resource: "Immutable",
      Permissions: "Immutable",
      Catalog: "Immutable",
      Principal: "Immutable",
      PermissionsWithGrantOption: "Immutable",
    },
    Resource: {
      ResourceArn: "Immutable",
      WithFederation: "Mutable",
      UseServiceLinkedRole: "Conditional",
      HybridAccessEnabled: "Mutable",
      RoleArn: "Mutable",
    },
    Tag: {
      TagKey: "Immutable",
      CatalogId: "Immutable",
      TagValues: "Mutable",
    },
    TagAssociation: {
      LFTags: "Immutable",
      Resource: "Immutable",
    },
  },
  Lambda: {
    Alias: {
      FunctionName: "Immutable",
      ProvisionedConcurrencyConfig: "Mutable",
      Description: "Mutable",
      FunctionVersion: "Mutable",
      RoutingConfig: "Mutable",
      Name: "Immutable",
    },
    CodeSigningConfig: {
      Description: "Mutable",
      AllowedPublishers: "Mutable",
      CodeSigningPolicies: "Mutable",
      Tags: "Mutable",
    },
    EventInvokeConfig: {
      FunctionName: "Immutable",
      MaximumRetryAttempts: "Mutable",
      DestinationConfig: "Mutable",
      Qualifier: "Immutable",
      MaximumEventAgeInSeconds: "Mutable",
    },
    EventSourceMapping: {
      StartingPosition: "Immutable",
      SelfManagedEventSource: "Immutable",
      ParallelizationFactor: "Mutable",
      FilterCriteria: "Mutable",
      ProvisionedPollerConfig: "Mutable",
      MetricsConfig: "Mutable",
      FunctionName: "Mutable",
      DestinationConfig: "Mutable",
      KmsKeyArn: "Mutable",
      AmazonManagedKafkaEventSourceConfig: "Mutable",
      SourceAccessConfigurations: "Mutable",
      Tags: "Mutable",
      MaximumBatchingWindowInSeconds: "Mutable",
      BatchSize: "Mutable",
      MaximumRetryAttempts: "Mutable",
      Topics: "Mutable",
      ScalingConfig: "Mutable",
      Enabled: "Mutable",
      EventSourceArn: "Immutable",
      SelfManagedKafkaEventSourceConfig: "Mutable",
      DocumentDBEventSourceConfig: "Mutable",
      TumblingWindowInSeconds: "Mutable",
      BisectBatchOnFunctionError: "Mutable",
      MaximumRecordAgeInSeconds: "Mutable",
      StartingPositionTimestamp: "Immutable",
      Queues: "Mutable",
      FunctionResponseTypes: "Mutable",
    },
    Function: {
      Description: "Mutable",
      TracingConfig: "Mutable",
      VpcConfig: "Mutable",
      RuntimeManagementConfig: "Mutable",
      ReservedConcurrentExecutions: "Mutable",
      SnapStart: "Mutable",
      FileSystemConfigs: "Mutable",
      FunctionName: "Immutable",
      Runtime: "Mutable",
      KmsKeyArn: "Mutable",
      PackageType: "Immutable",
      CodeSigningConfigArn: "Mutable",
      Layers: "Mutable",
      Tags: "Mutable",
      ImageConfig: "Mutable",
      MemorySize: "Mutable",
      DeadLetterConfig: "Mutable",
      Timeout: "Mutable",
      Handler: "Mutable",
      Code: "Mutable",
      Role: "Mutable",
      LoggingConfig: "Mutable",
      RecursiveLoop: "Mutable",
      Environment: "Mutable",
      EphemeralStorage: "Mutable",
      Architectures: "Mutable",
    },
    LayerVersion: {
      CompatibleRuntimes: "Immutable",
      LicenseInfo: "Immutable",
      Description: "Immutable",
      LayerName: "Immutable",
      Content: "Immutable",
      CompatibleArchitectures: "Immutable",
    },
    LayerVersionPermission: {
      Action: "Immutable",
      LayerVersionArn: "Immutable",
      OrganizationId: "Immutable",
      Principal: "Immutable",
    },
    Permission: {
      FunctionName: "Immutable",
      Action: "Immutable",
      EventSourceToken: "Immutable",
      FunctionUrlAuthType: "Immutable",
      SourceArn: "Immutable",
      SourceAccount: "Immutable",
      PrincipalOrgID: "Immutable",
      Principal: "Immutable",
    },
    Url: {
      Qualifier: "Immutable",
      InvokeMode: "Mutable",
      AuthType: "Mutable",
      TargetFunctionArn: "Immutable",
      Cors: "Mutable",
    },
    Version: {
      FunctionName: "Immutable",
      ProvisionedConcurrencyConfig: "Immutable",
      Description: "Immutable",
      RuntimePolicy: "Immutable",
      CodeSha256: "Immutable",
    },
  },
  LaunchWizard: {
    Deployment: {
      Specifications: "Mutable",
      WorkloadName: "Immutable",
      Tags: "Mutable",
      DeploymentPatternName: "Immutable",
      Name: "Immutable",
    },
  },
  Lex: {
    Bot: {
      Description: "Mutable",
      ErrorLogSettings: "Mutable",
      RoleArn: "Mutable",
      Name: "Mutable",
      BotTags: "Mutable",
      TestBotAliasTags: "Mutable",
      AutoBuildBotLocales: "Mutable",
      BotLocales: "Mutable",
      IdleSessionTTLInSeconds: "Mutable",
      BotFileS3Location: "Mutable",
      Replication: "Mutable",
      TestBotAliasSettings: "Mutable",
      DataPrivacy: "Mutable",
    },
    BotAlias: {
      BotVersion: "Mutable",
      Description: "Mutable",
      BotId: "Immutable",
      BotAliasLocaleSettings: "Mutable",
      ConversationLogSettings: "Mutable",
      SentimentAnalysisSettings: "Mutable",
      BotAliasName: "Mutable",
      BotAliasTags: "Mutable",
    },
    BotVersion: {
      Description: "Mutable",
      BotId: "Immutable",
      BotVersionLocaleSpecification: "Mutable",
    },
    ResourcePolicy: {
      Policy: "Mutable",
      ResourceArn: "Mutable",
    },
  },
  LicenseManager: {
    Grant: {
      Status: "Mutable",
      Principals: "Mutable",
      HomeRegion: "Mutable",
      AllowedOperations: "Mutable",
      LicenseArn: "Mutable",
      GrantName: "Mutable",
    },
    License: {
      ProductSKU: "Mutable",
      Status: "Mutable",
      ConsumptionConfiguration: "Mutable",
      Validity: "Mutable",
      ProductName: "Mutable",
      Issuer: "Mutable",
      HomeRegion: "Mutable",
      Entitlements: "Mutable",
      LicenseMetadata: "Mutable",
      LicenseName: "Mutable",
      Beneficiary: "Mutable",
    },
  },
  Lightsail: {
    Alarm: {
      MetricName: "Immutable",
      ComparisonOperator: "Mutable",
      TreatMissingData: "Mutable",
      AlarmName: "Immutable",
      ContactProtocols: "Mutable",
      MonitoredResourceName: "Immutable",
      EvaluationPeriods: "Mutable",
      NotificationEnabled: "Mutable",
      DatapointsToAlarm: "Mutable",
      NotificationTriggers: "Mutable",
      Threshold: "Mutable",
    },
    Bucket: {
      ObjectVersioning: "Mutable",
      ReadOnlyAccessAccounts: "Mutable",
      BundleId: "Mutable",
      BucketName: "Immutable",
      AccessRules: "Mutable",
      ResourcesReceivingAccess: "Mutable",
      Tags: "Mutable",
    },
    Certificate: {
      DomainName: "Immutable",
      SubjectAlternativeNames: "Immutable",
      CertificateName: "Immutable",
      Tags: "Mutable",
    },
    Container: {
      PublicDomainNames: "Mutable",
      ServiceName: "Immutable",
      PrivateRegistryAccess: "Mutable",
      ContainerServiceDeployment: "Mutable",
      IsDisabled: "Mutable",
      Scale: "Mutable",
      Power: "Mutable",
      Tags: "Mutable",
    },
    Database: {
      RelationalDatabaseName: "Immutable",
      CaCertificateIdentifier: "Mutable",
      AvailabilityZone: "Immutable",
      PreferredMaintenanceWindow: "Mutable",
      RelationalDatabaseBlueprintId: "Immutable",
      PreferredBackupWindow: "Mutable",
      MasterDatabaseName: "Immutable",
      MasterUserPassword: "Mutable",
      RelationalDatabaseParameters: "Mutable",
      RotateMasterUserPassword: "Mutable",
      MasterUsername: "Immutable",
      PubliclyAccessible: "Mutable",
      RelationalDatabaseBundleId: "Immutable",
      BackupRetention: "Mutable",
      Tags: "Mutable",
    },
    Disk: {
      SizeInGb: "Immutable",
      AvailabilityZone: "Immutable",
      AddOns: "Mutable",
      DiskName: "Immutable",
      Tags: "Mutable",
      Location: "Mutable",
    },
    Distribution: {
      IpAddressType: "Immutable",
      Origin: "Mutable",
      DistributionName: "Immutable",
      BundleId: "Mutable",
      DefaultCacheBehavior: "Mutable",
      IsEnabled: "Mutable",
      CacheBehaviorSettings: "Mutable",
      CertificateName: "Mutable",
      Tags: "Mutable",
      CacheBehaviors: "Mutable",
    },
    Domain: {
      DomainName: "Immutable",
      DomainEntries: "Mutable",
      Tags: "Mutable",
    },
    Instance: {
      InstanceName: "Immutable",
      KeyPairName: "Mutable",
      BundleId: "Immutable",
      BlueprintId: "Immutable",
      Networking: "Mutable",
      UserData: "Mutable",
      State: "Mutable",
      AvailabilityZone: "Immutable",
      AddOns: "Mutable",
      Hardware: "Mutable",
      Tags: "Mutable",
      Location: "Mutable",
    },
    InstanceSnapshot: {
      InstanceName: "Immutable",
      InstanceSnapshotName: "Immutable",
      Tags: "Mutable",
    },
    LoadBalancer: {
      IpAddressType: "Immutable",
      SessionStickinessLBCookieDurationSeconds: "Mutable",
      LoadBalancerName: "Immutable",
      AttachedInstances: "Mutable",
      InstancePort: "Immutable",
      HealthCheckPath: "Mutable",
      SessionStickinessEnabled: "Mutable",
      TlsPolicyName: "Mutable",
      Tags: "Mutable",
    },
    LoadBalancerTlsCertificate: {
      LoadBalancerName: "Immutable",
      CertificateDomainName: "Immutable",
      IsAttached: "Mutable",
      CertificateAlternativeNames: "Immutable",
      HttpsRedirectionEnabled: "Mutable",
      CertificateName: "Immutable",
    },
    StaticIp: {
      StaticIpName: "Immutable",
      AttachedTo: "Mutable",
    },
  },
  Location: {
    APIKey: {
      KeyName: "Immutable",
      Description: "Mutable",
      NoExpiry: "Mutable",
      ForceDelete: "Mutable",
      ExpireTime: "Mutable",
      ForceUpdate: "Mutable",
      Restrictions: "Mutable",
      Tags: "Mutable",
    },
    GeofenceCollection: {
      Description: "Mutable",
      KmsKeyId: "Immutable",
      CollectionName: "Immutable",
      Tags: "Mutable",
    },
    Map: {
      MapName: "Immutable",
      Description: "Mutable",
      Configuration: "Immutable",
      PricingPlan: "Mutable",
      Tags: "Mutable",
    },
    PlaceIndex: {
      IndexName: "Immutable",
      Description: "Mutable",
      PricingPlan: "Mutable",
      DataSourceConfiguration: "Mutable",
      Tags: "Mutable",
      DataSource: "Immutable",
    },
    RouteCalculator: {
      CalculatorName: "Immutable",
      Description: "Mutable",
      PricingPlan: "Mutable",
      Tags: "Mutable",
      DataSource: "Immutable",
    },
    Tracker: {
      TrackerName: "Immutable",
      Description: "Mutable",
      EventBridgeEnabled: "Mutable",
      KmsKeyId: "Immutable",
      KmsKeyEnableGeospatialQueries: "Mutable",
      PositionFiltering: "Mutable",
      Tags: "Mutable",
    },
    TrackerConsumer: {
      TrackerName: "Immutable",
      ConsumerArn: "Immutable",
    },
  },
  Logs: {
    AccountPolicy: {
      PolicyType: "Immutable",
      Scope: "Mutable",
      PolicyName: "Immutable",
      SelectionCriteria: "Mutable",
      PolicyDocument: "Mutable",
    },
    Delivery: {
      S3EnableHiveCompatiblePath: "Mutable",
      FieldDelimiter: "Mutable",
      DeliveryDestinationArn: "Immutable",
      DeliverySourceName: "Immutable",
      RecordFields: "Mutable",
      S3SuffixPath: "Mutable",
      Tags: "Mutable",
    },
    DeliveryDestination: {
      DestinationResourceArn: "Immutable",
      OutputFormat: "Immutable",
      DeliveryDestinationPolicy: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    DeliverySource: {
      ResourceArn: "Mutable",
      LogType: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Destination: {
      DestinationPolicy: "Mutable",
      DestinationName: "Immutable",
      TargetArn: "Mutable",
      Tags: "Mutable",
      RoleArn: "Mutable",
    },
    Integration: {
      IntegrationName: "Immutable",
      ResourceConfig: "Immutable",
      IntegrationType: "Immutable",
    },
    LogAnomalyDetector: {
      AnomalyVisibilityTime: "Mutable",
      FilterPattern: "Mutable",
      AccountId: "Mutable",
      KmsKeyId: "Mutable",
      LogGroupArnList: "Mutable",
      EvaluationFrequency: "Mutable",
      DetectorName: "Mutable",
    },
    LogGroup: {
      FieldIndexPolicies: "Mutable",
      RetentionInDays: "Mutable",
      KmsKeyId: "Mutable",
      LogGroupClass: "Mutable",
      ResourcePolicyDocument: "Mutable",
      LogGroupName: "Immutable",
      Tags: "Mutable",
      DataProtectionPolicy: "Mutable",
    },
    LogStream: {
      LogStreamName: "Immutable",
      LogGroupName: "Immutable",
    },
    MetricFilter: {
      MetricTransformations: "Mutable",
      FilterPattern: "Mutable",
      LogGroupName: "Immutable",
      ApplyOnTransformedLogs: "Mutable",
      FilterName: "Immutable",
    },
    QueryDefinition: {
      QueryString: "Mutable",
      LogGroupNames: "Mutable",
      QueryLanguage: "Mutable",
      Name: "Mutable",
    },
    ResourcePolicy: {
      PolicyName: "Immutable",
      PolicyDocument: "Mutable",
    },
    SubscriptionFilter: {
      FilterPattern: "Mutable",
      Distribution: "Mutable",
      LogGroupName: "Immutable",
      ApplyOnTransformedLogs: "Mutable",
      FilterName: "Immutable",
      DestinationArn: "Mutable",
      RoleArn: "Mutable",
    },
    Transformer: {
      TransformerConfig: "Mutable",
      LogGroupIdentifier: "Immutable",
    },
  },
  LookoutEquipment: {
    InferenceScheduler: {
      InferenceSchedulerName: "Immutable",
      DataUploadFrequency: "Mutable",
      ModelName: "Immutable",
      DataInputConfiguration: "Mutable",
      DataOutputConfiguration: "Mutable",
      ServerSideKmsKeyId: "Immutable",
      DataDelayOffsetInMinutes: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
  },
  LookoutMetrics: {
    Alert: {
      AlertDescription: "Immutable",
      Action: "Immutable",
      AlertName: "Immutable",
      AlertSensitivityThreshold: "Immutable",
      AnomalyDetectorArn: "Immutable",
    },
    AnomalyDetector: {
      AnomalyDetectorName: "Immutable",
      KmsKeyArn: "Mutable",
      AnomalyDetectorDescription: "Mutable",
      AnomalyDetectorConfig: "Mutable",
      MetricSetList: "Mutable",
    },
  },
  LookoutVision: {
    Project: {
      ProjectName: "Immutable",
    },
  },
  M2: {
    Application: {
      Description: "Mutable",
      KmsKeyId: "Immutable",
      Definition: "Mutable",
      EngineType: "Immutable",
      RoleArn: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Deployment: {
      EnvironmentId: "Immutable",
      ApplicationVersion: "Mutable",
      ApplicationId: "Immutable",
    },
    Environment: {
      Description: "Immutable",
      EngineVersion: "Mutable",
      KmsKeyId: "Immutable",
      HighAvailabilityConfig: "Mutable",
      PreferredMaintenanceWindow: "Mutable",
      SecurityGroupIds: "Immutable",
      SubnetIds: "Immutable",
      Name: "Immutable",
      NetworkType: "Immutable",
      EngineType: "Immutable",
      PubliclyAccessible: "Immutable",
      InstanceType: "Mutable",
      StorageConfigurations: "Immutable",
      Tags: "Mutable",
    },
  },
  MPA: {
    ApprovalTeam: {
      ApprovalStrategy: "Mutable",
      Policies: "Immutable",
      Description: "Mutable",
      Approvers: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    IdentitySource: {
      IdentitySourceParameters: "Immutable",
      Tags: "Mutable",
    },
  },
  MSK: {
    BatchScramSecret: {
      ClusterArn: "Immutable",
      SecretArnList: "Mutable",
    },
    Cluster: {
      KafkaVersion: "Mutable",
      NumberOfBrokerNodes: "Mutable",
      EncryptionInfo: "Mutable",
      OpenMonitoring: "Mutable",
      CurrentVersion: "Mutable",
      StorageMode: "Mutable",
      ConfigurationInfo: "Mutable",
      BrokerNodeGroupInfo: "Mutable",
      EnhancedMonitoring: "Mutable",
      ClusterName: "Immutable",
      ClientAuthentication: "Mutable",
      LoggingInfo: "Mutable",
      Tags: "Mutable",
    },
    ClusterPolicy: {
      Policy: "Mutable",
      ClusterArn: "Immutable",
    },
    Configuration: {
      Description: "Mutable",
      LatestRevision: "Mutable",
      ServerProperties: "Mutable",
      KafkaVersionsList: "Immutable",
      Name: "Immutable",
    },
    Replicator: {
      Description: "Immutable",
      ServiceExecutionRoleArn: "Immutable",
      ReplicatorName: "Immutable",
      ReplicationInfoList: "Mutable",
      KafkaClusters: "Immutable",
      Tags: "Mutable",
    },
    ServerlessCluster: {
      VpcConfigs: "Immutable",
      ClusterName: "Immutable",
      ClientAuthentication: "Immutable",
      Tags: "Immutable",
    },
    VpcConnection: {
      SecurityGroups: "Immutable",
      TargetClusterArn: "Immutable",
      ClientSubnets: "Immutable",
      VpcId: "Immutable",
      Authentication: "Immutable",
      Tags: "Mutable",
    },
  },
  MWAA: {
    Environment: {
      AirflowConfigurationOptions: "Mutable",
      PluginsS3Path: "Mutable",
      WorkerReplacementStrategy: "Mutable",
      StartupScriptS3Path: "Mutable",
      Name: "Immutable",
      ExecutionRoleArn: "Mutable",
      StartupScriptS3ObjectVersion: "Mutable",
      DagS3Path: "Mutable",
      LoggingConfiguration: "Mutable",
      WebserverAccessMode: "Mutable",
      NetworkConfiguration: "Mutable",
      KmsKey: "Immutable",
      Tags: "Mutable",
      MaxWorkers: "Mutable",
      EnvironmentClass: "Mutable",
      Schedulers: "Mutable",
      RequirementsS3Path: "Mutable",
      MinWorkers: "Mutable",
      AirflowVersion: "Mutable",
      RequirementsS3ObjectVersion: "Mutable",
      SourceBucketArn: "Mutable",
      WeeklyMaintenanceWindowStart: "Mutable",
      PluginsS3ObjectVersion: "Mutable",
      EndpointManagement: "Immutable",
      MaxWebservers: "Mutable",
      MinWebservers: "Mutable",
    },
  },
  Macie: {
    AllowList: {
      Description: "Mutable",
      Criteria: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    CustomDataIdentifier: {
      Description: "Immutable",
      Keywords: "Immutable",
      Regex: "Immutable",
      IgnoreWords: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
      MaximumMatchDistance: "Immutable",
    },
    FindingsFilter: {
      Action: "Mutable",
      Description: "Mutable",
      Position: "Mutable",
      FindingCriteria: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Session: {
      Status: "Mutable",
      FindingPublishingFrequency: "Mutable",
    },
  },
  ManagedBlockchain: {
    Accessor: {
      NetworkType: "Immutable",
      Tags: "Mutable",
      AccessorType: "Immutable",
    },
    Member: {
      MemberConfiguration: "Mutable",
      NetworkConfiguration: "Mutable",
      NetworkId: "Mutable",
      InvitationId: "Mutable",
    },
    Node: {
      MemberId: "Mutable",
      NetworkId: "Mutable",
      NodeConfiguration: "Mutable",
    },
  },
  MediaConnect: {
    Bridge: {
      SourceFailoverConfig: "Mutable",
      IngressGatewayBridge: "Mutable",
      EgressGatewayBridge: "Mutable",
      Outputs: "Mutable",
      PlacementArn: "Mutable",
      Sources: "Mutable",
      Name: "Mutable",
    },
    BridgeOutput: {
      BridgeArn: "Immutable",
      NetworkOutput: "Mutable",
      Name: "Immutable",
    },
    BridgeSource: {
      NetworkSource: "Mutable",
      BridgeArn: "Immutable",
      FlowSource: "Mutable",
      Name: "Immutable",
    },
    Flow: {
      SourceMonitoringConfig: "Mutable",
      SourceFailoverConfig: "Mutable",
      VpcInterfaces: "Mutable",
      MediaStreams: "Mutable",
      NdiConfig: "Mutable",
      AvailabilityZone: "Immutable",
      Maintenance: "Mutable",
      Source: "Mutable",
      FlowSize: "Mutable",
      Name: "Immutable",
    },
    FlowEntitlement: {
      DataTransferSubscriberFeePercent: "Immutable",
      Description: "Mutable",
      Encryption: "Mutable",
      Subscribers: "Mutable",
      FlowArn: "Mutable",
      EntitlementStatus: "Mutable",
      Name: "Immutable",
    },
    FlowOutput: {
      Destination: "Mutable",
      SmoothingLatency: "Mutable",
      StreamId: "Mutable",
      Description: "Mutable",
      NdiSpeedHqQuality: "Mutable",
      Port: "Mutable",
      RemoteId: "Mutable",
      MediaStreamOutputConfigurations: "Mutable",
      Encryption: "Mutable",
      OutputStatus: "Mutable",
      Name: "Immutable",
      VpcInterfaceAttachment: "Mutable",
      MinLatency: "Mutable",
      Protocol: "Mutable",
      FlowArn: "Mutable",
      NdiProgramName: "Mutable",
      MaxLatency: "Mutable",
      CidrAllowList: "Mutable",
    },
    FlowSource: {
      StreamId: "Mutable",
      Description: "Mutable",
      SenderIpAddress: "Mutable",
      IngestPort: "Mutable",
      SenderControlPort: "Mutable",
      Decryption: "Mutable",
      GatewayBridgeSource: "Mutable",
      SourceListenerAddress: "Mutable",
      SourceListenerPort: "Mutable",
      Name: "Immutable",
      WhitelistCidr: "Mutable",
      EntitlementArn: "Mutable",
      MinLatency: "Mutable",
      VpcInterfaceName: "Mutable",
      MaxBitrate: "Mutable",
      Protocol: "Mutable",
      FlowArn: "Mutable",
      MaxLatency: "Mutable",
    },
    FlowVpcInterface: {
      SubnetId: "Mutable",
      FlowArn: "Immutable",
      SecurityGroupIds: "Mutable",
      RoleArn: "Mutable",
      Name: "Immutable",
    },
    Gateway: {
      Networks: "Immutable",
      EgressCidrBlocks: "Immutable",
      Name: "Immutable",
    },
  },
  MediaConvert: {
    JobTemplate: {
      Category: "Mutable",
      Description: "Mutable",
      AccelerationSettings: "Mutable",
      Priority: "Mutable",
      StatusUpdateInterval: "Mutable",
      SettingsJson: "Mutable",
      Queue: "Mutable",
      HopDestinations: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Preset: {
      Category: "Mutable",
      Description: "Mutable",
      SettingsJson: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Queue: {
      Status: "Mutable",
      Description: "Mutable",
      PricingPlan: "Mutable",
      Tags: "Mutable",
      ConcurrentJobs: "Mutable",
      Name: "Immutable",
    },
  },
  MediaLive: {
    Channel: {
      InputAttachments: "Mutable",
      InputSpecification: "Mutable",
      Destinations: "Mutable",
      DryRun: "Mutable",
      Vpc: "Immutable",
      ChannelEngineVersion: "Mutable",
      Maintenance: "Mutable",
      LogLevel: "Mutable",
      RoleArn: "Mutable",
      Name: "Mutable",
      ChannelClass: "Mutable",
      EncoderSettings: "Mutable",
      AnywhereSettings: "Mutable",
      CdiInputSpecification: "Mutable",
      Tags: "Mutable",
    },
    ChannelPlacementGroup: {
      ClusterId: "Immutable",
      Nodes: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    CloudWatchAlarmTemplate: {
      TargetResourceType: "Mutable",
      ComparisonOperator: "Mutable",
      TreatMissingData: "Mutable",
      Description: "Mutable",
      Period: "Mutable",
      EvaluationPeriods: "Mutable",
      GroupIdentifier: "Mutable",
      Name: "Mutable",
      MetricName: "Mutable",
      Statistic: "Mutable",
      DatapointsToAlarm: "Mutable",
      Tags: "Immutable",
      Threshold: "Mutable",
    },
    CloudWatchAlarmTemplateGroup: {
      Description: "Mutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    Cluster: {
      NetworkSettings: "Mutable",
      InstanceRoleArn: "Immutable",
      ClusterType: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    EventBridgeRuleTemplate: {
      Description: "Mutable",
      EventTargets: "Mutable",
      EventType: "Mutable",
      Tags: "Immutable",
      GroupIdentifier: "Mutable",
      Name: "Mutable",
    },
    EventBridgeRuleTemplateGroup: {
      Description: "Mutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    Input: {
      SrtSettings: "Mutable",
      InputNetworkLocation: "Immutable",
      Destinations: "Mutable",
      Vpc: "Immutable",
      MediaConnectFlows: "Mutable",
      Sources: "Mutable",
      RoleArn: "Mutable",
      Name: "Mutable",
      Type: "Immutable",
      Smpte2110ReceiverGroupSettings: "Mutable",
      SdiSources: "Mutable",
      InputSecurityGroups: "Mutable",
      MulticastSettings: "Mutable",
      InputDevices: "Mutable",
      Tags: "Mutable",
    },
    InputSecurityGroup: {
      WhitelistRules: "Mutable",
      Tags: "Immutable",
    },
    Multiplex: {
      MultiplexSettings: "Mutable",
      AvailabilityZones: "Immutable",
      Destinations: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Multiplexprogram: {
      MultiplexId: "Immutable",
      PreferredChannelPipeline: "Mutable",
      PacketIdentifiersMap: "Mutable",
      PipelineDetails: "Mutable",
      MultiplexProgramSettings: "Mutable",
      ProgramName: "Immutable",
    },
    Network: {
      IpPools: "Mutable",
      Routes: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    SdiSource: {
      Type: "Mutable",
      Mode: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    SignalMap: {
      Description: "Mutable",
      EventBridgeRuleTemplateGroupIdentifiers: "Mutable",
      DiscoveryEntryPointArn: "Mutable",
      CloudWatchAlarmTemplateGroupIdentifiers: "Mutable",
      ForceRediscovery: "Mutable",
      Tags: "Immutable",
      Name: "Mutable",
    },
  },
  MediaPackage: {
    Asset: {
      SourceArn: "Mutable",
      ResourceId: "Mutable",
      Id: "Immutable",
      PackagingGroupId: "Mutable",
      EgressEndpoints: "Mutable",
      Tags: "Immutable",
      SourceRoleArn: "Mutable",
    },
    Channel: {
      Description: "Mutable",
      IngressAccessLogs: "Mutable",
      HlsIngest: "Mutable",
      Id: "Immutable",
      EgressAccessLogs: "Mutable",
      Tags: "Immutable",
    },
    OriginEndpoint: {
      MssPackage: "Mutable",
      Description: "Mutable",
      ChannelId: "Mutable",
      TimeDelaySeconds: "Mutable",
      Origination: "Mutable",
      Authorization: "Mutable",
      ManifestName: "Mutable",
      CmafPackage: "Mutable",
      Whitelist: "Mutable",
      Id: "Immutable",
      HlsPackage: "Mutable",
      DashPackage: "Mutable",
      Tags: "Mutable",
      StartoverWindowSeconds: "Mutable",
    },
    PackagingConfiguration: {
      MssPackage: "Mutable",
      CmafPackage: "Mutable",
      Id: "Immutable",
      HlsPackage: "Mutable",
      PackagingGroupId: "Mutable",
      DashPackage: "Mutable",
      Tags: "Mutable",
    },
    PackagingGroup: {
      Authorization: "Mutable",
      Id: "Immutable",
      EgressAccessLogs: "Mutable",
      Tags: "Immutable",
    },
  },
  MediaPackageV2: {
    Channel: {
      InputSwitchConfiguration: "Mutable",
      ChannelName: "Immutable",
      Description: "Mutable",
      InputType: "Immutable",
      OutputHeaderConfiguration: "Mutable",
      ChannelGroupName: "Immutable",
      Tags: "Mutable",
    },
    ChannelGroup: {
      Description: "Mutable",
      ChannelGroupName: "Immutable",
      Tags: "Mutable",
    },
    ChannelPolicy: {
      Policy: "Mutable",
      ChannelName: "Immutable",
      ChannelGroupName: "Immutable",
    },
    OriginEndpoint: {
      Description: "Mutable",
      ChannelName: "Immutable",
      LowLatencyHlsManifests: "Mutable",
      ContainerType: "Mutable",
      ForceEndpointErrorConfiguration: "Mutable",
      OriginEndpointName: "Immutable",
      HlsManifests: "Mutable",
      ChannelGroupName: "Immutable",
      DashManifests: "Mutable",
      Segment: "Mutable",
      Tags: "Mutable",
      StartoverWindowSeconds: "Mutable",
    },
    OriginEndpointPolicy: {
      Policy: "Mutable",
      ChannelName: "Immutable",
      OriginEndpointName: "Immutable",
      ChannelGroupName: "Immutable",
      CdnAuthConfiguration: "Mutable",
    },
  },
  MediaStore: {
    Container: {
      Policy: "Mutable",
      MetricPolicy: "Mutable",
      ContainerName: "Immutable",
      CorsPolicy: "Mutable",
      LifecyclePolicy: "Mutable",
      AccessLoggingEnabled: "Mutable",
      Tags: "Mutable",
    },
  },
  MediaTailor: {
    Channel: {
      FillerSlate: "Mutable",
      ChannelName: "Immutable",
      Tier: "Immutable",
      Audiences: "Mutable",
      Outputs: "Mutable",
      LogConfiguration: "Mutable",
      PlaybackMode: "Mutable",
      Tags: "Mutable",
      TimeShiftConfiguration: "Mutable",
    },
    ChannelPolicy: {
      Policy: "Mutable",
      ChannelName: "Immutable",
    },
    LiveSource: {
      LiveSourceName: "Immutable",
      SourceLocationName: "Immutable",
      HttpPackageConfigurations: "Mutable",
      Tags: "Mutable",
    },
    PlaybackConfiguration: {
      Bumper: "Mutable",
      DashConfiguration: "Mutable",
      InsertionMode: "Mutable",
      CdnConfiguration: "Mutable",
      ManifestProcessingRules: "Mutable",
      PersonalizationThresholdSeconds: "Mutable",
      LivePreRollConfiguration: "Mutable",
      HlsConfiguration: "Mutable",
      LogConfiguration: "Mutable",
      VideoContentSourceUrl: "Mutable",
      Name: "Immutable",
      TranscodeProfileName: "Mutable",
      ConfigurationAliases: "Mutable",
      AdDecisionServerUrl: "Mutable",
      AdConditioningConfiguration: "Mutable",
      SlateAdUrl: "Mutable",
      AvailSuppression: "Mutable",
      Tags: "Mutable",
    },
    SourceLocation: {
      SourceLocationName: "Immutable",
      DefaultSegmentDeliveryConfiguration: "Mutable",
      SegmentDeliveryConfigurations: "Mutable",
      HttpConfiguration: "Mutable",
      AccessConfiguration: "Mutable",
      Tags: "Mutable",
    },
    VodSource: {
      VodSourceName: "Immutable",
      SourceLocationName: "Immutable",
      HttpPackageConfigurations: "Mutable",
      Tags: "Mutable",
    },
  },
  MemoryDB: {
    ACL: {
      ACLName: "Immutable",
      UserNames: "Mutable",
      Tags: "Mutable",
    },
    Cluster: {
      NumReplicasPerShard: "Mutable",
      Description: "Mutable",
      FinalSnapshotName: "Mutable",
      ParameterGroupName: "Mutable",
      SnapshotArns: "Immutable",
      Port: "Immutable",
      ACLName: "Mutable",
      SnapshotName: "Immutable",
      NumShards: "Mutable",
      TLSEnabled: "Immutable",
      NetworkType: "Immutable",
      ClusterName: "Immutable",
      SnsTopicArn: "Mutable",
      Engine: "Mutable",
      Tags: "Mutable",
      MultiRegionClusterName: "Immutable",
      EngineVersion: "Mutable",
      KmsKeyId: "Immutable",
      SnsTopicStatus: "Mutable",
      SubnetGroupName: "Immutable",
      AutoMinorVersionUpgrade: "Mutable",
      SecurityGroupIds: "Mutable",
      ClusterEndpoint: "Mutable",
      SnapshotWindow: "Mutable",
      SnapshotRetentionLimit: "Mutable",
      DataTiering: "Immutable",
      NodeType: "Mutable",
      IpDiscovery: "Mutable",
      MaintenanceWindow: "Mutable",
    },
    MultiRegionCluster: {
      MultiRegionParameterGroupName: "Immutable",
      Description: "Mutable",
      EngineVersion: "Immutable",
      MultiRegionClusterNameSuffix: "Immutable",
      TLSEnabled: "Immutable",
      NodeType: "Mutable",
      UpdateStrategy: "Mutable",
      Engine: "Mutable",
      Tags: "Mutable",
      NumShards: "Mutable",
    },
    ParameterGroup: {
      Description: "Immutable",
      Parameters: "Mutable",
      ParameterGroupName: "Immutable",
      Family: "Immutable",
      Tags: "Mutable",
    },
    SubnetGroup: {
      Description: "Mutable",
      SubnetGroupName: "Immutable",
      SubnetIds: "Mutable",
      Tags: "Mutable",
    },
    User: {
      AuthenticationMode: "Mutable",
      UserName: "Immutable",
      AccessString: "Mutable",
      Tags: "Mutable",
    },
  },
  Neptune: {
    DBCluster: {
      StorageEncrypted: "Immutable",
      RestoreToTime: "Immutable",
      AssociatedRoles: "Mutable",
      SnapshotIdentifier: "Immutable",
      DBClusterIdentifier: "Immutable",
      PreferredBackupWindow: "Mutable",
      DBPort: "Mutable",
      VpcSecurityGroupIds: "Mutable",
      CopyTagsToSnapshot: "Mutable",
      RestoreType: "Immutable",
      Tags: "Mutable",
      EngineVersion: "Mutable",
      KmsKeyId: "Immutable",
      AvailabilityZones: "Immutable",
      ServerlessScalingConfiguration: "Mutable",
      PreferredMaintenanceWindow: "Mutable",
      IamAuthEnabled: "Mutable",
      DBSubnetGroupName: "Immutable",
      DeletionProtection: "Mutable",
      UseLatestRestorableTime: "Immutable",
      SourceDBClusterIdentifier: "Immutable",
      DBClusterParameterGroupName: "Mutable",
      BackupRetentionPeriod: "Mutable",
      DBInstanceParameterGroupName: "Mutable",
      EnableCloudwatchLogsExports: "Mutable",
    },
    DBClusterParameterGroup: {
      Description: "Immutable",
      Parameters: "Mutable",
      Family: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    DBInstance: {
      DBParameterGroupName: "Conditional",
      DBInstanceClass: "Mutable",
      AllowMajorVersionUpgrade: "Mutable",
      DBClusterIdentifier: "Immutable",
      AvailabilityZone: "Immutable",
      PreferredMaintenanceWindow: "Conditional",
      AutoMinorVersionUpgrade: "Conditional",
      DBSubnetGroupName: "Immutable",
      DBInstanceIdentifier: "Immutable",
      Tags: "Mutable",
    },
    DBParameterGroup: {
      Description: "Immutable",
      Parameters: "Mutable",
      Family: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    DBSubnetGroup: {
      DBSubnetGroupName: "Immutable",
      DBSubnetGroupDescription: "Mutable",
      SubnetIds: "Mutable",
      Tags: "Mutable",
    },
    EventSubscription: {
      SourceType: "Mutable",
      Enabled: "Mutable",
      EventCategories: "Mutable",
      SnsTopicArn: "Immutable",
      SourceIds: "Mutable",
    },
  },
  NeptuneGraph: {
    Graph: {
      PublicConnectivity: "Mutable",
      GraphName: "Immutable",
      ReplicaCount: "Immutable",
      ProvisionedMemory: "Conditional",
      DeletionProtection: "Mutable",
      VectorSearchConfiguration: "Immutable",
      Tags: "Mutable",
    },
    PrivateGraphEndpoint: {
      VpcId: "Immutable",
      GraphIdentifier: "Immutable",
      SecurityGroupIds: "Immutable",
      SubnetIds: "Immutable",
    },
  },
  NetworkFirewall: {
    Firewall: {
      FirewallPolicyArn: "Mutable",
      Description: "Mutable",
      SubnetChangeProtection: "Mutable",
      TransitGatewayId: "Mutable",
      AvailabilityZoneChangeProtection: "Mutable",
      FirewallName: "Immutable",
      VpcId: "Immutable",
      DeleteProtection: "Mutable",
      FirewallPolicyChangeProtection: "Mutable",
      AvailabilityZoneMappings: "Mutable",
      EnabledAnalysisTypes: "Mutable",
      Tags: "Mutable",
      SubnetMappings: "Mutable",
    },
    FirewallPolicy: {
      Description: "Mutable",
      FirewallPolicyName: "Immutable",
      Tags: "Mutable",
      FirewallPolicy: "Mutable",
    },
    LoggingConfiguration: {
      EnableMonitoringDashboard: "Mutable",
      FirewallName: "Immutable",
      FirewallArn: "Immutable",
      LoggingConfiguration: "Mutable",
    },
    RuleGroup: {
      Type: "Immutable",
      Description: "Mutable",
      Capacity: "Immutable",
      RuleGroupName: "Immutable",
      SummaryConfiguration: "Mutable",
      RuleGroup: "Mutable",
      Tags: "Mutable",
    },
    TLSInspectionConfiguration: {
      Description: "Mutable",
      TLSInspectionConfigurationName: "Immutable",
      Tags: "Mutable",
      TLSInspectionConfiguration: "Mutable",
    },
    VpcEndpointAssociation: {
      SubnetMapping: "Immutable",
      Description: "Immutable",
      VpcId: "Immutable",
      FirewallArn: "Immutable",
      Tags: "Mutable",
    },
  },
  NetworkManager: {
    ConnectAttachment: {
      ProposedSegmentChange: "Mutable",
      Options: "Immutable",
      TransportAttachmentId: "Immutable",
      CoreNetworkId: "Immutable",
      ProposedNetworkFunctionGroupChange: "Mutable",
      NetworkFunctionGroupName: "Mutable",
      Tags: "Mutable",
      EdgeLocation: "Immutable",
    },
    ConnectPeer: {
      ConnectAttachmentId: "Immutable",
      PeerAddress: "Immutable",
      SubnetArn: "Immutable",
      CoreNetworkAddress: "Immutable",
      BgpOptions: "Immutable",
      InsideCidrBlocks: "Immutable",
      Tags: "Mutable",
    },
    CoreNetwork: {
      GlobalNetworkId: "Immutable",
      Description: "Mutable",
      PolicyDocument: "Mutable",
      Tags: "Mutable",
    },
    CustomerGatewayAssociation: {
      GlobalNetworkId: "Immutable",
      DeviceId: "Immutable",
      CustomerGatewayArn: "Immutable",
      LinkId: "Immutable",
    },
    Device: {
      SiteId: "Mutable",
      AWSLocation: "Mutable",
      Type: "Mutable",
      Description: "Mutable",
      GlobalNetworkId: "Immutable",
      SerialNumber: "Mutable",
      Model: "Mutable",
      Vendor: "Mutable",
      Tags: "Mutable",
      Location: "Mutable",
    },
    DirectConnectGatewayAttachment: {
      ProposedSegmentChange: "Mutable",
      CoreNetworkId: "Immutable",
      ProposedNetworkFunctionGroupChange: "Mutable",
      EdgeLocations: "Mutable",
      DirectConnectGatewayArn: "Immutable",
      Tags: "Mutable",
    },
    GlobalNetwork: {
      Description: "Mutable",
      State: "Mutable",
      CreatedAt: "Mutable",
      Tags: "Mutable",
    },
    Link: {
      SiteId: "Immutable",
      Type: "Mutable",
      GlobalNetworkId: "Immutable",
      Description: "Mutable",
      Bandwidth: "Mutable",
      Tags: "Mutable",
      Provider: "Mutable",
    },
    LinkAssociation: {
      GlobalNetworkId: "Immutable",
      DeviceId: "Immutable",
      LinkId: "Immutable",
    },
    Site: {
      Description: "Mutable",
      GlobalNetworkId: "Immutable",
      Tags: "Mutable",
      Location: "Mutable",
    },
    SiteToSiteVpnAttachment: {
      ProposedSegmentChange: "Mutable",
      CoreNetworkId: "Immutable",
      ProposedNetworkFunctionGroupChange: "Mutable",
      VpnConnectionArn: "Immutable",
      NetworkFunctionGroupName: "Mutable",
      Tags: "Mutable",
    },
    TransitGatewayPeering: {
      CoreNetworkId: "Immutable",
      TransitGatewayArn: "Immutable",
      Tags: "Mutable",
    },
    TransitGatewayRegistration: {
      GlobalNetworkId: "Immutable",
      TransitGatewayArn: "Immutable",
    },
    TransitGatewayRouteTableAttachment: {
      ProposedSegmentChange: "Mutable",
      TransitGatewayRouteTableArn: "Immutable",
      ProposedNetworkFunctionGroupChange: "Mutable",
      PeeringId: "Immutable",
      NetworkFunctionGroupName: "Mutable",
      Tags: "Mutable",
    },
    VpcAttachment: {
      ProposedSegmentChange: "Mutable",
      SubnetArns: "Mutable",
      Options: "Mutable",
      CoreNetworkId: "Immutable",
      ProposedNetworkFunctionGroupChange: "Mutable",
      VpcArn: "Immutable",
      Tags: "Mutable",
    },
  },
  Notifications: {
    ChannelAssociation: {
      NotificationConfigurationArn: "Immutable",
      Arn: "Immutable",
    },
    EventRule: {
      EventPattern: "Mutable",
      EventType: "Immutable",
      NotificationConfigurationArn: "Immutable",
      Regions: "Mutable",
      Source: "Immutable",
    },
    ManagedNotificationAccountContactAssociation: {
      ContactIdentifier: "Immutable",
      ManagedNotificationConfigurationArn: "Immutable",
    },
    ManagedNotificationAdditionalChannelAssociation: {
      ChannelArn: "Immutable",
      ManagedNotificationConfigurationArn: "Immutable",
    },
    NotificationConfiguration: {
      Description: "Mutable",
      AggregationDuration: "Mutable",
      Tags: "Immutable",
      Name: "Mutable",
    },
    NotificationHub: {
      Region: "Immutable",
    },
    OrganizationalUnitAssociation: {
      OrganizationalUnitId: "Immutable",
      NotificationConfigurationArn: "Immutable",
    },
  },
  NotificationsContacts: {
    EmailContact: {
      EmailAddress: "Immutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
  },
  ODB: {
    CloudAutonomousVmCluster: {
      CloudExadataInfrastructureId: "Immutable",
      LicenseModel: "Immutable",
      Description: "Immutable",
      CpuCoreCountPerNode: "Immutable",
      MemoryPerOracleComputeUnitInGBs: "Immutable",
      DbServers: "Immutable",
      TotalContainerDatabases: "Immutable",
      TimeZone: "Immutable",
      AutonomousDataStorageSizeInTBs: "Immutable",
      ScanListenerPortNonTls: "Immutable",
      OdbNetworkId: "Immutable",
      IsMtlsEnabledVmCluster: "Immutable",
      DisplayName: "Immutable",
      ScanListenerPortTls: "Immutable",
      MaintenanceWindow: "Immutable",
      Tags: "Mutable",
    },
    CloudExadataInfrastructure: {
      StorageServerType: "Immutable",
      DatabaseServerType: "Immutable",
      Shape: "Immutable",
      StorageCount: "Immutable",
      DisplayName: "Immutable",
      AvailabilityZoneId: "Immutable",
      CustomerContactsToSendToOCI: "Immutable",
      AvailabilityZone: "Immutable",
      MaintenanceWindow: "Mutable",
      Tags: "Mutable",
      ComputeCount: "Immutable",
    },
    CloudVmCluster: {
      CloudExadataInfrastructureId: "Immutable",
      DataCollectionOptions: "Immutable",
      LicenseModel: "Immutable",
      MemorySizeInGBs: "Immutable",
      CpuCoreCount: "Immutable",
      SshPublicKeys: "Immutable",
      Hostname: "Immutable",
      SystemVersion: "Immutable",
      DataStorageSizeInTBs: "Immutable",
      IsLocalBackupEnabled: "Immutable",
      DbServers: "Immutable",
      DbNodes: "Conditional",
      TimeZone: "Immutable",
      IsSparseDiskgroupEnabled: "Immutable",
      GiVersion: "Immutable",
      OdbNetworkId: "Immutable",
      DbNodeStorageSizeInGBs: "Immutable",
      DisplayName: "Immutable",
      ClusterName: "Immutable",
      Tags: "Mutable",
      ScanListenerPortTcp: "Immutable",
    },
    OdbNetwork: {
      DefaultDnsPrefix: "Immutable",
      CustomDomainName: "Immutable",
      ZeroEtlAccess: "Mutable",
      DeleteAssociatedResources: "Mutable",
      AvailabilityZoneId: "Immutable",
      DisplayName: "Mutable",
      S3PolicyDocument: "Mutable",
      AvailabilityZone: "Immutable",
      BackupSubnetCidr: "Immutable",
      ClientSubnetCidr: "Immutable",
      Tags: "Mutable",
      S3Access: "Mutable",
    },
    OdbPeeringConnection: {
      OdbNetworkId: "Immutable",
      DisplayName: "Immutable",
      PeerNetworkId: "Immutable",
      Tags: "Mutable",
    },
  },
  OSIS: {
    Pipeline: {
      PipelineConfigurationBody: "Mutable",
      BufferOptions: "Mutable",
      MinUnits: "Mutable",
      PipelineName: "Immutable",
      VpcOptions: "Mutable",
      MaxUnits: "Mutable",
      LogPublishingOptions: "Mutable",
      EncryptionAtRestOptions: "Mutable",
      Tags: "Mutable",
    },
  },
  Oam: {
    Link: {
      SinkIdentifier: "Immutable",
      LabelTemplate: "Immutable",
      ResourceTypes: "Mutable",
      LinkConfiguration: "Mutable",
      Tags: "Mutable",
    },
    Sink: {
      Policy: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  ObservabilityAdmin: {
    OrganizationTelemetryRule: {
      Rule: "Mutable",
      RuleName: "Immutable",
      Tags: "Mutable",
    },
    TelemetryRule: {
      Rule: "Mutable",
      RuleName: "Immutable",
      Tags: "Mutable",
    },
  },
  Omics: {
    AnnotationStore: {
      StoreFormat: "Immutable",
      Description: "Mutable",
      Reference: "Immutable",
      SseConfig: "Immutable",
      StoreOptions: "Immutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    ReferenceStore: {
      Description: "Immutable",
      SseConfig: "Immutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    RunGroup: {
      MaxDuration: "Mutable",
      MaxGpus: "Mutable",
      MaxRuns: "Mutable",
      MaxCpus: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    SequenceStore: {
      Description: "Mutable",
      PropagatedSetLevelTags: "Mutable",
      FallbackLocation: "Mutable",
      SseConfig: "Immutable",
      AccessLogLocation: "Mutable",
      ETagAlgorithmFamily: "Immutable",
      S3AccessPolicy: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    VariantStore: {
      Description: "Mutable",
      Reference: "Immutable",
      SseConfig: "Immutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    Workflow: {
      ParameterTemplate: "Immutable",
      Description: "Mutable",
      StorageType: "Mutable",
      StorageCapacity: "Immutable",
      DefinitionUri: "Immutable",
      Name: "Mutable",
      ParameterTemplatePath: "Immutable",
      readmeMarkdown: "Mutable",
      DefinitionRepository: "Immutable",
      Accelerators: "Immutable",
      WorkflowBucketOwnerId: "Immutable",
      readmePath: "Immutable",
      Main: "Immutable",
      Engine: "Immutable",
      Tags: "Mutable",
      readmeUri: "Immutable",
    },
    WorkflowVersion: {
      ParameterTemplate: "Immutable",
      Description: "Mutable",
      StorageType: "Mutable",
      StorageCapacity: "Mutable",
      WorkflowId: "Immutable",
      DefinitionUri: "Immutable",
      ParameterTemplatePath: "Immutable",
      readmeMarkdown: "Mutable",
      DefinitionRepository: "Immutable",
      Accelerators: "Immutable",
      WorkflowBucketOwnerId: "Immutable",
      readmePath: "Immutable",
      VersionName: "Immutable",
      Main: "Immutable",
      Engine: "Immutable",
      Tags: "Mutable",
      readmeUri: "Immutable",
    },
  },
  OpenSearchServerless: {
    AccessPolicy: {
      Policy: "Mutable",
      Type: "Immutable",
      Description: "Mutable",
      Name: "Immutable",
    },
    Collection: {
      Type: "Immutable",
      Description: "Mutable",
      StandbyReplicas: "Mutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    Index: {
      IndexName: "Immutable",
      Mappings: "Mutable",
      CollectionEndpoint: "Immutable",
      Settings: "Mutable",
    },
    LifecyclePolicy: {
      Policy: "Mutable",
      Type: "Immutable",
      Description: "Mutable",
      Name: "Immutable",
    },
    SecurityConfig: {
      Type: "Immutable",
      Description: "Mutable",
      SamlOptions: "Mutable",
      IamFederationOptions: "Mutable",
      Name: "Immutable",
      IamIdentityCenterOptions: "Mutable",
    },
    SecurityPolicy: {
      Policy: "Mutable",
      Type: "Immutable",
      Description: "Mutable",
      Name: "Immutable",
    },
    VpcEndpoint: {
      VpcId: "Immutable",
      SecurityGroupIds: "Mutable",
      SubnetIds: "Mutable",
      Name: "Immutable",
    },
  },
  OpenSearchService: {
    Application: {
      DataSources: "Mutable",
      AppConfigs: "Mutable",
      Endpoint: "Mutable",
      Tags: "Mutable",
      IamIdentityCenterOptions: "Mutable",
      Name: "Immutable",
    },
    Domain: {
      SkipShardMigrationWait: "Mutable",
      EngineVersion: "Mutable",
      SoftwareUpdateOptions: "Mutable",
      DomainName: "Immutable",
      LogPublishingOptions: "Mutable",
      SnapshotOptions: "Mutable",
      VPCOptions: "Mutable",
      NodeToNodeEncryptionOptions: "Mutable",
      AccessPolicies: "Mutable",
      DomainEndpointOptions: "Mutable",
      CognitoOptions: "Mutable",
      AdvancedOptions: "Mutable",
      AdvancedSecurityOptions: "Mutable",
      IPAddressType: "Mutable",
      IdentityCenterOptions: "Mutable",
      EBSOptions: "Mutable",
      EncryptionAtRestOptions: "Mutable",
      OffPeakWindowOptions: "Mutable",
      Tags: "Mutable",
      ClusterConfig: "Mutable",
    },
  },
  OpsWorks: {
    App: {
      AppSource: "Mutable",
      Attributes: "Mutable",
      DataSources: "Mutable",
      Description: "Mutable",
      Domains: "Mutable",
      EnableSsl: "Mutable",
      Environment: "Mutable",
      Name: "Mutable",
      Shortname: "Immutable",
      SslConfiguration: "Mutable",
      StackId: "Immutable",
      Type: "Mutable",
    },
    ElasticLoadBalancerAttachment: {
      ElasticLoadBalancerName: "Mutable",
      LayerId: "Mutable",
    },
    Instance: {
      AgentVersion: "Mutable",
      AmiId: "Mutable",
      Architecture: "Mutable",
      AutoScalingType: "Immutable",
      AvailabilityZone: "Immutable",
      BlockDeviceMappings: "Immutable",
      EbsOptimized: "Immutable",
      ElasticIps: "Mutable",
      Hostname: "Mutable",
      InstallUpdatesOnBoot: "Mutable",
      InstanceType: "Mutable",
      LayerIds: "Mutable",
      Os: "Mutable",
      RootDeviceType: "Immutable",
      SshKeyName: "Mutable",
      StackId: "Immutable",
      SubnetId: "Immutable",
      Tenancy: "Immutable",
      TimeBasedAutoScaling: "Immutable",
      VirtualizationType: "Immutable",
      Volumes: "Mutable",
    },
    Layer: {
      Attributes: "Mutable",
      AutoAssignElasticIps: "Mutable",
      AutoAssignPublicIps: "Mutable",
      CustomInstanceProfileArn: "Mutable",
      CustomJson: "Mutable",
      CustomRecipes: "Mutable",
      CustomSecurityGroupIds: "Mutable",
      EnableAutoHealing: "Mutable",
      InstallUpdatesOnBoot: "Mutable",
      LifecycleEventConfiguration: "Mutable",
      LoadBasedAutoScaling: "Mutable",
      Name: "Mutable",
      Packages: "Mutable",
      Shortname: "Mutable",
      StackId: "Immutable",
      Tags: "Mutable",
      Type: "Immutable",
      UseEbsOptimizedInstances: "Mutable",
      VolumeConfigurations: "Mutable",
    },
    Stack: {
      AgentVersion: "Mutable",
      Attributes: "Mutable",
      ChefConfiguration: "Mutable",
      CloneAppIds: "Immutable",
      ClonePermissions: "Immutable",
      ConfigurationManager: "Mutable",
      CustomCookbooksSource: "Mutable",
      CustomJson: "Mutable",
      DefaultAvailabilityZone: "Mutable",
      DefaultInstanceProfileArn: "Mutable",
      DefaultOs: "Mutable",
      DefaultRootDeviceType: "Mutable",
      DefaultSshKeyName: "Mutable",
      DefaultSubnetId: "Mutable",
      EcsClusterArn: "Mutable",
      ElasticIps: "Mutable",
      HostnameTheme: "Mutable",
      Name: "Mutable",
      RdsDbInstances: "Mutable",
      ServiceRoleArn: "Immutable",
      SourceStackId: "Immutable",
      Tags: "Mutable",
      UseCustomCookbooks: "Mutable",
      UseOpsworksSecurityGroups: "Mutable",
      VpcId: "Immutable",
    },
    UserProfile: {
      AllowSelfManagement: "Mutable",
      IamUserArn: "Immutable",
      SshPublicKey: "Mutable",
      SshUsername: "Mutable",
    },
    Volume: {
      Ec2VolumeId: "Immutable",
      MountPoint: "Mutable",
      Name: "Mutable",
      StackId: "Immutable",
    },
  },
  OpsWorksCM: {
    Server: {
      KeyPair: "Immutable",
      EngineVersion: "Immutable",
      ServiceRoleArn: "Immutable",
      DisableAutomatedBackup: "Mutable",
      BackupId: "Immutable",
      EngineModel: "Immutable",
      PreferredMaintenanceWindow: "Mutable",
      AssociatePublicIpAddress: "Immutable",
      InstanceProfileArn: "Immutable",
      CustomCertificate: "Immutable",
      PreferredBackupWindow: "Mutable",
      SecurityGroupIds: "Immutable",
      SubnetIds: "Immutable",
      CustomDomain: "Immutable",
      CustomPrivateKey: "Immutable",
      ServerName: "Immutable",
      EngineAttributes: "Mutable",
      BackupRetentionCount: "Mutable",
      InstanceType: "Immutable",
      Tags: "Mutable",
      Engine: "Immutable",
    },
  },
  Organizations: {
    Account: {
      RoleName: "Mutable",
      Email: "Mutable",
      ParentIds: "Mutable",
      Tags: "Mutable",
      AccountName: "Mutable",
    },
    Organization: {
      FeatureSet: "Mutable",
    },
    OrganizationalUnit: {
      ParentId: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Policy: {
      Type: "Immutable",
      TargetIds: "Mutable",
      Description: "Mutable",
      Content: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    ResourcePolicy: {
      Content: "Mutable",
      Tags: "Mutable",
    },
  },
  PCAConnectorAD: {
    Connector: {
      CertificateAuthorityArn: "Immutable",
      DirectoryId: "Immutable",
      VpcInformation: "Immutable",
      Tags: "Mutable",
    },
    DirectoryRegistration: {
      DirectoryId: "Immutable",
      Tags: "Mutable",
    },
    ServicePrincipalName: {
      ConnectorArn: "Immutable",
      DirectoryRegistrationArn: "Immutable",
    },
    Template: {
      ConnectorArn: "Immutable",
      Definition: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      ReenrollAllCertificateHolders: "Mutable",
    },
    TemplateGroupAccessControlEntry: {
      AccessRights: "Mutable",
      TemplateArn: "Immutable",
      GroupDisplayName: "Mutable",
      GroupSecurityIdentifier: "Immutable",
    },
  },
  PCAConnectorSCEP: {
    Challenge: {
      ConnectorArn: "Immutable",
      Tags: "Mutable",
    },
    Connector: {
      CertificateAuthorityArn: "Immutable",
      MobileDeviceManagement: "Immutable",
      Tags: "Mutable",
    },
  },
  PCS: {
    Cluster: {
      Networking: "Immutable",
      Scheduler: "Immutable",
      Size: "Immutable",
      SlurmConfiguration: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ComputeNodeGroup: {
      ClusterId: "Immutable",
      SpotOptions: "Mutable",
      SlurmConfiguration: "Mutable",
      ScalingConfiguration: "Mutable",
      InstanceConfigs: "Immutable",
      PurchaseOption: "Mutable",
      CustomLaunchTemplate: "Mutable",
      SubnetIds: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      AmiId: "Mutable",
      IamInstanceProfileArn: "Mutable",
    },
    Queue: {
      ClusterId: "Immutable",
      ComputeNodeGroupConfigurations: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  Panorama: {
    ApplicationInstance: {
      DefaultRuntimeContextDevice: "Immutable",
      Description: "Immutable",
      ApplicationInstanceIdToReplace: "Immutable",
      ManifestOverridesPayload: "Immutable",
      RuntimeRoleArn: "Immutable",
      ManifestPayload: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Package: {
      PackageName: "Immutable",
      StorageLocation: "Mutable",
      Tags: "Mutable",
    },
    PackageVersion: {
      UpdatedLatestPatchVersion: "Mutable",
      PatchVersion: "Immutable",
      MarkLatest: "Mutable",
      PackageId: "Immutable",
      OwnerAccount: "Immutable",
      PackageVersion: "Immutable",
    },
  },
  PaymentCryptography: {
    Alias: {
      AliasName: "Immutable",
      KeyArn: "Mutable",
    },
    Key: {
      DeriveKeyUsage: "Mutable",
      Exportable: "Mutable",
      KeyAttributes: "Mutable",
      Enabled: "Mutable",
      KeyCheckValueAlgorithm: "Mutable",
      Tags: "Mutable",
    },
  },
  Personalize: {
    Dataset: {
      DatasetGroupArn: "Immutable",
      DatasetType: "Immutable",
      DatasetImportJob: "Mutable",
      SchemaArn: "Immutable",
      Name: "Immutable",
    },
    DatasetGroup: {
      KmsKeyArn: "Immutable",
      Domain: "Immutable",
      RoleArn: "Immutable",
      Name: "Immutable",
    },
    Schema: {
      Schema: "Immutable",
      Domain: "Immutable",
      Name: "Immutable",
    },
    Solution: {
      PerformAutoML: "Immutable",
      PerformHPO: "Immutable",
      EventType: "Immutable",
      DatasetGroupArn: "Immutable",
      SolutionConfig: "Immutable",
      RecipeArn: "Immutable",
      Name: "Immutable",
    },
  },
  Pinpoint: {
    ADMChannel: {
      ClientSecret: "Mutable",
      Enabled: "Mutable",
      ClientId: "Mutable",
      ApplicationId: "Immutable",
    },
    APNSChannel: {
      BundleId: "Mutable",
      PrivateKey: "Mutable",
      Enabled: "Mutable",
      DefaultAuthenticationMethod: "Mutable",
      TokenKey: "Mutable",
      ApplicationId: "Immutable",
      TeamId: "Mutable",
      Certificate: "Mutable",
      TokenKeyId: "Mutable",
    },
    APNSSandboxChannel: {
      BundleId: "Mutable",
      PrivateKey: "Mutable",
      Enabled: "Mutable",
      DefaultAuthenticationMethod: "Mutable",
      TokenKey: "Mutable",
      ApplicationId: "Immutable",
      TeamId: "Mutable",
      Certificate: "Mutable",
      TokenKeyId: "Mutable",
    },
    APNSVoipChannel: {
      BundleId: "Mutable",
      PrivateKey: "Mutable",
      Enabled: "Mutable",
      DefaultAuthenticationMethod: "Mutable",
      TokenKey: "Mutable",
      ApplicationId: "Immutable",
      TeamId: "Mutable",
      Certificate: "Mutable",
      TokenKeyId: "Mutable",
    },
    APNSVoipSandboxChannel: {
      BundleId: "Mutable",
      PrivateKey: "Mutable",
      Enabled: "Mutable",
      DefaultAuthenticationMethod: "Mutable",
      TokenKey: "Mutable",
      ApplicationId: "Immutable",
      TeamId: "Mutable",
      Certificate: "Mutable",
      TokenKeyId: "Mutable",
    },
    App: {
      Tags: "Mutable",
      Name: "Immutable",
    },
    ApplicationSettings: {
      QuietTime: "Mutable",
      Limits: "Mutable",
      ApplicationId: "Immutable",
      CampaignHook: "Mutable",
      CloudWatchMetricsEnabled: "Mutable",
    },
    BaiduChannel: {
      SecretKey: "Mutable",
      ApiKey: "Mutable",
      Enabled: "Mutable",
      ApplicationId: "Immutable",
    },
    Campaign: {
      Description: "Mutable",
      SegmentId: "Mutable",
      Priority: "Mutable",
      TemplateConfiguration: "Mutable",
      IsPaused: "Mutable",
      AdditionalTreatments: "Mutable",
      Name: "Mutable",
      SegmentVersion: "Mutable",
      TreatmentDescription: "Mutable",
      MessageConfiguration: "Mutable",
      Limits: "Mutable",
      HoldoutPercent: "Mutable",
      Schedule: "Mutable",
      CustomDeliveryConfiguration: "Mutable",
      ApplicationId: "Immutable",
      CampaignHook: "Mutable",
      Tags: "Mutable",
      TreatmentName: "Mutable",
    },
    EmailChannel: {
      ConfigurationSet: "Mutable",
      FromAddress: "Mutable",
      OrchestrationSendingRoleArn: "Mutable",
      Enabled: "Mutable",
      ApplicationId: "Immutable",
      Identity: "Mutable",
      RoleArn: "Mutable",
    },
    EmailTemplate: {
      HtmlPart: "Mutable",
      TextPart: "Mutable",
      TemplateName: "Immutable",
      TemplateDescription: "Mutable",
      DefaultSubstitutions: "Mutable",
      Subject: "Mutable",
      Tags: "Mutable",
    },
    EventStream: {
      ApplicationId: "Immutable",
      DestinationStreamArn: "Mutable",
      RoleArn: "Mutable",
    },
    GCMChannel: {
      ApiKey: "Mutable",
      Enabled: "Mutable",
      ServiceJson: "Mutable",
      DefaultAuthenticationMethod: "Mutable",
      ApplicationId: "Immutable",
    },
    InAppTemplate: {
      CustomConfig: "Mutable",
      Layout: "Mutable",
      Content: "Mutable",
      TemplateName: "Immutable",
      TemplateDescription: "Mutable",
      Tags: "Mutable",
    },
    PushTemplate: {
      GCM: "Mutable",
      Baidu: "Mutable",
      TemplateName: "Immutable",
      ADM: "Mutable",
      APNS: "Mutable",
      TemplateDescription: "Mutable",
      DefaultSubstitutions: "Mutable",
      Default: "Mutable",
      Tags: "Mutable",
    },
    SMSChannel: {
      ShortCode: "Mutable",
      Enabled: "Mutable",
      ApplicationId: "Immutable",
      SenderId: "Mutable",
    },
    Segment: {
      SegmentGroups: "Mutable",
      Dimensions: "Mutable",
      ApplicationId: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    SmsTemplate: {
      TemplateName: "Immutable",
      TemplateDescription: "Mutable",
      DefaultSubstitutions: "Mutable",
      Body: "Mutable",
      Tags: "Mutable",
    },
    VoiceChannel: {
      Enabled: "Mutable",
      ApplicationId: "Immutable",
    },
  },
  PinpointEmail: {
    ConfigurationSet: {
      SendingOptions: "Mutable",
      TrackingOptions: "Mutable",
      ReputationOptions: "Mutable",
      DeliveryOptions: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ConfigurationSetEventDestination: {
      EventDestinationName: "Immutable",
      ConfigurationSetName: "Immutable",
      EventDestination: "Mutable",
    },
    DedicatedIpPool: {
      PoolName: "Immutable",
      Tags: "Mutable",
    },
    Identity: {
      FeedbackForwardingEnabled: "Mutable",
      DkimSigningEnabled: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      MailFromAttributes: "Mutable",
    },
  },
  Pipes: {
    Pipe: {
      Enrichment: "Mutable",
      KmsKeyIdentifier: "Mutable",
      Description: "Mutable",
      TargetParameters: "Mutable",
      LogConfiguration: "Mutable",
      EnrichmentParameters: "Mutable",
      RoleArn: "Mutable",
      Source: "Immutable",
      Name: "Immutable",
      Target: "Mutable",
      DesiredState: "Mutable",
      SourceParameters: "Mutable",
      Tags: "Mutable",
    },
  },
  Proton: {
    EnvironmentAccountConnection: {
      EnvironmentName: "Mutable",
      ComponentRoleArn: "Mutable",
      ManagementAccountId: "Mutable",
      CodebuildRoleArn: "Mutable",
      EnvironmentAccountId: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    EnvironmentTemplate: {
      Description: "Mutable",
      DisplayName: "Mutable",
      EncryptionKey: "Immutable",
      Provisioning: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ServiceTemplate: {
      Description: "Mutable",
      DisplayName: "Mutable",
      PipelineProvisioning: "Immutable",
      EncryptionKey: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  QBusiness: {
    Application: {
      IdentityType: "Immutable",
      Description: "Mutable",
      IdentityCenterInstanceArn: "Mutable",
      EncryptionConfiguration: "Immutable",
      IamIdentityProviderArn: "Immutable",
      RoleArn: "Mutable",
      AttachmentsConfiguration: "Mutable",
      ClientIdsForOIDC: "Immutable",
      QuickSightConfiguration: "Immutable",
      PersonalizationConfiguration: "Mutable",
      DisplayName: "Mutable",
      AutoSubscriptionConfiguration: "Mutable",
      QAppsConfiguration: "Mutable",
      Tags: "Mutable",
    },
    DataAccessor: {
      DisplayName: "Mutable",
      ActionConfigurations: "Mutable",
      ApplicationId: "Immutable",
      Principal: "Immutable",
      Tags: "Mutable",
      AuthenticationDetail: "Mutable",
    },
    DataSource: {
      IndexId: "Immutable",
      Description: "Mutable",
      Configuration: "Mutable",
      SyncSchedule: "Mutable",
      DocumentEnrichmentConfiguration: "Mutable",
      MediaExtractionConfiguration: "Mutable",
      DisplayName: "Mutable",
      VpcConfiguration: "Mutable",
      ApplicationId: "Immutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    Index: {
      Type: "Immutable",
      Description: "Mutable",
      DisplayName: "Mutable",
      DocumentAttributeConfigurations: "Mutable",
      ApplicationId: "Immutable",
      Tags: "Mutable",
      CapacityConfiguration: "Mutable",
    },
    Permission: {
      Actions: "Immutable",
      StatementId: "Immutable",
      ApplicationId: "Immutable",
      Conditions: "Immutable",
      Principal: "Immutable",
    },
    Plugin: {
      ServerUrl: "Mutable",
      CustomPluginConfiguration: "Mutable",
      Type: "Immutable",
      State: "Mutable",
      DisplayName: "Mutable",
      AuthConfiguration: "Mutable",
      ApplicationId: "Immutable",
      Tags: "Mutable",
    },
    Retriever: {
      Type: "Immutable",
      Configuration: "Mutable",
      DisplayName: "Mutable",
      ApplicationId: "Immutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    WebExperience: {
      Origins: "Mutable",
      Subtitle: "Mutable",
      CustomizationConfiguration: "Mutable",
      SamplePromptsControlMode: "Mutable",
      Title: "Mutable",
      IdentityProviderConfiguration: "Mutable",
      WelcomeMessage: "Mutable",
      ApplicationId: "Immutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
      BrowserExtensionConfiguration: "Mutable",
    },
  },
  QLDB: {
    Ledger: {
      PermissionsMode: "Mutable",
      DeletionProtection: "Mutable",
      KmsKey: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Stream: {
      InclusiveStartTime: "Immutable",
      StreamName: "Immutable",
      KinesisConfiguration: "Immutable",
      ExclusiveEndTime: "Immutable",
      LedgerName: "Immutable",
      RoleArn: "Immutable",
      Tags: "Mutable",
    },
  },
  QuickSight: {
    Analysis: {
      Status: "Mutable",
      Parameters: "Mutable",
      SourceEntity: "Mutable",
      ThemeArn: "Mutable",
      Definition: "Mutable",
      ValidationStrategy: "Mutable",
      FolderArns: "Mutable",
      Name: "Mutable",
      Errors: "Mutable",
      AnalysisId: "Immutable",
      AwsAccountId: "Immutable",
      Permissions: "Mutable",
      Tags: "Mutable",
      Sheets: "Mutable",
    },
    CustomPermissions: {
      CustomPermissionsName: "Immutable",
      Capabilities: "Mutable",
      AwsAccountId: "Immutable",
      Tags: "Mutable",
    },
    Dashboard: {
      Parameters: "Mutable",
      VersionDescription: "Mutable",
      SourceEntity: "Mutable",
      ThemeArn: "Mutable",
      Definition: "Mutable",
      ValidationStrategy: "Mutable",
      FolderArns: "Mutable",
      DashboardId: "Immutable",
      LinkSharingConfiguration: "Mutable",
      Name: "Mutable",
      DashboardPublishOptions: "Mutable",
      AwsAccountId: "Immutable",
      Permissions: "Mutable",
      LinkEntities: "Mutable",
      Tags: "Mutable",
    },
    DataSet: {
      PhysicalTableMap: "Mutable",
      FieldFolders: "Mutable",
      FolderArns: "Mutable",
      DataSetId: "Immutable",
      RowLevelPermissionDataSet: "Mutable",
      PerformanceConfiguration: "Mutable",
      IngestionWaitPolicy: "Mutable",
      DataSetRefreshProperties: "Mutable",
      RowLevelPermissionTagConfiguration: "Mutable",
      ColumnLevelPermissionRules: "Mutable",
      Name: "Mutable",
      ColumnGroups: "Mutable",
      ImportMode: "Mutable",
      DatasetParameters: "Mutable",
      LogicalTableMap: "Mutable",
      Permissions: "Mutable",
      AwsAccountId: "Immutable",
      DataSetUsageConfiguration: "Mutable",
      UseAs: "Mutable",
      Tags: "Mutable",
    },
    DataSource: {
      ErrorInfo: "Mutable",
      FolderArns: "Mutable",
      Name: "Mutable",
      DataSourceParameters: "Mutable",
      Type: "Immutable",
      VpcConnectionProperties: "Mutable",
      AlternateDataSourceParameters: "Mutable",
      AwsAccountId: "Immutable",
      Permissions: "Mutable",
      SslProperties: "Mutable",
      Credentials: "Mutable",
      DataSourceId: "Immutable",
      Tags: "Mutable",
    },
    Folder: {
      SharingModel: "Immutable",
      AwsAccountId: "Immutable",
      Permissions: "Mutable",
      FolderId: "Immutable",
      ParentFolderArn: "Immutable",
      Tags: "Mutable",
      FolderType: "Immutable",
      Name: "Mutable",
    },
    RefreshSchedule: {
      Schedule: "Mutable",
      AwsAccountId: "Immutable",
      DataSetId: "Immutable",
    },
    Template: {
      VersionDescription: "Mutable",
      SourceEntity: "Mutable",
      Definition: "Mutable",
      AwsAccountId: "Immutable",
      Permissions: "Mutable",
      ValidationStrategy: "Mutable",
      Tags: "Mutable",
      TemplateId: "Immutable",
      Name: "Mutable",
    },
    Theme: {
      ThemeId: "Immutable",
      VersionDescription: "Mutable",
      Configuration: "Mutable",
      BaseThemeId: "Mutable",
      AwsAccountId: "Immutable",
      Permissions: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Topic: {
      CustomInstructions: "Mutable",
      Description: "Mutable",
      DataSets: "Mutable",
      AwsAccountId: "Immutable",
      FolderArns: "Immutable",
      TopicId: "Immutable",
      UserExperienceVersion: "Mutable",
      ConfigOptions: "Mutable",
      Tags: "Immutable",
      Name: "Mutable",
    },
    VPCConnection: {
      DnsResolvers: "Mutable",
      AvailabilityStatus: "Mutable",
      AwsAccountId: "Immutable",
      VPCConnectionId: "Immutable",
      SecurityGroupIds: "Mutable",
      SubnetIds: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  RAM: {
    Permission: {
      ResourceType: "Immutable",
      PolicyTemplate: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ResourceShare: {
      PermissionArns: "Mutable",
      Principals: "Mutable",
      AllowExternalPrincipals: "Mutable",
      ResourceArns: "Mutable",
      Sources: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  RDS: {
    CustomDBEngineVersion: {
      Status: "Mutable",
      DatabaseInstallationFilesS3BucketName: "Immutable",
      Description: "Mutable",
      EngineVersion: "Immutable",
      KMSKeyId: "Immutable",
      UseAwsProvidedLatestImage: "Immutable",
      ImageId: "Immutable",
      DatabaseInstallationFilesS3Prefix: "Immutable",
      Manifest: "Immutable",
      SourceCustomDbEngineVersionIdentifier: "Immutable",
      Engine: "Immutable",
      Tags: "Mutable",
    },
    DBCluster: {
      DatabaseInsightsMode: "Mutable",
      StorageEncrypted: "Immutable",
      DBSystemId: "Immutable",
      RestoreToTime: "Immutable",
      EngineMode: "Immutable",
      Port: "Mutable",
      DBClusterIdentifier: "Immutable",
      MonitoringInterval: "Mutable",
      ReplicationSourceIdentifier: "Mutable",
      Engine: "Conditional",
      Tags: "Mutable",
      EngineVersion: "Mutable",
      StorageType: "Mutable",
      KmsKeyId: "Immutable",
      ServerlessV2ScalingConfiguration: "Mutable",
      DeleteAutomatedBackups: "Mutable",
      PerformanceInsightsRetentionPeriod: "Mutable",
      DatabaseName: "Immutable",
      EnableLocalWriteForwarding: "Mutable",
      AutoMinorVersionUpgrade: "Mutable",
      DBSubnetGroupName: "Immutable",
      DeletionProtection: "Mutable",
      AllocatedStorage: "Mutable",
      SourceDbClusterResourceId: "Immutable",
      MasterUserPassword: "Mutable",
      MasterUserSecret: "Mutable",
      SourceDBClusterIdentifier: "Immutable",
      MasterUsername: "Conditional",
      ScalingConfiguration: "Mutable",
      PerformanceInsightsKmsKeyId: "Mutable",
      PubliclyAccessible: "Immutable",
      Domain: "Mutable",
      BacktrackWindow: "Mutable",
      DBInstanceParameterGroupName: "Mutable",
      EnableGlobalWriteForwarding: "Mutable",
      MonitoringRoleArn: "Mutable",
      AssociatedRoles: "Mutable",
      EnableHttpEndpoint: "Mutable",
      SnapshotIdentifier: "Immutable",
      ClusterScalabilityType: "Immutable",
      PreferredBackupWindow: "Mutable",
      NetworkType: "Mutable",
      VpcSecurityGroupIds: "Mutable",
      CopyTagsToSnapshot: "Mutable",
      GlobalClusterIdentifier: "Conditional",
      RestoreType: "Immutable",
      DomainIAMRoleName: "Mutable",
      EngineLifecycleSupport: "Mutable",
      DBClusterInstanceClass: "Mutable",
      AvailabilityZones: "Immutable",
      PreferredMaintenanceWindow: "Mutable",
      Iops: "Mutable",
      SourceRegion: "Immutable",
      UseLatestRestorableTime: "Immutable",
      ManageMasterUserPassword: "Mutable",
      EnableIAMDatabaseAuthentication: "Mutable",
      DBClusterParameterGroupName: "Mutable",
      PerformanceInsightsEnabled: "Mutable",
      BackupRetentionPeriod: "Mutable",
      EnableCloudwatchLogsExports: "Mutable",
    },
    DBClusterParameterGroup: {
      Description: "Immutable",
      Parameters: "Mutable",
      Family: "Immutable",
      DBClusterParameterGroupName: "Immutable",
      Tags: "Mutable",
    },
    DBInstance: {
      Timezone: "Immutable",
      DatabaseInsightsMode: "Mutable",
      StorageEncrypted: "Immutable",
      DBSystemId: "Immutable",
      Port: "Mutable",
      DBClusterIdentifier: "Immutable",
      StorageThroughput: "Mutable",
      AutomaticBackupReplicationRetentionPeriod: "Mutable",
      MonitoringInterval: "Mutable",
      DBParameterGroupName: "Conditional",
      MultiAZ: "Conditional",
      AutomaticBackupReplicationKmsKeyId: "Mutable",
      Tags: "Mutable",
      Engine: "Conditional",
      PerformanceInsightsKMSKeyId: "Conditional",
      SourceDBInstanceIdentifier: "Conditional",
      EngineVersion: "Mutable",
      StorageType: "Conditional",
      KmsKeyId: "Immutable",
      DBInstanceClass: "Mutable",
      DeleteAutomatedBackups: "Mutable",
      PerformanceInsightsRetentionPeriod: "Mutable",
      AvailabilityZone: "Conditional",
      OptionGroupName: "Mutable",
      EnablePerformanceInsights: "Mutable",
      DBSubnetGroupName: "Immutable",
      AutoMinorVersionUpgrade: "Conditional",
      DeletionProtection: "Mutable",
      DBInstanceIdentifier: "Immutable",
      AllocatedStorage: "Mutable",
      MasterUserPassword: "Mutable",
      MasterUserSecret: "Mutable",
      NcharCharacterSetName: "Immutable",
      SourceDBClusterIdentifier: "Conditional",
      DBSecurityGroups: "Mutable",
      MasterUsername: "Immutable",
      MaxAllocatedStorage: "Mutable",
      PromotionTier: "Mutable",
      PubliclyAccessible: "Mutable",
      Domain: "Mutable",
      ApplyImmediately: "Mutable",
      DomainFqdn: "Mutable",
      CharacterSetName: "Immutable",
      MonitoringRoleArn: "Mutable",
      AssociatedRoles: "Mutable",
      DomainOu: "Mutable",
      DBClusterSnapshotIdentifier: "Conditional",
      SourceDBInstanceAutomatedBackupsArn: "Conditional",
      ProcessorFeatures: "Mutable",
      PreferredBackupWindow: "Mutable",
      RestoreTime: "Conditional",
      CertificateRotationRestart: "Mutable",
      NetworkType: "Mutable",
      DedicatedLogVolume: "Mutable",
      CopyTagsToSnapshot: "Mutable",
      DomainIAMRoleName: "Mutable",
      ReplicaMode: "Mutable",
      EngineLifecycleSupport: "Mutable",
      LicenseModel: "Mutable",
      DomainDnsIps: "Mutable",
      PreferredMaintenanceWindow: "Conditional",
      Iops: "Mutable",
      SourceRegion: "Immutable",
      BackupTarget: "Immutable",
      UseLatestRestorableTime: "Conditional",
      CACertificateIdentifier: "Mutable",
      ManageMasterUserPassword: "Mutable",
      SourceDbiResourceId: "Conditional",
      DomainAuthSecretArn: "Mutable",
      VPCSecurityGroups: "Mutable",
      AutomaticBackupReplicationRegion: "Mutable",
      AllowMajorVersionUpgrade: "Mutable",
      DBName: "Immutable",
      EnableIAMDatabaseAuthentication: "Mutable",
      BackupRetentionPeriod: "Conditional",
      CustomIAMInstanceProfile: "Immutable",
      DBSnapshotIdentifier: "Conditional",
      EnableCloudwatchLogsExports: "Mutable",
      UseDefaultProcessorFeatures: "Mutable",
    },
    DBParameterGroup: {
      DBParameterGroupName: "Immutable",
      Description: "Immutable",
      Parameters: "Mutable",
      Family: "Immutable",
      Tags: "Mutable",
    },
    DBProxy: {
      RequireTLS: "Mutable",
      DBProxyName: "Immutable",
      IdleClientTimeout: "Mutable",
      VpcSecurityGroupIds: "Mutable",
      Auth: "Mutable",
      DebugLogging: "Mutable",
      VpcSubnetIds: "Immutable",
      RoleArn: "Mutable",
      EngineFamily: "Immutable",
      Tags: "Mutable",
    },
    DBProxyEndpoint: {
      DBProxyEndpointName: "Immutable",
      DBProxyName: "Immutable",
      TargetRole: "Mutable",
      VpcSecurityGroupIds: "Mutable",
      VpcSubnetIds: "Immutable",
      Tags: "Mutable",
    },
    DBProxyTargetGroup: {
      DBProxyName: "Immutable",
      DBInstanceIdentifiers: "Mutable",
      TargetGroupName: "Immutable",
      ConnectionPoolConfigurationInfo: "Mutable",
      DBClusterIdentifiers: "Mutable",
    },
    DBSecurityGroup: {
      DBSecurityGroupIngress: "Mutable",
      EC2VpcId: "Immutable",
      GroupDescription: "Immutable",
      Tags: "Mutable",
    },
    DBSecurityGroupIngress: {
      CIDRIP: "Mutable",
      DBSecurityGroupName: "Mutable",
      EC2SecurityGroupId: "Mutable",
      EC2SecurityGroupName: "Mutable",
      EC2SecurityGroupOwnerId: "Mutable",
    },
    DBShardGroup: {
      DBClusterIdentifier: "Immutable",
      ComputeRedundancy: "Mutable",
      DBShardGroupIdentifier: "Immutable",
      PubliclyAccessible: "Immutable",
      MaxACU: "Mutable",
      MinACU: "Mutable",
      Tags: "Mutable",
    },
    DBSubnetGroup: {
      DBSubnetGroupName: "Immutable",
      DBSubnetGroupDescription: "Mutable",
      SubnetIds: "Mutable",
      Tags: "Mutable",
    },
    EventSubscription: {
      SourceType: "Mutable",
      Enabled: "Mutable",
      EventCategories: "Mutable",
      SubscriptionName: "Immutable",
      SnsTopicArn: "Immutable",
      SourceIds: "Mutable",
      Tags: "Mutable",
    },
    GlobalCluster: {
      EngineLifecycleSupport: "Mutable",
      StorageEncrypted: "Immutable",
      EngineVersion: "Mutable",
      SourceDBClusterIdentifier: "Immutable",
      DeletionProtection: "Mutable",
      GlobalClusterIdentifier: "Immutable",
      Engine: "Immutable",
      Tags: "Mutable",
    },
    Integration: {
      DataFilter: "Mutable",
      IntegrationName: "Mutable",
      Description: "Mutable",
      KMSKeyId: "Immutable",
      SourceArn: "Immutable",
      TargetArn: "Immutable",
      AdditionalEncryptionContext: "Immutable",
      Tags: "Mutable",
    },
    OptionGroup: {
      OptionGroupDescription: "Immutable",
      OptionGroupName: "Immutable",
      OptionConfigurations: "Mutable",
      MajorEngineVersion: "Immutable",
      EngineName: "Immutable",
      Tags: "Mutable",
    },
  },
  RUM: {
    AppMonitor: {
      CustomEvents: "Mutable",
      CwLogEnabled: "Mutable",
      ResourcePolicy: "Mutable",
      DomainList: "Mutable",
      DeobfuscationConfiguration: "Mutable",
      Domain: "Mutable",
      AppMonitorConfiguration: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  Rbin: {
    Rule: {
      Status: "Mutable",
      Description: "Mutable",
      ResourceTags: "Mutable",
      LockConfiguration: "Mutable",
      ExcludeResourceTags: "Mutable",
      ResourceType: "Immutable",
      RetentionPeriod: "Mutable",
      Tags: "Mutable",
    },
  },
  Redshift: {
    Cluster: {
      RevisionTarget: "Mutable",
      AutomatedSnapshotRetentionPeriod: "Mutable",
      Encrypted: "Mutable",
      Port: "Mutable",
      NumberOfNodes: "Mutable",
      DestinationRegion: "Mutable",
      AllowVersionUpgrade: "Mutable",
      Endpoint: "Mutable",
      NamespaceResourcePolicy: "Mutable",
      MaintenanceTrackName: "Mutable",
      OwnerAccount: "Immutable",
      MultiAZ: "Mutable",
      Tags: "Mutable",
      SnapshotClusterIdentifier: "Immutable",
      IamRoles: "Mutable",
      KmsKeyId: "Mutable",
      SnapshotCopyManual: "Mutable",
      ManageMasterPassword: "Mutable",
      AvailabilityZone: "Mutable",
      ClusterSecurityGroups: "Mutable",
      ClusterIdentifier: "Immutable",
      MasterUserPassword: "Mutable",
      ClusterSubnetGroupName: "Immutable",
      LoggingProperties: "Mutable",
      DeferMaintenance: "Mutable",
      NodeType: "Mutable",
      MasterUsername: "Immutable",
      PubliclyAccessible: "Mutable",
      ManualSnapshotRetentionPeriod: "Mutable",
      ResourceAction: "Mutable",
      HsmClientCertificateIdentifier: "Mutable",
      ElasticIp: "Mutable",
      AvailabilityZoneRelocationStatus: "Mutable",
      AquaConfigurationStatus: "Mutable",
      SnapshotIdentifier: "Immutable",
      AvailabilityZoneRelocation: "Mutable",
      SnapshotCopyGrantName: "Mutable",
      EnhancedVpcRouting: "Mutable",
      ClusterParameterGroupName: "Mutable",
      DeferMaintenanceEndTime: "Mutable",
      RotateEncryptionKey: "Mutable",
      VpcSecurityGroupIds: "Mutable",
      ClusterVersion: "Mutable",
      HsmConfigurationIdentifier: "Mutable",
      PreferredMaintenanceWindow: "Mutable",
      DeferMaintenanceStartTime: "Mutable",
      ClusterType: "Mutable",
      Classic: "Mutable",
      MasterPasswordSecretKmsKeyId: "Mutable",
      DeferMaintenanceDuration: "Mutable",
      DBName: "Immutable",
      SnapshotCopyRetentionPeriod: "Mutable",
    },
    ClusterParameterGroup: {
      Description: "Immutable",
      Parameters: "Mutable",
      ParameterGroupName: "Immutable",
      ParameterGroupFamily: "Immutable",
      Tags: "Mutable",
    },
    ClusterSecurityGroup: {
      Description: "Immutable",
      Tags: "Mutable",
    },
    ClusterSecurityGroupIngress: {
      CIDRIP: "Immutable",
      ClusterSecurityGroupName: "Immutable",
      EC2SecurityGroupName: "Immutable",
      EC2SecurityGroupOwnerId: "Immutable",
    },
    ClusterSubnetGroup: {
      Description: "Mutable",
      SubnetIds: "Mutable",
      Tags: "Mutable",
    },
    EndpointAccess: {
      EndpointName: "Immutable",
      VpcSecurityGroupIds: "Mutable",
      ResourceOwner: "Immutable",
      SubnetGroupName: "Immutable",
      ClusterIdentifier: "Immutable",
    },
    EndpointAuthorization: {
      Account: "Immutable",
      Force: "Mutable",
      VpcIds: "Mutable",
      ClusterIdentifier: "Immutable",
    },
    EventSubscription: {
      SourceType: "Mutable",
      EventCategories: "Mutable",
      Enabled: "Mutable",
      Severity: "Mutable",
      SubscriptionName: "Immutable",
      SourceIds: "Mutable",
      SnsTopicArn: "Mutable",
      Tags: "Mutable",
    },
    Integration: {
      IntegrationName: "Mutable",
      KMSKeyId: "Immutable",
      SourceArn: "Immutable",
      TargetArn: "Immutable",
      AdditionalEncryptionContext: "Immutable",
      Tags: "Mutable",
    },
    ScheduledAction: {
      ScheduledActionDescription: "Mutable",
      ScheduledActionName: "Immutable",
      EndTime: "Mutable",
      Schedule: "Mutable",
      IamRole: "Mutable",
      StartTime: "Mutable",
      Enable: "Mutable",
      TargetAction: "Mutable",
    },
  },
  RedshiftServerless: {
    Namespace: {
      ManageAdminPassword: "Mutable",
      IamRoles: "Mutable",
      SnapshotCopyConfigurations: "Mutable",
      KmsKeyId: "Mutable",
      FinalSnapshotName: "Mutable",
      FinalSnapshotRetentionPeriod: "Mutable",
      AdminUserPassword: "Mutable",
      AdminPasswordSecretKmsKeyId: "Mutable",
      DefaultIamRoleArn: "Mutable",
      AdminUsername: "Mutable",
      NamespaceName: "Immutable",
      NamespaceResourcePolicy: "Mutable",
      RedshiftIdcApplicationArn: "Mutable",
      DbName: "Mutable",
      Tags: "Mutable",
      LogExports: "Mutable",
    },
    Snapshot: {
      NamespaceName: "Immutable",
      RetentionPeriod: "Mutable",
      SnapshotName: "Immutable",
      Tags: "Immutable",
    },
    Workgroup: {
      SnapshotArn: "Mutable",
      SnapshotOwnerAccount: "Mutable",
      Port: "Mutable",
      RecoveryPointId: "Mutable",
      WorkgroupName: "Immutable",
      BaseCapacity: "Mutable",
      EnhancedVpcRouting: "Mutable",
      Workgroup: "Mutable",
      SecurityGroupIds: "Mutable",
      SubnetIds: "Mutable",
      SnapshotName: "Mutable",
      NamespaceName: "Immutable",
      ConfigParameters: "Mutable",
      TrackName: "Mutable",
      PubliclyAccessible: "Mutable",
      PricePerformanceTarget: "Mutable",
      Tags: "Mutable",
      MaxCapacity: "Mutable",
    },
  },
  RefactorSpaces: {
    Application: {
      EnvironmentIdentifier: "Immutable",
      VpcId: "Immutable",
      ApiGatewayProxy: "Immutable",
      ProxyType: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Environment: {
      Description: "Immutable",
      NetworkFabricType: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Route: {
      UriPathRoute: "Mutable",
      EnvironmentIdentifier: "Immutable",
      RouteType: "Immutable",
      DefaultRoute: "Mutable",
      ServiceIdentifier: "Immutable",
      ApplicationIdentifier: "Immutable",
      Tags: "Mutable",
    },
    Service: {
      LambdaEndpoint: "Immutable",
      UrlEndpoint: "Immutable",
      Description: "Immutable",
      EnvironmentIdentifier: "Immutable",
      VpcId: "Immutable",
      EndpointType: "Immutable",
      ApplicationIdentifier: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  Rekognition: {
    Collection: {
      CollectionId: "Immutable",
      Tags: "Mutable",
    },
    Project: {
      ProjectName: "Immutable",
    },
    StreamProcessor: {
      S3Destination: "Immutable",
      DataSharingPreference: "Immutable",
      KmsKeyId: "Immutable",
      FaceSearchSettings: "Immutable",
      PolygonRegionsOfInterest: "Immutable",
      RoleArn: "Immutable",
      Name: "Immutable",
      ConnectedHomeSettings: "Immutable",
      NotificationChannel: "Immutable",
      KinesisVideoStream: "Immutable",
      BoundingBoxRegionsOfInterest: "Immutable",
      KinesisDataStream: "Immutable",
      Tags: "Mutable",
    },
  },
  ResilienceHub: {
    App: {
      Description: "Mutable",
      AppTemplateBody: "Mutable",
      AppAssessmentSchedule: "Mutable",
      PermissionModel: "Mutable",
      ResourceMappings: "Mutable",
      EventSubscriptions: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      ResiliencyPolicyArn: "Mutable",
    },
    ResiliencyPolicy: {
      Policy: "Mutable",
      PolicyDescription: "Mutable",
      Tier: "Mutable",
      PolicyName: "Mutable",
      DataLocationConstraint: "Mutable",
      Tags: "Mutable",
    },
  },
  ResourceExplorer2: {
    DefaultViewAssociation: {
      ViewArn: "Mutable",
    },
    Index: {
      Type: "Mutable",
      Tags: "Mutable",
    },
    View: {
      Filters: "Mutable",
      Scope: "Immutable",
      IncludedProperties: "Mutable",
      Tags: "Mutable",
      ViewName: "Immutable",
    },
  },
  ResourceGroups: {
    Group: {
      Description: "Mutable",
      Configuration: "Mutable",
      ResourceQuery: "Mutable",
      Resources: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    TagSyncTask: {
      Group: "Immutable",
      TagKey: "Immutable",
      TagValue: "Immutable",
      RoleArn: "Immutable",
    },
  },
  RoboMaker: {
    Fleet: {
      Tags: "Mutable",
      Name: "Immutable",
    },
    Robot: {
      Fleet: "Immutable",
      Architecture: "Immutable",
      GreengrassGroupId: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    RobotApplication: {
      CurrentRevisionId: "Mutable",
      Environment: "Mutable",
      RobotSoftwareSuite: "Mutable",
      Sources: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    RobotApplicationVersion: {
      CurrentRevisionId: "Immutable",
      Application: "Immutable",
    },
    SimulationApplication: {
      RenderingEngine: "Mutable",
      SimulationSoftwareSuite: "Mutable",
      CurrentRevisionId: "Mutable",
      Environment: "Mutable",
      RobotSoftwareSuite: "Mutable",
      Sources: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    SimulationApplicationVersion: {
      CurrentRevisionId: "Immutable",
      Application: "Immutable",
    },
  },
  RolesAnywhere: {
    CRL: {
      TrustAnchorArn: "Mutable",
      Enabled: "Mutable",
      CrlData: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    Profile: {
      ManagedPolicyArns: "Mutable",
      RequireInstanceProperties: "Immutable",
      RoleArns: "Mutable",
      AcceptRoleSessionName: "Mutable",
      SessionPolicy: "Mutable",
      AttributeMappings: "Mutable",
      Enabled: "Mutable",
      DurationSeconds: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    TrustAnchor: {
      NotificationSettings: "Mutable",
      Enabled: "Mutable",
      Source: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  Route53: {
    CidrCollection: {
      Locations: "Mutable",
      Name: "Immutable",
    },
    DNSSEC: {
      HostedZoneId: "Immutable",
    },
    HealthCheck: {
      HealthCheckConfig: "Mutable",
      HealthCheckTags: "Mutable",
    },
    HostedZone: {
      HostedZoneTags: "Mutable",
      VPCs: "Mutable",
      HostedZoneConfig: "Mutable",
      QueryLoggingConfig: "Mutable",
      Name: "Immutable",
    },
    KeySigningKey: {
      Status: "Mutable",
      KeyManagementServiceArn: "Immutable",
      HostedZoneId: "Immutable",
      Name: "Immutable",
    },
    RecordSet: {
      AliasTarget: "Mutable",
      CidrRoutingConfig: "Mutable",
      Comment: "Mutable",
      Failover: "Mutable",
      GeoLocation: "Mutable",
      GeoProximityLocation: "Mutable",
      HealthCheckId: "Mutable",
      HostedZoneId: "Immutable",
      HostedZoneName: "Immutable",
      MultiValueAnswer: "Mutable",
      Name: "Immutable",
      Region: "Mutable",
      ResourceRecords: "Mutable",
      SetIdentifier: "Mutable",
      TTL: "Mutable",
      Type: "Mutable",
      Weight: "Mutable",
    },
    RecordSetGroup: {
      Comment: "Mutable",
      HostedZoneId: "Immutable",
      HostedZoneName: "Immutable",
      RecordSets: "Mutable",
    },
  },
  Route53Profiles: {
    Profile: {
      Tags: "Mutable",
      Name: "Immutable",
    },
    ProfileAssociation: {
      ProfileId: "Immutable",
      ResourceId: "Immutable",
      Arn: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ProfileResourceAssociation: {
      ProfileId: "Immutable",
      ResourceArn: "Immutable",
      ResourceProperties: "Mutable",
      Name: "Immutable",
    },
  },
  Route53RecoveryControl: {
    Cluster: {
      NetworkType: "Mutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    ControlPanel: {
      ClusterArn: "Immutable",
      Tags: "Immutable",
      Name: "Mutable",
    },
    RoutingControl: {
      ClusterArn: "Immutable",
      ControlPanelArn: "Immutable",
      Name: "Mutable",
    },
    SafetyRule: {
      ControlPanelArn: "Conditional",
      AssertionRule: "Mutable",
      RuleConfig: "Conditional",
      GatingRule: "Mutable",
      Tags: "Conditional",
      Name: "Mutable",
    },
  },
  Route53RecoveryReadiness: {
    Cell: {
      CellName: "Immutable",
      Cells: "Mutable",
      Tags: "Mutable",
    },
    ReadinessCheck: {
      ResourceSetName: "Mutable",
      ReadinessCheckName: "Immutable",
      Tags: "Mutable",
    },
    RecoveryGroup: {
      RecoveryGroupName: "Immutable",
      Cells: "Mutable",
      Tags: "Mutable",
    },
    ResourceSet: {
      ResourceSetType: "Immutable",
      ResourceSetName: "Immutable",
      Resources: "Mutable",
      Tags: "Mutable",
    },
  },
  Route53Resolver: {
    FirewallDomainList: {
      Domains: "Mutable",
      DomainFileUrl: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    FirewallRuleGroup: {
      FirewallRules: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    FirewallRuleGroupAssociation: {
      VpcId: "Immutable",
      FirewallRuleGroupId: "Immutable",
      Priority: "Mutable",
      MutationProtection: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    OutpostResolver: {
      InstanceCount: "Mutable",
      OutpostArn: "Immutable",
      PreferredInstanceType: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    ResolverConfig: {
      ResourceId: "Immutable",
      AutodefinedReverseFlag: "Immutable",
    },
    ResolverDNSSECConfig: {
      ResourceId: "Immutable",
    },
    ResolverEndpoint: {
      IpAddresses: "Mutable",
      Protocols: "Mutable",
      OutpostArn: "Immutable",
      PreferredInstanceType: "Immutable",
      ResolverEndpointType: "Mutable",
      Direction: "Immutable",
      SecurityGroupIds: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    ResolverQueryLoggingConfig: {
      DestinationArn: "Immutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    ResolverQueryLoggingConfigAssociation: {
      ResourceId: "Immutable",
      ResolverQueryLogConfigId: "Immutable",
    },
    ResolverRule: {
      ResolverEndpointId: "Mutable",
      DomainName: "Conditional",
      RuleType: "Immutable",
      DelegationRecord: "Mutable",
      Tags: "Mutable",
      TargetIps: "Mutable",
      Name: "Mutable",
    },
    ResolverRuleAssociation: {
      VPCId: "Immutable",
      ResolverRuleId: "Immutable",
      Name: "Immutable",
    },
  },
  S3: {
    AccessGrant: {
      Grantee: "Mutable",
      AccessGrantsLocationConfiguration: "Mutable",
      ApplicationArn: "Mutable",
      Permission: "Mutable",
      S3PrefixType: "Immutable",
      Tags: "Immutable",
      AccessGrantsLocationId: "Mutable",
    },
    AccessGrantsInstance: {
      IdentityCenterArn: "Mutable",
      Tags: "Immutable",
    },
    AccessGrantsLocation: {
      LocationScope: "Mutable",
      IamRoleArn: "Mutable",
      Tags: "Immutable",
    },
    AccessPoint: {
      Policy: "Mutable",
      PublicAccessBlockConfiguration: "Mutable",
      Bucket: "Immutable",
      BucketAccountId: "Immutable",
      VpcConfiguration: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Bucket: {
      InventoryConfigurations: "Mutable",
      BucketEncryption: "Mutable",
      WebsiteConfiguration: "Mutable",
      NotificationConfiguration: "Mutable",
      LifecycleConfiguration: "Mutable",
      VersioningConfiguration: "Mutable",
      MetricsConfigurations: "Mutable",
      AccessControl: "Mutable",
      MetadataTableConfiguration: "Mutable",
      IntelligentTieringConfigurations: "Mutable",
      AnalyticsConfigurations: "Mutable",
      AccelerateConfiguration: "Mutable",
      PublicAccessBlockConfiguration: "Mutable",
      BucketName: "Immutable",
      CorsConfiguration: "Mutable",
      OwnershipControls: "Mutable",
      ObjectLockConfiguration: "Mutable",
      ObjectLockEnabled: "Mutable",
      LoggingConfiguration: "Mutable",
      MetadataConfiguration: "Mutable",
      ReplicationConfiguration: "Mutable",
      Tags: "Mutable",
    },
    BucketPolicy: {
      Bucket: "Immutable",
      PolicyDocument: "Mutable",
    },
    MultiRegionAccessPoint: {
      PublicAccessBlockConfiguration: "Immutable",
      Regions: "Immutable",
      Name: "Immutable",
    },
    MultiRegionAccessPointPolicy: {
      Policy: "Mutable",
      MrapName: "Immutable",
    },
    StorageLens: {
      StorageLensConfiguration: "Mutable",
      Tags: "Mutable",
    },
    StorageLensGroup: {
      Filter: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  S3Express: {
    AccessPoint: {
      Policy: "Mutable",
      PublicAccessBlockConfiguration: "Mutable",
      Scope: "Mutable",
      Bucket: "Immutable",
      BucketAccountId: "Immutable",
      VpcConfiguration: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    BucketPolicy: {
      Bucket: "Immutable",
      PolicyDocument: "Mutable",
    },
    DirectoryBucket: {
      BucketName: "Immutable",
      BucketEncryption: "Mutable",
      DataRedundancy: "Immutable",
      LifecycleConfiguration: "Mutable",
      Tags: "Mutable",
      LocationName: "Immutable",
    },
  },
  S3ObjectLambda: {
    AccessPoint: {
      ObjectLambdaConfiguration: "Mutable",
      Name: "Immutable",
    },
    AccessPointPolicy: {
      PolicyDocument: "Mutable",
      ObjectLambdaAccessPoint: "Immutable",
    },
  },
  S3Outposts: {
    AccessPoint: {
      Policy: "Mutable",
      Bucket: "Immutable",
      VpcConfiguration: "Immutable",
      Name: "Immutable",
    },
    Bucket: {
      OutpostId: "Immutable",
      BucketName: "Immutable",
      LifecycleConfiguration: "Mutable",
      Tags: "Mutable",
    },
    BucketPolicy: {
      Bucket: "Immutable",
      PolicyDocument: "Mutable",
    },
    Endpoint: {
      OutpostId: "Immutable",
      SecurityGroupId: "Immutable",
      FailedReason: "Mutable",
      SubnetId: "Immutable",
      AccessType: "Immutable",
      CustomerOwnedIpv4Pool: "Immutable",
    },
  },
  S3Tables: {
    Namespace: {
      TableBucketARN: "Immutable",
      Namespace: "Immutable",
    },
    Table: {
      WithoutMetadata: "Immutable",
      TableName: "Mutable",
      TableBucketARN: "Immutable",
      OpenTableFormat: "Immutable",
      IcebergMetadata: "Immutable",
      Compaction: "Mutable",
      Namespace: "Mutable",
      SnapshotManagement: "Mutable",
    },
    TableBucket: {
      TableBucketName: "Immutable",
      EncryptionConfiguration: "Mutable",
      UnreferencedFileRemoval: "Mutable",
    },
    TableBucketPolicy: {
      TableBucketARN: "Immutable",
      ResourcePolicy: "Mutable",
    },
    TablePolicy: {
      TableARN: "Immutable",
      ResourcePolicy: "Mutable",
    },
  },
  SDB: {
    Domain: {
      Description: "Mutable",
    },
  },
  SES: {
    ConfigurationSet: {
      SendingOptions: "Mutable",
      SuppressionOptions: "Mutable",
      TrackingOptions: "Mutable",
      ReputationOptions: "Mutable",
      VdmOptions: "Mutable",
      DeliveryOptions: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ConfigurationSetEventDestination: {
      ConfigurationSetName: "Immutable",
      EventDestination: "Mutable",
    },
    ContactList: {
      Description: "Mutable",
      Topics: "Mutable",
      ContactListName: "Immutable",
      Tags: "Mutable",
    },
    DedicatedIpPool: {
      PoolName: "Immutable",
      ScalingMode: "Conditional",
      Tags: "Mutable",
    },
    EmailIdentity: {
      ConfigurationSetAttributes: "Mutable",
      EmailIdentity: "Immutable",
      DkimSigningAttributes: "Mutable",
      DkimAttributes: "Mutable",
      FeedbackAttributes: "Mutable",
      Tags: "Mutable",
      MailFromAttributes: "Mutable",
    },
    MailManagerAddonInstance: {
      AddonSubscriptionId: "Immutable",
      Tags: "Mutable",
    },
    MailManagerAddonSubscription: {
      AddonName: "Immutable",
      Tags: "Mutable",
    },
    MailManagerAddressList: {
      AddressListName: "Immutable",
      Tags: "Mutable",
    },
    MailManagerArchive: {
      KmsKeyArn: "Immutable",
      ArchiveName: "Mutable",
      Retention: "Mutable",
      Tags: "Mutable",
    },
    MailManagerIngressPoint: {
      RuleSetId: "Mutable",
      Type: "Immutable",
      TrafficPolicyId: "Mutable",
      IngressPointName: "Mutable",
      StatusToUpdate: "Mutable",
      NetworkConfiguration: "Immutable",
      Tags: "Mutable",
      IngressPointConfiguration: "Mutable",
    },
    MailManagerRelay: {
      Authentication: "Mutable",
      ServerName: "Mutable",
      RelayName: "Mutable",
      ServerPort: "Mutable",
      Tags: "Mutable",
    },
    MailManagerRuleSet: {
      RuleSetName: "Mutable",
      Rules: "Mutable",
      Tags: "Mutable",
    },
    MailManagerTrafficPolicy: {
      DefaultAction: "Mutable",
      PolicyStatements: "Mutable",
      TrafficPolicyName: "Mutable",
      MaxMessageSizeBytes: "Mutable",
      Tags: "Mutable",
    },
    ReceiptFilter: {
      Filter: "Immutable",
    },
    ReceiptRule: {
      After: "Mutable",
      Rule: "Mutable",
      RuleSetName: "Immutable",
    },
    ReceiptRuleSet: {
      RuleSetName: "Immutable",
    },
    Template: {
      Template: "Mutable",
    },
    VdmAttributes: {
      DashboardAttributes: "Mutable",
      GuardianAttributes: "Mutable",
    },
  },
  SMSVOICE: {
    ConfigurationSet: {
      EventDestinations: "Mutable",
      MessageFeedbackEnabled: "Mutable",
      ConfigurationSetName: "Immutable",
      DefaultSenderId: "Mutable",
      ProtectConfigurationId: "Mutable",
      Tags: "Mutable",
    },
    OptOutList: {
      OptOutListName: "Immutable",
      Tags: "Mutable",
    },
    PhoneNumber: {
      OptOutListName: "Mutable",
      SelfManagedOptOutsEnabled: "Mutable",
      NumberType: "Immutable",
      TwoWay: "Mutable",
      NumberCapabilities: "Immutable",
      MandatoryKeywords: "Mutable",
      OptionalKeywords: "Mutable",
      DeletionProtectionEnabled: "Mutable",
      IsoCountryCode: "Immutable",
      Tags: "Mutable",
    },
    Pool: {
      OptOutListName: "Mutable",
      SelfManagedOptOutsEnabled: "Mutable",
      SharedRoutesEnabled: "Mutable",
      OriginationIdentities: "Mutable",
      TwoWay: "Mutable",
      MandatoryKeywords: "Mutable",
      OptionalKeywords: "Mutable",
      DeletionProtectionEnabled: "Mutable",
      Tags: "Mutable",
    },
    ProtectConfiguration: {
      CountryRuleSet: "Mutable",
      DeletionProtectionEnabled: "Mutable",
      Tags: "Mutable",
    },
    ResourcePolicy: {
      ResourceArn: "Immutable",
      PolicyDocument: "Mutable",
    },
    SenderId: {
      SenderId: "Immutable",
      DeletionProtectionEnabled: "Mutable",
      IsoCountryCode: "Immutable",
      Tags: "Mutable",
    },
  },
  SNS: {
    Subscription: {
      ReplayPolicy: "Mutable",
      RawMessageDelivery: "Mutable",
      Endpoint: "Immutable",
      FilterPolicy: "Mutable",
      TopicArn: "Immutable",
      RedrivePolicy: "Mutable",
      DeliveryPolicy: "Mutable",
      Region: "Conditional",
      SubscriptionRoleArn: "Mutable",
      FilterPolicyScope: "Mutable",
      Protocol: "Immutable",
    },
    Topic: {
      KmsMasterKeyId: "Mutable",
      TracingConfig: "Mutable",
      FifoTopic: "Immutable",
      DataProtectionPolicy: "Mutable",
      TopicName: "Immutable",
      SignatureVersion: "Mutable",
      DeliveryStatusLogging: "Mutable",
      DisplayName: "Mutable",
      ContentBasedDeduplication: "Mutable",
      Subscription: "Mutable",
      FifoThroughputScope: "Mutable",
      Tags: "Mutable",
      ArchivePolicy: "Mutable",
    },
    TopicInlinePolicy: {
      TopicArn: "Immutable",
      PolicyDocument: "Mutable",
    },
    TopicPolicy: {
      Topics: "Mutable",
      PolicyDocument: "Mutable",
    },
  },
  SQS: {
    Queue: {
      ReceiveMessageWaitTimeSeconds: "Mutable",
      FifoThroughputLimit: "Mutable",
      KmsMasterKeyId: "Mutable",
      FifoQueue: "Immutable",
      MaximumMessageSize: "Mutable",
      VisibilityTimeout: "Mutable",
      KmsDataKeyReusePeriodSeconds: "Mutable",
      RedriveAllowPolicy: "Mutable",
      SqsManagedSseEnabled: "Mutable",
      DelaySeconds: "Mutable",
      RedrivePolicy: "Mutable",
      MessageRetentionPeriod: "Mutable",
      DeduplicationScope: "Mutable",
      ContentBasedDeduplication: "Mutable",
      QueueName: "Immutable",
      Tags: "Mutable",
    },
    QueueInlinePolicy: {
      PolicyDocument: "Mutable",
      Queue: "Immutable",
    },
    QueuePolicy: {
      PolicyDocument: "Mutable",
      Queues: "Mutable",
    },
  },
  SSM: {
    Association: {
      AssociationName: "Mutable",
      CalendarNames: "Mutable",
      ScheduleExpression: "Mutable",
      MaxErrors: "Mutable",
      Parameters: "Mutable",
      InstanceId: "Mutable",
      WaitForSuccessTimeoutSeconds: "Mutable",
      MaxConcurrency: "Mutable",
      ComplianceSeverity: "Mutable",
      Targets: "Mutable",
      SyncCompliance: "Mutable",
      OutputLocation: "Mutable",
      ScheduleOffset: "Mutable",
      Name: "Mutable",
      ApplyOnlyAtCronInterval: "Mutable",
      DocumentVersion: "Mutable",
      AutomationTargetParameterName: "Mutable",
    },
    Document: {
      DocumentFormat: "Conditional",
      Requires: "Conditional",
      Content: "Conditional",
      TargetType: "Conditional",
      DocumentType: "Immutable",
      VersionName: "Conditional",
      UpdateMethod: "Mutable",
      Attachments: "Conditional",
      Tags: "Mutable",
      Name: "Immutable",
    },
    MaintenanceWindow: {
      StartDate: "Mutable",
      Description: "Mutable",
      AllowUnassociatedTargets: "Mutable",
      Cutoff: "Mutable",
      Schedule: "Mutable",
      Duration: "Mutable",
      ScheduleOffset: "Mutable",
      EndDate: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
      ScheduleTimezone: "Mutable",
    },
    MaintenanceWindowTarget: {
      OwnerInformation: "Mutable",
      Description: "Mutable",
      WindowId: "Immutable",
      ResourceType: "Mutable",
      Targets: "Mutable",
      Name: "Mutable",
    },
    MaintenanceWindowTask: {
      MaxErrors: "Mutable",
      Description: "Mutable",
      ServiceRoleArn: "Mutable",
      Priority: "Mutable",
      MaxConcurrency: "Mutable",
      Targets: "Mutable",
      Name: "Mutable",
      TaskArn: "Mutable",
      TaskInvocationParameters: "Mutable",
      WindowId: "Immutable",
      TaskParameters: "Mutable",
      TaskType: "Immutable",
      CutoffBehavior: "Mutable",
      LoggingInfo: "Mutable",
    },
    Parameter: {
      Type: "Mutable",
      Description: "Mutable",
      Policies: "Mutable",
      AllowedPattern: "Mutable",
      Tier: "Mutable",
      Value: "Mutable",
      DataType: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    PatchBaseline: {
      OperatingSystem: "Immutable",
      Description: "Mutable",
      ApprovalRules: "Mutable",
      Sources: "Mutable",
      Name: "Mutable",
      RejectedPatches: "Mutable",
      ApprovedPatches: "Mutable",
      RejectedPatchesAction: "Mutable",
      PatchGroups: "Mutable",
      ApprovedPatchesComplianceLevel: "Mutable",
      AvailableSecurityUpdatesComplianceStatus: "Mutable",
      ApprovedPatchesEnableNonSecurity: "Mutable",
      DefaultBaseline: "Mutable",
      GlobalFilters: "Mutable",
      Tags: "Mutable",
    },
    ResourceDataSync: {
      S3Destination: "Immutable",
      KMSKeyArn: "Immutable",
      SyncSource: "Mutable",
      BucketName: "Immutable",
      BucketRegion: "Immutable",
      SyncFormat: "Immutable",
      SyncName: "Immutable",
      SyncType: "Immutable",
      BucketPrefix: "Immutable",
    },
    ResourcePolicy: {
      Policy: "Mutable",
      ResourceArn: "Immutable",
    },
  },
  SSMContacts: {
    Contact: {
      Type: "Immutable",
      Alias: "Immutable",
      DisplayName: "Mutable",
      Plan: "Mutable",
      Tags: "Mutable",
    },
    ContactChannel: {
      ChannelName: "Mutable",
      ChannelAddress: "Mutable",
      ContactId: "Immutable",
      ChannelType: "Immutable",
      DeferActivation: "Mutable",
    },
    Plan: {
      RotationIds: "Mutable",
      Stages: "Mutable",
      ContactId: "Immutable",
    },
    Rotation: {
      Recurrence: "Mutable",
      TimeZoneId: "Mutable",
      StartTime: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
      ContactIds: "Mutable",
    },
  },
  SSMGuiConnect: {
    Preferences: {
      ConnectionRecordingPreferences: "Mutable",
    },
  },
  SSMIncidents: {
    ReplicationSet: {
      Regions: "Mutable",
      DeletionProtected: "Mutable",
      Tags: "Mutable",
    },
    ResponsePlan: {
      ChatChannel: "Mutable",
      Integrations: "Mutable",
      Actions: "Mutable",
      DisplayName: "Mutable",
      IncidentTemplate: "Mutable",
      Engagements: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  SSMQuickSetup: {
    ConfigurationManager: {
      Description: "Mutable",
      ConfigurationDefinitions: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  SSO: {
    Application: {
      Status: "Mutable",
      ApplicationProviderArn: "Immutable",
      PortalOptions: "Mutable",
      Description: "Mutable",
      InstanceArn: "Immutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    ApplicationAssignment: {
      ApplicationArn: "Immutable",
      PrincipalId: "Immutable",
      PrincipalType: "Immutable",
    },
    Assignment: {
      PrincipalId: "Immutable",
      InstanceArn: "Immutable",
      TargetType: "Immutable",
      PermissionSetArn: "Immutable",
      PrincipalType: "Immutable",
      TargetId: "Immutable",
    },
    Instance: {
      Tags: "Mutable",
      Name: "Mutable",
    },
    InstanceAccessControlAttributeConfiguration: {
      InstanceArn: "Immutable",
      AccessControlAttributes: "Mutable",
    },
    PermissionSet: {
      RelayStateType: "Mutable",
      CustomerManagedPolicyReferences: "Mutable",
      SessionDuration: "Mutable",
      Description: "Mutable",
      InstanceArn: "Immutable",
      InlinePolicy: "Mutable",
      ManagedPolicies: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      PermissionsBoundary: "Mutable",
    },
  },
  SageMaker: {
    App: {
      RecoveryMode: "Mutable",
      DomainId: "Immutable",
      ResourceSpec: "Immutable",
      AppType: "Immutable",
      Tags: "Mutable",
      UserProfileName: "Immutable",
      AppName: "Immutable",
    },
    AppImageConfig: {
      KernelGatewayImageConfig: "Mutable",
      CodeEditorAppImageConfig: "Mutable",
      AppImageConfigName: "Immutable",
      JupyterLabAppImageConfig: "Mutable",
      Tags: "Mutable",
    },
    Cluster: {
      VpcConfig: "Immutable",
      NodeRecovery: "Mutable",
      NodeProvisioningMode: "Mutable",
      InstanceGroups: "Mutable",
      RestrictedInstanceGroups: "Mutable",
      ClusterName: "Immutable",
      Orchestrator: "Immutable",
      AutoScaling: "Mutable",
      ClusterRole: "Mutable",
      Tags: "Mutable",
    },
    CodeRepository: {
      CodeRepositoryName: "Immutable",
      GitConfig: "Mutable",
      Tags: "Mutable",
    },
    DataQualityJobDefinition: {
      DataQualityJobInput: "Immutable",
      DataQualityAppSpecification: "Immutable",
      EndpointName: "Immutable",
      StoppingCondition: "Immutable",
      JobDefinitionName: "Immutable",
      JobResources: "Immutable",
      NetworkConfig: "Immutable",
      DataQualityJobOutputConfig: "Immutable",
      DataQualityBaselineConfig: "Immutable",
      RoleArn: "Immutable",
      Tags: "Immutable",
    },
    Device: {
      DeviceFleetName: "Mutable",
      Device: "Mutable",
      Tags: "Mutable",
    },
    DeviceFleet: {
      DeviceFleetName: "Immutable",
      Description: "Mutable",
      OutputConfig: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    Domain: {
      AppNetworkAccessType: "Mutable",
      DefaultSpaceSettings: "Mutable",
      KmsKeyId: "Immutable",
      VpcId: "Immutable",
      DomainName: "Immutable",
      AppSecurityGroupManagement: "Mutable",
      DefaultUserSettings: "Mutable",
      SubnetIds: "Mutable",
      AuthMode: "Immutable",
      Tags: "Immutable",
      DomainSettings: "Mutable",
      TagPropagation: "Mutable",
    },
    Endpoint: {
      RetainAllVariantProperties: "Mutable",
      EndpointName: "Immutable",
      ExcludeRetainedVariantProperties: "Mutable",
      EndpointConfigName: "Mutable",
      DeploymentConfig: "Mutable",
      RetainDeploymentConfig: "Mutable",
      Tags: "Mutable",
    },
    EndpointConfig: {
      ShadowProductionVariants: "Immutable",
      DataCaptureConfig: "Immutable",
      ExecutionRoleArn: "Immutable",
      EnableNetworkIsolation: "Immutable",
      ProductionVariants: "Immutable",
      KmsKeyId: "Immutable",
      AsyncInferenceConfig: "Immutable",
      VpcConfig: "Immutable",
      EndpointConfigName: "Immutable",
      ExplainerConfig: "Immutable",
      Tags: "Mutable",
    },
    FeatureGroup: {
      ThroughputConfig: "Mutable",
      Description: "Immutable",
      OfflineStoreConfig: "Immutable",
      FeatureDefinitions: "Mutable",
      RecordIdentifierFeatureName: "Immutable",
      EventTimeFeatureName: "Immutable",
      FeatureGroupName: "Immutable",
      OnlineStoreConfig: "Mutable",
      RoleArn: "Immutable",
      Tags: "Immutable",
    },
    Image: {
      ImageName: "Immutable",
      ImageDisplayName: "Mutable",
      ImageRoleArn: "Mutable",
      ImageDescription: "Mutable",
      Tags: "Mutable",
    },
    ImageVersion: {
      ImageName: "Immutable",
      Horovod: "Mutable",
      Processor: "Mutable",
      JobType: "Mutable",
      Alias: "Mutable",
      ProgrammingLang: "Mutable",
      VendorGuidance: "Mutable",
      MLFramework: "Mutable",
      Aliases: "Mutable",
      ReleaseNotes: "Mutable",
      BaseImage: "Immutable",
    },
    InferenceComponent: {
      EndpointName: "Mutable",
      VariantName: "Mutable",
      InferenceComponentName: "Mutable",
      Specification: "Mutable",
      RuntimeConfig: "Mutable",
      DeploymentConfig: "Mutable",
      EndpointArn: "Mutable",
      Tags: "Mutable",
    },
    InferenceExperiment: {
      DataStorageConfig: "Mutable",
      Description: "Mutable",
      StatusReason: "Mutable",
      ModelVariants: "Mutable",
      ShadowModeConfig: "Mutable",
      RoleArn: "Immutable",
      Name: "Immutable",
      Type: "Immutable",
      EndpointName: "Immutable",
      DesiredState: "Mutable",
      Schedule: "Mutable",
      KmsKey: "Immutable",
      Tags: "Mutable",
    },
    MlflowTrackingServer: {
      TrackingServerName: "Immutable",
      MlflowVersion: "Conditional",
      WeeklyMaintenanceWindowStart: "Mutable",
      TrackingServerSize: "Mutable",
      ArtifactStoreUri: "Mutable",
      AutomaticModelRegistration: "Mutable",
      RoleArn: "Conditional",
      Tags: "Mutable",
    },
    Model: {
      ExecutionRoleArn: "Immutable",
      EnableNetworkIsolation: "Immutable",
      PrimaryContainer: "Immutable",
      ModelName: "Immutable",
      VpcConfig: "Immutable",
      Containers: "Immutable",
      InferenceExecutionConfig: "Immutable",
      Tags: "Mutable",
    },
    ModelBiasJobDefinition: {
      ModelBiasJobInput: "Immutable",
      ModelBiasJobOutputConfig: "Immutable",
      EndpointName: "Immutable",
      StoppingCondition: "Immutable",
      JobDefinitionName: "Immutable",
      JobResources: "Immutable",
      NetworkConfig: "Immutable",
      ModelBiasBaselineConfig: "Immutable",
      ModelBiasAppSpecification: "Immutable",
      RoleArn: "Immutable",
      Tags: "Immutable",
    },
    ModelCard: {
      LastModifiedBy: "Mutable",
      ModelCardName: "Immutable",
      ModelCardStatus: "Mutable",
      CreatedBy: "Mutable",
      SecurityConfig: "Immutable",
      Content: "Mutable",
      Tags: "Mutable",
    },
    ModelExplainabilityJobDefinition: {
      ModelExplainabilityJobOutputConfig: "Immutable",
      EndpointName: "Immutable",
      StoppingCondition: "Immutable",
      ModelExplainabilityBaselineConfig: "Immutable",
      JobDefinitionName: "Immutable",
      JobResources: "Immutable",
      NetworkConfig: "Immutable",
      RoleArn: "Immutable",
      ModelExplainabilityJobInput: "Immutable",
      Tags: "Immutable",
      ModelExplainabilityAppSpecification: "Immutable",
    },
    ModelPackage: {
      DriftCheckBaselines: "Immutable",
      ModelMetrics: "Immutable",
      Task: "Immutable",
      CustomerMetadataProperties: "Mutable",
      SourceUri: "Conditional",
      ModelApprovalStatus: "Mutable",
      ModelPackageVersion: "Mutable",
      MetadataProperties: "Immutable",
      SourceAlgorithmSpecification: "Immutable",
      ModelPackageStatusDetails: "Mutable",
      ModelPackageDescription: "Immutable",
      AdditionalInferenceSpecificationsToAdd: "Mutable",
      SecurityConfig: "Immutable",
      InferenceSpecification: "Immutable",
      SamplePayloadUrl: "Immutable",
      Tags: "Mutable",
      CertifyForMarketplace: "Mutable",
      ModelPackageGroupName: "Immutable",
      ApprovalDescription: "Mutable",
      ModelCard: "Conditional",
      ValidationSpecification: "Immutable",
      SkipModelValidation: "Mutable",
      ModelPackageName: "Mutable",
      LastModifiedTime: "Mutable",
      ClientToken: "Immutable",
      Domain: "Immutable",
      AdditionalInferenceSpecifications: "Mutable",
    },
    ModelPackageGroup: {
      ModelPackageGroupName: "Immutable",
      ModelPackageGroupDescription: "Immutable",
      ModelPackageGroupPolicy: "Mutable",
      Tags: "Mutable",
    },
    ModelQualityJobDefinition: {
      ModelQualityAppSpecification: "Immutable",
      EndpointName: "Immutable",
      StoppingCondition: "Immutable",
      ModelQualityBaselineConfig: "Immutable",
      JobDefinitionName: "Immutable",
      ModelQualityJobInput: "Immutable",
      JobResources: "Immutable",
      NetworkConfig: "Immutable",
      ModelQualityJobOutputConfig: "Immutable",
      RoleArn: "Immutable",
      Tags: "Immutable",
    },
    MonitoringSchedule: {
      MonitoringScheduleStatus: "Mutable",
      MonitoringScheduleConfig: "Mutable",
      MonitoringScheduleName: "Immutable",
      EndpointName: "Mutable",
      FailureReason: "Mutable",
      LastMonitoringExecutionSummary: "Mutable",
      Tags: "Mutable",
    },
    NotebookInstance: {
      KmsKeyId: "Immutable",
      VolumeSizeInGB: "Mutable",
      AdditionalCodeRepositories: "Mutable",
      DefaultCodeRepository: "Mutable",
      DirectInternetAccess: "Immutable",
      PlatformIdentifier: "Immutable",
      AcceleratorTypes: "Mutable",
      SubnetId: "Immutable",
      SecurityGroupIds: "Immutable",
      RoleArn: "Mutable",
      InstanceMetadataServiceConfiguration: "Mutable",
      RootAccess: "Mutable",
      NotebookInstanceName: "Immutable",
      InstanceType: "Mutable",
      LifecycleConfigName: "Mutable",
      Tags: "Mutable",
    },
    NotebookInstanceLifecycleConfig: {
      OnStart: "Mutable",
      NotebookInstanceLifecycleConfigName: "Immutable",
      OnCreate: "Mutable",
    },
    PartnerApp: {
      ExecutionRoleArn: "Immutable",
      Type: "Immutable",
      KmsKeyId: "Immutable",
      EnableIamSessionBasedIdentity: "Mutable",
      Tier: "Mutable",
      ApplicationConfig: "Mutable",
      AuthType: "Immutable",
      MaintenanceConfig: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Pipeline: {
      PipelineName: "Immutable",
      ParallelismConfiguration: "Mutable",
      PipelineDescription: "Mutable",
      PipelineDisplayName: "Mutable",
      PipelineDefinition: "Mutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
    },
    ProcessingJob: {
      ProcessingResources: "Immutable",
      StoppingCondition: "Immutable",
      ExperimentConfig: "Immutable",
      ProcessingInputs: "Immutable",
      NetworkConfig: "Immutable",
      ProcessingOutputConfig: "Immutable",
      Environment: "Immutable",
      AppSpecification: "Immutable",
      ProcessingJobName: "Immutable",
      RoleArn: "Immutable",
      Tags: "Immutable",
    },
    Project: {
      ProjectName: "Immutable",
      TemplateProviderDetails: "Immutable",
      ServiceCatalogProvisionedProductDetails: "Mutable",
      ServiceCatalogProvisioningDetails: "Immutable",
      ProjectDescription: "Immutable",
      Tags: "Immutable",
    },
    Space: {
      DomainId: "Immutable",
      SpaceName: "Immutable",
      SpaceSettings: "Mutable",
      SpaceDisplayName: "Mutable",
      Tags: "Mutable",
      SpaceSharingSettings: "Immutable",
      OwnershipSettings: "Immutable",
    },
    StudioLifecycleConfig: {
      StudioLifecycleConfigAppType: "Immutable",
      StudioLifecycleConfigName: "Immutable",
      StudioLifecycleConfigContent: "Immutable",
      Tags: "Immutable",
    },
    UserProfile: {
      DomainId: "Immutable",
      SingleSignOnUserValue: "Immutable",
      UserSettings: "Mutable",
      SingleSignOnUserIdentifier: "Immutable",
      UserProfileName: "Immutable",
      Tags: "Immutable",
    },
    Workteam: {
      Description: "Mutable",
      NotificationConfiguration: "Mutable",
      WorkteamName: "Immutable",
      MemberDefinitions: "Mutable",
      WorkforceName: "Immutable",
      Tags: "Mutable",
    },
  },
  Scheduler: {
    Schedule: {
      GroupName: "Mutable",
      StartDate: "Mutable",
      ScheduleExpression: "Mutable",
      Target: "Mutable",
      Description: "Mutable",
      KmsKeyArn: "Mutable",
      State: "Mutable",
      FlexibleTimeWindow: "Mutable",
      ScheduleExpressionTimezone: "Mutable",
      EndDate: "Mutable",
      Name: "Immutable",
    },
    ScheduleGroup: {
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  SecretsManager: {
    ResourcePolicy: {
      BlockPublicPolicy: "Mutable",
      SecretId: "Immutable",
      ResourcePolicy: "Mutable",
    },
    RotationSchedule: {
      HostedRotationLambda: "Mutable",
      SecretId: "Immutable",
      RotateImmediatelyOnUpdate: "Mutable",
      RotationLambdaARN: "Mutable",
      RotationRules: "Mutable",
    },
    Secret: {
      Description: "Mutable",
      KmsKeyId: "Mutable",
      SecretString: "Mutable",
      GenerateSecretString: "Mutable",
      ReplicaRegions: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    SecretTargetAttachment: {
      SecretId: "Immutable",
      TargetType: "Mutable",
      TargetId: "Mutable",
    },
  },
  SecurityHub: {
    AggregatorV2: {
      RegionLinkingMode: "Mutable",
      LinkedRegions: "Mutable",
      Tags: "Mutable",
    },
    AutomationRule: {
      Description: "Mutable",
      Actions: "Mutable",
      IsTerminal: "Mutable",
      RuleStatus: "Mutable",
      Criteria: "Mutable",
      RuleOrder: "Mutable",
      RuleName: "Mutable",
      Tags: "Mutable",
    },
    AutomationRuleV2: {
      Description: "Mutable",
      Actions: "Mutable",
      RuleStatus: "Mutable",
      Criteria: "Mutable",
      RuleOrder: "Mutable",
      RuleName: "Mutable",
      Tags: "Mutable",
    },
    ConfigurationPolicy: {
      Description: "Mutable",
      ConfigurationPolicy: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    DelegatedAdmin: {
      AdminAccountId: "Immutable",
    },
    FindingAggregator: {
      RegionLinkingMode: "Mutable",
      Regions: "Mutable",
    },
    Hub: {
      ControlFindingGenerator: "Mutable",
      EnableDefaultStandards: "Mutable",
      AutoEnableControls: "Mutable",
      Tags: "Mutable",
    },
    HubV2: {
      Tags: "Mutable",
    },
    Insight: {
      Filters: "Mutable",
      GroupByAttribute: "Mutable",
      Name: "Mutable",
    },
    OrganizationConfiguration: {
      AutoEnable: "Mutable",
      ConfigurationType: "Mutable",
      AutoEnableStandards: "Mutable",
    },
    PolicyAssociation: {
      ConfigurationPolicyId: "Mutable",
      TargetType: "Immutable",
      TargetId: "Immutable",
    },
    ProductSubscription: {
      ProductArn: "Immutable",
    },
    SecurityControl: {
      SecurityControlId: "Immutable",
      LastUpdateReason: "Mutable",
      Parameters: "Mutable",
      SecurityControlArn: "Mutable",
    },
    Standard: {
      StandardsArn: "Immutable",
      DisabledStandardsControls: "Mutable",
    },
  },
  SecurityLake: {
    AwsLogSource: {
      SourceName: "Immutable",
      SourceVersion: "Immutable",
      Accounts: "Mutable",
      DataLakeArn: "Immutable",
    },
    DataLake: {
      EncryptionConfiguration: "Mutable",
      LifecycleConfiguration: "Mutable",
      ReplicationConfiguration: "Mutable",
      MetaStoreManagerRoleArn: "Mutable",
      Tags: "Mutable",
    },
    Subscriber: {
      SubscriberIdentity: "Mutable",
      SubscriberName: "Mutable",
      SubscriberDescription: "Mutable",
      AccessTypes: "Mutable",
      Sources: "Mutable",
      DataLakeArn: "Immutable",
      Tags: "Mutable",
    },
    SubscriberNotification: {
      SubscriberArn: "Immutable",
      NotificationConfiguration: "Mutable",
    },
  },
  ServiceCatalog: {
    AcceptedPortfolioShare: {
      AcceptLanguage: "Immutable",
      PortfolioId: "Immutable",
    },
    CloudFormationProduct: {
      Owner: "Mutable",
      Description: "Mutable",
      SupportEmail: "Mutable",
      ProductType: "Mutable",
      Name: "Mutable",
      ReplaceProvisioningArtifacts: "Mutable",
      SupportDescription: "Mutable",
      Distributor: "Mutable",
      AcceptLanguage: "Mutable",
      SupportUrl: "Mutable",
      SourceConnection: "Mutable",
      Tags: "Mutable",
      ProvisioningArtifactParameters: "Mutable",
    },
    CloudFormationProvisionedProduct: {
      PathId: "Mutable",
      ProvisioningParameters: "Mutable",
      ProvisioningPreferences: "Mutable",
      ProductName: "Mutable",
      ProvisioningArtifactName: "Mutable",
      NotificationArns: "Immutable",
      AcceptLanguage: "Mutable",
      ProductId: "Mutable",
      PathName: "Mutable",
      Tags: "Mutable",
      ProvisionedProductName: "Immutable",
      ProvisioningArtifactId: "Mutable",
    },
    LaunchNotificationConstraint: {
      Description: "Mutable",
      NotificationArns: "Mutable",
      AcceptLanguage: "Mutable",
      PortfolioId: "Immutable",
      ProductId: "Immutable",
    },
    LaunchRoleConstraint: {
      Description: "Mutable",
      LocalRoleName: "Mutable",
      AcceptLanguage: "Mutable",
      PortfolioId: "Immutable",
      ProductId: "Immutable",
      RoleArn: "Mutable",
    },
    LaunchTemplateConstraint: {
      Description: "Mutable",
      AcceptLanguage: "Mutable",
      PortfolioId: "Immutable",
      ProductId: "Immutable",
      Rules: "Mutable",
    },
    Portfolio: {
      ProviderName: "Mutable",
      Description: "Mutable",
      DisplayName: "Mutable",
      AcceptLanguage: "Mutable",
      Tags: "Mutable",
    },
    PortfolioPrincipalAssociation: {
      PrincipalARN: "Immutable",
      AcceptLanguage: "Immutable",
      PortfolioId: "Immutable",
      PrincipalType: "Immutable",
    },
    PortfolioProductAssociation: {
      SourcePortfolioId: "Immutable",
      AcceptLanguage: "Immutable",
      PortfolioId: "Immutable",
      ProductId: "Immutable",
    },
    PortfolioShare: {
      AccountId: "Immutable",
      AcceptLanguage: "Immutable",
      PortfolioId: "Immutable",
      ShareTagOptions: "Mutable",
    },
    ResourceUpdateConstraint: {
      Description: "Mutable",
      AcceptLanguage: "Mutable",
      TagUpdateOnProvisionedProduct: "Mutable",
      PortfolioId: "Immutable",
      ProductId: "Immutable",
    },
    ServiceAction: {
      Description: "Mutable",
      Definition: "Mutable",
      AcceptLanguage: "Mutable",
      DefinitionType: "Mutable",
      Name: "Mutable",
    },
    ServiceActionAssociation: {
      ServiceActionId: "Immutable",
      ProductId: "Immutable",
      ProvisioningArtifactId: "Immutable",
    },
    StackSetConstraint: {
      Description: "Mutable",
      StackInstanceControl: "Mutable",
      AcceptLanguage: "Mutable",
      PortfolioId: "Immutable",
      ProductId: "Immutable",
      RegionList: "Mutable",
      AdminRole: "Mutable",
      AccountList: "Mutable",
      ExecutionRole: "Mutable",
    },
    TagOption: {
      Active: "Mutable",
      Value: "Immutable",
      Key: "Immutable",
    },
    TagOptionAssociation: {
      TagOptionId: "Immutable",
      ResourceId: "Immutable",
    },
  },
  ServiceCatalogAppRegistry: {
    Application: {
      Description: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    AttributeGroup: {
      Description: "Mutable",
      Attributes: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    AttributeGroupAssociation: {
      AttributeGroup: "Immutable",
      Application: "Immutable",
    },
    ResourceAssociation: {
      Resource: "Immutable",
      ResourceType: "Immutable",
      Application: "Immutable",
    },
  },
  ServiceDiscovery: {
    HttpNamespace: {
      Description: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Instance: {
      InstanceAttributes: "Mutable",
      InstanceId: "Immutable",
      ServiceId: "Immutable",
    },
    PrivateDnsNamespace: {
      Description: "Mutable",
      Vpc: "Immutable",
      Properties: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    PublicDnsNamespace: {
      Description: "Mutable",
      Properties: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    Service: {
      Type: "Immutable",
      Description: "Mutable",
      HealthCheckCustomConfig: "Immutable",
      DnsConfig: "Mutable",
      ServiceAttributes: "Mutable",
      NamespaceId: "Immutable",
      HealthCheckConfig: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  Shield: {
    DRTAccess: {
      LogBucketList: "Mutable",
      RoleArn: "Mutable",
    },
    ProactiveEngagement: {
      ProactiveEngagementStatus: "Mutable",
      EmergencyContactList: "Mutable",
    },
    Protection: {
      ResourceArn: "Immutable",
      HealthCheckArns: "Mutable",
      ApplicationLayerAutomaticResponseConfiguration: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ProtectionGroup: {
      Aggregation: "Mutable",
      Pattern: "Mutable",
      ProtectionGroupId: "Immutable",
      ResourceType: "Mutable",
      Members: "Mutable",
      Tags: "Mutable",
    },
  },
  Signer: {
    ProfilePermission: {
      Action: "Immutable",
      StatementId: "Immutable",
      ProfileName: "Immutable",
      Principal: "Immutable",
      ProfileVersion: "Immutable",
    },
    SigningProfile: {
      SignatureValidityPeriod: "Immutable",
      PlatformId: "Immutable",
      Tags: "Mutable",
    },
  },
  SimSpaceWeaver: {
    Simulation: {
      SchemaS3Location: "Immutable",
      SnapshotS3Location: "Immutable",
      MaximumDuration: "Immutable",
      RoleArn: "Immutable",
      Name: "Immutable",
    },
  },
  StepFunctions: {
    Activity: {
      EncryptionConfiguration: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    StateMachine: {
      EncryptionConfiguration: "Mutable",
      DefinitionString: "Mutable",
      LoggingConfiguration: "Mutable",
      DefinitionSubstitutions: "Mutable",
      Definition: "Mutable",
      DefinitionS3Location: "Mutable",
      StateMachineName: "Immutable",
      RoleArn: "Mutable",
      Tags: "Mutable",
      StateMachineType: "Immutable",
      TracingConfiguration: "Mutable",
    },
    StateMachineAlias: {
      Description: "Mutable",
      RoutingConfiguration: "Mutable",
      DeploymentPreference: "Mutable",
      Name: "Immutable",
    },
    StateMachineVersion: {
      Description: "Immutable",
      StateMachineRevisionId: "Immutable",
      StateMachineArn: "Immutable",
    },
  },
  SupportApp: {
    AccountAlias: {
      AccountAlias: "Mutable",
    },
    SlackChannelConfiguration: {
      ChannelName: "Mutable",
      NotifyOnAddCorrespondenceToCase: "Mutable",
      ChannelRoleArn: "Mutable",
      NotifyOnResolveCase: "Mutable",
      NotifyOnCaseSeverity: "Mutable",
      TeamId: "Immutable",
      ChannelId: "Immutable",
      NotifyOnCreateOrReopenCase: "Mutable",
    },
    SlackWorkspaceConfiguration: {
      VersionId: "Mutable",
      TeamId: "Immutable",
    },
  },
  Synthetics: {
    Canary: {
      BrowserConfigs: "Mutable",
      VisualReferences: "Mutable",
      ArtifactConfig: "Mutable",
      SuccessRetentionPeriod: "Mutable",
      RuntimeVersion: "Mutable",
      VPCConfig: "Mutable",
      RunConfig: "Mutable",
      DryRunAndUpdate: "Mutable",
      FailureRetentionPeriod: "Mutable",
      Code: "Mutable",
      ResourcesToReplicateTags: "Mutable",
      Name: "Immutable",
      ProvisionedResourceCleanup: "Mutable",
      ExecutionRoleArn: "Mutable",
      Schedule: "Mutable",
      ArtifactS3Location: "Mutable",
      Tags: "Mutable",
      StartCanaryAfterCreation: "Mutable",
    },
    Group: {
      ResourceArns: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  SystemsManagerSAP: {
    Application: {
      Instances: "Immutable",
      ApplicationType: "Mutable",
      DatabaseArn: "Immutable",
      SapInstanceNumber: "Immutable",
      ApplicationId: "Mutable",
      Credentials: "Immutable",
      Tags: "Mutable",
      ComponentsInfo: "Immutable",
      Sid: "Immutable",
    },
  },
  Timestream: {
    Database: {
      KmsKeyId: "Mutable",
      DatabaseName: "Immutable",
      Tags: "Mutable",
    },
    InfluxDBInstance: {
      DbParameterGroupIdentifier: "Mutable",
      Organization: "Immutable",
      Port: "Mutable",
      DbInstanceType: "Mutable",
      VpcSubnetIds: "Immutable",
      DeploymentType: "Mutable",
      AllocatedStorage: "Mutable",
      Name: "Immutable",
      DbStorageType: "Mutable",
      LogDeliveryConfiguration: "Mutable",
      Username: "Immutable",
      Bucket: "Immutable",
      VpcSecurityGroupIds: "Immutable",
      NetworkType: "Immutable",
      PubliclyAccessible: "Immutable",
      Tags: "Mutable",
      Password: "Immutable",
    },
    ScheduledQuery: {
      ScheduledQueryExecutionRoleArn: "Immutable",
      ErrorReportConfiguration: "Immutable",
      ScheduleConfiguration: "Immutable",
      TargetConfiguration: "Immutable",
      KmsKeyId: "Immutable",
      QueryString: "Immutable",
      NotificationConfiguration: "Immutable",
      ScheduledQueryName: "Immutable",
      ClientToken: "Mutable",
      Tags: "Mutable",
    },
    Table: {
      TableName: "Immutable",
      RetentionProperties: "Mutable",
      Schema: "Mutable",
      DatabaseName: "Immutable",
      Tags: "Mutable",
      MagneticStoreWriteProperties: "Mutable",
    },
  },
  Transfer: {
    Agreement: {
      Status: "Mutable",
      Description: "Mutable",
      BaseDirectory: "Mutable",
      ServerId: "Immutable",
      CustomDirectories: "Mutable",
      AccessRole: "Mutable",
      PartnerProfileId: "Mutable",
      LocalProfileId: "Mutable",
      EnforceMessageSigning: "Mutable",
      PreserveFilename: "Mutable",
      Tags: "Mutable",
    },
    Certificate: {
      InactiveDate: "Mutable",
      Usage: "Mutable",
      PrivateKey: "Immutable",
      Description: "Mutable",
      CertificateChain: "Immutable",
      ActiveDate: "Mutable",
      Tags: "Mutable",
      Certificate: "Immutable",
    },
    Connector: {
      As2Config: "Mutable",
      LoggingRole: "Mutable",
      AccessRole: "Mutable",
      SecurityPolicyName: "Mutable",
      SftpConfig: "Mutable",
      Tags: "Mutable",
      Url: "Mutable",
    },
    Profile: {
      As2Id: "Mutable",
      ProfileType: "Immutable",
      CertificateIds: "Mutable",
      Tags: "Mutable",
    },
    Server: {
      IpAddressType: "Conditional",
      LoggingRole: "Mutable",
      Protocols: "Mutable",
      IdentityProviderDetails: "Mutable",
      EndpointDetails: "Conditional",
      StructuredLogDestinations: "Mutable",
      PreAuthenticationLoginBanner: "Mutable",
      PostAuthenticationLoginBanner: "Mutable",
      EndpointType: "Mutable",
      SecurityPolicyName: "Mutable",
      ProtocolDetails: "Mutable",
      S3StorageOptions: "Mutable",
      WorkflowDetails: "Mutable",
      Domain: "Immutable",
      IdentityProviderType: "Immutable",
      Tags: "Mutable",
      Certificate: "Mutable",
    },
    User: {
      Policy: "Mutable",
      Role: "Mutable",
      HomeDirectory: "Mutable",
      HomeDirectoryType: "Mutable",
      ServerId: "Immutable",
      UserName: "Immutable",
      HomeDirectoryMappings: "Mutable",
      PosixProfile: "Mutable",
      SshPublicKeys: "Mutable",
      Tags: "Mutable",
    },
    WebApp: {
      WebAppCustomization: "Mutable",
      IdentityProviderDetails: "Mutable",
      WebAppUnits: "Mutable",
      WebAppEndpointPolicy: "Immutable",
      Tags: "Mutable",
      AccessEndpoint: "Mutable",
    },
    Workflow: {
      Steps: "Immutable",
      Description: "Immutable",
      OnExceptionSteps: "Immutable",
      Tags: "Mutable",
    },
  },
  VerifiedPermissions: {
    IdentitySource: {
      PrincipalEntityType: "Mutable",
      Configuration: "Mutable",
      PolicyStoreId: "Immutable",
    },
    Policy: {
      Definition: "Mutable",
      PolicyStoreId: "Immutable",
    },
    PolicyStore: {
      Description: "Mutable",
      ValidationSettings: "Mutable",
      Schema: "Mutable",
      DeletionProtection: "Mutable",
      Tags: "Mutable",
    },
    PolicyTemplate: {
      Description: "Mutable",
      Statement: "Mutable",
      PolicyStoreId: "Immutable",
    },
  },
  VoiceID: {
    Domain: {
      Description: "Mutable",
      ServerSideEncryptionConfiguration: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  VpcLattice: {
    AccessLogSubscription: {
      ResourceIdentifier: "Immutable",
      ServiceNetworkLogType: "Mutable",
      DestinationArn: "Mutable",
      Tags: "Mutable",
    },
    AuthPolicy: {
      Policy: "Mutable",
      ResourceIdentifier: "Immutable",
    },
    Listener: {
      DefaultAction: "Mutable",
      Port: "Immutable",
      ServiceIdentifier: "Immutable",
      Protocol: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ResourceConfiguration: {
      AllowAssociationToSharableServiceNetwork: "Mutable",
      ProtocolType: "Immutable",
      ResourceConfigurationType: "Immutable",
      PortRanges: "Mutable",
      ResourceConfigurationDefinition: "Mutable",
      ResourceGatewayId: "Immutable",
      ResourceConfigurationAuthType: "Immutable",
      ResourceConfigurationGroupId: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    ResourceGateway: {
      IpAddressType: "Immutable",
      VpcIdentifier: "Immutable",
      SubnetIds: "Immutable",
      SecurityGroupIds: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ResourcePolicy: {
      Policy: "Mutable",
      ResourceArn: "Immutable",
    },
    Rule: {
      Action: "Mutable",
      Priority: "Mutable",
      ServiceIdentifier: "Immutable",
      ListenerIdentifier: "Immutable",
      Tags: "Mutable",
      Match: "Mutable",
      Name: "Immutable",
    },
    Service: {
      DnsEntry: "Mutable",
      CustomDomainName: "Immutable",
      AuthType: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
      CertificateArn: "Mutable",
    },
    ServiceNetwork: {
      SharingConfig: "Mutable",
      AuthType: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    ServiceNetworkResourceAssociation: {
      ResourceConfigurationId: "Immutable",
      ServiceNetworkId: "Immutable",
      Tags: "Mutable",
    },
    ServiceNetworkServiceAssociation: {
      ServiceNetworkIdentifier: "Immutable",
      DnsEntry: "Mutable",
      ServiceIdentifier: "Immutable",
      Tags: "Mutable",
    },
    ServiceNetworkVpcAssociation: {
      ServiceNetworkIdentifier: "Immutable",
      VpcIdentifier: "Immutable",
      SecurityGroupIds: "Mutable",
      Tags: "Mutable",
    },
    TargetGroup: {
      Type: "Immutable",
      Config: "Mutable",
      Targets: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
  },
  WAF: {
    ByteMatchSet: {
      ByteMatchTuples: "Mutable",
      Name: "Immutable",
    },
    IPSet: {
      IPSetDescriptors: "Mutable",
      Name: "Immutable",
    },
    Rule: {
      MetricName: "Immutable",
      Name: "Immutable",
      Predicates: "Mutable",
    },
    SizeConstraintSet: {
      Name: "Immutable",
      SizeConstraints: "Mutable",
    },
    SqlInjectionMatchSet: {
      Name: "Immutable",
      SqlInjectionMatchTuples: "Mutable",
    },
    WebACL: {
      DefaultAction: "Mutable",
      MetricName: "Immutable",
      Name: "Immutable",
      Rules: "Mutable",
    },
    XssMatchSet: {
      Name: "Immutable",
      XssMatchTuples: "Mutable",
    },
  },
  WAFRegional: {
    ByteMatchSet: {
      ByteMatchTuples: "Mutable",
      Name: "Immutable",
    },
    GeoMatchSet: {
      GeoMatchConstraints: "Mutable",
      Name: "Immutable",
    },
    IPSet: {
      IPSetDescriptors: "Mutable",
      Name: "Immutable",
    },
    RateBasedRule: {
      MetricName: "Immutable",
      RateLimit: "Mutable",
      MatchPredicates: "Mutable",
      RateKey: "Immutable",
      Name: "Immutable",
    },
    RegexPatternSet: {
      RegexPatternStrings: "Mutable",
      Name: "Immutable",
    },
    Rule: {
      MetricName: "Immutable",
      Predicates: "Mutable",
      Name: "Immutable",
    },
    SizeConstraintSet: {
      SizeConstraints: "Mutable",
      Name: "Immutable",
    },
    SqlInjectionMatchSet: {
      SqlInjectionMatchTuples: "Mutable",
      Name: "Immutable",
    },
    WebACL: {
      MetricName: "Immutable",
      DefaultAction: "Mutable",
      Rules: "Mutable",
      Name: "Immutable",
    },
    WebACLAssociation: {
      ResourceArn: "Immutable",
      WebACLId: "Immutable",
    },
    XssMatchSet: {
      XssMatchTuples: "Mutable",
      Name: "Immutable",
    },
  },
  WAFv2: {
    IPSet: {
      Addresses: "Mutable",
      Description: "Mutable",
      Scope: "Immutable",
      IPAddressVersion: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    LoggingConfiguration: {
      ResourceArn: "Immutable",
      LogDestinationConfigs: "Mutable",
      RedactedFields: "Mutable",
      LoggingFilter: "Mutable",
    },
    RegexPatternSet: {
      Description: "Mutable",
      RegularExpressionList: "Mutable",
      Scope: "Immutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    RuleGroup: {
      Description: "Mutable",
      Scope: "Immutable",
      Capacity: "Mutable",
      AvailableLabels: "Mutable",
      CustomResponseBodies: "Mutable",
      ConsumedLabels: "Mutable",
      Rules: "Mutable",
      VisibilityConfig: "Mutable",
      Tags: "Mutable",
      Name: "Immutable",
    },
    WebACL: {
      Description: "Mutable",
      AssociationConfig: "Mutable",
      ChallengeConfig: "Mutable",
      DataProtectionConfig: "Mutable",
      OnSourceDDoSProtectionConfig: "Mutable",
      Rules: "Mutable",
      VisibilityConfig: "Mutable",
      Name: "Immutable",
      TokenDomains: "Mutable",
      DefaultAction: "Mutable",
      Scope: "Immutable",
      CustomResponseBodies: "Mutable",
      CaptchaConfig: "Mutable",
      Tags: "Mutable",
    },
    WebACLAssociation: {
      ResourceArn: "Immutable",
      WebACLArn: "Immutable",
    },
  },
  Wisdom: {
    AIAgent: {
      Type: "Immutable",
      Description: "Mutable",
      Configuration: "Mutable",
      AssistantId: "Immutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    AIAgentVersion: {
      AssistantId: "Immutable",
      AIAgentId: "Immutable",
      ModifiedTimeSeconds: "Immutable",
    },
    AIGuardrail: {
      TopicPolicyConfig: "Mutable",
      Description: "Mutable",
      WordPolicyConfig: "Mutable",
      ContextualGroundingPolicyConfig: "Mutable",
      BlockedInputMessaging: "Mutable",
      AssistantId: "Immutable",
      BlockedOutputsMessaging: "Mutable",
      SensitiveInformationPolicyConfig: "Mutable",
      ContentPolicyConfig: "Mutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    AIGuardrailVersion: {
      AIGuardrailId: "Immutable",
      AssistantId: "Immutable",
      ModifiedTimeSeconds: "Immutable",
    },
    AIPrompt: {
      Type: "Immutable",
      Description: "Mutable",
      ApiFormat: "Immutable",
      AssistantId: "Immutable",
      TemplateConfiguration: "Mutable",
      TemplateType: "Immutable",
      ModelId: "Mutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    AIPromptVersion: {
      AssistantId: "Immutable",
      ModifiedTimeSeconds: "Immutable",
      AIPromptId: "Immutable",
    },
    Assistant: {
      Type: "Immutable",
      Description: "Immutable",
      ServerSideEncryptionConfiguration: "Immutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    AssistantAssociation: {
      Association: "Immutable",
      AssociationType: "Immutable",
      AssistantId: "Immutable",
      Tags: "Immutable",
    },
    KnowledgeBase: {
      Description: "Immutable",
      KnowledgeBaseType: "Immutable",
      SourceConfiguration: "Immutable",
      ServerSideEncryptionConfiguration: "Immutable",
      VectorIngestionConfiguration: "Mutable",
      RenderingConfiguration: "Mutable",
      Tags: "Immutable",
      Name: "Immutable",
    },
    MessageTemplate: {
      MessageTemplateAttachments: "Mutable",
      Description: "Mutable",
      Language: "Mutable",
      Content: "Mutable",
      GroupingConfiguration: "Mutable",
      KnowledgeBaseArn: "Immutable",
      ChannelSubtype: "Immutable",
      DefaultAttributes: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
    MessageTemplateVersion: {
      MessageTemplateArn: "Immutable",
      MessageTemplateContentSha256: "Conditional",
    },
    QuickResponse: {
      Description: "Mutable",
      ContentType: "Mutable",
      Language: "Mutable",
      IsActive: "Mutable",
      Content: "Mutable",
      GroupingConfiguration: "Mutable",
      KnowledgeBaseArn: "Immutable",
      Channels: "Mutable",
      ShortcutKey: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  WorkSpaces: {
    ConnectionAlias: {
      ConnectionString: "Immutable",
      Tags: "Immutable",
    },
    Workspace: {
      BundleId: "Conditional",
      DirectoryId: "Conditional",
      RootVolumeEncryptionEnabled: "Conditional",
      Tags: "Mutable",
      UserName: "Immutable",
      UserVolumeEncryptionEnabled: "Conditional",
      VolumeEncryptionKey: "Conditional",
      WorkspaceProperties: "Mutable",
    },
    WorkspacesPool: {
      ApplicationSettings: "Mutable",
      BundleId: "Mutable",
      Description: "Mutable",
      DirectoryId: "Mutable",
      TimeoutSettings: "Mutable",
      Capacity: "Mutable",
      PoolName: "Immutable",
      RunningMode: "Mutable",
    },
  },
  WorkSpacesThinClient: {
    Environment: {
      DesiredSoftwareSetId: "Mutable",
      KmsKeyArn: "Immutable",
      DesktopArn: "Immutable",
      DeviceCreationTags: "Mutable",
      SoftwareSetUpdateMode: "Mutable",
      SoftwareSetUpdateSchedule: "Mutable",
      MaintenanceWindow: "Mutable",
      DesktopEndpoint: "Mutable",
      Tags: "Mutable",
      Name: "Mutable",
    },
  },
  WorkSpacesWeb: {
    BrowserSettings: {
      BrowserPolicy: "Mutable",
      CustomerManagedKey: "Immutable",
      AdditionalEncryptionContext: "Immutable",
      Tags: "Mutable",
    },
    DataProtectionSettings: {
      InlineRedactionConfiguration: "Mutable",
      Description: "Mutable",
      CustomerManagedKey: "Immutable",
      AdditionalEncryptionContext: "Immutable",
      DisplayName: "Mutable",
      Tags: "Mutable",
    },
    IdentityProvider: {
      IdentityProviderDetails: "Mutable",
      PortalArn: "Immutable",
      IdentityProviderName: "Mutable",
      IdentityProviderType: "Mutable",
      Tags: "Mutable",
    },
    IpAccessSettings: {
      IpRules: "Mutable",
      Description: "Mutable",
      CustomerManagedKey: "Immutable",
      AdditionalEncryptionContext: "Immutable",
      DisplayName: "Mutable",
      Tags: "Mutable",
    },
    NetworkSettings: {
      VpcId: "Mutable",
      SecurityGroupIds: "Mutable",
      SubnetIds: "Mutable",
      Tags: "Mutable",
    },
    Portal: {
      TrustStoreArn: "Mutable",
      UserAccessLoggingSettingsArn: "Mutable",
      BrowserSettingsArn: "Mutable",
      IpAccessSettingsArn: "Mutable",
      NetworkSettingsArn: "Mutable",
      CustomerManagedKey: "Immutable",
      AdditionalEncryptionContext: "Immutable",
      DisplayName: "Mutable",
      UserSettingsArn: "Mutable",
      DataProtectionSettingsArn: "Mutable",
      InstanceType: "Mutable",
      SessionLoggerArn: "Mutable",
      MaxConcurrentSessions: "Mutable",
      Tags: "Mutable",
      AuthenticationType: "Mutable",
    },
    SessionLogger: {
      CustomerManagedKey: "Immutable",
      AdditionalEncryptionContext: "Immutable",
      DisplayName: "Mutable",
      EventFilter: "Mutable",
      LogConfiguration: "Mutable",
      Tags: "Mutable",
    },
    TrustStore: {
      CertificateList: "Mutable",
      Tags: "Mutable",
    },
    UserAccessLoggingSettings: {
      KinesisStreamArn: "Mutable",
      Tags: "Mutable",
    },
    UserSettings: {
      IdleDisconnectTimeoutInMinutes: "Mutable",
      DeepLinkAllowed: "Mutable",
      PrintAllowed: "Mutable",
      CopyAllowed: "Mutable",
      DownloadAllowed: "Mutable",
      ToolbarConfiguration: "Mutable",
      UploadAllowed: "Mutable",
      CustomerManagedKey: "Mutable",
      AdditionalEncryptionContext: "Mutable",
      DisconnectTimeoutInMinutes: "Mutable",
      CookieSynchronizationConfiguration: "Mutable",
      PasteAllowed: "Mutable",
      Tags: "Mutable",
    },
  },
  WorkspacesInstances: {
    Volume: {
      SizeInGB: "Immutable",
      SnapshotId: "Immutable",
      VolumeType: "Immutable",
      KmsKeyId: "Immutable",
      TagSpecifications: "Immutable",
      Encrypted: "Immutable",
      AvailabilityZone: "Immutable",
      Throughput: "Immutable",
      Iops: "Immutable",
    },
    VolumeAssociation: {
      VolumeId: "Immutable",
      WorkspaceInstanceId: "Immutable",
      Device: "Immutable",
      DisassociateMode: "Mutable",
    },
    WorkspaceInstance: {
      ManagedInstance: "Immutable",
      Tags: "Conditional",
    },
  },
  XRay: {
    Group: {
      GroupName: "Mutable",
      InsightsConfiguration: "Mutable",
      FilterExpression: "Mutable",
      Tags: "Mutable",
    },
    ResourcePolicy: {
      BypassPolicyLockoutCheck: "Mutable",
      PolicyName: "Immutable",
      PolicyDocument: "Mutable",
    },
    SamplingRule: {
      SamplingRule: "Mutable",
      Tags: "Mutable",
    },
    TransactionSearchConfig: {
      IndexingPercentage: "Mutable",
    },
  },
  Alexa: {
    ASKSkill: {
      AuthenticationConfiguration: "Mutable",
      VendorId: "Immutable",
      SkillPackage: "Mutable",
    },
  },
};

export default updateTypes;
