name: Tests

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

# Ensure only one workflow runs at a time
concurrency:
  group: "tests-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: write
    steps:
      - uses: actions/checkout@v4
        with:
          # we need this so that test pruning works
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}
          fetch-depth: 0

      # node is needed for vitest
      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Setup Alchemy Environment
        uses: ./.github/actions/setup-alchemy
        with:
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-west-2
          install-extra-deps: "true"

      - name: Check Types and Lint
        run: bun run check

      - name: Run affected tests
        uses: ./.github/actions/run-with-alchemy-env
        with:
          branch-prefix: pr-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.ref_name }}
          command: |
            # Determine the base commit depending on event type
            if [ "${{ github.event_name }}" == "pull_request_target" ] || [ "${{ github.event_name }}" == "pull_request" ]; then
              # For pull requests, use PR base commit
              BASE_COMMIT="${{ github.event.pull_request.base.sha }}"
            elif [ "${{ github.event_name }}" == "push" ]; then
              # For pushes, use the commit before the push
              BASE_COMMIT="${{ github.event.before }}"
            else
              # For manual runs, use a few commits back to ensure sufficient coverage
              BASE_COMMIT="HEAD~10"
            fi

            echo "Running tests changed since commit: $BASE_COMMIT"
            bun run test --since "$BASE_COMMIT" --vitest
