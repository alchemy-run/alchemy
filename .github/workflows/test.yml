name: Tests

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

# Ensure only one workflow runs at a time
concurrency:
  group: "tests-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # node is needed for vitest
      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Setup Alchemy Environment
        uses: ./.github/actions/setup-alchemy
        with:
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-west-2

      - name: Check Types and Lint
        run: bun run check

      - name: Run tests
        run: bun run test
        env:
          CI: true
          ALCHEMY_STATE_STORE: cloudflare
          ALCHEMY_STATE_TOKEN: ${{ env.ALCHEMY_STATE_TOKEN }}
          AWS_REGION: us-west-2
          BRANCH_PREFIX: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || github.ref_name }}
          # All secrets loaded from SSM parameter via setup-alchemy action
          # These environment variables are set by the setup-alchemy action
          ALCHEMY_PASSWORD: ${{ env.ALCHEMY_PASSWORD }}
          CLOUDFLARE_ACCOUNT_ID: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_KEY: ${{ env.CLOUDFLARE_API_KEY }}
          CLOUDFLARE_BUCKET_NAME: ${{ env.CLOUDFLARE_BUCKET_NAME }}
          CLOUDFLARE_EMAIL: ${{ env.CLOUDFLARE_EMAIL }}
          OPENAI_API_KEY: ${{ env.OPENAI_API_KEY }}
          R2_ACCESS_KEY_ID: ${{ env.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ env.R2_SECRET_ACCESS_KEY }}
          STRIPE_API_KEY: ${{ env.STRIPE_API_KEY }}
          NEON_API_KEY: ${{ env.NEON_API_KEY }}
          SECRET_PASSPHRASE: ${{ env.SECRET_PASSPHRASE }}
          UPSTASH_API_KEY: ${{ env.UPSTASH_API_KEY }}
          UPSTASH_EMAIL: sam@alchemy.run
          SENTRY_AUTH_TOKEN: ${{ env.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ env.SENTRY_ORG }}
          VERCEL_ACCESS_TOKEN: ${{ env.VERCEL_ACCESS_TOKEN }}
          PLANETSCALE_ORG_ID: ${{ env.PLANETSCALE_ORG_ID }}
          PLANETSCALE_API_TOKEN: ${{ env.PLANETSCALE_API_TOKEN }}

