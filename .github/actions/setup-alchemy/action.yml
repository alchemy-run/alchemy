name: 'Setup Alchemy Environment'
description: 'Sets up Bun, installs dependencies, configures AWS credentials, and fetches secrets'

inputs:
  aws-role-arn:
    description: 'AWS IAM role ARN to assume'
    required: true
  aws-region:
    description: 'AWS region to use'
    required: false
    default: 'us-west-2'

runs:
  using: 'composite'
  steps:
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      shell: bash
      run: |
        bun install
        cd examples/cloudflare-tanstack-start
        bun install
        cd ../..

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws-role-arn }}
        aws-region: ${{ inputs.aws-region }}

    - name: Fetch secrets from AWS SSM
      id: fetch-secrets
      shell: bash
      run: |
        # Fetch the JSON-encoded secrets from SSM Parameter Store
        echo "Fetching secrets from SSM parameter: /alchemy/github-ci-secrets"
        SECRETS_JSON=$(aws ssm get-parameter --name "/alchemy/github-ci-secrets" --with-decryption --query "Parameter.Value" --output text --region ${{ inputs.aws-region }})
        
        # Parse JSON and set each key-value pair as an environment variable
        echo "$SECRETS_JSON" | jq -r 'to_entries[] | "\(.key)=\(.value)"' >> $GITHUB_ENV
        
        # Also set them as outputs for this step (masked for security)
        echo "$SECRETS_JSON" | jq -r 'to_entries[] | "::add-mask::\(.value)"'
        echo "$SECRETS_JSON" | jq -r 'to_entries[] | "\(.key)=\(.value)"' >> $GITHUB_OUTPUT 