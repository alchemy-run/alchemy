{
  "kind": "fs::File",
  "id": "docs/aws/Role-file",
  "fqn": "github:alchemy/prod/docs/docs/aws/Role/docs/aws/Role-file",
  "seq": 0,
  "data": {},
  "status": "created",
  "output": {
    "path": "alchemy-web/docs/providers/aws/role.md",
    "content": "# Role\n\nThe Role resource lets you create and manage [AWS IAM Roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html) that define permissions for AWS services and resources.\n\n## Minimal Example\n\nCreate a basic Lambda execution role with permissions to write logs:\n\n```ts\nimport { Role } from \"alchemy/aws\";\n\nconst role = await Role(\"lambda-role\", {\n  roleName: \"lambda-role\",\n  assumeRolePolicy: {\n    Version: \"2012-10-17\", \n    Statement: [{\n      Effect: \"Allow\",\n      Principal: {\n        Service: \"lambda.amazonaws.com\"\n      },\n      Action: \"sts:AssumeRole\"\n    }]\n  },\n  policies: [{\n    policyName: \"logs\",\n    policyDocument: {\n      Version: \"2012-10-17\",\n      Statement: [{\n        Effect: \"Allow\",\n        Action: [\n          \"logs:CreateLogGroup\",\n          \"logs:CreateLogStream\", \n          \"logs:PutLogEvents\"\n        ],\n        Resource: \"*\"\n      }]\n    }\n  }]\n});\n```\n\n## With Managed Policies\n\nAttach AWS managed policies to a role:\n\n```ts\nimport { Role } from \"alchemy/aws\";\n\nconst role = await Role(\"readonly-role\", {\n  roleName: \"readonly-role\", \n  assumeRolePolicy: {\n    Version: \"2012-10-17\",\n    Statement: [{\n      Effect: \"Allow\",\n      Principal: {\n        Service: \"lambda.amazonaws.com\"\n      },\n      Action: \"sts:AssumeRole\"\n    }]\n  },\n  managedPolicyArns: [\n    \"arn:aws:iam::aws:policy/ReadOnlyAccess\"\n  ]\n});\n```\n\n## With Multiple Inline Policies\n\nCreate a role with multiple inline policies and custom session duration:\n\n```ts\nimport { Role } from \"alchemy/aws\";\n\nconst role = await Role(\"custom-role\", {\n  roleName: \"custom-role\",\n  assumeRolePolicy: {\n    Version: \"2012-10-17\",\n    Statement: [{\n      Effect: \"Allow\",\n      Principal: {\n        Service: \"lambda.amazonaws.com\"\n      },\n      Action: \"sts:AssumeRole\"\n    }]\n  },\n  maxSessionDuration: 7200,\n  policies: [\n    {\n      policyName: \"logs\",\n      policyDocument: {\n        Version: \"2012-10-17\",\n        Statement: [{\n          Effect: \"Allow\",\n          Action: [\n            \"logs:CreateLogGroup\",\n            \"logs:CreateLogStream\",\n            \"logs:PutLogEvents\"\n          ],\n          Resource: \"*\"\n        }]\n      }\n    },\n    {\n      policyName: \"s3\",\n      policyDocument: {\n        Version: \"2012-10-17\",\n        Statement: [{\n          Effect: \"Allow\",\n          Action: \"s3:ListBucket\",\n          Resource: \"*\"\n        }]\n      }\n    }\n  ]\n});\n```",
    "Kind": "fs::File",
    "ID": "docs/aws/Role-file",
    "FQN": "github:alchemy/prod/docs/docs/aws/Role/docs/aws/Role-file",
    "Seq": 0
  },
  "props": {
    "path": "alchemy-web/docs/providers/aws/role.md",
    "content": "# Role\n\nThe Role resource lets you create and manage [AWS IAM Roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html) that define permissions for AWS services and resources.\n\n## Minimal Example\n\nCreate a basic Lambda execution role with permissions to write logs:\n\n```ts\nimport { Role } from \"alchemy/aws\";\n\nconst role = await Role(\"lambda-role\", {\n  roleName: \"lambda-role\",\n  assumeRolePolicy: {\n    Version: \"2012-10-17\", \n    Statement: [{\n      Effect: \"Allow\",\n      Principal: {\n        Service: \"lambda.amazonaws.com\"\n      },\n      Action: \"sts:AssumeRole\"\n    }]\n  },\n  policies: [{\n    policyName: \"logs\",\n    policyDocument: {\n      Version: \"2012-10-17\",\n      Statement: [{\n        Effect: \"Allow\",\n        Action: [\n          \"logs:CreateLogGroup\",\n          \"logs:CreateLogStream\", \n          \"logs:PutLogEvents\"\n        ],\n        Resource: \"*\"\n      }]\n    }\n  }]\n});\n```\n\n## With Managed Policies\n\nAttach AWS managed policies to a role:\n\n```ts\nimport { Role } from \"alchemy/aws\";\n\nconst role = await Role(\"readonly-role\", {\n  roleName: \"readonly-role\", \n  assumeRolePolicy: {\n    Version: \"2012-10-17\",\n    Statement: [{\n      Effect: \"Allow\",\n      Principal: {\n        Service: \"lambda.amazonaws.com\"\n      },\n      Action: \"sts:AssumeRole\"\n    }]\n  },\n  managedPolicyArns: [\n    \"arn:aws:iam::aws:policy/ReadOnlyAccess\"\n  ]\n});\n```\n\n## With Multiple Inline Policies\n\nCreate a role with multiple inline policies and custom session duration:\n\n```ts\nimport { Role } from \"alchemy/aws\";\n\nconst role = await Role(\"custom-role\", {\n  roleName: \"custom-role\",\n  assumeRolePolicy: {\n    Version: \"2012-10-17\",\n    Statement: [{\n      Effect: \"Allow\",\n      Principal: {\n        Service: \"lambda.amazonaws.com\"\n      },\n      Action: \"sts:AssumeRole\"\n    }]\n  },\n  maxSessionDuration: 7200,\n  policies: [\n    {\n      policyName: \"logs\",\n      policyDocument: {\n        Version: \"2012-10-17\",\n        Statement: [{\n          Effect: \"Allow\",\n          Action: [\n            \"logs:CreateLogGroup\",\n            \"logs:CreateLogStream\",\n            \"logs:PutLogEvents\"\n          ],\n          Resource: \"*\"\n        }]\n      }\n    },\n    {\n      policyName: \"s3\",\n      policyDocument: {\n        Version: \"2012-10-17\",\n        Statement: [{\n          Effect: \"Allow\",\n          Action: \"s3:ListBucket\",\n          Resource: \"*\"\n        }]\n      }\n    }\n  ]\n});\n```"
  }
}