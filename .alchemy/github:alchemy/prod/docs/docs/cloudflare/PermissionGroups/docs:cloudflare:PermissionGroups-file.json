{
  "kind": "fs::File",
  "id": "docs/cloudflare/PermissionGroups-file",
  "fqn": "github:alchemy/prod/docs/docs/cloudflare/PermissionGroups/docs/cloudflare/PermissionGroups-file",
  "seq": 0,
  "data": {},
  "status": "created",
  "output": {
    "path": "alchemy-web/docs/providers/cloudflare/permission-groups.md",
    "content": "# PermissionGroups\n\nLists all [Cloudflare API permission groups](https://developers.cloudflare.com/api/tokens/create/permissions/) available for an account. Used when creating API tokens for Cloudflare services like R2.\n\n# Minimal Example\n\nGet all permission groups for an account:\n\n```ts\nimport { PermissionGroups } from \"alchemy/cloudflare\";\n\nconst permissions = await PermissionGroups(\"cloudflare-permissions\", {\n  accountId: \"YOUR_ACCOUNT_ID\" \n});\n```\n\n# Create R2 Token\n\nUse with AccountApiToken to create a token with specific permissions:\n\n```ts\nimport { PermissionGroups, AccountApiToken } from \"alchemy/cloudflare\";\n\nconst permissions = await PermissionGroups(\"cloudflare-permissions\");\n\nconst token = await AccountApiToken(\"r2-token\", {\n  name: \"R2 Read-Only Token\",\n  policies: [{\n    effect: \"allow\", \n    resources: {\n      \"com.cloudflare.edge.r2.bucket.my-bucket\": \"*\"\n    },\n    permissionGroups: [\n      { id: permissions[\"Workers R2 Storage Bucket Item Read\"].id }\n    ]\n  }]\n});\n```\n\n# Create Admin Token \n\nCreate a token with admin-level permissions:\n\n```ts\nimport { PermissionGroups, AccountApiToken } from \"alchemy/cloudflare\";\n\nconst permissions = await PermissionGroups(\"cloudflare-permissions\");\n\nconst adminToken = await AccountApiToken(\"admin-token\", {\n  name: \"Admin Token\",\n  policies: [{\n    effect: \"allow\",\n    resources: {\n      \"com.cloudflare.api.account.*\": \"*\" \n    },\n    permissionGroups: [\n      { id: permissions[\"Workers R2 Storage Write\"].id },\n      { id: permissions[\"Zone Read\"].id },\n      { id: permissions[\"Analytics Read\"].id }\n    ]\n  }]\n});\n```",
    "Kind": "fs::File",
    "ID": "docs/cloudflare/PermissionGroups-file",
    "FQN": "github:alchemy/prod/docs/docs/cloudflare/PermissionGroups/docs/cloudflare/PermissionGroups-file",
    "Seq": 0
  },
  "props": {
    "path": "alchemy-web/docs/providers/cloudflare/permission-groups.md",
    "content": "# PermissionGroups\n\nLists all [Cloudflare API permission groups](https://developers.cloudflare.com/api/tokens/create/permissions/) available for an account. Used when creating API tokens for Cloudflare services like R2.\n\n# Minimal Example\n\nGet all permission groups for an account:\n\n```ts\nimport { PermissionGroups } from \"alchemy/cloudflare\";\n\nconst permissions = await PermissionGroups(\"cloudflare-permissions\", {\n  accountId: \"YOUR_ACCOUNT_ID\" \n});\n```\n\n# Create R2 Token\n\nUse with AccountApiToken to create a token with specific permissions:\n\n```ts\nimport { PermissionGroups, AccountApiToken } from \"alchemy/cloudflare\";\n\nconst permissions = await PermissionGroups(\"cloudflare-permissions\");\n\nconst token = await AccountApiToken(\"r2-token\", {\n  name: \"R2 Read-Only Token\",\n  policies: [{\n    effect: \"allow\", \n    resources: {\n      \"com.cloudflare.edge.r2.bucket.my-bucket\": \"*\"\n    },\n    permissionGroups: [\n      { id: permissions[\"Workers R2 Storage Bucket Item Read\"].id }\n    ]\n  }]\n});\n```\n\n# Create Admin Token \n\nCreate a token with admin-level permissions:\n\n```ts\nimport { PermissionGroups, AccountApiToken } from \"alchemy/cloudflare\";\n\nconst permissions = await PermissionGroups(\"cloudflare-permissions\");\n\nconst adminToken = await AccountApiToken(\"admin-token\", {\n  name: \"Admin Token\",\n  policies: [{\n    effect: \"allow\",\n    resources: {\n      \"com.cloudflare.api.account.*\": \"*\" \n    },\n    permissionGroups: [\n      { id: permissions[\"Workers R2 Storage Write\"].id },\n      { id: permissions[\"Zone Read\"].id },\n      { id: permissions[\"Analytics Read\"].id }\n    ]\n  }]\n});\n```"
  }
}