{
  "kind": "fs::File",
  "id": "docs/cloudflare/Queue-file",
  "fqn": "github:alchemy/prod/docs/docs/cloudflare/Queue/docs/cloudflare/Queue-file",
  "seq": 0,
  "data": {},
  "status": "created",
  "output": {
    "path": "alchemy-web/docs/providers/cloudflare/queue.md",
    "content": "# Queue\n\nThe Queue component lets you add [Cloudflare Queue](https://developers.cloudflare.com/queues/) to your app for reliable message delivery between workers.\n\n# Minimal Example\n\nCreate a basic queue with default settings:\n\n```ts\nimport { Queue } from \"alchemy/cloudflare\";\n\nconst queue = await Queue(\"my-queue\", {\n  name: \"my-queue\"\n});\n```\n\n# Queue with Custom Settings\n\nConfigure queue delivery delay and retention period:\n\n```ts\nimport { Queue } from \"alchemy/cloudflare\";\n\nconst delayedQueue = await Queue(\"delayed-queue\", {\n  name: \"delayed-queue\",\n  settings: {\n    deliveryDelay: 30, // 30 second delay\n    messageRetentionPeriod: 86400 // Store messages for 1 day\n  }\n});\n```\n\n# Paused Queue\n\nCreate a paused queue that can be activated later:\n\n```ts\nimport { Queue } from \"alchemy/cloudflare\";\n\nconst pausedQueue = await Queue(\"paused-queue\", {\n  name: \"paused-queue\", \n  settings: {\n    deliveryPaused: true\n  }\n});\n```\n\n# Bind to a Worker\n\nBind a queue to a worker for message processing:\n\n```ts\nimport { Worker, Queue } from \"alchemy/cloudflare\";\n\nconst myQueue = await Queue(\"my-queue\", {\n  name: \"my-queue\"\n});\n\nawait Worker(\"my-worker\", {\n  name: \"my-worker\",\n  script: \"console.log('Hello, world!')\",\n  bindings: {\n    MY_QUEUE: myQueue\n  }\n});\n```",
    "Kind": "fs::File",
    "ID": "docs/cloudflare/Queue-file",
    "FQN": "github:alchemy/prod/docs/docs/cloudflare/Queue/docs/cloudflare/Queue-file",
    "Seq": 0
  },
  "props": {
    "path": "alchemy-web/docs/providers/cloudflare/queue.md",
    "content": "# Queue\n\nThe Queue component lets you add [Cloudflare Queue](https://developers.cloudflare.com/queues/) to your app for reliable message delivery between workers.\n\n# Minimal Example\n\nCreate a basic queue with default settings:\n\n```ts\nimport { Queue } from \"alchemy/cloudflare\";\n\nconst queue = await Queue(\"my-queue\", {\n  name: \"my-queue\"\n});\n```\n\n# Queue with Custom Settings\n\nConfigure queue delivery delay and retention period:\n\n```ts\nimport { Queue } from \"alchemy/cloudflare\";\n\nconst delayedQueue = await Queue(\"delayed-queue\", {\n  name: \"delayed-queue\",\n  settings: {\n    deliveryDelay: 30, // 30 second delay\n    messageRetentionPeriod: 86400 // Store messages for 1 day\n  }\n});\n```\n\n# Paused Queue\n\nCreate a paused queue that can be activated later:\n\n```ts\nimport { Queue } from \"alchemy/cloudflare\";\n\nconst pausedQueue = await Queue(\"paused-queue\", {\n  name: \"paused-queue\", \n  settings: {\n    deliveryPaused: true\n  }\n});\n```\n\n# Bind to a Worker\n\nBind a queue to a worker for message processing:\n\n```ts\nimport { Worker, Queue } from \"alchemy/cloudflare\";\n\nconst myQueue = await Queue(\"my-queue\", {\n  name: \"my-queue\"\n});\n\nawait Worker(\"my-worker\", {\n  name: \"my-worker\",\n  script: \"console.log('Hello, world!')\",\n  bindings: {\n    MY_QUEUE: myQueue\n  }\n});\n```"
  }
}