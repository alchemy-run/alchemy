{
  "kind": "fs::File",
  "id": "docs/cloudflare/KVNamespace-file",
  "fqn": "github:alchemy/prod/docs/docs/cloudflare/KVNamespace/docs/cloudflare/KVNamespace-file",
  "seq": 0,
  "data": {},
  "status": "created",
  "output": {
    "path": "alchemy-web/docs/providers/cloudflare/kv-namespace.md",
    "content": "# KVNamespace\n\nThe KVNamespace resource lets you create and manage [Cloudflare KV Namespaces](https://developers.cloudflare.com/kv/concepts/kv-namespaces/) for key-value storage.\n\n# Minimal Example\n\nCreate a basic KV namespace:\n\n```ts\nimport { KVNamespace } from \"alchemy/cloudflare\";\n\nconst users = await KVNamespace(\"users\", {\n  title: \"user-data\"\n});\n```\n\n# With Initial Values\n\nCreate a KV namespace with initial key-value pairs:\n\n```ts\nimport { KVNamespace } from \"alchemy/cloudflare\";\n\nconst sessions = await KVNamespace(\"sessions\", {\n  title: \"user-sessions\",\n  values: [{\n    key: \"session_123\",\n    value: { userId: \"user_456\", role: \"admin\" },\n    expirationTtl: 3600 // Expires in 1 hour\n  }]\n});\n```\n\n# With Metadata\n\nCreate a KV namespace with metadata for caching:\n\n```ts\nimport { KVNamespace } from \"alchemy/cloudflare\";\n\nconst assets = await KVNamespace(\"assets\", {\n  title: \"static-assets\", \n  values: [{\n    key: \"main.js\",\n    value: \"content...\",\n    metadata: {\n      contentType: \"application/javascript\",\n      etag: \"abc123\"\n    }\n  }]\n});\n```\n\n# Bind to a Worker\n\nBind a KV namespace to a Worker:\n\n```ts\nimport { Worker, KVNamespace } from \"alchemy/cloudflare\";\n\nconst store = await KVNamespace(\"store\", {\n  title: \"data-store\"\n});\n\nawait Worker(\"my-worker\", {\n  name: \"my-worker\",\n  script: \"console.log('Hello, world!')\",\n  bindings: {\n    STORE: store\n  }\n});\n```",
    "Kind": "fs::File",
    "ID": "docs/cloudflare/KVNamespace-file",
    "FQN": "github:alchemy/prod/docs/docs/cloudflare/KVNamespace/docs/cloudflare/KVNamespace-file",
    "Seq": 0
  },
  "props": {
    "path": "alchemy-web/docs/providers/cloudflare/kv-namespace.md",
    "content": "# KVNamespace\n\nThe KVNamespace resource lets you create and manage [Cloudflare KV Namespaces](https://developers.cloudflare.com/kv/concepts/kv-namespaces/) for key-value storage.\n\n# Minimal Example\n\nCreate a basic KV namespace:\n\n```ts\nimport { KVNamespace } from \"alchemy/cloudflare\";\n\nconst users = await KVNamespace(\"users\", {\n  title: \"user-data\"\n});\n```\n\n# With Initial Values\n\nCreate a KV namespace with initial key-value pairs:\n\n```ts\nimport { KVNamespace } from \"alchemy/cloudflare\";\n\nconst sessions = await KVNamespace(\"sessions\", {\n  title: \"user-sessions\",\n  values: [{\n    key: \"session_123\",\n    value: { userId: \"user_456\", role: \"admin\" },\n    expirationTtl: 3600 // Expires in 1 hour\n  }]\n});\n```\n\n# With Metadata\n\nCreate a KV namespace with metadata for caching:\n\n```ts\nimport { KVNamespace } from \"alchemy/cloudflare\";\n\nconst assets = await KVNamespace(\"assets\", {\n  title: \"static-assets\", \n  values: [{\n    key: \"main.js\",\n    value: \"content...\",\n    metadata: {\n      contentType: \"application/javascript\",\n      etag: \"abc123\"\n    }\n  }]\n});\n```\n\n# Bind to a Worker\n\nBind a KV namespace to a Worker:\n\n```ts\nimport { Worker, KVNamespace } from \"alchemy/cloudflare\";\n\nconst store = await KVNamespace(\"store\", {\n  title: \"data-store\"\n});\n\nawait Worker(\"my-worker\", {\n  name: \"my-worker\",\n  script: \"console.log('Hello, world!')\",\n  bindings: {\n    STORE: store\n  }\n});\n```"
  }
}