{
  "kind": "fs::File",
  "id": "docs/fs/StaticVueFile-file",
  "fqn": "github:alchemy/prod/docs/docs/fs/StaticVueFile/docs/fs/StaticVueFile-file",
  "seq": 0,
  "data": {},
  "status": "created",
  "output": {
    "path": "alchemy-web/docs/providers/fs/static-vue-file.md",
    "content": "# StaticVueFile\n\nThe StaticVueFile resource creates [Vue.js](https://vuejs.org/) single-file component files (.vue) with template, script and style sections.\n\n# Minimal Example\n\nCreate a basic Vue component file:\n\n```ts\nimport { StaticVueFile } from \"alchemy/fs\";\n\nconst button = await StaticVueFile(\"Button.vue\", `\n<template>\n  <button>{{ text }}</button>\n</template>\n\n<script>\nexport default {\n  props: {\n    text: String\n  }\n}\n</script>\n`);\n```\n\n# Component with Styles\n\nCreate a Vue component with scoped styles:\n\n```ts\nimport { StaticVueFile } from \"alchemy/fs\";\n\nconst card = await StaticVueFile(\"Card.vue\", `\n<template>\n  <div class=\"card\">\n    <h2>{{ title }}</h2>\n    <p>{{ content }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    title: String,\n    content: String\n  }\n}\n</script>\n\n<style scoped>\n.card {\n  padding: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n</style>\n`);\n```\n\n# TypeScript Component\n\nCreate a Vue component using TypeScript:\n\n```ts\nimport { StaticVueFile } from \"alchemy/fs\";\n\nconst list = await StaticVueFile(\"List.vue\", `\n<template>\n  <ul>\n    <li v-for=\"item in items\" :key=\"item.id\">\n      {{ item.name }}\n    </li>\n  </ul>\n</template>\n\n<script lang=\"ts\">\ninterface Item {\n  id: number;\n  name: string;\n}\n\nexport default {\n  props: {\n    items: {\n      type: Array as () => Item[],\n      required: true\n    }\n  }\n}\n</script>\n`);\n```",
    "Kind": "fs::File",
    "ID": "docs/fs/StaticVueFile-file",
    "FQN": "github:alchemy/prod/docs/docs/fs/StaticVueFile/docs/fs/StaticVueFile-file",
    "Seq": 0
  },
  "props": {
    "path": "alchemy-web/docs/providers/fs/static-vue-file.md",
    "content": "# StaticVueFile\n\nThe StaticVueFile resource creates [Vue.js](https://vuejs.org/) single-file component files (.vue) with template, script and style sections.\n\n# Minimal Example\n\nCreate a basic Vue component file:\n\n```ts\nimport { StaticVueFile } from \"alchemy/fs\";\n\nconst button = await StaticVueFile(\"Button.vue\", `\n<template>\n  <button>{{ text }}</button>\n</template>\n\n<script>\nexport default {\n  props: {\n    text: String\n  }\n}\n</script>\n`);\n```\n\n# Component with Styles\n\nCreate a Vue component with scoped styles:\n\n```ts\nimport { StaticVueFile } from \"alchemy/fs\";\n\nconst card = await StaticVueFile(\"Card.vue\", `\n<template>\n  <div class=\"card\">\n    <h2>{{ title }}</h2>\n    <p>{{ content }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    title: String,\n    content: String\n  }\n}\n</script>\n\n<style scoped>\n.card {\n  padding: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n</style>\n`);\n```\n\n# TypeScript Component\n\nCreate a Vue component using TypeScript:\n\n```ts\nimport { StaticVueFile } from \"alchemy/fs\";\n\nconst list = await StaticVueFile(\"List.vue\", `\n<template>\n  <ul>\n    <li v-for=\"item in items\" :key=\"item.id\">\n      {{ item.name }}\n    </li>\n  </ul>\n</template>\n\n<script lang=\"ts\">\ninterface Item {\n  id: number;\n  name: string;\n}\n\nexport default {\n  props: {\n    items: {\n      type: Array as () => Item[],\n      required: true\n    }\n  }\n}\n</script>\n`);\n```"
  }
}