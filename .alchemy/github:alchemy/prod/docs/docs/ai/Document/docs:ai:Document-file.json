{
  "kind": "fs::File",
  "id": "docs/ai/Document-file",
  "fqn": "github:alchemy/prod/docs/docs/ai/Document/docs/ai/Document-file",
  "seq": 0,
  "data": {},
  "status": "created",
  "output": {
    "path": "alchemy-web/docs/providers/ai/document.md",
    "content": "# Document\n\nThe Document resource lets you generate markdown documentation using [AI models](https://platform.openai.com/docs/models) like GPT-4 and Claude.\n\n# Minimal Example\n\nGenerate a simple markdown document with AI:\n\n```ts\nimport { Document } from \"alchemy/ai\";\n\nconst docs = await Document(\"api-docs\", {\n  title: \"API Documentation\",\n  prompt: \"Generate API documentation for a REST API with endpoints for users, posts and comments\"\n});\n\nconsole.log(docs.content); // Generated markdown content\n```\n\n# Generate Documentation from Source Files\n\nUse alchemy template literals to include file context:\n\n```ts\nimport { Document } from \"alchemy/ai\";\n\nconst apiDocs = await Document(\"api-docs\", {\n  title: \"API Documentation\", \n  path: \"./docs/api.md\",\n  prompt: await alchemy`\n    Generate API documentation based on these source files:\n    ${alchemy.file(\"src/api.ts\")}\n    ${alchemy.file(\"src/types.ts\")}\n  `,\n  model: {\n    id: \"gpt-4o\",\n    provider: \"openai\"\n  }\n});\n```\n\n# Conversation-Based Generation\n\nUse message history for iterative document generation:\n\n```ts\nimport { Document } from \"alchemy/ai\";\n\nconst docs = await Document(\"api-docs\", {\n  title: \"API Documentation\",\n  messages: [\n    { role: \"user\", content: \"Create API documentation for these files\" },\n    { role: \"assistant\", content: \"I'll help you create API documentation. Please provide the files.\" },\n    { role: \"user\", content: \"Here are the files: [file contents]\" }\n  ],\n  system: \"You are a technical documentation writer. Generate clear and concise API documentation.\"\n});\n```\n\n# Custom Model Configuration\n\nConfigure the AI model and generation parameters:\n\n```ts\nimport { Document } from \"alchemy/ai\";\n\nconst docs = await Document(\"tech-specs\", {\n  title: \"Technical Specifications\",\n  prompt: \"Create detailed technical specifications for a new microservices architecture\",\n  model: {\n    id: \"claude-3-opus-20240229\",\n    provider: \"anthropic\",\n    options: {\n      temperature: 0.2,\n      maxTokens: 8192\n    }\n  }\n});\n```",
    "Kind": "fs::File",
    "ID": "docs/ai/Document-file",
    "FQN": "github:alchemy/prod/docs/docs/ai/Document/docs/ai/Document-file",
    "Seq": 0
  },
  "props": {
    "path": "alchemy-web/docs/providers/ai/document.md",
    "content": "# Document\n\nThe Document resource lets you generate markdown documentation using [AI models](https://platform.openai.com/docs/models) like GPT-4 and Claude.\n\n# Minimal Example\n\nGenerate a simple markdown document with AI:\n\n```ts\nimport { Document } from \"alchemy/ai\";\n\nconst docs = await Document(\"api-docs\", {\n  title: \"API Documentation\",\n  prompt: \"Generate API documentation for a REST API with endpoints for users, posts and comments\"\n});\n\nconsole.log(docs.content); // Generated markdown content\n```\n\n# Generate Documentation from Source Files\n\nUse alchemy template literals to include file context:\n\n```ts\nimport { Document } from \"alchemy/ai\";\n\nconst apiDocs = await Document(\"api-docs\", {\n  title: \"API Documentation\", \n  path: \"./docs/api.md\",\n  prompt: await alchemy`\n    Generate API documentation based on these source files:\n    ${alchemy.file(\"src/api.ts\")}\n    ${alchemy.file(\"src/types.ts\")}\n  `,\n  model: {\n    id: \"gpt-4o\",\n    provider: \"openai\"\n  }\n});\n```\n\n# Conversation-Based Generation\n\nUse message history for iterative document generation:\n\n```ts\nimport { Document } from \"alchemy/ai\";\n\nconst docs = await Document(\"api-docs\", {\n  title: \"API Documentation\",\n  messages: [\n    { role: \"user\", content: \"Create API documentation for these files\" },\n    { role: \"assistant\", content: \"I'll help you create API documentation. Please provide the files.\" },\n    { role: \"user\", content: \"Here are the files: [file contents]\" }\n  ],\n  system: \"You are a technical documentation writer. Generate clear and concise API documentation.\"\n});\n```\n\n# Custom Model Configuration\n\nConfigure the AI model and generation parameters:\n\n```ts\nimport { Document } from \"alchemy/ai\";\n\nconst docs = await Document(\"tech-specs\", {\n  title: \"Technical Specifications\",\n  prompt: \"Create detailed technical specifications for a new microservices architecture\",\n  model: {\n    id: \"claude-3-opus-20240229\",\n    provider: \"anthropic\",\n    options: {\n      temperature: 0.2,\n      maxTokens: 8192\n    }\n  }\n});\n```"
  }
}