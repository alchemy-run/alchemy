{
  "kind": "fs::File",
  "id": "docs/ai/VueFile-file",
  "fqn": "github:alchemy/prod/docs/docs/ai/VueFile/docs/ai/VueFile-file",
  "seq": 0,
  "data": {},
  "status": "created",
  "output": {
    "path": "alchemy-web/docs/providers/ai/vue-file.md",
    "content": "# VueFile\n\nThe VueFile resource lets you generate [Vue.js](https://vuejs.org/) single-file components using AI models.\n\n# Minimal Example\n\nCreates a basic Vue component file with the specified content.\n\n```ts\nimport { VueFile } from \"alchemy/ai\";\n\nconst button = await VueFile(\"button\", {\n  path: \"./src/components/Button.vue\",\n  prompt: \"Generate a reusable button component with primary and secondary variants\"\n});\n```\n\n# Generate Component with Context\n\nUses existing files as reference to generate a component that matches your codebase style.\n\n```ts\nimport { VueFile } from \"alchemy/ai\";\n\nconst userCard = await VueFile(\"user-card\", {\n  path: \"./src/components/UserCard.vue\",\n  prompt: await alchemy`\n    Create a UserCard component that follows the styling from:\n    ${alchemy.file(\"src/components/Card.vue\")}\n    \n    Using the user type from:\n    ${alchemy.file(\"src/types/User.ts\")}\n  `,\n  temperature: 0.2\n});\n```\n\n# Custom System Prompt\n\nProvides specific instructions to the AI model about component generation.\n\n```ts\nimport { VueFile } from \"alchemy/ai\";\n\nconst form = await VueFile(\"registration-form\", {\n  path: \"./src/components/RegistrationForm.vue\",\n  prompt: \"Generate a registration form with email, password validation and submit handler\",\n  system: \"You are an expert Vue developer specializing in form components. Create a single Vue component inside ```vue fences with proper TypeScript types.\",\n  model: {\n    id: \"gpt-4o\",\n    provider: \"openai\"\n  }\n});\n```",
    "Kind": "fs::File",
    "ID": "docs/ai/VueFile-file",
    "FQN": "github:alchemy/prod/docs/docs/ai/VueFile/docs/ai/VueFile-file",
    "Seq": 0
  },
  "props": {
    "path": "alchemy-web/docs/providers/ai/vue-file.md",
    "content": "# VueFile\n\nThe VueFile resource lets you generate [Vue.js](https://vuejs.org/) single-file components using AI models.\n\n# Minimal Example\n\nCreates a basic Vue component file with the specified content.\n\n```ts\nimport { VueFile } from \"alchemy/ai\";\n\nconst button = await VueFile(\"button\", {\n  path: \"./src/components/Button.vue\",\n  prompt: \"Generate a reusable button component with primary and secondary variants\"\n});\n```\n\n# Generate Component with Context\n\nUses existing files as reference to generate a component that matches your codebase style.\n\n```ts\nimport { VueFile } from \"alchemy/ai\";\n\nconst userCard = await VueFile(\"user-card\", {\n  path: \"./src/components/UserCard.vue\",\n  prompt: await alchemy`\n    Create a UserCard component that follows the styling from:\n    ${alchemy.file(\"src/components/Card.vue\")}\n    \n    Using the user type from:\n    ${alchemy.file(\"src/types/User.ts\")}\n  `,\n  temperature: 0.2\n});\n```\n\n# Custom System Prompt\n\nProvides specific instructions to the AI model about component generation.\n\n```ts\nimport { VueFile } from \"alchemy/ai\";\n\nconst form = await VueFile(\"registration-form\", {\n  path: \"./src/components/RegistrationForm.vue\",\n  prompt: \"Generate a registration form with email, password validation and submit handler\",\n  system: \"You are an expert Vue developer specializing in form components. Create a single Vue component inside ```vue fences with proper TypeScript types.\",\n  model: {\n    id: \"gpt-4o\",\n    provider: \"openai\"\n  }\n});\n```"
  }
}