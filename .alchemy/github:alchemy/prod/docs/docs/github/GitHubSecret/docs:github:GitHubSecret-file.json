{
  "kind": "fs::File",
  "id": "docs/github/GitHubSecret-file",
  "fqn": "github:alchemy/prod/docs/docs/github/GitHubSecret/docs/github/GitHubSecret-file",
  "seq": 0,
  "data": {},
  "status": "created",
  "output": {
    "path": "alchemy-web/docs/providers/github/secret.md",
    "content": "# GitHubSecret\n\nThe GitHubSecret resource lets you manage [GitHub Actions secrets](https://docs.github.com/en/actions/security-guides/encrypted-secrets) in your repositories.\n\n# Minimal Example\n\nCreate a secret using the GITHUB_TOKEN environment variable:\n\n```ts\nimport { GitHubSecret } from \"alchemy/github\";\n\nconst secret = await GitHubSecret(\"api-key\", {\n  owner: \"my-github-username\", \n  repository: \"my-repo\",\n  name: \"API_KEY\",\n  value: alchemy.secret(\"my-secret-value\")\n});\n```\n\n# Custom Token\n\nCreate a secret with a custom GitHub token:\n\n```ts\nimport { GitHubSecret } from \"alchemy/github\";\n\nconst secret = await GitHubSecret(\"deploy-token\", {\n  owner: \"my-github-username\",\n  repository: \"my-repo\", \n  name: \"DEPLOY_TOKEN\",\n  value: alchemy.secret(\"my-secret-value\"),\n  token: alchemy.secret(process.env.CUSTOM_GITHUB_TOKEN)\n});\n```\n\n# Multiple Secrets\n\nCreate multiple secrets in parallel:\n\n```ts\nimport { GitHubSecret } from \"alchemy/github\";\n\nconst secrets = await Promise.all([\n  GitHubSecret(\"aws-secret\", {\n    owner: \"my-github-username\",\n    repository: \"cloud-app\",\n    name: \"AWS_ROLE_ARN\", \n    value: alchemy.secret(process.env.AWS_ROLE_ARN)\n  }),\n  GitHubSecret(\"cf-secret\", {\n    owner: \"my-github-username\",\n    repository: \"cloud-app\",\n    name: \"CLOUDFLARE_API_KEY\",\n    value: alchemy.secret(process.env.CLOUDFLARE_API_KEY)\n  })\n]);\n```",
    "Kind": "fs::File",
    "ID": "docs/github/GitHubSecret-file",
    "FQN": "github:alchemy/prod/docs/docs/github/GitHubSecret/docs/github/GitHubSecret-file",
    "Seq": 0
  },
  "props": {
    "path": "alchemy-web/docs/providers/github/secret.md",
    "content": "# GitHubSecret\n\nThe GitHubSecret resource lets you manage [GitHub Actions secrets](https://docs.github.com/en/actions/security-guides/encrypted-secrets) in your repositories.\n\n# Minimal Example\n\nCreate a secret using the GITHUB_TOKEN environment variable:\n\n```ts\nimport { GitHubSecret } from \"alchemy/github\";\n\nconst secret = await GitHubSecret(\"api-key\", {\n  owner: \"my-github-username\", \n  repository: \"my-repo\",\n  name: \"API_KEY\",\n  value: alchemy.secret(\"my-secret-value\")\n});\n```\n\n# Custom Token\n\nCreate a secret with a custom GitHub token:\n\n```ts\nimport { GitHubSecret } from \"alchemy/github\";\n\nconst secret = await GitHubSecret(\"deploy-token\", {\n  owner: \"my-github-username\",\n  repository: \"my-repo\", \n  name: \"DEPLOY_TOKEN\",\n  value: alchemy.secret(\"my-secret-value\"),\n  token: alchemy.secret(process.env.CUSTOM_GITHUB_TOKEN)\n});\n```\n\n# Multiple Secrets\n\nCreate multiple secrets in parallel:\n\n```ts\nimport { GitHubSecret } from \"alchemy/github\";\n\nconst secrets = await Promise.all([\n  GitHubSecret(\"aws-secret\", {\n    owner: \"my-github-username\",\n    repository: \"cloud-app\",\n    name: \"AWS_ROLE_ARN\", \n    value: alchemy.secret(process.env.AWS_ROLE_ARN)\n  }),\n  GitHubSecret(\"cf-secret\", {\n    owner: \"my-github-username\",\n    repository: \"cloud-app\",\n    name: \"CLOUDFLARE_API_KEY\",\n    value: alchemy.secret(process.env.CLOUDFLARE_API_KEY)\n  })\n]);\n```"
  }
}